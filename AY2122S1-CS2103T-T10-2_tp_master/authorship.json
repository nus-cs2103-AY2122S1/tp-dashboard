[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-T10-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-T10-2/tp/actions)","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"**Managera is a desktop application for managing your event details and its corresponding participant credentials.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"* Add and Delete Events","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"* Add Participants to Events","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"* Remove Participants from Events","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"* List Participants of an Event","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"* View details of an Event","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"* Sort Events by Date and Time","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"* Filter Events by Date and Time","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"* Find a Participant and view his details","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"* Mark Event as Done","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"* For the detailed documentation of this project, see the **[Managera Product Website](https://ay2122s1-cs2103t-t10-2.github.io/tp/UserGuide.html)**.","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"**Acknowledgements**","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"XXJJXJ":20,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"lowkangn"},"content":"    archiveName \u003d \u0027managera.jar\u0027","lastModifiedDate":"2021-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"run {","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"XXJJXJ":2,"-":73,"lowkangn":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"### Kan Jitpakdi","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"\u003cimg src\u003d\"images/kanjitp.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"[[github](https://github.com/kanjitp)]","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"[[portfolio](team/kanjitp.md)]","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"* Responsibilities: Full Stack","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"### Low Kang Ngee","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"\u003cimg src\u003d\"images/lowkangn.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"[[github](http://github.com/lowkangn)]","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"[[portfolio](team/lowkangn.md)]","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"- Role: Developer","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"- Responsibilities: Testing + Deliverables and deadlines","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"### Ye Xinjian","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"\u003cimg src\u003d\"images/xxjjxj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"[[github](http://github.com/XXJJXJ)] [[portfolio](team/xxjjxj.md)]","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"* Responsibilities: Documentation + Code Quality","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"### Ng Tze Wei Bruce Mitchell","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"\u003cimg src\u003d\"images/ntwbruce.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"[[github](http://github.com/ntwbruce)]","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"[[portfolio](team/ntwbruce.md)]","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"davelowqx"},"content":"- Role: Developer","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"davelowqx"},"content":"- Responsibilities: Dev Ops + Threading","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"davelowqx"},"content":"### Dave Low","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"davelowqx"},"content":"\u003cimg src\u003d\"images/davelowqx.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"davelowqx"},"content":"[[github](http://github.com/davelowqx)]","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"davelowqx"},"content":"[[portfolio](team/davelowqx.md)]","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"davelowqx"},"content":"- Role: Businessman","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"davelowqx"},"content":"- Responsibilities: Playing Golf","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":4,"kanjitp":5,"davelowqx":8,"ntwbruce":4,"-":34,"lowkangn":6}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"## Table of Contents","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"- [Table of Contents](#table-of-contents)","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"- [**Acknowledgements**](#acknowledgements)","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"- [**Introduction**](#introduction)","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"- [**Setting up, getting started**](#setting-up-getting-started)","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"- [**Design**](#design)","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"  - [Architecture](#architecture)","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"  - [UI component](#ui-component)","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"  - [Logic component](#logic-component)","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"  - [Model component](#model-component)","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"  - [Storage component](#storage-component)","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"  - [Common classes](#common-classes)","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"- [**Implementation**](#implementation)","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"davelowqx"},"content":"    - [\\[Completed\\] Add Event feature](#completed-add-event-feature)","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"davelowqx"},"content":"       - [Implementation Details](#implementation-details)","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"davelowqx"},"content":"       - [Implementation Rationale](#implementation-rationale)","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"davelowqx"},"content":"    - [\\[Completed\\] Remove Event feature](#completed-remove-event-feature)","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"davelowqx"},"content":"       - [Implementation Details](#implementation-details)","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"davelowqx"},"content":"       - [Design Considerations:](#design-considerations)","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"davelowqx"},"content":"          - [Aspect: Specifying Event to be Removed:](#aspect-specifying-event-to-be-removed)","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"- [\\[Completed\\] Filter Event feature](#completed-filter-event-feature)","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"      - [Implementation Details](#implementation-details)","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"      - [Implementation Rationale](#implementation-rationale)","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"      - [Design Considerations:](#design-considerations)","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"        - [Aspect: Criteria to filter by:](#aspect-criteria-to-filter-by)","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"        - [Aspect: With or without prefix:](#aspect-with-or-without-prefix)","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"    - [\\[Completed\\] View Participant\u0027s Details feature](#completed-view-participants-details-feature)","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"      - [Implementation Details](#implementation-details-1)","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"      - [Implementation Rationale](#implementation-rationale-1)","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"      - [Design Considerations:](#design-considerations-1)","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"        - [Aspect: Similar participant IDs:](#aspect-similar-participant-ids)","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"    - [\\[Completed\\] Add/Remove Participant to/from event by index](#completed-addremove-participant-tofrom-event-by-index)","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"      - [Implementation Details](#implementation-details-2)","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"      - [Implementation Rationale](#implementation-rationale-2)","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"    - [\\[Completed\\] View Event Details feature](#completed-view-event-details-feature)","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"      - [Implementation Details](#implementation-details-3)","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"      - [Implementation Rationale](#implementation-rationale-3)","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"      - [Design Considerations:](#design-considerations-2)","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"        - [Aspect: Similar Event names:](#aspect-similar-event-names)","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"    - [\\[Proposed\\] Undo/redo feature](#proposed-undoredo-feature)","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"      - [Proposed Implementation](#proposed-implementation)","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"      - [Design considerations:](#design-considerations-3)","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"    - [\\[Proposed\\] Data archiving](#proposed-data-archiving)","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"- [**Documentation, logging, testing, configuration, dev-ops**](#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"- [**Appendix: Requirements**](#appendix-requirements)","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"  - [Product scope](#product-scope)","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"  - [User stories](#user-stories)","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"  - [Use cases](#use-cases)","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"  - [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"  - [Glossary](#glossary)","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"- [**Appendix: Instructions for manual testing**](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"  - [Launch and shutdown](#launch-and-shutdown)","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"  - [Deleting a participant](#deleting-a-participant)","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"  - [Saving data](#saving-data)","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"  ","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-02"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"## **Introduction**","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"Managera is a desktop application for managing your event details and its corresponding participant credentials. While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"* For the detailed documentation of this project, see the **[Managera Product Website](https://ay2122s1-cs2103t-t10-2.github.io/tp/UserGuide.html)**.","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"XXJJXJ"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `ParticipantListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"XXJJXJ"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"600\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"XXJJXJ"},"content":"* stores the address book data i.e., all `Participant` objects (which are contained in a `UniqueParticipantList` object).","lastModifiedDate":"2021-10-18"},{"lineNumber":187,"author":{"gitId":"XXJJXJ"},"content":"* stores the currently \u0027selected\u0027 `Participant` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cParticipant\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-10-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":191,"author":{"gitId":"XXJJXJ"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Participant` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Participant` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-10-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":193,"author":{"gitId":"XXJJXJ"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"600\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"davelowqx"},"content":"### \\[Completed\\] Add Event feature","lastModifiedDate":"2021-10-21"},{"lineNumber":220,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":221,"author":{"gitId":"davelowqx"},"content":"This feature allows Managera users to create an event at the specified date and time.","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":223,"author":{"gitId":"davelowqx"},"content":"#### Implementation Details","lastModifiedDate":"2021-10-21"},{"lineNumber":224,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"davelowqx"},"content":"The `AddressBookParser` is responsible for determining the type of `Command` to be created from user input,","lastModifiedDate":"2021-10-21"},{"lineNumber":226,"author":{"gitId":"davelowqx"},"content":"we can simply add a new `commandType` case for `AddEventCommand` in `AddressBookParser`. ","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":228,"author":{"gitId":"davelowqx"},"content":"The `AddEventCommandParser` reads the user\u0027s input and passes it to `ParserUtil` to ensure that the event\u0027s name, ","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"davelowqx"},"content":"date and time are valid. Then, an Event is created with the returned `EventName`, `EventDate` and `EventTime` objects. ","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"davelowqx"},"content":"This event will be supplied to the `addEventCommand` to be executed.","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"davelowqx"},"content":"Since Managera employs a UniqueEventList, it should not have more than one Event with the same name. The `addressBook` ","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"davelowqx"},"content":"will check if the given event already exists. If not, it will be successfully added to the `addressBook` through the model.","lastModifiedDate":"2021-10-22"},{"lineNumber":234,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"davelowqx"},"content":"#### Implementation Rationale","lastModifiedDate":"2021-10-21"},{"lineNumber":236,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":237,"author":{"gitId":"davelowqx"},"content":"As events may span a full day, we decided to implement time as an optional attribute of the Event. However, to accommodate","lastModifiedDate":"2021-10-21"},{"lineNumber":238,"author":{"gitId":"davelowqx"},"content":"this, Event is implemented with abstractions EventName, EventDate and EventTime. These abstractions are helpful in ensuring","lastModifiedDate":"2021-10-22"},{"lineNumber":239,"author":{"gitId":"davelowqx"},"content":"reliability of the program.","lastModifiedDate":"2021-10-22"},{"lineNumber":240,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":241,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":242,"author":{"gitId":"davelowqx"},"content":"### \\[Completed\\] Remove Event feature","lastModifiedDate":"2021-10-21"},{"lineNumber":243,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":244,"author":{"gitId":"davelowqx"},"content":"This feature allows Managera users to remove an existing event at a particular index of the displayed list.","lastModifiedDate":"2021-10-21"},{"lineNumber":245,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":246,"author":{"gitId":"davelowqx"},"content":"#### Implementation Details","lastModifiedDate":"2021-10-21"},{"lineNumber":247,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":248,"author":{"gitId":"davelowqx"},"content":"The `AddressBookParser` is responsible for determining the type of `Command` to be created from user input,","lastModifiedDate":"2021-10-21"},{"lineNumber":249,"author":{"gitId":"davelowqx"},"content":"we can simply add a new `commandType` case for `RemoveEventCommand` in `AddressBookParser`.","lastModifiedDate":"2021-10-21"},{"lineNumber":250,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":251,"author":{"gitId":"davelowqx"},"content":"The `RemoveEventCommandParser` reads the user\u0027s input and passes it to `ParserUtil` which returns an `Index`. This ","lastModifiedDate":"2021-10-21"},{"lineNumber":252,"author":{"gitId":"davelowqx"},"content":"`Index` will be supplied to the `removeEventCommand` to be executed. ","lastModifiedDate":"2021-10-21"},{"lineNumber":253,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":254,"author":{"gitId":"davelowqx"},"content":"When the command is executed, there is a check to ensure the index is within the range of the displayed list. ","lastModifiedDate":"2021-10-21"},{"lineNumber":255,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":256,"author":{"gitId":"davelowqx"},"content":"#### Design Considerations:","lastModifiedDate":"2021-10-22"},{"lineNumber":257,"author":{"gitId":"davelowqx"},"content":"##### Aspect: Specifying Event to be Removed: ","lastModifiedDate":"2021-10-22"},{"lineNumber":258,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":259,"author":{"gitId":"davelowqx"},"content":"* **Alternative 1 (Current Choice)**: Remove by Index:","lastModifiedDate":"2021-10-22"},{"lineNumber":260,"author":{"gitId":"davelowqx"},"content":"    * Pros:","lastModifiedDate":"2021-10-22"},{"lineNumber":261,"author":{"gitId":"davelowqx"},"content":"        1. The index of the event in the currently displayed list can be directly used.","lastModifiedDate":"2021-10-22"},{"lineNumber":262,"author":{"gitId":"davelowqx"},"content":"        2. Faster and more intuitive for users.","lastModifiedDate":"2021-10-22"},{"lineNumber":263,"author":{"gitId":"davelowqx"},"content":"    * Cons:","lastModifiedDate":"2021-10-22"},{"lineNumber":264,"author":{"gitId":"davelowqx"},"content":"        1. The index is independent of the Event, which may lead to an inconsistent user experience. ","lastModifiedDate":"2021-10-22"},{"lineNumber":265,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":266,"author":{"gitId":"davelowqx"},"content":"* **Alternative 2**: Remove by Event ID:","lastModifiedDate":"2021-10-22"},{"lineNumber":267,"author":{"gitId":"davelowqx"},"content":"    * Pros:","lastModifiedDate":"2021-10-22"},{"lineNumber":268,"author":{"gitId":"davelowqx"},"content":"        1. Every Event will have a unique ID, leading to a consistent user experience. ","lastModifiedDate":"2021-10-22"},{"lineNumber":269,"author":{"gitId":"davelowqx"},"content":"    * Cons:","lastModifiedDate":"2021-10-22"},{"lineNumber":270,"author":{"gitId":"davelowqx"},"content":"        1. The IDs will not be displayed in sequential order and may approach large numbers, which becomes less user-friendly.","lastModifiedDate":"2021-10-22"},{"lineNumber":271,"author":{"gitId":"davelowqx"},"content":"         ","lastModifiedDate":"2021-10-22"},{"lineNumber":272,"author":{"gitId":"davelowqx"},"content":"* **Alternative 3**: Remove by Event Name:","lastModifiedDate":"2021-10-22"},{"lineNumber":273,"author":{"gitId":"davelowqx"},"content":"    * Pros:","lastModifiedDate":"2021-10-22"},{"lineNumber":274,"author":{"gitId":"davelowqx"},"content":"        1. User can be more sure of the event they are removing, since it is referencing the Event name.","lastModifiedDate":"2021-10-22"},{"lineNumber":275,"author":{"gitId":"davelowqx"},"content":"    * Cons:","lastModifiedDate":"2021-10-22"},{"lineNumber":276,"author":{"gitId":"davelowqx"},"content":"        1. The user has to fully match the Event name, which is much more cumbersome. ","lastModifiedDate":"2021-10-22"},{"lineNumber":277,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":278,"author":{"gitId":"XXJJXJ"},"content":"### \\[Completed\\] Filter Event feature","lastModifiedDate":"2021-10-17"},{"lineNumber":279,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":280,"author":{"gitId":"XXJJXJ"},"content":"This feature allows Managera users to filter the event list by date of event and by time.","lastModifiedDate":"2021-10-17"},{"lineNumber":281,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":282,"author":{"gitId":"ntwbruce"},"content":"#### Implementation Details","lastModifiedDate":"2021-10-20"},{"lineNumber":283,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":284,"author":{"gitId":"XXJJXJ"},"content":"The `AddressBookParser` is responsible for determining the type of `Command` to be created from user input, ","lastModifiedDate":"2021-10-17"},{"lineNumber":285,"author":{"gitId":"XXJJXJ"},"content":"we can simply add a new `commandType` case for `FilterEventCommand` in `AddressBookParser`. ","lastModifiedDate":"2021-10-17"},{"lineNumber":286,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":287,"author":{"gitId":"XXJJXJ"},"content":"Since this feature requires Managera to take in user input and determine if the filter is by:","lastModifiedDate":"2021-10-18"},{"lineNumber":288,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":289,"author":{"gitId":"XXJJXJ"},"content":"1. Date only; or","lastModifiedDate":"2021-10-17"},{"lineNumber":290,"author":{"gitId":"XXJJXJ"},"content":"2. Date and Time","lastModifiedDate":"2021-10-17"},{"lineNumber":291,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":292,"author":{"gitId":"ntwbruce"},"content":"A `FilterEventCommandParser` is made to be responsible for this purpose. The `FilterEventCommandParser` parses user\u0027s ","lastModifiedDate":"2021-10-20"},{"lineNumber":293,"author":{"gitId":"ntwbruce"},"content":"input and creates the `EventDateTimePredicate` which the `FilterEventCommand` will use to execute the filtering.","lastModifiedDate":"2021-10-20"},{"lineNumber":294,"author":{"gitId":"ntwbruce"},"content":"`EventDateTimePredicate` implements `Predicate\u003cEvent\u003e` which can be passed to a `FilteredList\u003cEvent\u003e` to filter the ","lastModifiedDate":"2021-10-20"},{"lineNumber":295,"author":{"gitId":"ntwbruce"},"content":"event list. ","lastModifiedDate":"2021-10-20"},{"lineNumber":296,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":297,"author":{"gitId":"ntwbruce"},"content":"The `FilterEventCommand` created by `FilterEventCommandParser` will contain the `EventDateTimePredicate` to filter the ","lastModifiedDate":"2021-10-20"},{"lineNumber":298,"author":{"gitId":"ntwbruce"},"content":"event list. When the command is executed, the `model` will filter the `FilteredList\u003cEvent\u003e` using the ","lastModifiedDate":"2021-10-20"},{"lineNumber":299,"author":{"gitId":"ntwbruce"},"content":"`EventDateTimePredicate` and display only events that fulfils the `EventDateTimePredicate` contained in ","lastModifiedDate":"2021-10-20"},{"lineNumber":300,"author":{"gitId":"ntwbruce"},"content":"`FilterEventCommand`.","lastModifiedDate":"2021-10-20"},{"lineNumber":301,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":302,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":303,"author":{"gitId":"ntwbruce"},"content":"#### Implementation Rationale","lastModifiedDate":"2021-10-20"},{"lineNumber":304,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":305,"author":{"gitId":"XXJJXJ"},"content":"With considerations to how the `Event` class is implemented, some events do not have time associated to them.","lastModifiedDate":"2021-10-17"},{"lineNumber":306,"author":{"gitId":"ntwbruce"},"content":"We feel that since all `Event` have a date associated through the `EventDate` class, filtering should be done primarily ","lastModifiedDate":"2021-10-20"},{"lineNumber":307,"author":{"gitId":"ntwbruce"},"content":"through date i.e. `EventDate`. However, understanding that users might want to filter by time too, it is included as an ","lastModifiedDate":"2021-10-20"},{"lineNumber":308,"author":{"gitId":"ntwbruce"},"content":"optional criteria for filtering.","lastModifiedDate":"2021-10-20"},{"lineNumber":309,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":310,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":311,"author":{"gitId":"XXJJXJ"},"content":"#### Design Considerations:","lastModifiedDate":"2021-10-17"},{"lineNumber":312,"author":{"gitId":"XXJJXJ"},"content":"##### Aspect: Criteria to filter by:","lastModifiedDate":"2021-10-18"},{"lineNumber":313,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":314,"author":{"gitId":"XXJJXJ"},"content":"* **Alternative 1 (Current Choice)**: By date and optionally time:","lastModifiedDate":"2021-10-18"},{"lineNumber":315,"author":{"gitId":"XXJJXJ"},"content":"  * Pros: ","lastModifiedDate":"2021-10-17"},{"lineNumber":316,"author":{"gitId":"XXJJXJ"},"content":"    1. Filtering by \"date only\" allows users to see both events with or without time on the specific date.","lastModifiedDate":"2021-10-18"},{"lineNumber":317,"author":{"gitId":"XXJJXJ"},"content":"    2. Greater flexibility on how specific users want to filter the event list by.","lastModifiedDate":"2021-10-17"},{"lineNumber":318,"author":{"gitId":"XXJJXJ"},"content":"  * Cons:","lastModifiedDate":"2021-10-17"},{"lineNumber":319,"author":{"gitId":"XXJJXJ"},"content":"    1. Unable to filter for only events that do not have time associated.","lastModifiedDate":"2021-10-17"},{"lineNumber":320,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":321,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":322,"author":{"gitId":"lowkangn"},"content":"* **Alternative 2**: By Date and Time: (both fields compulsory)","lastModifiedDate":"2021-10-19"},{"lineNumber":323,"author":{"gitId":"XXJJXJ"},"content":"  * Pros:","lastModifiedDate":"2021-10-17"},{"lineNumber":324,"author":{"gitId":"XXJJXJ"},"content":"    1. Able to filter for only events that do not have time on a specific date.","lastModifiedDate":"2021-10-17"},{"lineNumber":325,"author":{"gitId":"XXJJXJ"},"content":"  * Cons:","lastModifiedDate":"2021-10-17"},{"lineNumber":326,"author":{"gitId":"XXJJXJ"},"content":"    1. Unable to get a more general filter for events occurring on a specific date.","lastModifiedDate":"2021-10-17"},{"lineNumber":327,"author":{"gitId":"XXJJXJ"},"content":"    2. Compulsory time field is too specific and the number of events displayed for a filter attempt might be too low. ","lastModifiedDate":"2021-10-17"},{"lineNumber":328,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":329,"author":{"gitId":"XXJJXJ"},"content":"##### Aspect: With or without prefix:","lastModifiedDate":"2021-10-17"},{"lineNumber":330,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":331,"author":{"gitId":"XXJJXJ"},"content":"* **Alternative 1 (Current Choice)**: With prefixes:","lastModifiedDate":"2021-10-17"},{"lineNumber":332,"author":{"gitId":"XXJJXJ"},"content":"  * Pros:","lastModifiedDate":"2021-10-17"},{"lineNumber":333,"author":{"gitId":"XXJJXJ"},"content":"    1. Sequence of parameters can be randomized, more flexible command syntax.","lastModifiedDate":"2021-10-18"},{"lineNumber":334,"author":{"gitId":"XXJJXJ"},"content":"    2. Clear to user which field is being keyed in.","lastModifiedDate":"2021-10-17"},{"lineNumber":335,"author":{"gitId":"XXJJXJ"},"content":"    3. Easy to implement with support of existing classes.","lastModifiedDate":"2021-10-17"},{"lineNumber":336,"author":{"gitId":"XXJJXJ"},"content":"  * Cons:","lastModifiedDate":"2021-10-17"},{"lineNumber":337,"author":{"gitId":"XXJJXJ"},"content":"    1. This adds up to the number of prefixes already present in Managera which may be hard for users to remember.","lastModifiedDate":"2021-10-18"},{"lineNumber":338,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":339,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":340,"author":{"gitId":"XXJJXJ"},"content":"* **Alternative 2**: Without prefix:","lastModifiedDate":"2021-10-17"},{"lineNumber":341,"author":{"gitId":"XXJJXJ"},"content":"  * Pros:","lastModifiedDate":"2021-10-17"},{"lineNumber":342,"author":{"gitId":"XXJJXJ"},"content":"    1. Clean and slightly shorter command syntax.","lastModifiedDate":"2021-10-17"},{"lineNumber":343,"author":{"gitId":"XXJJXJ"},"content":"    2. Less prefix to remember.","lastModifiedDate":"2021-10-17"},{"lineNumber":344,"author":{"gitId":"XXJJXJ"},"content":"  * Cons:","lastModifiedDate":"2021-10-17"},{"lineNumber":345,"author":{"gitId":"XXJJXJ"},"content":"    1. Rigid command syntax.","lastModifiedDate":"2021-10-17"},{"lineNumber":346,"author":{"gitId":"XXJJXJ"},"content":"    2. Requires more comprehensive implementation to deal with user input (E.g. Date Only or Date and Time)","lastModifiedDate":"2021-10-17"},{"lineNumber":347,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":348,"author":{"gitId":"XXJJXJ"},"content":"The following is the sequence diagram for how a `FilterEventCommand` works internally.","lastModifiedDate":"2021-10-17"},{"lineNumber":349,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":350,"author":{"gitId":"XXJJXJ"},"content":"![FilterEventSequenceDiagram](images/FilterEventSequenceDiagram.png)","lastModifiedDate":"2021-10-17"},{"lineNumber":351,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":352,"author":{"gitId":"lowkangn"},"content":"### \\[Completed\\] View Participant\u0027s Details feature","lastModifiedDate":"2021-10-19"},{"lineNumber":353,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":354,"author":{"gitId":"lowkangn"},"content":"This feature allows Managera users to look for a specific participant and view their details. The search is done using","lastModifiedDate":"2021-10-19"},{"lineNumber":355,"author":{"gitId":"lowkangn"},"content":"the participant\u0027s ID since each participant has a unique ID.","lastModifiedDate":"2021-10-19"},{"lineNumber":356,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":357,"author":{"gitId":"ntwbruce"},"content":"#### Implementation Details","lastModifiedDate":"2021-10-20"},{"lineNumber":358,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":359,"author":{"gitId":"lowkangn"},"content":"The `AddressBookParser` is responsible for determining the type of `Command` to be created from user input,","lastModifiedDate":"2021-10-19"},{"lineNumber":360,"author":{"gitId":"lowkangn"},"content":"we can simply add a new `commandType` case for `ViewCommand` in `AddressBookParser`.","lastModifiedDate":"2021-10-19"},{"lineNumber":361,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":362,"author":{"gitId":"lowkangn"},"content":"A `ViewCommandParser` parses the user\u0027s input and creates the `ParticipantIdMatchesGivenIdPredicate` which the ","lastModifiedDate":"2021-10-19"},{"lineNumber":363,"author":{"gitId":"lowkangn"},"content":"`ViewCommand` will use to search for the participant. `ParticipantIdMatchesGivenIdPredicate` implements ","lastModifiedDate":"2021-10-19"},{"lineNumber":364,"author":{"gitId":"lowkangn"},"content":"`Predicate\u003cParticipant\u003e` which can be passed to a `FilteredList\u003cParticipant\u003e` to filter out the participant. Since the","lastModifiedDate":"2021-10-19"},{"lineNumber":365,"author":{"gitId":"lowkangn"},"content":"predicate searches for the exact match, it would return only one result in the filtered list.","lastModifiedDate":"2021-10-19"},{"lineNumber":366,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":367,"author":{"gitId":"lowkangn"},"content":"The `ViewCommand` created by `ViewCommandParser` will contain the `ParticipantIdMatchesGivenIdPredicate` to filter","lastModifiedDate":"2021-10-19"},{"lineNumber":368,"author":{"gitId":"lowkangn"},"content":"the participant list. When the command is executed, the `model` will filter the `FilteredList\u003cParticipant\u003e` using","lastModifiedDate":"2021-10-19"},{"lineNumber":369,"author":{"gitId":"lowkangn"},"content":"the `ParticipantIdMatchesGivenIdPredicate` and display the participant that fulfils the ","lastModifiedDate":"2021-10-19"},{"lineNumber":370,"author":{"gitId":"lowkangn"},"content":"`ParticipantIdMatchesGivenIdPredicate` contained in `ViewCommand`.","lastModifiedDate":"2021-10-19"},{"lineNumber":371,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":372,"author":{"gitId":"ntwbruce"},"content":"#### Implementation Rationale","lastModifiedDate":"2021-10-20"},{"lineNumber":373,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":374,"author":{"gitId":"lowkangn"},"content":"Since each participant has a unique ID, it provides a convenient way for the user to look for a specific participant if","lastModifiedDate":"2021-10-19"},{"lineNumber":375,"author":{"gitId":"lowkangn"},"content":"matching ID is used as the criterion. The `findParticipant` command provides similar functionality, but returns a list ","lastModifiedDate":"2021-10-19"},{"lineNumber":376,"author":{"gitId":"lowkangn"},"content":"of participants instead because it uses names, which are more imprecise. Hence, a separate command was decidedly","lastModifiedDate":"2021-10-19"},{"lineNumber":377,"author":{"gitId":"lowkangn"},"content":"implemented to allow users the ability to sieve out a single participant for a more detailed view.","lastModifiedDate":"2021-10-19"},{"lineNumber":378,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":379,"author":{"gitId":"lowkangn"},"content":"#### Design Considerations:","lastModifiedDate":"2021-10-19"},{"lineNumber":380,"author":{"gitId":"lowkangn"},"content":"##### Aspect: Similar participant IDs:","lastModifiedDate":"2021-10-19"},{"lineNumber":381,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":382,"author":{"gitId":"lowkangn"},"content":"* **Alternative 1 (Current Choice)**: Exact match:","lastModifiedDate":"2021-10-19"},{"lineNumber":383,"author":{"gitId":"lowkangn"},"content":"    * Pros:","lastModifiedDate":"2021-10-19"},{"lineNumber":384,"author":{"gitId":"lowkangn"},"content":"        1. The details of the specific participant are returned immediately, provided that the user\u0027s input is an exact","lastModifiedDate":"2021-10-19"},{"lineNumber":385,"author":{"gitId":"lowkangn"},"content":"           match of the participant\u0027s ID.","lastModifiedDate":"2021-10-19"},{"lineNumber":386,"author":{"gitId":"lowkangn"},"content":"        2. Simpler implementation, simpler for the participant to use.","lastModifiedDate":"2021-10-19"},{"lineNumber":387,"author":{"gitId":"lowkangn"},"content":"    * Cons:","lastModifiedDate":"2021-10-19"},{"lineNumber":388,"author":{"gitId":"lowkangn"},"content":"        1. The user has to know the exact ID of the participant otherwise the wrong participant may be found.","lastModifiedDate":"2021-10-19"},{"lineNumber":389,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":390,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":391,"author":{"gitId":"lowkangn"},"content":"* **Alternative 2**: Find similar IDs:","lastModifiedDate":"2021-10-19"},{"lineNumber":392,"author":{"gitId":"lowkangn"},"content":"    * Pros:","lastModifiedDate":"2021-10-19"},{"lineNumber":393,"author":{"gitId":"lowkangn"},"content":"        1. A list of participants that contain the user\u0027s input in their IDs are returned, offering greater flexibility ","lastModifiedDate":"2021-10-19"},{"lineNumber":394,"author":{"gitId":"lowkangn"},"content":"        if the user does not fully recall the exact ID of the participant they are looking for. The search can be ","lastModifiedDate":"2021-10-19"},{"lineNumber":395,"author":{"gitId":"lowkangn"},"content":"           further refined by subsequent user input to narrow it down to the specific participant.","lastModifiedDate":"2021-10-19"},{"lineNumber":396,"author":{"gitId":"lowkangn"},"content":"    * Cons:","lastModifiedDate":"2021-10-19"},{"lineNumber":397,"author":{"gitId":"lowkangn"},"content":"        1. Significantly harder implementation.","lastModifiedDate":"2021-10-19"},{"lineNumber":398,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":399,"author":{"gitId":"lowkangn"},"content":"The following is the sequence diagram for how a `ViewCommand` works internally.","lastModifiedDate":"2021-10-20"},{"lineNumber":400,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":401,"author":{"gitId":"lowkangn"},"content":"![ViewSequenceDiagram](images/ViewSequenceDiagram.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":402,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":403,"author":{"gitId":"lowkangn"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2021-10-19"},{"lineNumber":404,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":405,"author":{"gitId":"lowkangn"},"content":"![ViewCommandActivityDiagram](images/ViewCommandActivityDiagram.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":406,"author":{"gitId":"kanjitp"},"content":"### \\[Completed\\] Add/Remove Participant to/from event by index","lastModifiedDate":"2021-10-20"},{"lineNumber":407,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":408,"author":{"gitId":"kanjitp"},"content":"This feature allows Managera users to quickly add/remove participant to/from event according to the current filtered","lastModifiedDate":"2021-10-20"},{"lineNumber":409,"author":{"gitId":"kanjitp"},"content":" list of events and participant visible to user.","lastModifiedDate":"2021-10-20"},{"lineNumber":410,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":411,"author":{"gitId":"kanjitp"},"content":"#### Implementation Details","lastModifiedDate":"2021-10-20"},{"lineNumber":412,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":413,"author":{"gitId":"kanjitp"},"content":"The `AddressBookParser` is responsible for determining the type of `Command` to be created from user input, ","lastModifiedDate":"2021-10-20"},{"lineNumber":414,"author":{"gitId":"kanjitp"},"content":"hence we add new `commandType` cases for `AddParticipantToEventByIndexCommand` and `RemoveParticipantFromEventByIndexCommand` in `AddressBookParser`","lastModifiedDate":"2021-10-20"},{"lineNumber":415,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":416,"author":{"gitId":"kanjitp"},"content":"A `AddParticipantToEventByIndexParser` parses the user\u0027s input and obtain indexes for Participant and Event respectively. ","lastModifiedDate":"2021-10-20"},{"lineNumber":417,"author":{"gitId":"kanjitp"},"content":"If the indexes given by the user are not zero-based indexes, a `ParseException` will be thrown before `AddParticipantByIndexParser` creates the command itself to prevent any further error. ","lastModifiedDate":"2021-10-20"},{"lineNumber":418,"author":{"gitId":"kanjitp"},"content":"If all indexes are valid, a `AddParticipantByIndexCommand` will be created by the parser.","lastModifiedDate":"2021-10-20"},{"lineNumber":419,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":420,"author":{"gitId":"kanjitp"},"content":"The `AddParticipantByIndexCommand` created by `AddParticipantToEventByIndexParser` contains 2 zero-based indexes. ","lastModifiedDate":"2021-10-20"},{"lineNumber":421,"author":{"gitId":"kanjitp"},"content":"The first one is used to identify the `Participant` while the second is used to identify the `Event`. ","lastModifiedDate":"2021-10-20"},{"lineNumber":422,"author":{"gitId":"kanjitp"},"content":"When the command is executed, the `model` first tries to obtain Participant at specified index (if unsuccessful, a `CommandException` will be thrown accordingly) and then event will be retrieved in the same manner (if unsuccessful, a `CommmandException` will be thrown accordingly). If the Event does not already contain the `Participant` object, the participant will be added to the event accordingly.","lastModifiedDate":"2021-10-20"},{"lineNumber":423,"author":{"gitId":"kanjitp"},"content":" Otherwise, a `CommandException` will be thrown.","lastModifiedDate":"2021-10-20"},{"lineNumber":424,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":425,"author":{"gitId":"kanjitp"},"content":"A `RemoveParticipantFromEventByIndexParser` parses the user\u0027s input and obtain indexes for Participant and Event respectively. ","lastModifiedDate":"2021-10-20"},{"lineNumber":426,"author":{"gitId":"kanjitp"},"content":"The workflow is nearly identical to `AddParticipantToEventByIndex`. It is only that instead of throwing `CommandException` if `Participant` object already exists in the event,","lastModifiedDate":"2021-10-20"},{"lineNumber":427,"author":{"gitId":"kanjitp"},"content":"the `CommandException` will be thrown when `Participant` *doesn\u0027t* exist in the event. After all of that, the `Participant` object will be removed from the `Event`. ","lastModifiedDate":"2021-10-20"},{"lineNumber":428,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":429,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":430,"author":{"gitId":"kanjitp"},"content":"#### Implementation Rationale","lastModifiedDate":"2021-10-20"},{"lineNumber":431,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":432,"author":{"gitId":"kanjitp"},"content":"Since the command implies that the index of participant should come before event, there is no need for prefixes to be used as that would incur extra typing for the user and slow down the process.","lastModifiedDate":"2021-10-20"},{"lineNumber":433,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":434,"author":{"gitId":"kanjitp"},"content":"The following activity diagrams summarise what happens when a user executes a new command in each case:","lastModifiedDate":"2021-10-20"},{"lineNumber":435,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":436,"author":{"gitId":"kanjitp"},"content":"`AddParticipantToEventByIndex`","lastModifiedDate":"2021-10-20"},{"lineNumber":437,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":438,"author":{"gitId":"kanjitp"},"content":"![AddParticipantToEventActivityDiagram](images/AddParticipantToEventByIndexActivityDiagram.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":439,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":440,"author":{"gitId":"kanjitp"},"content":"`RemoveParticipantFromEventByIndex`","lastModifiedDate":"2021-10-20"},{"lineNumber":441,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":442,"author":{"gitId":"kanjitp"},"content":"![RemoveParticipantFromEventActivityDiagram](images/RemoveParticipantByIndexActivityDiagram.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":443,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":444,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":445,"author":{"gitId":"ntwbruce"},"content":"### \\[Completed\\] View Event Details feature","lastModifiedDate":"2021-10-20"},{"lineNumber":446,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":447,"author":{"gitId":"ntwbruce"},"content":"This feature allows Managera users to find an Event by name and view its details. The search is done using the Event\u0027s ","lastModifiedDate":"2021-10-20"},{"lineNumber":448,"author":{"gitId":"ntwbruce"},"content":"name since Managera employs a UniqueEventList and will not have more than one Event with a given name.","lastModifiedDate":"2021-10-20"},{"lineNumber":449,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":450,"author":{"gitId":"ntwbruce"},"content":"#### Implementation Details","lastModifiedDate":"2021-10-20"},{"lineNumber":451,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":452,"author":{"gitId":"ntwbruce"},"content":"The `AddressBookParser` is responsible for determining the type of `Command` to be created from user input, hence we ","lastModifiedDate":"2021-10-20"},{"lineNumber":453,"author":{"gitId":"ntwbruce"},"content":"simply added a new `commandType` case for `ShowEventDetailsCommand` in `AddressBookParser`.","lastModifiedDate":"2021-10-20"},{"lineNumber":454,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":455,"author":{"gitId":"ntwbruce"},"content":"A `ShowEventDetailsCommandParser` parses the user\u0027s input and creates an `EventNamePredicate` which the","lastModifiedDate":"2021-10-20"},{"lineNumber":456,"author":{"gitId":"ntwbruce"},"content":"`ShowEventDetailsCommand` uses to search for the Event. `EventNamePredicate` implements `Predicate\u003cEvent\u003e` which ","lastModifiedDate":"2021-10-20"},{"lineNumber":457,"author":{"gitId":"ntwbruce"},"content":"can be passed to a `FilteredList\u003cEvent\u003e` to filter out the Event. Since the predicate searches for the Event with a name","lastModifiedDate":"2021-10-20"},{"lineNumber":458,"author":{"gitId":"ntwbruce"},"content":"that matches the predicate exactly, it returns only one result in the filtered list.","lastModifiedDate":"2021-10-20"},{"lineNumber":459,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":460,"author":{"gitId":"ntwbruce"},"content":"The `ShowEventDetailsCommand` created by `ShowEventDetailsParser` contains the `EventNamePredicate` used to filter the ","lastModifiedDate":"2021-10-20"},{"lineNumber":461,"author":{"gitId":"ntwbruce"},"content":"Event list. When the command is executed, the `model` obtains the Event by filtering the `FilteredList\u003cEvent\u003e` using ","lastModifiedDate":"2021-10-20"},{"lineNumber":462,"author":{"gitId":"ntwbruce"},"content":"the `EventNamePredicate` and displays its details.","lastModifiedDate":"2021-10-20"},{"lineNumber":463,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":464,"author":{"gitId":"ntwbruce"},"content":"#### Implementation Rationale","lastModifiedDate":"2021-10-20"},{"lineNumber":465,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":466,"author":{"gitId":"ntwbruce"},"content":"Since each Event has a unique name, it provides a convenient way for the user to look for a specific Event if matching ","lastModifiedDate":"2021-10-20"},{"lineNumber":467,"author":{"gitId":"ntwbruce"},"content":"name is used as the criterion. ","lastModifiedDate":"2021-10-20"},{"lineNumber":468,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":469,"author":{"gitId":"ntwbruce"},"content":"Another command similar in function is `findEvent`, where the model will filter the existing Event list and display the ","lastModifiedDate":"2021-10-20"},{"lineNumber":470,"author":{"gitId":"ntwbruce"},"content":"Events with names that contain a given keyword. However, this implementation is meant for returning a list of possibly ","lastModifiedDate":"2021-10-20"},{"lineNumber":471,"author":{"gitId":"ntwbruce"},"content":"multiple Events. Since we are only looking for one particular Event, we decided that instead of filtering the Event list ","lastModifiedDate":"2021-10-20"},{"lineNumber":472,"author":{"gitId":"ntwbruce"},"content":"to display just the one Event, we leave the Event list untouched and simply return the Event details to the results ","lastModifiedDate":"2021-10-20"},{"lineNumber":473,"author":{"gitId":"ntwbruce"},"content":"display.","lastModifiedDate":"2021-10-20"},{"lineNumber":474,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":475,"author":{"gitId":"ntwbruce"},"content":"#### Design Considerations:","lastModifiedDate":"2021-10-20"},{"lineNumber":476,"author":{"gitId":"ntwbruce"},"content":"##### Aspect: Similar Event names:","lastModifiedDate":"2021-10-20"},{"lineNumber":477,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":478,"author":{"gitId":"ntwbruce"},"content":"* **Alternative 1 (Current Choice)**: Exact name match:","lastModifiedDate":"2021-10-20"},{"lineNumber":479,"author":{"gitId":"ntwbruce"},"content":"    * Pros:","lastModifiedDate":"2021-10-20"},{"lineNumber":480,"author":{"gitId":"ntwbruce"},"content":"        1. The details of the specific Event are returned immediately, provided that the user\u0027s input is an exact","lastModifiedDate":"2021-10-20"},{"lineNumber":481,"author":{"gitId":"ntwbruce"},"content":"           match of the Event\u0027s name.","lastModifiedDate":"2021-10-20"},{"lineNumber":482,"author":{"gitId":"ntwbruce"},"content":"        2. Simpler to implement.","lastModifiedDate":"2021-10-20"},{"lineNumber":483,"author":{"gitId":"ntwbruce"},"content":"    * Cons:","lastModifiedDate":"2021-10-20"},{"lineNumber":484,"author":{"gitId":"ntwbruce"},"content":"        1. The user has to know the exact name of the Event, otherwise no Event, or the wrong Event, may be found.","lastModifiedDate":"2021-10-20"},{"lineNumber":485,"author":{"gitId":"ntwbruce"},"content":"        2. If the Event name is long, typographical errors are likely, resulting in the desired Event not being found.","lastModifiedDate":"2021-10-20"},{"lineNumber":486,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":487,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":488,"author":{"gitId":"ntwbruce"},"content":"* **Alternative 2**: Find similar names, or by a given keyword:","lastModifiedDate":"2021-10-20"},{"lineNumber":489,"author":{"gitId":"ntwbruce"},"content":"    * Pros:","lastModifiedDate":"2021-10-20"},{"lineNumber":490,"author":{"gitId":"ntwbruce"},"content":"        1. A list of Events with names that contain the user\u0027s input are returned, offering greater flexibility","lastModifiedDate":"2021-10-20"},{"lineNumber":491,"author":{"gitId":"ntwbruce"},"content":"           if the user does not fully recall the entire name of the Event they are looking for. The search can be","lastModifiedDate":"2021-10-20"},{"lineNumber":492,"author":{"gitId":"ntwbruce"},"content":"           further refined by subsequent user input to narrow it down to the specific Event.","lastModifiedDate":"2021-10-20"},{"lineNumber":493,"author":{"gitId":"ntwbruce"},"content":"    * Cons:","lastModifiedDate":"2021-10-20"},{"lineNumber":494,"author":{"gitId":"ntwbruce"},"content":"        1. Significantly harder implementation.","lastModifiedDate":"2021-10-20"},{"lineNumber":495,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":496,"author":{"gitId":"ntwbruce"},"content":"The following is the sequence diagram for how a `ShowEventDetailsCommand` works internally.","lastModifiedDate":"2021-10-20"},{"lineNumber":497,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":498,"author":{"gitId":"ntwbruce"},"content":"![ShowEventDetailsSequenceDiagram](images/ShowEventDetailsSequenceDiagram.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":499,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":500,"author":{"gitId":"ntwbruce"},"content":"The following activity diagram summarises what happens when a user executes a new command:","lastModifiedDate":"2021-10-20"},{"lineNumber":501,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":502,"author":{"gitId":"ntwbruce"},"content":"![ShowEventDetailsActivityDiagram](images/ShowEventDetailsActivityDiagram.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":503,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":504,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":594,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":595,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":596,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":597,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"lowkangn"},"content":"* has a need to manage a significant number of events and contacts","lastModifiedDate":"2021-09-18"},{"lineNumber":608,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":611,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"lowkangn"},"content":"**Value proposition**: manage events and event participants faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-09-18"},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                          |","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"lowkangn"},"content":"| -------- | ------------------------------------------- | ---------------------------------- | ------------------------------------------------------------------------------ |","lastModifiedDate":"2021-09-18"},{"lineNumber":622,"author":{"gitId":"lowkangn"},"content":"| `* * *`  | Event organiser                             | add an upcoming event to my list   | keep track of the details of all events I will be organising                   |","lastModifiedDate":"2021-09-18"},{"lineNumber":623,"author":{"gitId":"lowkangn"},"content":"| `* * *`  | Event organiser                             | add a participant to an event      | keep track of the participants for an event                                    |","lastModifiedDate":"2021-09-18"},{"lineNumber":624,"author":{"gitId":"lowkangn"},"content":"| `* * *`  | Event organiser with many concluded events  | delete events from my list         | keep my list of events tidy                                                    |","lastModifiedDate":"2021-09-18"},{"lineNumber":625,"author":{"gitId":"lowkangn"},"content":"| `* * *`  | Event organiser                             | remove a participant from an event | maintain an accurate list of participants attending the event                  |","lastModifiedDate":"2021-09-18"},{"lineNumber":626,"author":{"gitId":"lowkangn"},"content":"| `* * *`  | Event organiser that has concluded an event | mark the event as done             | safely ignore events in my list that have already passed                       |","lastModifiedDate":"2021-09-18"},{"lineNumber":627,"author":{"gitId":"lowkangn"},"content":"| `* *`    | Event organiser with many events            | sort events by date and time       | keep track of which events occur when and prepare accordingly                  |","lastModifiedDate":"2021-09-18"},{"lineNumber":628,"author":{"gitId":"lowkangn"},"content":"| `*`      | Event organiser with many participants      | find a participant by name         | I can contact the participant to inform him of updates or changes to the event |","lastModifiedDate":"2021-09-22"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"ntwbruce"},"content":"(For all use cases below, the **System** is `Managera` and the **Actor** is an `Event Organiser`, unless specified otherwise)","lastModifiedDate":"2021-09-20"},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC01 - Add an Event**","lastModifiedDate":"2021-09-20"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"XXJJXJ"},"content":"1.  Event Organiser requests to add an Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":641,"author":{"gitId":"ntwbruce"},"content":"2.  Managera adds the new Event with the given name and date to its Event list.","lastModifiedDate":"2021-09-20"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"XXJJXJ"},"content":"* 1a. Managera detects missing details required for adding an Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":649,"author":{"gitId":"ntwbruce"},"content":"    * 1a1. Managera shows an error message citing missing parameters.","lastModifiedDate":"2021-09-20"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":651,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-20"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC02 - Add Participant to Event**","lastModifiedDate":"2021-09-22"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"ntwbruce"},"content":"Preconditions: At least one Event and one Participant have been added to Managera.","lastModifiedDate":"2021-09-22"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"ntwbruce"},"content":"**MSS**","lastModifiedDate":"2021-09-22"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"XXJJXJ"},"content":"1.  Event Organiser requests to add a Participant to an Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":661,"author":{"gitId":"XXJJXJ"},"content":"2.  Managera adds the Participant to the specified Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":662,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":663,"author":{"gitId":"ntwbruce"},"content":"    Use case ends.","lastModifiedDate":"2021-09-22"},{"lineNumber":664,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":665,"author":{"gitId":"ntwbruce"},"content":"**Extensions**","lastModifiedDate":"2021-09-22"},{"lineNumber":666,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":667,"author":{"gitId":"XXJJXJ"},"content":"* 1a. Managera detects missing details required for adding a Participant to an Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":668,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":669,"author":{"gitId":"ntwbruce"},"content":"    * 1a1. Managera shows an error message citing missing parameters.","lastModifiedDate":"2021-09-22"},{"lineNumber":670,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":671,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":672,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":673,"author":{"gitId":"XXJJXJ"},"content":"* 1b. Managera cannot find the Participant.","lastModifiedDate":"2021-10-02"},{"lineNumber":674,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":675,"author":{"gitId":"ntwbruce"},"content":"    * 1b1. Managera shows an error message stating that the given ID does not correspond to an existing Participant.","lastModifiedDate":"2021-09-22"},{"lineNumber":676,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":677,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":678,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":679,"author":{"gitId":"XXJJXJ"},"content":"* 1c. Managera could not find the Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":680,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":681,"author":{"gitId":"ntwbruce"},"content":"    * 1c1. Managera shows an error message stating that the given name does not correspond to an existing Event.","lastModifiedDate":"2021-09-22"},{"lineNumber":682,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":683,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":684,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":685,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC03 - Remove an Event**","lastModifiedDate":"2021-09-22"},{"lineNumber":686,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":687,"author":{"gitId":"ntwbruce"},"content":"Preconditions: At least one Event has been added to Managera.","lastModifiedDate":"2021-09-22"},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"ntwbruce"},"content":"**MSS**","lastModifiedDate":"2021-09-20"},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"XXJJXJ"},"content":"1.  Event Organiser requests to remove an Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":692,"author":{"gitId":"XXJJXJ"},"content":"2.  Managera removes the Event from its Event list.","lastModifiedDate":"2021-10-02"},{"lineNumber":693,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":694,"author":{"gitId":"ntwbruce"},"content":"    Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":695,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":696,"author":{"gitId":"ntwbruce"},"content":"**Extensions**","lastModifiedDate":"2021-09-20"},{"lineNumber":697,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":698,"author":{"gitId":"XXJJXJ"},"content":"* 1a. Managera could not find the specified Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":699,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":700,"author":{"gitId":"XXJJXJ"},"content":"    * 1a1. Managera shows an error message.","lastModifiedDate":"2021-10-02"},{"lineNumber":701,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":702,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-20"},{"lineNumber":703,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":704,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":705,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC04 - Remove Participant from Event**","lastModifiedDate":"2021-09-22"},{"lineNumber":706,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":707,"author":{"gitId":"ntwbruce"},"content":"Preconditions: At least one Event and one Participant have been added to Managera. ","lastModifiedDate":"2021-09-22"},{"lineNumber":708,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":709,"author":{"gitId":"ntwbruce"},"content":"**MSS**","lastModifiedDate":"2021-09-22"},{"lineNumber":710,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":711,"author":{"gitId":"XXJJXJ"},"content":"1.  Event Organiser requests to remove a Participant from an Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":712,"author":{"gitId":"XXJJXJ"},"content":"2.  Managera removes the Participant from the specified Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":713,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":714,"author":{"gitId":"ntwbruce"},"content":"    Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":715,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":716,"author":{"gitId":"ntwbruce"},"content":"**Extensions**","lastModifiedDate":"2021-09-22"},{"lineNumber":717,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":718,"author":{"gitId":"XXJJXJ"},"content":"* 1a. Managera could not find the Participant.","lastModifiedDate":"2021-10-02"},{"lineNumber":719,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":720,"author":{"gitId":"XXJJXJ"},"content":"    * 1a1. Managera shows an error message stating that the Participant does not exist.","lastModifiedDate":"2021-10-02"},{"lineNumber":721,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":722,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":723,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":724,"author":{"gitId":"XXJJXJ"},"content":"* 1b. Managera could not find the Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":725,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":726,"author":{"gitId":"ntwbruce"},"content":"    * 1b1. Managera shows an error message stating that the given name does not correspond to an existing Event.","lastModifiedDate":"2021-09-22"},{"lineNumber":727,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":728,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":729,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":730,"author":{"gitId":"XXJJXJ"},"content":"* 1c. Managera could not find the Participant in the specified Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":731,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":732,"author":{"gitId":"ntwbruce"},"content":"    * 1c1. Managera shows an error message stating that the Participant is not taking part in the given Event.","lastModifiedDate":"2021-09-22"},{"lineNumber":733,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":734,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":735,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":736,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC05 - Mark Event as done**","lastModifiedDate":"2021-09-22"},{"lineNumber":737,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":738,"author":{"gitId":"ntwbruce"},"content":"Preconditions: At least one Event has been added to Managera.","lastModifiedDate":"2021-09-22"},{"lineNumber":739,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":740,"author":{"gitId":"ntwbruce"},"content":"**MSS**","lastModifiedDate":"2021-09-20"},{"lineNumber":741,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":742,"author":{"gitId":"XXJJXJ"},"content":"1.  Event Organiser requests to mark an Event as done.","lastModifiedDate":"2021-10-02"},{"lineNumber":743,"author":{"gitId":"XXJJXJ"},"content":"2.  Managera marks the Event in its Event list as done.","lastModifiedDate":"2021-10-02"},{"lineNumber":744,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":745,"author":{"gitId":"ntwbruce"},"content":"    Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":746,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":747,"author":{"gitId":"ntwbruce"},"content":"**Extensions**","lastModifiedDate":"2021-09-20"},{"lineNumber":748,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":749,"author":{"gitId":"XXJJXJ"},"content":"* 1a. Managera detects missing details required to mark event as done.","lastModifiedDate":"2021-10-02"},{"lineNumber":750,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":751,"author":{"gitId":"ntwbruce"},"content":"    * 1a1. Managera shows an error message citing missing parameter.","lastModifiedDate":"2021-09-20"},{"lineNumber":752,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":753,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-20"},{"lineNumber":754,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":755,"author":{"gitId":"XXJJXJ"},"content":"* 1b. Managera could not find the Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":756,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":757,"author":{"gitId":"ntwbruce"},"content":"    * 1b1. Managera shows an error message stating that the given name does not correspond to an existing Event.","lastModifiedDate":"2021-09-20"},{"lineNumber":758,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":759,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-20"},{"lineNumber":760,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":761,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":762,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC06 - Sort Events by time**","lastModifiedDate":"2021-09-22"},{"lineNumber":763,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":764,"author":{"gitId":"ntwbruce"},"content":"Preconditions: At least one Event has been added to Managera.","lastModifiedDate":"2021-09-22"},{"lineNumber":765,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":766,"author":{"gitId":"ntwbruce"},"content":"**MSS**","lastModifiedDate":"2021-09-20"},{"lineNumber":767,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":768,"author":{"gitId":"XXJJXJ"},"content":"1.  Event Organiser requests to sort the current list of Events by time.","lastModifiedDate":"2021-10-02"},{"lineNumber":769,"author":{"gitId":"ntwbruce"},"content":"2.  Managera sorts the list of Events in chronological order and displays the list.","lastModifiedDate":"2021-09-20"},{"lineNumber":770,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":771,"author":{"gitId":"ntwbruce"},"content":"    Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":772,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":773,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC07 - Find Participant and access details**","lastModifiedDate":"2021-09-22"},{"lineNumber":774,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":775,"author":{"gitId":"ntwbruce"},"content":"**Preconditions: At least one Participant has been added to Managera.**","lastModifiedDate":"2021-09-22"},{"lineNumber":776,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":777,"author":{"gitId":"ntwbruce"},"content":"**MSS**","lastModifiedDate":"2021-09-20"},{"lineNumber":778,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":779,"author":{"gitId":"XXJJXJ"},"content":"1. Event Organiser requests Participant details.","lastModifiedDate":"2021-10-02"},{"lineNumber":780,"author":{"gitId":"ntwbruce"},"content":"2. Managera displays the details of all Participants with the given name.","lastModifiedDate":"2021-09-22"},{"lineNumber":781,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":782,"author":{"gitId":"ntwbruce"},"content":"    Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":783,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":784,"author":{"gitId":"XXJJXJ"},"content":"**Extensions**","lastModifiedDate":"2021-10-02"},{"lineNumber":785,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":786,"author":{"gitId":"XXJJXJ"},"content":"* 1a. Managera detects missing details for access to Participant\u0027s details.","lastModifiedDate":"2021-10-02"},{"lineNumber":787,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":788,"author":{"gitId":"XXJJXJ"},"content":"    * 1a1. Managera shows an error message citing missing parameters.","lastModifiedDate":"2021-10-02"},{"lineNumber":789,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":790,"author":{"gitId":"XXJJXJ"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-10-02"},{"lineNumber":791,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":792,"author":{"gitId":"XXJJXJ"},"content":"* 1b. Managera could not find the Participant.","lastModifiedDate":"2021-10-02"},{"lineNumber":793,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":794,"author":{"gitId":"XXJJXJ"},"content":"    * 1b1. Managera shows an error message stating that the Participant does not exist.","lastModifiedDate":"2021-10-02"},{"lineNumber":795,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":796,"author":{"gitId":"XXJJXJ"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-10-02"},{"lineNumber":797,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":798,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC08 - Filter Events by date**","lastModifiedDate":"2021-09-22"},{"lineNumber":799,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":800,"author":{"gitId":"ntwbruce"},"content":"Preconditions: At least one Event has been added to Managera.","lastModifiedDate":"2021-09-22"},{"lineNumber":801,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":802,"author":{"gitId":"ntwbruce"},"content":"**MSS**","lastModifiedDate":"2021-09-20"},{"lineNumber":803,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":804,"author":{"gitId":"ntwbruce"},"content":"1.  Event Organiser requests to filter Events from the current list of Events that take place on a specified date.","lastModifiedDate":"2021-09-22"},{"lineNumber":805,"author":{"gitId":"ntwbruce"},"content":"2.  Managera finds the Events that take place on the given date and displays them in a list.","lastModifiedDate":"2021-09-22"},{"lineNumber":806,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":807,"author":{"gitId":"ntwbruce"},"content":"    Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":808,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":809,"author":{"gitId":"ntwbruce"},"content":"**Extensions**","lastModifiedDate":"2021-09-20"},{"lineNumber":810,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":811,"author":{"gitId":"ntwbruce"},"content":"* 1a. Event Organiser omits date parameter required for filtering Events.","lastModifiedDate":"2021-09-22"},{"lineNumber":812,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":813,"author":{"gitId":"ntwbruce"},"content":"    * 1a1. Managera shows an error message citing missing parameter.","lastModifiedDate":"2021-09-22"},{"lineNumber":814,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":815,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":816,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":817,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC09 - Show Event details**","lastModifiedDate":"2021-09-22"},{"lineNumber":818,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":819,"author":{"gitId":"ntwbruce"},"content":"Preconditions: At least one Event has been added to Managera.","lastModifiedDate":"2021-09-22"},{"lineNumber":820,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":821,"author":{"gitId":"ntwbruce"},"content":"**MSS**","lastModifiedDate":"2021-09-20"},{"lineNumber":822,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":823,"author":{"gitId":"ntwbruce"},"content":"1.  Event Organiser requests Event details, specifying an Event name.","lastModifiedDate":"2021-09-22"},{"lineNumber":824,"author":{"gitId":"ntwbruce"},"content":"2.  Managera displays the details of the Event with the given name.","lastModifiedDate":"2021-09-22"},{"lineNumber":825,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":826,"author":{"gitId":"ntwbruce"},"content":"    Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":827,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":828,"author":{"gitId":"ntwbruce"},"content":"**Extensions**","lastModifiedDate":"2021-09-20"},{"lineNumber":829,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":830,"author":{"gitId":"XXJJXJ"},"content":"* 1a. Managera detects missing details for showing Event details.","lastModifiedDate":"2021-10-02"},{"lineNumber":831,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":832,"author":{"gitId":"ntwbruce"},"content":"    * 1a1. Managera shows an error message citing missing parameter.","lastModifiedDate":"2021-09-22"},{"lineNumber":833,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":834,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":835,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":836,"author":{"gitId":"XXJJXJ"},"content":"* 1b. Managera could not find the Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":837,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":838,"author":{"gitId":"ntwbruce"},"content":"    * 1b1. Managera shows an error message stating that the given name does not correspond to an existing Event.","lastModifiedDate":"2021-09-20"},{"lineNumber":839,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":840,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":841,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":842,"author":{"gitId":"ntwbruce"},"content":"**Use case: UC10 - Show Event Participants**","lastModifiedDate":"2021-09-22"},{"lineNumber":843,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":844,"author":{"gitId":"ntwbruce"},"content":"Preconditions: At least one Event has been added to Managera.","lastModifiedDate":"2021-09-22"},{"lineNumber":845,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":846,"author":{"gitId":"ntwbruce"},"content":"**MSS**","lastModifiedDate":"2021-09-20"},{"lineNumber":847,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":848,"author":{"gitId":"XXJJXJ"},"content":"1.  Event Organiser requests a list of Event Participants of a specific event.","lastModifiedDate":"2021-10-02"},{"lineNumber":849,"author":{"gitId":"XXJJXJ"},"content":"2.  Managera displays the list of Participants of the Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":850,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":851,"author":{"gitId":"ntwbruce"},"content":"    Use case ends.","lastModifiedDate":"2021-09-20"},{"lineNumber":852,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":853,"author":{"gitId":"ntwbruce"},"content":"**Extensions**","lastModifiedDate":"2021-09-22"},{"lineNumber":854,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":855,"author":{"gitId":"XXJJXJ"},"content":"* 1a. Managera detects missing details to show Event participants.","lastModifiedDate":"2021-10-02"},{"lineNumber":856,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":857,"author":{"gitId":"ntwbruce"},"content":"    * 1a1. Managera shows an error message citing missing parameter.","lastModifiedDate":"2021-09-22"},{"lineNumber":858,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":859,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":860,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":861,"author":{"gitId":"XXJJXJ"},"content":"* 1b. Managera could not find the Event.","lastModifiedDate":"2021-10-02"},{"lineNumber":862,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":863,"author":{"gitId":"ntwbruce"},"content":"    * 1b1. Managera shows an error message stating that the given name does not correspond to an existing Event.","lastModifiedDate":"2021-09-22"},{"lineNumber":864,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":865,"author":{"gitId":"ntwbruce"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-22"},{"lineNumber":866,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":867,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":868,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":869,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":870,"author":{"gitId":"XXJJXJ"},"content":"2.  Should be able to hold up to 1000 participants without a noticeable sluggishness in performance for typical usage. ","lastModifiedDate":"2021-10-18"},{"lineNumber":871,"author":{"gitId":"lowkangn"},"content":"3.  Should be able to hold up to 100 events without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-09-22"},{"lineNumber":872,"author":{"gitId":"lowkangn"},"content":"4.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-09-22"},{"lineNumber":873,"author":{"gitId":"lowkangn"},"content":"5.  Should work without having to use an installer or compiler.","lastModifiedDate":"2021-09-22"},{"lineNumber":874,"author":{"gitId":"lowkangn"},"content":"6.  Should work without requiring an internet connection.","lastModifiedDate":"2021-09-22"},{"lineNumber":875,"author":{"gitId":"lowkangn"},"content":"7.  Saved data should be kept in a single file to allow for easy transfer to a different device.","lastModifiedDate":"2021-09-22"},{"lineNumber":876,"author":{"gitId":"lowkangn"},"content":"8.  The system should respond within two seconds.","lastModifiedDate":"2021-09-22"},{"lineNumber":877,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":878,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":879,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":880,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":881,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":882,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":883,"author":{"gitId":"lowkangn"},"content":"* **Command Line Interface (CLI)**: A CLI is a text-based interface that processes commands to a computer program in the form of lines of text.","lastModifiedDate":"2021-09-22"},{"lineNumber":884,"author":{"gitId":"lowkangn"},"content":"* **Graphical User Interface (GUI)**: A GUI is a form of user interface through which users interact with electronic devices via visual indicator representations.","lastModifiedDate":"2021-09-22"},{"lineNumber":885,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":886,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":887,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":888,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":889,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":890,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":891,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":892,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":893,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":894,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":895,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":896,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":897,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":898,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":899,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":900,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":901,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":902,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":903,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":904,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":905,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":906,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":907,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":908,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":909,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":910,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":911,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":912,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":913,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":914,"author":{"gitId":"XXJJXJ"},"content":"### Deleting a participant","lastModifiedDate":"2021-10-18"},{"lineNumber":915,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":916,"author":{"gitId":"XXJJXJ"},"content":"1. Deleting a participant while all participants are being shown","lastModifiedDate":"2021-10-18"},{"lineNumber":917,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":918,"author":{"gitId":"XXJJXJ"},"content":"   1. Prerequisites: List all participants using the `list` command. Multiple participants in the list.","lastModifiedDate":"2021-10-18"},{"lineNumber":919,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":920,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":921,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":922,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":923,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":924,"author":{"gitId":"XXJJXJ"},"content":"      Expected: No participant is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-18"},{"lineNumber":925,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":926,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":927,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":928,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":929,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":930,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":931,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":932,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":933,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":934,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":935,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":936,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":937,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"XXJJXJ":124,"kanjitp":79,"davelowqx":66,"ntwbruce":251,"-":345,"lowkangn":72}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"Managera is a **desktop app that provides event organisers with a convenient method of keeping track of upcoming ","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"[events](#glossary) and the details of their [participants](#glossary)**. It does not handle communication between the event organiser and the ","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"participants.","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"Managera is OS-independent meaning it will work on any operating system. (Windows, MacOS, Linux)","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"## Table of Contents","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"- [**What this user guide is for**](#what-this-user-guide-is-for)","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"- [**How to use this user guide**](#how-to-use-this-user-guide)","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"- [**Quick start**](#quick-start)","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"- [**Features**](#features)","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"    * [Participant](#participant)","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"        * [Adding a Participant: `add`](#adding-a-participant-add)","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"        * [Deleting a Participant: `delete`](#deleting-a-participant--delete)","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"        * [Editing a Participant: `edit`](#editing-a-participant--edit)","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"        * [Locating Participants by name: `find`](#locating-participants-by-name-find)","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"        * [Listing all Participants: `list`](#listing-all-participants--list)","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"        * [Viewing a Participant\u0027s details: `view`](#viewing-a-participants-details-view)","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"        * [Adding Next-of-Kin to a Participant: `addNok`](#adding-next-of-kin-to-a-participant-addnok)","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"        * [Removing Next-of-Kin from a Participant: `deleteNok`](#removing-next-of-kin-from-a-participant-deletenok)","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"    * [Event](#event)","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"        * [Adding an event: `addEvent`](#adding-an-event-addevent)","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"        * [Deleting an event: `deleteEvent`](#deleting-an-event--deleteevent)","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        * [Editing an event: `editEvent`](#editing-an-event--editevent)","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"        * [Marking an Event as done: `done`](#marking-an-event-as-done-done)","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"        * [Locating Events by name: `findEvent`](#locating-events-by-name-findevent)","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"        * [Filtering Events by time: `filterEvents`](#filtering-events-by-time-filterevents)","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"        * [Sorting Events by time: `sortEvents`](#sorting-events-by-time-sortevents)","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"        * [Listing all Events: `listEvents`](#listing-all-events-listevents)","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"        * [Showing an Event\u0027s details: `showDetails`](#showing-an-events-details-showdetails)","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"        * [Adding a Participant to an Event: `enroll`](#adding-a-participant-to-an-event-enroll)","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"lowkangn"},"content":"        * [Remove a Participant from an Event: `expel`](#removing-a-participant-from-an-event-expel)","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"        * [Showing an Event\u0027s Participants: `showParticipants`](#showing-an-events-participants-showparticipants)","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"    * [Miscellaneous](#miscellaneous)","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"        * [Viewing help: `help`](#viewing-help--help)","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"        * [Clearing all Data: `clear`](#clearing-all-data--clear)","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"        * [Exiting the program: `exit`](#exiting-the-program--exit)","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"lowkangn"},"content":"- [**Saving the data**](#saving-the-data)","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"lowkangn"},"content":"- [**Editing the data file**](#editing-the-data-file)","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"lowkangn"},"content":"- [**Glossary**](#glossary)","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"- [**FAQ**](#faq)","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"- [**Command summary**](#command-summary)","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"lowkangn"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"lowkangn"},"content":"## What this user guide is for","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"lowkangn"},"content":"This user guide aims to give a brief overview of what Managera is and what features it has.","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"lowkangn"},"content":"It is intended mainly for first-time users or beginners to Managera, but experienced users may still use it for ","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"lowkangn"},"content":"reference.","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"lowkangn"},"content":"It contains instructions for [how to set up Managera](#quick-start), [how to use certain features](#features) ","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"lowkangn"},"content":"and answers to some [commonly-asked questions](#faq). You may also use this user guide as a","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"lowkangn"},"content":"[quick reference](#command-summary) to any [commands](#glossary) once you are more experienced with Managera.","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"lowkangn"},"content":"If this is your first time using Managera, or your first time using this user guide, you are strongly advised to","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"lowkangn"},"content":"look through the [next section](#how-to-use-this-user-guide).","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"lowkangn"},"content":"## How to use this user guide","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"lowkangn"},"content":"If this is the first time you are using Managera, you are strongly advised to visit the [Quick Start](#quick-start) ","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"lowkangn"},"content":"section to learn how to set up Managera","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"lowkangn"},"content":"and get started.","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"lowkangn"},"content":"If there are any doubts on how certain commands are used, you can look for the description of the command in the ","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"lowkangn"},"content":"[Features](#features) section or have a brief overview in the [Command Summary](#command-summary) section.","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"lowkangn"},"content":"If there are any terms used in this user guide you are unclear of or do not understand, their definitions may be found ","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"lowkangn"},"content":"in the [Glossary](#glossary).","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"For any other questions about Managera, you may refer to the [FAQ](#faq) section.","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"You can quickly jump to any of the sections by using the [Table of Contents](#table-of-contents) above.","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"lowkangn"},"content":"1. [Ensure](https://twallet.telangana.gov.in/TABiometric/data/Java%20Check.pdf) you have Java `11` or ","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"lowkangn"},"content":"   above installed in your Computer.","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"lowkangn"},"content":"2. If your computer does not have Java `11`, obtain the installation package from ","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"lowkangn"},"content":"   [here](https://www.oracle.com/java/technologies/downloads/#java11) and follow the instructions ","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"lowkangn"},"content":"   [here](https://docs.oracle.com/en/java/javase/11/install/overview-jdk-installation.html).","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"lowkangn"},"content":"3. Download the latest release `managera.jar` from [here](https://github.com/AY2122S1-CS2103T-T10-2/tp/releases).","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"lowkangn"},"content":"4. Copy `managera.jar` to a new folder which will act as the _home folder_ for Managera.","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"lowkangn"},"content":"5. Double-click `managera.jar` to start the app. The GUI similar to the one below should appear in a few seconds. Note ","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"lowkangn"},"content":"   how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"lowkangn"},"content":"   ![Ui](images/Ui_labelled.png)","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"lowkangn"},"content":"6. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will ","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"lowkangn"},"content":"   open the help window. \u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"ntwbruce"},"content":"   * **`list`** : Lists all Participants.","lastModifiedDate":"2021-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"lowkangn"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a Participant ","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"lowkangn"},"content":"     named `John Doe` to Managera.","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"ntwbruce"},"content":"   * **`delete`**`3` : Deletes the 3rd Participant shown in the current list.","lastModifiedDate":"2021-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"ntwbruce"},"content":"   * **`clear`** : Deletes all Participants and Events.","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     ","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"ntwbruce"},"content":"   * **`addEvent n/My First Event d/2021-01-01`** : Adds a new Event to the list called \u0027My First Event\u0027.","lastModifiedDate":"2021-09-24"},{"lineNumber":114,"author":{"gitId":"ntwbruce"},"content":"     ","lastModifiedDate":"2021-09-24"},{"lineNumber":115,"author":{"gitId":"ntwbruce"},"content":"   * **`sortEvents`** : Sorts the current list of Events in chronological order.","lastModifiedDate":"2021-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"XXJJXJ"},"content":"7. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"lowkangn"},"content":"* Words in `UPPER_CASE` are the [parameters](#glossary) to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"lowkangn"},"content":"  e.g. in `addEvent n/NAME d/DATE`, `n/NAME` and `d/DATE` are parameters which can be used as ","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"lowkangn"},"content":"  `addEvent n/CS2103T Final d/2021-11-23`.","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"lowkangn"},"content":"  e.g. `addEvent n/NAME d/DATE [t/TIME]` can be used as `addEvent n/CS2103T Final d/2021-11-23 t/1700` or as ","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"lowkangn"},"content":"  `addEvent n/CS2103T Final d/2021-11-23`.","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"lowkangn"},"content":"* Parameters with [prefixes](#glossary) can be in any order.\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"ntwbruce"},"content":"  e.g. if the command specifies `n/NAME d/DATE`, `d/DATE n/NAME` is also acceptable.","lastModifiedDate":"2021-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"XXJJXJ"},"content":"* Parameters without prefixes needs to be followed strictly.\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"lowkangn"},"content":"  e.g. `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [d/BIRTHDATE]` INDEX must strictly be the first parameter ","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"lowkangn"},"content":"  while the others with prefix can be in any order after that.","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"lowkangn"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of ","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"lowkangn"},"content":"  the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"ntwbruce"},"content":"  e.g. if you specify `t/1700 t/1800`, only `t/1800` will be taken.","lastModifiedDate":"2021-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":148,"author":{"gitId":"lowkangn"},"content":"* If a command does not take in any parameters, (namely `help`, `list`, `clear`, `sortEvents` and ","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"lowkangn"},"content":"  `exit`) then any extra words added after the command will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"ntwbruce"},"content":"  e.g. if the command specifies `sortEvents 123`, it will be interpreted as `sortEvents`.","lastModifiedDate":"2021-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"lowkangn"},"content":"## Participant","lastModifiedDate":"2021-10-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"lowkangn"},"content":"The following commands deal with the handling of Participants in Managera. They can help you: ","lastModifiedDate":"2021-10-27"},{"lineNumber":157,"author":{"gitId":"lowkangn"},"content":"* [Add a Participant](#adding-a-participant-add), ","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"lowkangn"},"content":"* [Delete a Participant](#deleting-a-participant--delete), ","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"lowkangn"},"content":"* [Edit a Participants](#editing-a-participant--edit), ","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"lowkangn"},"content":"* [Locate Participants by name](#locating-participants-by-name-find), ","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"lowkangn"},"content":"* [List all Participants](#listing-all-participants--list), ","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"lowkangn"},"content":"* [View a Participant\u0027s details](#viewing-a-participants-details-view), ","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"lowkangn"},"content":"* [Add Next-of-Kin to a Participant](#adding-next-of-kin-to-a-participant-addnok) and ","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"lowkangn"},"content":"* [Remove Next-of-Kin from a Participant](#removing-next-of-kin-from-a-participant-deletenok).","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"ntwbruce"},"content":"### Adding a Participant: `add`","lastModifiedDate":"2021-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"ntwbruce"},"content":"Adds a Participant to Managera.","lastModifiedDate":"2021-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"lowkangn"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [d/BIRTHDATE]`","lastModifiedDate":"2021-10-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"lowkangn"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` - Adds a Participant whose name is ","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"lowkangn"},"content":"  John Doe with given phone number, email and address to the Participant list.","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"lowkangn"},"content":"* `add n/Betsy Crowe e/betsycrowe@example.com a/Newgate Prison p/1234567` - Adds a Participant whose name is Betsy ","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"lowkangn"},"content":"  Crowe with given phone number, email and address to the Participant list.","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"lowkangn"},"content":"\u003cbr\u003e![result for \u0027add n/Betsy Crowe ...\u0027](images/addBetsyResult.png)","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"lowkangn"},"content":"### Deleting a Participant : `delete`","lastModifiedDate":"2021-10-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"lowkangn"},"content":"Deletes the specified Participant from Managera.","lastModifiedDate":"2021-10-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"lowkangn"},"content":"Format: `delete INDEX`","lastModifiedDate":"2021-10-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":186,"author":{"gitId":"lowkangn"},"content":"* Deletes the Participant at the specified `INDEX`.","lastModifiedDate":"2021-10-23"},{"lineNumber":187,"author":{"gitId":"lowkangn"},"content":"* The index refers to the index number of the Participant as shown in the displayed Participant list.","lastModifiedDate":"2021-10-27"},{"lineNumber":188,"author":{"gitId":"lowkangn"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":190,"author":{"gitId":"lowkangn"},"content":"Examples:","lastModifiedDate":"2021-10-23"},{"lineNumber":191,"author":{"gitId":"lowkangn"},"content":"* `delete 3` - Deletes the 3rd Participant in the displayed Participant list.","lastModifiedDate":"2021-10-27"},{"lineNumber":192,"author":{"gitId":"lowkangn"},"content":"* `list` followed by `delete 2` - Deletes the 2nd Participant in the full Participant list. ","lastModifiedDate":"2021-10-27"},{"lineNumber":193,"author":{"gitId":"lowkangn"},"content":"  Find out more about `list` [here](#listing-all-participants--list).","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"lowkangn"},"content":"* `find Betsy` followed by `delete 1` - Deletes the 1st Participant in the results of the `find` command.","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"lowkangn"},"content":"  Find out more about `find` [here](#locating-participants-by-name-find).","lastModifiedDate":"2021-10-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"ntwbruce"},"content":"### Editing a Participant : `edit`","lastModifiedDate":"2021-09-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"ntwbruce"},"content":"Edits an existing Participant in Managera.","lastModifiedDate":"2021-09-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"lowkangn"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [d/BIRTHDATE]`","lastModifiedDate":"2021-10-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"lowkangn"},"content":"* Edits the Participant at the specified `INDEX`. The index refers to the index number of the Participant as shown ","lastModifiedDate":"2021-10-27"},{"lineNumber":204,"author":{"gitId":"lowkangn"},"content":"  in the displayed Participant list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"lowkangn"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` - Edits the phone number and email address of the 1st Participant ","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"lowkangn"},"content":"   in the displayed Participant list to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"lowkangn"},"content":"*  `edit 2 n/Betsy Crower` - Edits the name of the 2nd Participant in the displayed Participant list to be ","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"lowkangn"},"content":"   `Betsy Crower`.","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"ntwbruce"},"content":"### Locating Participants by name: `find`","lastModifiedDate":"2021-09-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"lowkangn"},"content":"Finds Participant(s) whose names contain any of the given keywords. It is possible for there to be no matches.","lastModifiedDate":"2021-10-27"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"lowkangn"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2021-10-03"},{"lineNumber":221,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"lowkangn"},"content":"* Participants whose names match at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-10-27"},{"lineNumber":225,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"lowkangn"},"content":"* `find John` - Finds any Participants with the name \"John\"; possible matches: `John` and `John Doe`.","lastModifiedDate":"2021-10-27"},{"lineNumber":229,"author":{"gitId":"lowkangn"},"content":"* `find alex david` - Finds any Participants with \"Alex\" or \"David\" in their names; ","lastModifiedDate":"2021-10-27"},{"lineNumber":230,"author":{"gitId":"lowkangn"},"content":"  possible matches: `Alex Yeoh` and `David Li`\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":231,"author":{"gitId":"lowkangn"},"content":"  ","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"lowkangn"},"content":"\u003cbr\u003e![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"lowkangn"},"content":"### Listing all Participants : `list`","lastModifiedDate":"2021-10-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"lowkangn"},"content":"Shows a list of all Participants in Managera.","lastModifiedDate":"2021-10-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"lowkangn"},"content":"Format: `list`","lastModifiedDate":"2021-10-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"lowkangn"},"content":"### Viewing a Participant\u0027s details: `view`","lastModifiedDate":"2021-10-27"},{"lineNumber":241,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":242,"author":{"gitId":"lowkangn"},"content":"Displays the details of a Participant in Managera.","lastModifiedDate":"2021-10-23"},{"lineNumber":243,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":244,"author":{"gitId":"lowkangn"},"content":"Format: `view INDEX`","lastModifiedDate":"2021-10-23"},{"lineNumber":245,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":246,"author":{"gitId":"lowkangn"},"content":"* Views the details of the Participant at the specified `INDEX`.","lastModifiedDate":"2021-10-23"},{"lineNumber":247,"author":{"gitId":"lowkangn"},"content":"* The index refers to the index number of the Participant as shown in the displayed Participant list.","lastModifiedDate":"2021-10-27"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"lowkangn"},"content":"Example Usage:","lastModifiedDate":"2021-10-23"},{"lineNumber":251,"author":{"gitId":"lowkangn"},"content":"* `view 1` - Displays the details of the 1st Participant in the displayed Participant list.","lastModifiedDate":"2021-10-27"},{"lineNumber":252,"author":{"gitId":"lowkangn"},"content":"* `list` followed by `view 2` - Displays the details of the 2nd Participant in the full Participant list.","lastModifiedDate":"2021-10-27"},{"lineNumber":253,"author":{"gitId":"lowkangn"},"content":"  Find out more about `list` [here](#listing-all-participants--list).","lastModifiedDate":"2021-10-27"},{"lineNumber":254,"author":{"gitId":"lowkangn"},"content":"* `find Betsy` followed by `delete 1` - Displays the details of the 1st Participant in the results of the ","lastModifiedDate":"2021-10-27"},{"lineNumber":255,"author":{"gitId":"lowkangn"},"content":"  `find` command. Find out more about `find` [here](#locating-participants-by-name-find).","lastModifiedDate":"2021-10-27"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"lowkangn"},"content":"\u003cbr\u003e![result for \u0027view 1\u0027](images/viewFirstResult.png)","lastModifiedDate":"2021-10-24"},{"lineNumber":258,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":259,"author":{"gitId":"lowkangn"},"content":"### Adding Next-of-Kin to a Participant: `addNok`","lastModifiedDate":"2021-10-27"},{"lineNumber":260,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":261,"author":{"gitId":"lowkangn"},"content":"Adds a Next-of-Kin to a Participant.","lastModifiedDate":"2021-10-27"},{"lineNumber":262,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":263,"author":{"gitId":"kanjitp"},"content":"Format: `addNok INDEX n/NAME p/PHONE tag/TAG`","lastModifiedDate":"2021-10-24"},{"lineNumber":264,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":265,"author":{"gitId":"lowkangn"},"content":"* Adds a Next-of-Kin to the Participant at the specified `INDEX`.","lastModifiedDate":"2021-10-27"},{"lineNumber":266,"author":{"gitId":"lowkangn"},"content":"* The index refers to the index number of the Participant as shown in the displayed Participant list.","lastModifiedDate":"2021-10-27"},{"lineNumber":267,"author":{"gitId":"kanjitp"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-24"},{"lineNumber":268,"author":{"gitId":"lowkangn"},"content":"* A Next-of-Kin with the same name cannot be assigned to the same Participant.","lastModifiedDate":"2021-10-27"},{"lineNumber":269,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":270,"author":{"gitId":"kanjitp"},"content":"Example Usage:","lastModifiedDate":"2021-10-24"},{"lineNumber":271,"author":{"gitId":"lowkangn"},"content":"* `addNok 1 n/Jannette Yeo p/88734323 tag/Spouse` - Adds a Next-of-Kin whose name is Janette Yeo with contact number","lastModifiedDate":"2021-10-27"},{"lineNumber":272,"author":{"gitId":"lowkangn"},"content":"  88734323 and tag Spouse to the first Participant.","lastModifiedDate":"2021-10-27"},{"lineNumber":273,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":274,"author":{"gitId":"lowkangn"},"content":"### Removing Next-of-Kin from a Participant: `deleteNok`","lastModifiedDate":"2021-10-27"},{"lineNumber":275,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":276,"author":{"gitId":"lowkangn"},"content":"Removes a Next-of-Kin from a Participant.","lastModifiedDate":"2021-10-27"},{"lineNumber":277,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":278,"author":{"gitId":"XXJJXJ"},"content":"Format: `deleteNok INDEX_1 INDEX_2`","lastModifiedDate":"2021-10-25"},{"lineNumber":279,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":280,"author":{"gitId":"lowkangn"},"content":"* Removes the Next-of-Kin at specified `INDEX_1` from the Participant at specified index `INDEX_2`.","lastModifiedDate":"2021-10-27"},{"lineNumber":281,"author":{"gitId":"lowkangn"},"content":"* `INDEX_1` refers to the index number of the Next-of_Kin as shown in the Participant\u0027s list of Next-of-Kins.","lastModifiedDate":"2021-10-27"},{"lineNumber":282,"author":{"gitId":"lowkangn"},"content":"* `INDEX_2` refers to the index number of the Participant as shown in the displayed Participant list.","lastModifiedDate":"2021-10-27"},{"lineNumber":283,"author":{"gitId":"kanjitp"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-24"},{"lineNumber":284,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":285,"author":{"gitId":"kanjitp"},"content":"Example Usage:","lastModifiedDate":"2021-10-24"},{"lineNumber":286,"author":{"gitId":"lowkangn"},"content":"* `deleteNok 2 1` - Removes the 2nd Next-of-Kin from the 1st Participant.","lastModifiedDate":"2021-10-27"},{"lineNumber":287,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":288,"author":{"gitId":"lowkangn"},"content":"\u003cbr\u003e![result for \u0027deleteNok 1 2\u0027](images/deleteNokSecondFirstResult.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":289,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":290,"author":{"gitId":"lowkangn"},"content":"## Event","lastModifiedDate":"2021-10-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"lowkangn"},"content":"The following commands deal with the handling of Events in Managera. They can help you:","lastModifiedDate":"2021-10-27"},{"lineNumber":293,"author":{"gitId":"lowkangn"},"content":"* [Add an Event](#adding-an-event-addevent), ","lastModifiedDate":"2021-10-27"},{"lineNumber":294,"author":{"gitId":"lowkangn"},"content":"* [Delete an Event](#deleting-an-event--deleteevent), ","lastModifiedDate":"2021-10-27"},{"lineNumber":295,"author":{"gitId":"lowkangn"},"content":"* [Edit an Event](#editing-an-event--editevent),","lastModifiedDate":"2021-10-27"},{"lineNumber":296,"author":{"gitId":"lowkangn"},"content":"* [Mark an Event as done](#marking-an-event-as-done-done), ","lastModifiedDate":"2021-10-27"},{"lineNumber":297,"author":{"gitId":"lowkangn"},"content":"* [Locate Events by name](#locating-events-by-name-findevent), ","lastModifiedDate":"2021-10-27"},{"lineNumber":298,"author":{"gitId":"lowkangn"},"content":"* [Filter Events by time](#filtering-events-by-time-filterevents), ","lastModifiedDate":"2021-10-27"},{"lineNumber":299,"author":{"gitId":"lowkangn"},"content":"* [Sort Events by time](#sorting-events-by-time-sortevents), ","lastModifiedDate":"2021-10-27"},{"lineNumber":300,"author":{"gitId":"lowkangn"},"content":"* [List all Events](#listing-all-participants--list), ","lastModifiedDate":"2021-10-27"},{"lineNumber":301,"author":{"gitId":"lowkangn"},"content":"* [Show an Event\u0027s details](#showing-an-events-details-showdetails),","lastModifiedDate":"2021-10-27"},{"lineNumber":302,"author":{"gitId":"lowkangn"},"content":"* [Add a Participant to an Event](#adding-a-participant-to-an-event-enroll), ","lastModifiedDate":"2021-10-27"},{"lineNumber":303,"author":{"gitId":"lowkangn"},"content":"* [Remove a Participant from an Event](#removing-a-participant-from-an-event-expel) and ","lastModifiedDate":"2021-10-27"},{"lineNumber":304,"author":{"gitId":"lowkangn"},"content":"* [Show Participants of an Event](#showing-an-events-participants-showparticipants).","lastModifiedDate":"2021-10-27"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"davelowqx"},"content":"### Adding an event: `addEvent`","lastModifiedDate":"2021-09-18"},{"lineNumber":307,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":308,"author":{"gitId":"lowkangn"},"content":"Adds an Event to Managera.","lastModifiedDate":"2021-10-27"},{"lineNumber":309,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":310,"author":{"gitId":"davelowqx"},"content":"Format: `addEvent n/NAME d/DATE [t/TIME]` ","lastModifiedDate":"2021-09-18"},{"lineNumber":311,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":312,"author":{"gitId":"lowkangn"},"content":"Example Usage:","lastModifiedDate":"2021-09-22"},{"lineNumber":313,"author":{"gitId":"lowkangn"},"content":"* `addEvent n/CS2100 Finals d/2021-11-20 t/0900` - Adds an Event \"CS2100 Finals\" on 20th November 2021 9:00am ","lastModifiedDate":"2021-10-27"},{"lineNumber":314,"author":{"gitId":"lowkangn"},"content":"  to the Event list.","lastModifiedDate":"2021-10-27"},{"lineNumber":315,"author":{"gitId":"lowkangn"},"content":"* `addEvent n/240Km Marathon d/2022-08-20` - Adds a full-day Event \"240 km Marathon\" on 20th August 2022 ","lastModifiedDate":"2021-10-27"},{"lineNumber":316,"author":{"gitId":"lowkangn"},"content":"  to the Event list.","lastModifiedDate":"2021-10-27"},{"lineNumber":317,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":318,"author":{"gitId":"lowkangn"},"content":"### Deleting an event : `deleteEvent`","lastModifiedDate":"2021-10-23"},{"lineNumber":319,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":320,"author":{"gitId":"lowkangn"},"content":"Deletes the specified Event from Managera.","lastModifiedDate":"2021-10-03"},{"lineNumber":321,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":322,"author":{"gitId":"lowkangn"},"content":"Format: `deleteEvent INDEX`","lastModifiedDate":"2021-10-23"},{"lineNumber":323,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":324,"author":{"gitId":"lowkangn"},"content":"* Deletes the Event at the specified `INDEX`.","lastModifiedDate":"2021-10-03"},{"lineNumber":325,"author":{"gitId":"lowkangn"},"content":"* The index refers to the index number of the Event as shown in the displayed Event list.","lastModifiedDate":"2021-10-27"},{"lineNumber":326,"author":{"gitId":"lowkangn"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-03"},{"lineNumber":327,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":328,"author":{"gitId":"lowkangn"},"content":"Example Usage:","lastModifiedDate":"2021-09-22"},{"lineNumber":329,"author":{"gitId":"lowkangn"},"content":"* `delete 5` - Deletes the 5th Event in the displayed Event list.","lastModifiedDate":"2021-10-27"},{"lineNumber":330,"author":{"gitId":"lowkangn"},"content":"* `listEvents` followed by `deleteEvent 2` - Deletes the 2nd Event in the full Event list.","lastModifiedDate":"2021-10-27"},{"lineNumber":331,"author":{"gitId":"lowkangn"},"content":"  Find out more about `listEvents` [here](#listing-all-events-listevents).","lastModifiedDate":"2021-10-27"},{"lineNumber":332,"author":{"gitId":"lowkangn"},"content":"* `filterEvents d/2021-09-18` followed by `deleteEvent 1` - Deletes the 1st Event in the results of the `filterEvents` ","lastModifiedDate":"2021-10-27"},{"lineNumber":333,"author":{"gitId":"lowkangn"},"content":"  command. Find out more about `filterEvents` [here](#filtering-events-by-time-filterevents).","lastModifiedDate":"2021-10-27"},{"lineNumber":334,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":335,"author":{"gitId":"XXJJXJ"},"content":"### Editing an event : `editEvent`","lastModifiedDate":"2021-10-19"},{"lineNumber":336,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":337,"author":{"gitId":"lowkangn"},"content":"Edits an existing Event in Managera.","lastModifiedDate":"2021-10-24"},{"lineNumber":338,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":339,"author":{"gitId":"XXJJXJ"},"content":"Format: `editEvent INDEX [n/EVENTNAME] [d/EVENTDATE] [t/EVENTTIME]`","lastModifiedDate":"2021-10-19"},{"lineNumber":340,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":341,"author":{"gitId":"XXJJXJ"},"content":"* Edits the Event at the specified `INDEX`.","lastModifiedDate":"2021-10-19"},{"lineNumber":342,"author":{"gitId":"lowkangn"},"content":"* The index refers to the index number of the Event as shown in the displayed Event list.","lastModifiedDate":"2021-10-27"},{"lineNumber":343,"author":{"gitId":"XXJJXJ"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-19"},{"lineNumber":344,"author":{"gitId":"XXJJXJ"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-10-19"},{"lineNumber":345,"author":{"gitId":"XXJJXJ"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-10-19"},{"lineNumber":346,"author":{"gitId":"lowkangn"},"content":"* You can remove the time of Event by typing `t/` and leaving a blank after it. This is only possible","lastModifiedDate":"2021-10-27"},{"lineNumber":347,"author":{"gitId":"lowkangn"},"content":"due to the fact that time is optional for an Event.","lastModifiedDate":"2021-10-27"},{"lineNumber":348,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":349,"author":{"gitId":"XXJJXJ"},"content":"Example Usage:","lastModifiedDate":"2021-10-19"},{"lineNumber":350,"author":{"gitId":"lowkangn"},"content":"* `editEvent 1 n/241Km Marathon` - Edits the event name of the 1st Event in the displayed Event list to be ","lastModifiedDate":"2021-10-27"},{"lineNumber":351,"author":{"gitId":"lowkangn"},"content":"  `241Km Marathon`.","lastModifiedDate":"2021-10-27"},{"lineNumber":352,"author":{"gitId":"lowkangn"},"content":"* `editEvent 2 n/2103T milestone d/2021-10-21 t/2359` - Edits the event name, event date and event time of the ","lastModifiedDate":"2021-10-24"},{"lineNumber":353,"author":{"gitId":"lowkangn"},"content":"  2nd Event in the displayed Event list to be `2103T milestone`, `2021-10-21` and `2359` respectively.","lastModifiedDate":"2021-10-27"},{"lineNumber":354,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":355,"author":{"gitId":"lowkangn"},"content":"\u003cbr\u003e![result for \u0027editEvent 2 n/2103T milestone ...\u0027](images/editEventSecondResult.png)","lastModifiedDate":"2021-10-24"},{"lineNumber":356,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":357,"author":{"gitId":"lowkangn"},"content":"### Marking an Event as done: `done`","lastModifiedDate":"2021-10-27"},{"lineNumber":358,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":359,"author":{"gitId":"lowkangn"},"content":"Marks the specified Event in Managera as done.","lastModifiedDate":"2021-10-03"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":361,"author":{"gitId":"lowkangn"},"content":"Format: `done INDEX`","lastModifiedDate":"2021-10-23"},{"lineNumber":362,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":363,"author":{"gitId":"lowkangn"},"content":"* Marks the Event at the specified `INDEX` as done.","lastModifiedDate":"2021-10-03"},{"lineNumber":364,"author":{"gitId":"lowkangn"},"content":"* The index refers to the index number of the Event shown in the displayed Event list.","lastModifiedDate":"2021-10-27"},{"lineNumber":365,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-03"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":367,"author":{"gitId":"lowkangn"},"content":"Example Usage:","lastModifiedDate":"2021-09-18"},{"lineNumber":368,"author":{"gitId":"lowkangn"},"content":"* `done 3` - Marks the 3rd Event in the displayed Event list as done.","lastModifiedDate":"2021-10-27"},{"lineNumber":369,"author":{"gitId":"lowkangn"},"content":"* `listEvents` followed by `done 2` - Marks the 2nd Event in the full Event list as done.","lastModifiedDate":"2021-10-27"},{"lineNumber":370,"author":{"gitId":"lowkangn"},"content":"  Find out more about `listEvents` [here](#listing-all-events-listevents).","lastModifiedDate":"2021-10-27"},{"lineNumber":371,"author":{"gitId":"lowkangn"},"content":"* `filterEvents d/2021-09-18` followed by `done 1` - Marks the 1st Event in the results of the `filterEvents` command ","lastModifiedDate":"2021-10-27"},{"lineNumber":372,"author":{"gitId":"lowkangn"},"content":"  as done. Find out more about `filterEvents` [here](#filtering-events-by-time-filterevents).","lastModifiedDate":"2021-10-27"},{"lineNumber":373,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":374,"author":{"gitId":"lowkangn"},"content":"### Locating Events by name: `findEvent`","lastModifiedDate":"2021-10-23"},{"lineNumber":375,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":376,"author":{"gitId":"lowkangn"},"content":"Finds Events whose names contain any of the given keywords. It is possible for there to be no matches.","lastModifiedDate":"2021-10-27"},{"lineNumber":377,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":378,"author":{"gitId":"lowkangn"},"content":"Format: `findEvent KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-10-23"},{"lineNumber":379,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":380,"author":{"gitId":"lowkangn"},"content":"* The search is case-insensitive. e.g. `marathon` will match `Marathon`","lastModifiedDate":"2021-10-23"},{"lineNumber":381,"author":{"gitId":"lowkangn"},"content":"* The order of the keywords does not matter. e.g. `Marathon Commencement` will match `Commencement Marathon`","lastModifiedDate":"2021-10-23"},{"lineNumber":382,"author":{"gitId":"lowkangn"},"content":"* Only the name is searched.","lastModifiedDate":"2021-10-23"},{"lineNumber":383,"author":{"gitId":"lowkangn"},"content":"* Only full words will be matched e.g. `Marath` will not match `Marathon`","lastModifiedDate":"2021-10-23"},{"lineNumber":384,"author":{"gitId":"lowkangn"},"content":"* Events matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-10-23"},{"lineNumber":385,"author":{"gitId":"lowkangn"},"content":"  e.g. `Marathon Commencement` will return `240Km Marathon`, `Marathon Commencement`","lastModifiedDate":"2021-10-23"},{"lineNumber":386,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-23"},{"lineNumber":388,"author":{"gitId":"lowkangn"},"content":"* `findEvent party` - Finds any Events with the name \"party\"; possible matches: `beach party` and `Christmas party`","lastModifiedDate":"2021-10-27"},{"lineNumber":389,"author":{"gitId":"lowkangn"},"content":"* `findEvent marathon meeting` - Finds any Events with \"marathon\" or \"meeting\" in their names;","lastModifiedDate":"2021-10-27"},{"lineNumber":390,"author":{"gitId":"lowkangn"},"content":"  possible matches:  `240Km Marathon`, `project meeting`\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":391,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":392,"author":{"gitId":"lowkangn"},"content":"### Filtering Events by time: `filterEvents`","lastModifiedDate":"2021-10-27"},{"lineNumber":393,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":394,"author":{"gitId":"lowkangn"},"content":"Filters the Event list for Events occurring on a specific date and optionally, time.","lastModifiedDate":"2021-10-27"},{"lineNumber":395,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":396,"author":{"gitId":"XXJJXJ"},"content":"Format: `filterEvents d/DATE [t/TIME]`","lastModifiedDate":"2021-09-25"},{"lineNumber":397,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":398,"author":{"gitId":"XXJJXJ"},"content":"Example Usage:","lastModifiedDate":"2021-09-20"},{"lineNumber":399,"author":{"gitId":"lowkangn"},"content":"* `filterEvents d/2021-09-18` - Filters the displayed Event list to show only Events occurring on 18th September 2021.","lastModifiedDate":"2021-10-27"},{"lineNumber":400,"author":{"gitId":"lowkangn"},"content":"* `filterEvents d/2021-09-18 t/0900` - Filters the displayed Event list to show only Events occurring on ","lastModifiedDate":"2021-10-27"},{"lineNumber":401,"author":{"gitId":"lowkangn"},"content":"  18th September 2021 9am.","lastModifiedDate":"2021-10-24"},{"lineNumber":402,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":403,"author":{"gitId":"lowkangn"},"content":"### Sorting Events by time: `sortEvents`","lastModifiedDate":"2021-10-27"},{"lineNumber":404,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":405,"author":{"gitId":"lowkangn"},"content":"Sorts the displayed Event list in chronological order with earlier Events at the top and later Events ","lastModifiedDate":"2021-10-27"},{"lineNumber":406,"author":{"gitId":"lowkangn"},"content":"at the bottom.","lastModifiedDate":"2021-10-24"},{"lineNumber":407,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":408,"author":{"gitId":"lowkangn"},"content":"\u003cbr\u003e![result for \u0027sortEvents\u0027](images/sortEventsResult.png)","lastModifiedDate":"2021-10-24"},{"lineNumber":409,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":410,"author":{"gitId":"lowkangn"},"content":"Format: `sortEvents`","lastModifiedDate":"2021-10-23"},{"lineNumber":411,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":412,"author":{"gitId":"lowkangn"},"content":"### Listing all Events: `listEvents`","lastModifiedDate":"2021-10-27"},{"lineNumber":413,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":414,"author":{"gitId":"XXJJXJ"},"content":"Show a list of all events in Managera.","lastModifiedDate":"2021-09-22"},{"lineNumber":415,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":416,"author":{"gitId":"XXJJXJ"},"content":"Format: `listEvents`","lastModifiedDate":"2021-10-21"},{"lineNumber":417,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":418,"author":{"gitId":"lowkangn"},"content":"### Showing an Event\u0027s details: `showDetails`","lastModifiedDate":"2021-10-27"},{"lineNumber":419,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":420,"author":{"gitId":"lowkangn"},"content":"Displays the details of the Event at the specified index.","lastModifiedDate":"2021-10-23"},{"lineNumber":421,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":422,"author":{"gitId":"lowkangn"},"content":"Format: `showDetails INDEX`","lastModifiedDate":"2021-10-23"},{"lineNumber":423,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":424,"author":{"gitId":"lowkangn"},"content":"* Views the details of the Event at the specified `INDEX`.","lastModifiedDate":"2021-10-23"},{"lineNumber":425,"author":{"gitId":"lowkangn"},"content":"* The index refers to the index number of the Event as shown in the displayed Event list.","lastModifiedDate":"2021-10-27"},{"lineNumber":426,"author":{"gitId":"lowkangn"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-23"},{"lineNumber":427,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":428,"author":{"gitId":"lowkangn"},"content":"Example Usage:","lastModifiedDate":"2021-10-23"},{"lineNumber":429,"author":{"gitId":"lowkangn"},"content":"* `showDetails 1` - Displays the details of the 1st Event in the displayed Event list.","lastModifiedDate":"2021-10-27"},{"lineNumber":430,"author":{"gitId":"lowkangn"},"content":"* `listEvents` followed by `showDetails 2` - Displays the details of the 2nd Event in the full Event list.","lastModifiedDate":"2021-10-27"},{"lineNumber":431,"author":{"gitId":"lowkangn"},"content":"  Find out more about `listEvents` [here](#listing-all-events-listevents).","lastModifiedDate":"2021-10-27"},{"lineNumber":432,"author":{"gitId":"lowkangn"},"content":"* `filterEvents d/2021-09-18` followed by `showDetails 1` - Displays the details of the 1st Event in the results of ","lastModifiedDate":"2021-10-27"},{"lineNumber":433,"author":{"gitId":"lowkangn"},"content":"  the `filterEvents` command. Find out more about `filterEvents` [here](#filtering-events-by-time-filterevents).","lastModifiedDate":"2021-10-27"},{"lineNumber":434,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":435,"author":{"gitId":"lowkangn"},"content":"### Adding a Participant to an Event: `enroll`","lastModifiedDate":"2021-10-27"},{"lineNumber":436,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":437,"author":{"gitId":"lowkangn"},"content":"Adds a Participant with the first specified index to the Event with the second specified index.","lastModifiedDate":"2021-10-23"},{"lineNumber":438,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":439,"author":{"gitId":"lowkangn"},"content":"Format:","lastModifiedDate":"2021-10-23"},{"lineNumber":440,"author":{"gitId":"lowkangn"},"content":"`enroll INDEX_1 INDEX_2`","lastModifiedDate":"2021-10-23"},{"lineNumber":441,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":442,"author":{"gitId":"lowkangn"},"content":"* Adds the Participant at specified `INDEX_1` to the Event at specified index `INDEX_2`.","lastModifiedDate":"2021-10-23"},{"lineNumber":443,"author":{"gitId":"lowkangn"},"content":"* `INDEX_1` refers to the index number of the Participant as shown in the displayed Participant list.","lastModifiedDate":"2021-10-27"},{"lineNumber":444,"author":{"gitId":"lowkangn"},"content":"* `INDEX_2` refers to the index number of the Event as shown in the displayed Event list.","lastModifiedDate":"2021-10-27"},{"lineNumber":445,"author":{"gitId":"lowkangn"},"content":"* The indexes **must be positive integers** 1, 2, 3, …​","lastModifiedDate":"2021-10-23"},{"lineNumber":446,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":447,"author":{"gitId":"kanjitp"},"content":"Example Usage:","lastModifiedDate":"2021-09-22"},{"lineNumber":448,"author":{"gitId":"lowkangn"},"content":"* `enroll 1 2` - Adds the 1st Participant in the displayed Participant list to the 2nd Event in the displayed Event","lastModifiedDate":"2021-10-24"},{"lineNumber":449,"author":{"gitId":"lowkangn"},"content":"  list.","lastModifiedDate":"2021-10-24"},{"lineNumber":450,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":451,"author":{"gitId":"lowkangn"},"content":"\u003cbr\u003e![result for \u0027enroll 1 2\u0027](images/enrollFirstSecondResult.png)","lastModifiedDate":"2021-10-24"},{"lineNumber":452,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":453,"author":{"gitId":"lowkangn"},"content":"### Removing a Participant from an Event: `expel`","lastModifiedDate":"2021-10-27"},{"lineNumber":454,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":455,"author":{"gitId":"lowkangn"},"content":"Removes the Participant with the first specified index from the Event with the second specified index.","lastModifiedDate":"2021-10-23"},{"lineNumber":456,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":457,"author":{"gitId":"lowkangn"},"content":"Format: `expel INDEX_1 INDEX_2`","lastModifiedDate":"2021-10-23"},{"lineNumber":458,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":459,"author":{"gitId":"lowkangn"},"content":"* Removes the Participant at specified `INDEX_1` from the Event at specified index `INDEX_2`.","lastModifiedDate":"2021-10-23"},{"lineNumber":460,"author":{"gitId":"lowkangn"},"content":"* `INDEX_1` refers to the index number of the Participant as shown in the displayed Participant list.","lastModifiedDate":"2021-10-27"},{"lineNumber":461,"author":{"gitId":"lowkangn"},"content":"* `INDEX_2` refers to the index number of the Event as shown in the displayed Event list.","lastModifiedDate":"2021-10-27"},{"lineNumber":462,"author":{"gitId":"lowkangn"},"content":"* The indexes **must be positive integers** 1, 2, 3, …​","lastModifiedDate":"2021-10-23"},{"lineNumber":463,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":464,"author":{"gitId":"lowkangn"},"content":"Example Usage:","lastModifiedDate":"2021-10-18"},{"lineNumber":465,"author":{"gitId":"lowkangn"},"content":"* `expel 3 1` - Removes the 3rd Participant in the displayed Participant list from the 1st Event in the displayed Event","lastModifiedDate":"2021-10-24"},{"lineNumber":466,"author":{"gitId":"lowkangn"},"content":"  list.","lastModifiedDate":"2021-10-24"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":468,"author":{"gitId":"lowkangn"},"content":"### Showing an Event\u0027s Participants: `showParticipants`","lastModifiedDate":"2021-10-27"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":470,"author":{"gitId":"lowkangn"},"content":"Displays the list of participants of the Event at the specified index.","lastModifiedDate":"2021-10-27"},{"lineNumber":471,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":472,"author":{"gitId":"lowkangn"},"content":"Format: `showParticipants INDEX`","lastModifiedDate":"2021-10-27"},{"lineNumber":473,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":474,"author":{"gitId":"lowkangn"},"content":"* Views the Participants of the Event at the specified `INDEX`.","lastModifiedDate":"2021-10-27"},{"lineNumber":475,"author":{"gitId":"lowkangn"},"content":"* The index refers to the index number of the Event as shown in the displayed Event list.","lastModifiedDate":"2021-10-27"},{"lineNumber":476,"author":{"gitId":"lowkangn"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-27"},{"lineNumber":477,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":478,"author":{"gitId":"lowkangn"},"content":"Example Usage:","lastModifiedDate":"2021-10-27"},{"lineNumber":479,"author":{"gitId":"lowkangn"},"content":"* `showParticipants 4` - Displays the list of participants of the 4th Event in the displayed Event list.","lastModifiedDate":"2021-10-27"},{"lineNumber":480,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":481,"author":{"gitId":"lowkangn"},"content":"\u003cbr\u003e![result for \u0027showParticipants 4\u0027](images/showParticipantsFourthResult.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":482,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":483,"author":{"gitId":"lowkangn"},"content":"## Miscellaneous","lastModifiedDate":"2021-10-23"},{"lineNumber":484,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":485,"author":{"gitId":"lowkangn"},"content":"The following features are additional and deal with other actions that you may want to do in Managera.","lastModifiedDate":"2021-10-23"},{"lineNumber":486,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":487,"author":{"gitId":"lowkangn"},"content":"### Viewing help : `help`","lastModifiedDate":"2021-10-23"},{"lineNumber":488,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":489,"author":{"gitId":"lowkangn"},"content":"Opens a popup window with a link to this user guide. You can always return here whenever you need help ","lastModifiedDate":"2021-10-27"},{"lineNumber":490,"author":{"gitId":"lowkangn"},"content":"or just want to learn more about Managera.","lastModifiedDate":"2021-10-27"},{"lineNumber":491,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":492,"author":{"gitId":"lowkangn"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2021-10-23"},{"lineNumber":493,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":494,"author":{"gitId":"lowkangn"},"content":"Format: `help`","lastModifiedDate":"2021-10-23"},{"lineNumber":495,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":496,"author":{"gitId":"lowkangn"},"content":"### Clearing all Data : `clear`","lastModifiedDate":"2021-10-23"},{"lineNumber":497,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":498,"author":{"gitId":"lowkangn"},"content":"Clears all Events and Participants from Managera.","lastModifiedDate":"2021-10-23"},{"lineNumber":499,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":500,"author":{"gitId":"lowkangn"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-10-27"},{"lineNumber":501,"author":{"gitId":"lowkangn"},"content":"This command is irreversible! Please make sure you want to permanently delete all your data before","lastModifiedDate":"2021-10-27"},{"lineNumber":502,"author":{"gitId":"lowkangn"},"content":"entering this command.","lastModifiedDate":"2021-10-27"},{"lineNumber":503,"author":{"gitId":"lowkangn"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":505,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2021-10-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":507,"author":{"gitId":"lowkangn"},"content":"\u003cbr\u003e![result for \u0027clear\u0027](images/clearResult.png)","lastModifiedDate":"2021-10-24"},{"lineNumber":508,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":509,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2021-09-24"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":511,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2021-09-24"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":513,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2021-09-24"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":515,"author":{"gitId":"lowkangn"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":517,"author":{"gitId":"lowkangn"},"content":"## Saving the data","lastModifiedDate":"2021-10-27"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":519,"author":{"gitId":"lowkangn"},"content":"Managera saves data in the hard disk automatically after any command that changes the data. ","lastModifiedDate":"2021-10-24"},{"lineNumber":520,"author":{"gitId":"lowkangn"},"content":"There is no need to save manually.","lastModifiedDate":"2021-10-24"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":522,"author":{"gitId":"lowkangn"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":523,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":524,"author":{"gitId":"lowkangn"},"content":"## Editing the data file","lastModifiedDate":"2021-10-27"},{"lineNumber":525,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":526,"author":{"gitId":"lowkangn"},"content":"Managera\u0027s data is saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to ","lastModifiedDate":"2021-10-24"},{"lineNumber":527,"author":{"gitId":"lowkangn"},"content":"update data directly by editing that data file.","lastModifiedDate":"2021-10-24"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":529,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-09-24"},{"lineNumber":530,"author":{"gitId":"lowkangn"},"content":"If your changes to the data file makes its format invalid, Managera will discard all data and start with an empty data ","lastModifiedDate":"2021-10-24"},{"lineNumber":531,"author":{"gitId":"lowkangn"},"content":"file at the next run.","lastModifiedDate":"2021-10-24"},{"lineNumber":532,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":534,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"lowkangn"},"content":"## Glossary","lastModifiedDate":"2021-10-24"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":538,"author":{"gitId":"lowkangn"},"content":"**Participant**: A person that is participating in or attending some given event.\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":539,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":540,"author":{"gitId":"lowkangn"},"content":"**Event**: An event that will be conducted in real life e.g., a competition, meeting, social activity etc.\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":541,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":542,"author":{"gitId":"lowkangn"},"content":"**Command**: A command is a specific instruction that you give to Managera to perform a certain action, like adding a ","lastModifiedDate":"2021-10-24"},{"lineNumber":543,"author":{"gitId":"lowkangn"},"content":"new Participant to the list. Commands will be the primary way that you will interact with Managera.\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":544,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":545,"author":{"gitId":"lowkangn"},"content":"**Parameter**: Parameters are pieces of data that must be passed to certain commands to tell Managera which actions to ","lastModifiedDate":"2021-10-24"},{"lineNumber":546,"author":{"gitId":"lowkangn"},"content":"perform. For example, the `done` command requires a single integer as a parameter so that it knows which event to mark ","lastModifiedDate":"2021-10-24"},{"lineNumber":547,"author":{"gitId":"lowkangn"},"content":"as done.\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":548,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":549,"author":{"gitId":"lowkangn"},"content":"**Prefix**: Prefixes are unique identifiers in front of parameters so that Managera understands what kind of values ","lastModifiedDate":"2021-10-24"},{"lineNumber":550,"author":{"gitId":"lowkangn"},"content":"they are. For example, the prefix \"n/\" lets Managera know that a name is expected to follow behind it, while the ","lastModifiedDate":"2021-10-24"},{"lineNumber":551,"author":{"gitId":"lowkangn"},"content":"prefix \"d/\" lets Managera know that a date is expected.\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":553,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-24"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":555,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"lowkangn"},"content":"**Q**: How do I transfer my data to another computer?\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":558,"author":{"gitId":"lowkangn"},"content":"**A**: Install and run Managera in the other computer. Then overwrite the empty save file it creates with the save file ","lastModifiedDate":"2021-10-24"},{"lineNumber":559,"author":{"gitId":"lowkangn"},"content":"from your previous computer. The save file of Managera is found in `[JAR file location]/data/addressbook.json`.","lastModifiedDate":"2021-10-24"},{"lineNumber":560,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":561,"author":{"gitId":"lowkangn"},"content":"**Q**: Does Managera have a mobile version?\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":562,"author":{"gitId":"lowkangn"},"content":"**A**: Managera currently does not operate on any other platform other than desktop.","lastModifiedDate":"2021-10-24"},{"lineNumber":563,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":564,"author":{"gitId":"lowkangn"},"content":"**Q**: I accidentally exited Managera by closing the window rather than using the given `exit` command, what do I ","lastModifiedDate":"2021-10-24"},{"lineNumber":565,"author":{"gitId":"lowkangn"},"content":"do?\u003cbr\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":566,"author":{"gitId":"lowkangn"},"content":"**A**: Since Managera automatically saves your data to the hard disk after each change, it should not reverse any ","lastModifiedDate":"2021-10-24"},{"lineNumber":567,"author":{"gitId":"lowkangn"},"content":"changes you have made in the session. Your progress is most likely preserved after restarting Managera.","lastModifiedDate":"2021-10-27"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"lowkangn"},"content":"**Add Participant** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS` \u003cbr\u003ee.g., `add n/James Ho p/22224444e/jamesho@example.com a/123, Clementi Rd, 1234665`","lastModifiedDate":"2021-10-23"},{"lineNumber":576,"author":{"gitId":"lowkangn"},"content":"**Delete Participant** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2021-10-23"},{"lineNumber":577,"author":{"gitId":"lowkangn"},"content":"**Edit Participant** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS]`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2021-10-23"},{"lineNumber":578,"author":{"gitId":"lowkangn"},"content":"**Find Participant** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2021-10-23"},{"lineNumber":579,"author":{"gitId":"lowkangn"},"content":"**List Participants** | `list`","lastModifiedDate":"2021-10-23"},{"lineNumber":580,"author":{"gitId":"lowkangn"},"content":"**View Participant details** | `view INDEX` \u003cbr\u003e e.g., `view 1`","lastModifiedDate":"2021-10-23"},{"lineNumber":581,"author":{"gitId":"davelowqx"},"content":"**Add Event** | `addEvent n/NAME d/DATE [t/TIME]` \u003cbr\u003e e.g., `addEvent n/CS2100 Finals d/2021-11-20 t/0900`","lastModifiedDate":"2021-09-18"},{"lineNumber":582,"author":{"gitId":"lowkangn"},"content":"**Delete Event** | `deleteEvent INDEX`  \u003cbr\u003e e.g., `deleteEvent 1`","lastModifiedDate":"2021-10-23"},{"lineNumber":583,"author":{"gitId":"XXJJXJ"},"content":"**Edit Event** | `editEvent INDEX [n/EVENT_NAME] [d/EVENT_DATE] [t/EVENT_TIME]` \u003cbr\u003e e.g., `editEvent n/241Km Marathon`","lastModifiedDate":"2021-10-19"},{"lineNumber":584,"author":{"gitId":"lowkangn"},"content":"**Mark an Event as done** | `done INDEX` \u003cbr\u003e e.g., `done 1`","lastModifiedDate":"2021-10-23"},{"lineNumber":585,"author":{"gitId":"lowkangn"},"content":"**Find Event** | `findEvent KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `findEvent Marathon Commencement`","lastModifiedDate":"2021-10-23"},{"lineNumber":586,"author":{"gitId":"XXJJXJ"},"content":"**Filter Events** | `filterEvents d/DATE [t/TIME]` \u003cbr\u003e e.g., `filterEvents d/2021-09-18`","lastModifiedDate":"2021-09-25"},{"lineNumber":587,"author":{"gitId":"lowkangn"},"content":"**Sort Events** | `sortEvents`","lastModifiedDate":"2021-10-23"},{"lineNumber":588,"author":{"gitId":"XXJJXJ"},"content":"**List Events** | `listEvents`","lastModifiedDate":"2021-09-30"},{"lineNumber":589,"author":{"gitId":"lowkangn"},"content":"**Show Event Details** | `showDetails INDEX` \u003cbr\u003e e.g., `showDetails 1`","lastModifiedDate":"2021-10-23"},{"lineNumber":590,"author":{"gitId":"lowkangn"},"content":"**Show Event Participants** | `showParticipants INDEX` \u003cbr\u003e e.g., `showParticipants 3`","lastModifiedDate":"2021-10-23"},{"lineNumber":591,"author":{"gitId":"lowkangn"},"content":"**Add Participant to Event** | `enroll INDEX_1 INDEX_2` \u003cbr\u003e e.g. `enroll 1 2`","lastModifiedDate":"2021-10-23"},{"lineNumber":592,"author":{"gitId":"lowkangn"},"content":"**Remove Participant from Event** | `expel INDEX_1 INDEX_2` \u003cbr\u003e e.g. `expel 3 1`","lastModifiedDate":"2021-10-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2021-10-23"},{"lineNumber":594,"author":{"gitId":"lowkangn"},"content":"**Clear** | `clear`","lastModifiedDate":"2021-10-23"},{"lineNumber":595,"author":{"gitId":"lowkangn"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"XXJJXJ":34,"kanjitp":18,"davelowqx":11,"ntwbruce":30,"-":123,"lowkangn":379}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"XXJJXJ"},"content":"    content: \"Managera\";","lastModifiedDate":"2021-09-18"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"XXJJXJ":1,"-":294}},{"path":"docs/diagrams/AddParticipantToEventByIndexActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"start","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":":User executes command;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"if () then ([valid zero-based indexes])","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"    :Fetch Participant in Participant List;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"    if () then ([Participant Found])","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"        :Fetch event in Event List;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"        if () then ([Event Found])","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"                if () then ([Participant already exists in event])","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"                        : Display error message;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"                    else ([else])","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"                        : Add participant to Event;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"                    endif","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"            else ([else])","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"                : Display error message;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"            endif","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"    else ([else])","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"        : Display error message;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"    endif","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"else ([else])","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"    : Display error message;","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"endif","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"stop","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kanjitp":28}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteParticipant(p)","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"XXJJXJ":1,"-":37}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"AddressBook *-right-\u003e \"1\" UniqueParticipantList","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"AddressBook *-down-\u003e \"1\" UniqueEventList","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"UniqueTagList -[hidden]down- UniqueParticipantList","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"UniqueTagList -[hidden]down- UniqueParticipantList","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"UniqueParticipantList -down-\u003e Participant","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"UniqueEventList -down-\u003e \"*\" Event","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"Participant -up-\u003e \"*\" Tag","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"Participant *--\u003e Name","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"Participant *--\u003e Phone","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"Participant *--\u003e Email","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"Participant *--\u003e Address","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"Participant *--\u003e ParticipantId","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"Participant *--\u003e BirthDate","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"Participant *--\u003e \"*\" Note","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"Participant *--\u003e \"*\" NextOfKin","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"Participant *--\u003e \"*\" Event","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"Event *--\u003e \"1\" EventName","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"Event *--\u003e \"1\" EventDate","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"Event --\u003e \"0..1\" EventTime","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"XXJJXJ":19,"-":12}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"DeleteCommand -\u003e Model : deleteParticipant(1)","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"XXJJXJ":1,"-":68}},{"path":"docs/diagrams/FilterEventSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"@startuml","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"!include style.puml","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"participant \":FilterEventCommandParser\" as FilterEventCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"participant \"f:FilterEventCommand\" as FilterEventCommand LOGIC_COLOR","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"end box","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"participant \"e:EventDateTimePredicate\" as EventDateTimePredicate MODEL_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"end box","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"[-\u003e LogicManager : execute(\"filterEvents d/2021-8-20\"))","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"activate LogicManager","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"filterEvents d/2021-8-20\")","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"activate AddressBookParser","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"create FilterEventCommandParser","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"AddressBookParser -\u003e FilterEventCommandParser","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"activate FilterEventCommandParser","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"FilterEventCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"deactivate FilterEventCommandParser","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"AddressBookParser -\u003e FilterEventCommandParser : parse(\" d/2021-8-20\")","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"activate FilterEventCommandParser","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"create FilterEventCommand","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"FilterEventCommandParser -\u003e FilterEventCommand","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"activate FilterEventCommand","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"create EventDateTimePredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"FilterEventCommand --\u003e EventDateTimePredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"activate EventDateTimePredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"EventDateTimePredicate --\u003e FilterEventCommand : e","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"lowkangn"},"content":"deactivate EventDateTimePredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"FilterEventCommand --\u003e FilterEventCommandParser : f","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"deactivate FilterEventCommand","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"FilterEventCommandParser --\u003e AddressBookParser : f","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"deactivate FilterEventCommandParser","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"FilterEventCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"destroy FilterEventCommandParser","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"AddressBookParser --\u003e LogicManager : f","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"LogicManager -\u003e FilterEventCommand : execute()","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"activate FilterEventCommand","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"lowkangn"},"content":"FilterEventCommand -\u003e Model : updateFilteredEventList(e)","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"activate Model","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"Model --\u003e FilterEventCommand","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"deactivate Model","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"create CommandResult","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"FilterEventCommand -\u003e CommandResult","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"activate CommandResult","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"CommandResult --\u003e FilterEventCommand","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"FilterEventCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"deactivate","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"FilterEventCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"destroy FilterEventCommand","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"lowkangn"},"content":"destroy EventDateTimePredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"@enduml","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"XXJJXJ":72,"ntwbruce":1,"lowkangn":9}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface ReadOnlyAddressBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"Class UniqueEventList","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"Class UniqueParticipantList","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"Class Participant","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"Class BirthDate","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"Class ParticipantId","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"Class Note","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"Class NextOfKin","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"Class Event","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"Class EventName","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"Class EventDate","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"Class EventTime","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"AddressBook *--\u003e \"1\" UniqueParticipantList","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"AddressBook *--\u003e \"1\" UniqueEventList","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"UniqueEventList --\u003e \"~* all\" Event","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"Event *--\u003e EventName","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"Event *--\u003e EventDate","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"Event --\u003e \"0..1\" EventTime","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"UniqueParticipantList --\u003e \"~* all\" Participant","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"Participant *--\u003e Name","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"Participant *--\u003e Phone","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"Participant *--\u003e Email","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"Participant *--\u003e Address","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"Participant *--\u003e ParticipantId","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"Participant *--\u003e BirthDate","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"Participant *--\u003e \"*\" Tag","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"Participant *--\u003e \"*\" Note","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"Participant *--\u003e \"*\" NextOfKin","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"Participant *-left-\u003e \"*\" Event","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"ModelManager --\u003e\"~* filtered\" Participant","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"ModelManager --\u003e\"~* filtered\" Event","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"XXJJXJ":30,"-":43}},{"path":"docs/diagrams/RemoveParticipantByIndexActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"start","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":":User executes command;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"if () then ([valid zero-based indexes])","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"    :Fetch Participant in Participant List;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"    if () then ([Participant Found])","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"        :Fetch event in Event List;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"        if () then ([Event Found])","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"                if () then ([Participant exists in event])","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"                        : Remove participant from event;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"                    else ([else])","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"                        : Display error message;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"                    endif","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"            else ([else])","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"                : Display error message;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"            endif","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"    else ([else])","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"        : Display error message;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"    endif","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"else ([else])","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"    : Display error message;","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"endif","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"stop","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kanjitp":28}},{"path":"docs/diagrams/ShowEventDetailsActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"start","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":":User executes command;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"if () then ([valid argument])","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"    :Search for Event in Event list;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"    if () then ([Event found])","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"        : Display Event details;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"    else ([else])","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"        : Display error message;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"    endif","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"else ([else])","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"    : Display error message;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"endif","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"stop","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"ntwbruce":19}},{"path":"docs/diagrams/ShowEventDetailsSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"!include Style.puml","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"participant \":ShowEventDetailsCommandParser\" as ShowEventDetailsCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"participant \"s:ShowEventDetailsCommand\" as ShowEventDetailsCommand LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"participant \"e:EventNamePredicate\" as EventNamePredicate MODEL_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"[-\u003e LogicManager : execute(\"showDetails Dinner\")","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"activate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"showDetails Dinner\")","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"activate AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"create ShowEventDetailsCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"AddressBookParser -\u003e ShowEventDetailsCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"activate ShowEventDetailsCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"ShowEventDetailsCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"deactivate ShowEventDetailsCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"AddressBookParser -\u003e ShowEventDetailsCommandParser : parse(\" Dinner\")","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"activate ShowEventDetailsCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"create ShowEventDetailsCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"ShowEventDetailsCommandParser -\u003e ShowEventDetailsCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"activate ShowEventDetailsCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"create EventNamePredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"ShowEventDetailsCommand -\u003e EventNamePredicate","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"activate EventNamePredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"EventNamePredicate --\u003e ShowEventDetailsCommand : e","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"deactivate EventNamePredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"ShowEventDetailsCommand --\u003e ShowEventDetailsCommandParser : s","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"deactivate ShowEventDetailsCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"ShowEventDetailsCommandParser --\u003e AddressBookParser : s","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"deactivate ShowEventDetailsCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"ShowEventDetailsCommandParser -[hidden]\u003e AddressBookParser : s","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"destroy ShowEventDetailsCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"AddressBookParser --\u003e LogicManager : s","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"LogicManager -\u003e ShowEventDetailsCommand : execute()","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"activate ShowEventDetailsCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"ShowEventDetailsCommand -\u003e Model : getFilteredEventList()","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"activate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"Model --\u003e ShowEventDetailsCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"ntwbruce"},"content":"deactivate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"ntwbruce"},"content":"create CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"ntwbruce"},"content":"ShowEventDetailsCommand -\u003e CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"ntwbruce"},"content":"activate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"ntwbruce"},"content":"CommandResult --\u003e ShowEventDetailsCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"ntwbruce"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"ntwbruce"},"content":"ShowEventDetailsCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"ntwbruce"},"content":"deactivate ShowEventDetailsCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"ntwbruce"},"content":"ShowEventDetailsCommand -[hidden]\u003e LogicManager : result","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"ntwbruce"},"content":"destroy ShowEventDetailsCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"ntwbruce"},"content":"destroy EventNamePredicate","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"ntwbruce"},"content":"[\u003c- LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"ntwbruce"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"ntwbruce"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"ntwbruce":82}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Interface AddressBookStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"Class JsonAdaptedEvent","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"Class JsonAdaptedParticipant","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"Class JsonAdaptedNextOfKin","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"Class JsonAdaptedNote","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedParticipant","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedEvent","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"JsonAdaptedParticipant --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"JsonAdaptedParticipant --\u003e \"*\" JsonAdaptedNote","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"JsonAdaptedParticipant --\u003e \"*\" JsonAdaptedNextOfKin","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"XXJJXJ":9,"-":40}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"Class ParticipantListPanel","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"Class ParticipantCard","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"Class EventListPanel","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"Class EventCard","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"MainWindow *-down-\u003e \"1\" ParticipantListPanel","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"MainWindow *-down-\u003e \"1\" EventListPanel","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"EventListPanel -down-\u003e \"*\" EventCard","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"ParticipantListPanel -down-\u003e \"*\" ParticipantCard","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"ParticipantListPanel --|\u003e UiPart","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"ParticipantCard --|\u003e UiPart","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"EventCard .\u003e Model","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"ParticipantCard .\u003e Model","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"EventListPanel -[hidden]left- ParticipantListPanel","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"ParticipantListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"XXJJXJ":14,"-":52}},{"path":"docs/diagrams/ViewCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"start","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":":User executes command;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"if () then ([valid argument])","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"    :Search for participant in participant list;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"    if () then ([participant found])","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"        : Display participant\u0027s details;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"    else ([else])","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"        : Display error message;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"    endif","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"else ([else])","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"    : Display error message;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"endif","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"stop","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"lowkangn":19}},{"path":"docs/diagrams/ViewSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"!include style.puml","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"participant \":ViewCommandParser\" as ViewCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"participant \"v:ViewCommand\" as ViewCommand LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"participant \"p:ParticipantIdMatchesGivenIdPredicate\" as ParticipantIdMatchesGivenIdPredicate MODEL_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"[-\u003e LogicManager : execute(\"view aleyeo1\"))","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"activate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"view aleyeo1\")","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"activate AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"create ViewCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"AddressBookParser -\u003e ViewCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"activate ViewCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"ViewCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"deactivate ViewCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"AddressBookParser -\u003e ViewCommandParser : parse(\" aleyeo1\")","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"activate ViewCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"create ViewCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"ViewCommandParser -\u003e ViewCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"activate ViewCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"create ParticipantIdMatchesGivenIdPredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"ViewCommand --\u003e ParticipantIdMatchesGivenIdPredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"activate ParticipantIdMatchesGivenIdPredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"ParticipantIdMatchesGivenIdPredicate --\u003e ViewCommand : p","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"lowkangn"},"content":"deactivate ParticipantIdMatchesGivenIdPredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"lowkangn"},"content":"ViewCommand --\u003e ViewCommandParser : v","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"lowkangn"},"content":"deactivate ViewCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"lowkangn"},"content":"ViewCommandParser --\u003e AddressBookParser : v","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"lowkangn"},"content":"deactivate ViewCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"lowkangn"},"content":"ViewCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"lowkangn"},"content":"destroy ViewCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"lowkangn"},"content":"AddressBookParser --\u003e LogicManager : v","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"lowkangn"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"lowkangn"},"content":"LogicManager -\u003e ViewCommand : execute()","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"lowkangn"},"content":"activate ViewCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"lowkangn"},"content":"ViewCommand -\u003e Model : findParticipant(p)","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"lowkangn"},"content":"activate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"lowkangn"},"content":"Model --\u003e ViewCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"lowkangn"},"content":"deactivate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"lowkangn"},"content":"create CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"lowkangn"},"content":"ViewCommand -\u003e CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"lowkangn"},"content":"activate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"lowkangn"},"content":"CommandResult --\u003e ViewCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"lowkangn"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"lowkangn"},"content":"ViewCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"lowkangn"},"content":"deactivate","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"lowkangn"},"content":"ViewCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"lowkangn"},"content":"destroy ViewCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"lowkangn"},"content":"destroy ParticipantIdMatchesGivenIdPredicate","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"lowkangn"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"lowkangn"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"lowkangn"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"ntwbruce":1,"lowkangn":81}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"title: Managera","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-T10-2/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-T10-2/tp/actions)","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-T10-2/tp/branch/master/graph/badge.svg?token\u003dSVE776T4OX)](https://codecov.io/gh/AY2122S1-CS2103T-T10-2/tp)","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"**Managera is a desktop application for managing your event details and its corresponding participant credentials.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"* If you are interested in using Managera, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"* If you are interested about developing Managera, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"XXJJXJ":6,"-":14}},{"path":"docs/team/davelowqx.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"davelowqx"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"davelowqx"},"content":"layout: page","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"davelowqx"},"content":"title: Dave Low\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"davelowqx"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"davelowqx"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"davelowqx"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"davelowqx"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"davelowqx"},"content":"- **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"davelowqx"},"content":"  - What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"davelowqx"},"content":"  - Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"davelowqx"},"content":"  - Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"davelowqx"},"content":"  - Credits: _{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}_","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"davelowqx"},"content":"- **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"- **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dAY2122S1-CS2103T-T10-2\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003ddavelowqx\u0026tabRepo\u003dAY2122S1-CS2103T-T10-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"davelowqx"},"content":"- **Project management**:","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"davelowqx"},"content":"  - Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"davelowqx"},"content":"- **Enhancements to existing features**:","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"davelowqx"},"content":"  - Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"davelowqx"},"content":"  - Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"davelowqx"},"content":"- **Documentation**:","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"davelowqx"},"content":"  - User Guide:","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"davelowqx"},"content":"    - Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"davelowqx"},"content":"    - Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"davelowqx"},"content":"  - Developer Guide:","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"davelowqx"},"content":"    - Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"davelowqx"},"content":"- **Community**:","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"davelowqx"},"content":"  - PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"davelowqx"},"content":"  - Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"davelowqx"},"content":"  - Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"davelowqx"},"content":"  - Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"davelowqx"},"content":"- **Tools**:","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"davelowqx"},"content":"  - Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"davelowqx"},"content":"  - Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"davelowqx"},"content":"- _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"davelowqx":51,"ntwbruce":1}},{"path":"docs/team/kanjitp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"layout: page","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"title: Kan Jitpakdi\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"### Project: Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"Managera is a desktop app that provides event organisers with a convenient method of keeping track of upcoming events and the details of their participants and collaborators. It does not handle communication between the event organiser and the participants or collaborators.","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"* **New Feature**: `Add Participants to Event`","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"  * Added Participant class extending from Person class","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"  * Added BirthDate, Note classes to be used as fields in Participant","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"  * Highlights: (To be added)","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"  * Credits: (To be added if any)","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"* **New Feature**: `Remove Participants from Event`","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"  * Created Classes the same as `Add Participant to Event`","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"  * Highlights: (To be added)","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"  * Credits: (To be added if any)","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dAY2122S1-CS2103T-T10-2\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dkanjitp\u0026tabRepo\u003dAY2122S1-CS2103T-T10-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"* **Project management**:","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"  * (To be added)","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"  * (To be added)","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"  * User Guide:","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"    * Added documentation for the features `addParticipant` and `removeParticipant` [\\#72]()","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"    * Added FAQ for Managera inspiration and the origin of the name   ","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"* **Community**:","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"  ","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"* **Tools**:","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"  ","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"kanjitp":40,"ntwbruce":1}},{"path":"docs/team/lowkangn.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"layout: page","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"title: Low Kang Ngee\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"Managera is a desktop app that provides event organisers with a convenient method of keeping track of upcoming events and the details of their participants and collaborators. It does not handle communication between the event organiser and the participants or collaborators.","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"* **New Feature**: `Mark an Event as Done`","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"    * What it does: Allow users to mark a specific event as done, implying that it has concluded or passed.","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"    * Justification: After an event has passed, users may want to mark it as done so that they can be certain that the event was conducted and concluded.","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dAY2122S1-CS2103T-T10-2\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dlowkangn\u0026tabRepo\u003dAY2122S1-CS2103T-T10-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"* **Project management**:","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"    * (To be added)","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"    * (To be added)","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"* **Documentation**:","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"    * Developer Guide:","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"        * Added user stories","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"    * User Guide","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"        * Added documentation for the features `doneEvent` and `findParticipant`","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"* **Community**:","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"* **Tools**:","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"ntwbruce":1,"lowkangn":31}},{"path":"docs/team/ntwbruce.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"layout: page","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"title: Bruce Ng\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"### Project: Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"Managera - a desktop app that provides event organisers with a convenient method of keeping track of upcoming events and ","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"the details of their participants and collaborators. It does not handle communication between the event organiser and ","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"the participants or collaborators.","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"* **New Feature**: Added ability to display the details of an Event.","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"    * What it does: Allow users to obtain all the details of a desired Event.","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"    * Justification: Users will often need to check the specific date and time of individual Events, especially if they are keeping track of many Events and can\u0027t remember the details offhand.","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"* **New Feature**: Added ability to display the list of Participants of an Event.","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"    * What it does: Allow users to obtain a list of all the Participants of a desired Event.","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"    * Justification: Users will often need to obtain a list of Participants for individual Events (e.g. nominal roll for printing purposes, or to check the number of Participants), especially if they are keeping track of many Events and can\u0027t remember all the Participants for an Event offhand.","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dAY2122S1-CS2103T-T10-2\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dntwbruce\u0026tabRepo\u003dAY2122S1-CS2103T-T10-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"* **Project management**:","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"    * User Guide:","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"        * Added documentation for the features `showEventDetails` and `showEventParticipants`.","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"    * Developer Guide:","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"        * Added implementation details of the `showEventDetails` feature.","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"        * Added Use Cases section to Appendix: Requirements.","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"* **Community**:","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"* **Tools**:","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"ntwbruce":37}},{"path":"docs/team/xxjjxj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"layout: page","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"title: Ye Xinjian\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"---","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"### Project: Managera","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"Managera is a desktop event organizing application adapted from AddressBook - Level 3. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"* **New Feature**: Added ability to filter events by date and optionally time.","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"    * What it does: Allow users to filter for events occurring on a specific date and optionally time.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    * Justification: When there are many events on Managera, it is hard to eyeball for events that occurs on a specific day.","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"* **New Feature**: Added ability to sort events in chronological order.","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    * What it does: Allow users to rearrange all existing events in chronological order.","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    * Justification: After adding multiple events or ad hoc events, the timeline of events may become too messy for users to keep track of.","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"  ","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dAY2122S1-CS2103T-T10-2\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dXXJJXJ\u0026tabRepo\u003dAY2122S1-CS2103T-T10-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"  * User Guide:","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    * Added documentation for the features `sortEvents`.","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    * Added implementation details of the `sortEvents` feature.","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"* **Community**:","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"  * PRs reviewed (with non-trivial review comments: - To be filled in future -","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"XXJJXJ":28,"ntwbruce":1}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 1, true);","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":182,"lowkangn":1}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"    private static final String LOG_FILE \u003d \"managera.log\";","lastModifiedDate":"2021-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":111,"lowkangn":1}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_EVENTS_LISTED_OVERVIEW \u003d \"%1$d events listed!\";","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"    public static final String MESSAGE_EVENT_NOT_FOUND \u003d \"The Event you are looking for does not exist!\";","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"    public static final String MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX \u003d","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"            \"The participant index provided is invalid!\";","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"    public static final String MESSAGE_INVALID_EVENT_DISPLAYED_INDEX \u003d","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"            \"The event index provided is invalid!\";","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"    public static final String MESSAGE_PARTICIPANTS_LISTED_OVERVIEW \u003d \"%1$d participants listed\";","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"    public static final String MESSAGE_INVALID_ZERO_BASED_INDEX \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"            \"The index provided cannot be less than or equal to 0\";","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_PARTICIPANT_NOT_FOUND \u003d \"Participant of id: %1$s not found, consider \"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"            + \"relisting the participants using \u0027%2$s\u0027\";","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_EVENT_NOT_FOUND_IN_FILTERED_LIST \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"            \"Event %1$s Not Found, consider relisting events using \u0027%2$s\u0027\";","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"     * Forms the message that states that a Participant does not exist in an Event in Managera.","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"     * @param participantName The name of the Participant.","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"     * @param eventName       The name of the Event.","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"     * @return a message that states that the Participant does not exist in an Event.","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    public static String showParticipantDoesNotExist(String participantName, String eventName) {","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"        return String.format(\"%s is not taking part in %s!\", participantName, eventName);","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"     * Forms the message that indicates a participant is already enrolled in an Event in Managera.","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"     * @param participantName  The name of the Participant.","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"     * @param eventName        The name of the Event.","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"     * @return a message that states that the participant is already in the given event.","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"    public static String showParticipantAlreadyEnrolled(String participantName, String eventName) {","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"        return String.format(\"%s is already enrolled into %s!\", participantName, eventName);","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"     * Forms the message that states that a next of kin is already assigned to a participant.","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"     * @param nextOfKinName The name of the next of kin.","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"     * @return a message that states that the next of kin is already assigned to a participant.","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"    public static String showNextOfKinExists(String nextOfKinName, String participantName) {","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"        return nextOfKinName + \" is already next of kin of \" + participantName + \"!\";","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"XXJJXJ":13,"kanjitp":18,"ntwbruce":1,"-":12,"lowkangn":12}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"    /** Returns an unmodifiable view of the filtered list of participants */","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"    ObservableList\u003cParticipant\u003e getFilteredParticipantList();","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"    /** Returns an unmodifiable view of list of Events */","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"XXJJXJ":3,"kanjitp":3,"-":48}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"    public ObservableList\u003cParticipant\u003e getFilteredParticipantList() {","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"        return model.getFilteredParticipantList();","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-09-21"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"        return model.getFilteredEventList();","lastModifiedDate":"2021-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"XXJJXJ":4,"kanjitp":3,"-":80}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":" * Adds a Participant to Managera.","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a participant to Managera. \"","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"            + \"[\" + PREFIX_DATE + \"BIRTHDATE]\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \";","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Added participant:\\n%1$s\";","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_DUPLICATE_PARTICIPANT \u003d \"This participant already exists in Managera\";","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"    private final Participant toAdd;","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"     * Creates an AddCommand to add the specified {@code Participant}","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"    public AddCommand(Participant participant) {","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(participant);","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"        toAdd \u003d participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"        if (model.hasParticipant(toAdd)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"        model.addParticipant(toAdd);","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"            return true;","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"        } else if (!(other instanceof AddCommand)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"            return false;","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"        AddCommand otherAddCommand \u003d (AddCommand) other;","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"        return otherAddCommand.toAdd.equals(toAdd);","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"        return Objects.hash(toAdd);","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"    public String toString() {","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"        return \"AddCommand{\"","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"            + \"toAdd\u003d\" + toAdd","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"            + \u0027}\u0027;","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"XXJJXJ":5,"kanjitp":30,"-":47,"lowkangn":1}},{"path":"src/main/java/seedu/address/logic/commands/AddEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"davelowqx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"davelowqx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"davelowqx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"davelowqx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"davelowqx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"davelowqx"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"davelowqx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"davelowqx"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"davelowqx"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"davelowqx"},"content":" * Adds an Event to the Event list","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"davelowqx"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"davelowqx"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"davelowqx"},"content":"    public static final String COMMAND_WORD \u003d \"addEvent\";","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"davelowqx"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Creates an event with the specified name \"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"davelowqx"},"content":"            + \"on the specified date (in YYYY-MM-DD format) and optionally includes time (in 24hr format)\\n\"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"davelowqx"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"davelowqx"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"davelowqx"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"davelowqx"},"content":"            + \"[\" + PREFIX_TIME + \"TIME]\\n\"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"davelowqx"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/CS2106 Finals d/2021-09-20 t/0900\\n\";","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"    public static final String MESSAGE_ADD_EVENT_SUCCESS \u003d \"Added event:\\n%1$s\";","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists!\";","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"davelowqx"},"content":"    private final Event event;","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"davelowqx"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"davelowqx"},"content":"     * This is a constructor for AddEventCommand.","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"davelowqx"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"davelowqx"},"content":"     * @param event to be added.","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"davelowqx"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"davelowqx"},"content":"    public AddEventCommand(Event event) {","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"davelowqx"},"content":"        this.event \u003d event;","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"davelowqx"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"davelowqx"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"davelowqx"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"        if (model.hasEvent(event)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"davelowqx"},"content":"        model.addEvent(event);","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_EVENT_SUCCESS, event));","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"davelowqx"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"davelowqx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"davelowqx"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"davelowqx"},"content":"                || (other instanceof AddEventCommand","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"davelowqx"},"content":"                \u0026\u0026 event.equals(((AddEventCommand) other).event));","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"davelowqx"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"XXJJXJ":5,"davelowqx":51,"lowkangn":2}},{"path":"src/main/java/seedu/address/logic/commands/AddNextOfKinCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.NextOfKin;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"public class AddNextOfKinCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"    public static final String COMMAND_WORD \u003d \"addNok\";","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a next-of-kin to a participant with specified \"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"            + \"index.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"            + \"Index should be positive integer.\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"            + \"PARTICIPANT_INDEX \"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"            + PREFIX_TAG + \"TAG\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"            + PREFIX_NAME + \"Jennette Doe \"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"            + PREFIX_PHONE + \"98234532 \"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"            + PREFIX_TAG + \"Spouse \";","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Added \\n%1$s \\nto %2$s successfully\";","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"    private final Index participantIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"    private final NextOfKin nextOfKin;","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"     * This is a constructor for AddNextOfKinCommand.","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"     * @param participantIndex index of participant.","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"     * @param nextOfKin to be added.","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"    public AddNextOfKinCommand(Index participantIndex, NextOfKin nextOfKin) {","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(participantIndex);","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(nextOfKin);","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"        this.participantIndex \u003d participantIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"        this.nextOfKin \u003d nextOfKin;","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"        List\u003cParticipant\u003e lastShownParticipantList \u003d model.getFilteredParticipantList();","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"        Participant selectedParticipant;","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"            selectedParticipant \u003d lastShownParticipantList.get(participantIndex.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"        if (selectedParticipant.hasNextOfKin(nextOfKin)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"            throw new CommandException(Messages.showNextOfKinExists(nextOfKin.getFullName(),","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"                    selectedParticipant.getFullName()));","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"        selectedParticipant.addNextOfKin(nextOfKin);","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"                nextOfKin, selectedParticipant.getFullName()));","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"                || (other instanceof AddNextOfKinCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"                \u0026\u0026 participantIndex.equals(((AddNextOfKinCommand) other).participantIndex))","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"                \u0026\u0026 nextOfKin.equals(((AddNextOfKinCommand) other).nextOfKin);","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"XXJJXJ":1,"kanjitp":82,"lowkangn":1}},{"path":"src/main/java/seedu/address/logic/commands/AddParticipantToEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"public class AddParticipantToEventCommand extends Command {","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"    public static final String COMMAND_WORD \u003d \"enroll\";","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"            + \": Adds Participant with specified index to an event with another specified index.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"            + \"Indexes should be positive integers.\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"            + \"PARTICIPANT_INDEX \"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"            + \"EVENT_INDEX\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 2\";","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"    public static final String MESSAGE_ADD_PARTICIPANT_TO_EVENT_SUCCESS \u003d \"Added %1$s to %2$s successfully\";","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"    private final Index participantIndex;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"    private final Index eventIndex;","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"     * Creates an AddParticipantToEventCommandByIndex to add {@code Participant} at","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"     * specified {@code participantIndex} to {@code event} at specified {@code eventIndex}","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"    public AddParticipantToEventCommand(Index participantIndex, Index eventIndex) {","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"        this.participantIndex \u003d participantIndex;","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"        this.eventIndex \u003d eventIndex;","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"        List\u003cParticipant\u003e lastShownParticipantList \u003d model.getFilteredParticipantList();","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"        List\u003cEvent\u003e lastShownEventList \u003d model.getFilteredEventList();","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"        Participant participantToAdd;","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"            participantToAdd \u003d lastShownParticipantList.get(participantIndex.getZeroBased());","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"        Event selectedEvent;","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"            selectedEvent \u003d lastShownEventList.get(eventIndex.getZeroBased());","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"lowkangn"},"content":"        if (selectedEvent.hasParticipant(participantToAdd)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"            throw new CommandException(Messages.showParticipantAlreadyEnrolled(","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"                    participantToAdd.getFullName(), selectedEvent.getNameString()));","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"ntwbruce"},"content":"        // add participant","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"lowkangn"},"content":"        selectedEvent.addParticipant(participantToAdd);","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"        return new CommandResult(String.format(MESSAGE_ADD_PARTICIPANT_TO_EVENT_SUCCESS,","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"ntwbruce"},"content":"                participantToAdd.getFullName(), selectedEvent.getName()));","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"                || (other instanceof AddParticipantToEventCommand // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"ntwbruce"},"content":"                \u0026\u0026 participantIndex.equals(((AddParticipantToEventCommand) other).participantIndex))","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"ntwbruce"},"content":"                \u0026\u0026 eventIndex.equals(((AddParticipantToEventCommand) other).eventIndex); //state check","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"XXJJXJ":3,"kanjitp":46,"ntwbruce":29,"lowkangn":3}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Managera has been cleared!\";","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":22,"lowkangn":1}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":" * Deletes a participant identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"            + \": Deletes the participant identified by the index number used in the displayed participant list.\\n\"","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"            + \"Index should be positive integer.\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"            + \"Parameters: INDEX\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"    public static final String MESSAGE_DELETE_PARTICIPANT_SUCCESS \u003d \"Deleted participant:\\n%1$s\";","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"        List\u003cParticipant\u003e lastShownList \u003d model.getFilteredParticipantList();","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"        Participant participantToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"        model.deleteParticipant(participantToDelete);","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PARTICIPANT_SUCCESS, participantToDelete));","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"XXJJXJ":3,"kanjitp":6,"-":43,"lowkangn":2}},{"path":"src/main/java/seedu/address/logic/commands/DeleteEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"davelowqx"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"davelowqx"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"davelowqx"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"davelowqx"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"davelowqx"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"davelowqx"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"davelowqx"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"davelowqx"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"davelowqx"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"davelowqx"},"content":" * Deletes an Event identified using its displayed index.","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"davelowqx"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"davelowqx"},"content":"public class DeleteEventCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    public static final String COMMAND_WORD \u003d \"deleteEvent\";","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"davelowqx"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes the event identified by the \"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"davelowqx"},"content":"            + \"index number used in the displayed event list as done.\\n\"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"            + \"Index should be positive integer.\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"            + \"Parameters: INDEX\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"davelowqx"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"davelowqx"},"content":"    public static final String MESSAGE_DELETE_EVENT_SUCCESS \u003d \"Deleted event:\\n%1$s\";","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"davelowqx"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"davelowqx"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"davelowqx"},"content":"     * This is a constructor for DeleteEventCommand.","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"davelowqx"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"davelowqx"},"content":"     * @param targetIndex The index of the event to be deleted, as seen in the displayed event list.","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"davelowqx"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"davelowqx"},"content":"    public DeleteEventCommand(Index targetIndex) {","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"davelowqx"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"davelowqx"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"davelowqx"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"davelowqx"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"davelowqx"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"davelowqx"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"davelowqx"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"davelowqx"},"content":"        Event eventToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"davelowqx"},"content":"        model.deleteEvent(eventToDelete);","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"davelowqx"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_EVENT_SUCCESS, eventToDelete));","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"davelowqx"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"davelowqx"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"davelowqx"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"davelowqx"},"content":"                || (other instanceof DeleteEventCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"davelowqx"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteEventCommand) other).targetIndex));","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"davelowqx"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"XXJJXJ":3,"davelowqx":56}},{"path":"src/main/java/seedu/address/logic/commands/DeleteNextOfKinCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.NextOfKin;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"public class DeleteNextOfKinCommand extends Command {","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"    public static final String COMMAND_WORD \u003d \"deleteNok\";","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Deletes the next-of-kin with specified index from a \"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"            + \"participant with another specified index.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"            + \"Indexes should be positive integers.\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"            + \"Parameters: \\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"            + \"NOK_INDEX \"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"            + \"PARTICIPANT_INDEX\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 2\";","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Removed \\n%1$s \\nfrom %2$s successfully\";","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"    public static final String MESSAGE_INVALID_NOK_INDEX \u003d \"The next-of-kin index provided is invalid!\";","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"    private final Index nextOfKinIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"    private final Index participantIndex;","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"     * This is a constructor for DeleteNextOfKinCommand.","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"     * @param nextOfKinIndex index of next-of-kin to be deleted.","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"     * @param participantIndex index of participant to delete next-of-kin.","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"    public DeleteNextOfKinCommand(Index nextOfKinIndex, Index participantIndex) {","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(participantIndex);","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(nextOfKinIndex);","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"        this.nextOfKinIndex \u003d nextOfKinIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"        this.participantIndex \u003d participantIndex;","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"        List\u003cParticipant\u003e lastShownParticipantList \u003d model.getFilteredParticipantList();","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"        Participant selectedParticipant;","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"            selectedParticipant \u003d lastShownParticipantList.get(participantIndex.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"        NextOfKin selectedNextOfKin;","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"            selectedNextOfKin \u003d selectedParticipant.getNextOfKin(nextOfKinIndex.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"lowkangn"},"content":"            throw new CommandException(MESSAGE_INVALID_NOK_INDEX);","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"        selectedParticipant.removeNextOfKin(selectedNextOfKin);","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS,","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"                selectedNextOfKin.getFullName(), selectedParticipant.getFullName()));","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"lowkangn"},"content":"                || (other instanceof DeleteNextOfKinCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"lowkangn"},"content":"                \u0026\u0026 participantIndex.equals(((DeleteNextOfKinCommand) other).participantIndex))","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"lowkangn"},"content":"                \u0026\u0026 nextOfKinIndex.equals(((DeleteNextOfKinCommand) other).nextOfKinIndex);","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"XXJJXJ":1,"kanjitp":64,"lowkangn":15}},{"path":"src/main/java/seedu/address/logic/commands/DoneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import java.util.List;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":" * Marks an Event identified using its displayed index as done.","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"    public static final String COMMAND_WORD \u003d \"done\";","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks the event identified by the \"","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"            + \"index number used in the displayed event list as done.\\n\"","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"            + \"Index should be positive integer.\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"            + \"Parameters: INDEX\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"    public static final String MESSAGE_DONE_EVENT_SUCCESS \u003d \"Marked event as done:\\n%1$s\";","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"    public static final String MESSAGE_EVENT_ALREADY_DONE \u003d \"This event is already marked as done!\";","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"     * This is a constructor for DoneCommand.","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"     * @param targetIndex The index of the event to be marked as done, as seen in the displayed event list.","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"    public DoneCommand(Index targetIndex) {","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"lowkangn"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"lowkangn"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"lowkangn"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"lowkangn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"lowkangn"},"content":"        Event eventToMarkDone \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"lowkangn"},"content":"        if (eventToMarkDone.getDoneValue()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"lowkangn"},"content":"            throw new CommandException(MESSAGE_EVENT_ALREADY_DONE);","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"lowkangn"},"content":"        model.markEventAsDone(eventToMarkDone);","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"lowkangn"},"content":"        return new CommandResult(String.format(MESSAGE_DONE_EVENT_SUCCESS, eventToMarkDone));","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":56,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"lowkangn"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"lowkangn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"lowkangn"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"lowkangn"},"content":"                || (other instanceof DoneCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"lowkangn"},"content":"                \u0026\u0026 targetIndex.equals(((DoneCommand) other).targetIndex));","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"XXJJXJ":2,"ntwbruce":1,"lowkangn":60}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Address;","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.BirthDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Email;","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Name;","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.NextOfKin;","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.participant.ParticipantId;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Phone;","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":" * Edits the details of an existing Participant in the address book.","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the participant identified \"","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"lowkangn"},"content":"            + \"by the index number used in the displayed participant list. \"","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"            + \"Index should be positive integer.\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"            + \"Parameters: INDEX \"","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"            + \"[\" + PREFIX_DATE + \"BIRTHDATE]\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"lowkangn"},"content":"    public static final String MESSAGE_EDIT_PARTICIPANT_SUCCESS \u003d \"Edited participant:\\n%1$s\";","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"    public static final String MESSAGE_DUPLICATE_PARTICIPANT \u003d \"This participant already exists in Managera.\";","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"    private final EditParticipantDescriptor editParticipantDescriptor;","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"     * @param index                     of the Participant in the filtered Participant list to edit","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"     * @param editParticipantDescriptor details to edit the Participant with","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"    public EditCommand(Index index, EditParticipantDescriptor editParticipantDescriptor) {","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(editParticipantDescriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"        this.editParticipantDescriptor \u003d new EditParticipantDescriptor(editParticipantDescriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"        List\u003cParticipant\u003e lastShownList \u003d model.getFilteredParticipantList();","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"        Participant participantToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"        Participant editedParticipant \u003d createEditedParticipant(participantToEdit, editParticipantDescriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"        if (!participantToEdit.isSameParticipant(editedParticipant) \u0026\u0026 model.hasParticipant(editedParticipant)) {","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"        model.setParticipant(participantToEdit, editedParticipant);","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PARTICIPANT_SUCCESS, editedParticipant));","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"     * Creates and returns a {@code Participant} with the details of {@code participantToEdit}","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"     * edited with {@code editParticipantDescriptor}.","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"kanjitp"},"content":"    private static Participant createEditedParticipant(Participant participantToEdit,","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"kanjitp"},"content":"                                                       EditParticipantDescriptor editParticipantDescriptor) {","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"kanjitp"},"content":"        assert participantToEdit !\u003d null;","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"kanjitp"},"content":"        Name updatedName \u003d editParticipantDescriptor.getName().orElse(participantToEdit.getName());","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"kanjitp"},"content":"        Phone updatedPhone \u003d editParticipantDescriptor.getPhone().orElse(participantToEdit.getPhone());","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"        Email updatedEmail \u003d editParticipantDescriptor.getEmail().orElse(participantToEdit.getEmail());","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"kanjitp"},"content":"        Address updatedAddress \u003d editParticipantDescriptor.getAddress().orElse(participantToEdit.getAddress());","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"kanjitp"},"content":"        BirthDate updatedBirthDate \u003d editParticipantDescriptor.getBirthDate().orElse(participantToEdit.getBirthDate());","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"kanjitp"},"content":"        ObservableList\u003cNextOfKin\u003e updatedNextOfKins \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"kanjitp"},"content":"                editParticipantDescriptor.getNextOfKins().orElse(participantToEdit.getNextOfKins());","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"ntwbruce"},"content":"        if (isIdUnchanged(participantToEdit.getName(), updatedName)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"            return new Participant(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"                    updatedBirthDate, updatedNextOfKins, participantToEdit.getParticipantId());","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"        return new Participant(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedBirthDate,","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"                updatedNextOfKins);","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"ntwbruce"},"content":"     * Checks if the edited {@code Participant} needs to be assigned a new Participant ID.","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"ntwbruce"},"content":"     * @param currentName Current Participant name.","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"ntwbruce"},"content":"     * @param updatedName Updated Participant name.","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"ntwbruce"},"content":"     * @return true if the Participant ID is unchanged.","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"ntwbruce"},"content":"    private static boolean isIdUnchanged(Name currentName, Name updatedName) {","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"ntwbruce"},"content":"        return ParticipantId.generateIdString(currentName.toString())","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"ntwbruce"},"content":"                .equals(ParticipantId.generateIdString(updatedName.toString()));","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":141,"author":{"gitId":"kanjitp"},"content":"            \u0026\u0026 editParticipantDescriptor.equals(e.editParticipantDescriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":145,"author":{"gitId":"XXJJXJ"},"content":"     * Stores the details to edit the Participant with. Each non-empty field value will replace the","lastModifiedDate":"2021-09-28"},{"lineNumber":146,"author":{"gitId":"XXJJXJ"},"content":"     * corresponding field value of the Participant.","lastModifiedDate":"2021-09-28"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":148,"author":{"gitId":"kanjitp"},"content":"    public static class EditParticipantDescriptor {","lastModifiedDate":"2021-09-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2021-09-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2021-09-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2021-09-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2021-09-26"},{"lineNumber":153,"author":{"gitId":"kanjitp"},"content":"        private BirthDate birthDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":154,"author":{"gitId":"kanjitp"},"content":"        private ObservableList\u003cNextOfKin\u003e nextOfKins;","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":156,"author":{"gitId":"kanjitp"},"content":"        public EditParticipantDescriptor() {","lastModifiedDate":"2021-09-26"},{"lineNumber":157,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2021-09-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2021-09-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-09-26"},{"lineNumber":162,"author":{"gitId":"kanjitp"},"content":"        public EditParticipantDescriptor(EditParticipantDescriptor toCopy) {","lastModifiedDate":"2021-09-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2021-09-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2021-09-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2021-09-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2021-09-26"},{"lineNumber":167,"author":{"gitId":"kanjitp"},"content":"            setBirthDate(toCopy.birthDate);","lastModifiedDate":"2021-09-26"},{"lineNumber":168,"author":{"gitId":"kanjitp"},"content":"            setNextOfKins(toCopy.nextOfKins);","lastModifiedDate":"2021-09-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2021-09-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-09-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-09-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-09-26"},{"lineNumber":175,"author":{"gitId":"XXJJXJ"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, birthDate);","lastModifiedDate":"2021-10-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2021-09-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-09-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2021-09-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-09-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2021-09-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2021-09-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2021-09-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2021-09-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2021-09-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2021-09-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2021-09-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2021-09-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2021-09-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2021-09-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2021-09-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2021-09-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":210,"author":{"gitId":"kanjitp"},"content":"        public void setBirthDate(BirthDate birthDate) {","lastModifiedDate":"2021-09-26"},{"lineNumber":211,"author":{"gitId":"kanjitp"},"content":"            this.birthDate \u003d birthDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":214,"author":{"gitId":"kanjitp"},"content":"        public Optional\u003cBirthDate\u003e getBirthDate() {","lastModifiedDate":"2021-09-26"},{"lineNumber":215,"author":{"gitId":"kanjitp"},"content":"            return Optional.ofNullable(birthDate);","lastModifiedDate":"2021-09-26"},{"lineNumber":216,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":217,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":218,"author":{"gitId":"kanjitp"},"content":"        public void setNextOfKins(ObservableList\u003cNextOfKin\u003e nextOfKins) {","lastModifiedDate":"2021-10-24"},{"lineNumber":219,"author":{"gitId":"kanjitp"},"content":"            this.nextOfKins \u003d (nextOfKins !\u003d null) ? FXCollections.observableArrayList(nextOfKins) : null;","lastModifiedDate":"2021-10-24"},{"lineNumber":220,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":221,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":222,"author":{"gitId":"kanjitp"},"content":"        public Optional\u003cObservableList\u003cNextOfKin\u003e\u003e getNextOfKins() {","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"kanjitp"},"content":"            return (nextOfKins !\u003d null) ? Optional.of(FXCollections.observableArrayList((nextOfKins)))","lastModifiedDate":"2021-10-24"},{"lineNumber":224,"author":{"gitId":"kanjitp"},"content":"                    : Optional.empty();","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-09-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2021-09-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2021-09-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-09-26"},{"lineNumber":235,"author":{"gitId":"kanjitp"},"content":"            if (!(other instanceof EditParticipantDescriptor)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2021-09-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2021-09-26"},{"lineNumber":240,"author":{"gitId":"kanjitp"},"content":"            EditParticipantDescriptor e \u003d (EditParticipantDescriptor) other;","lastModifiedDate":"2021-09-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2021-09-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2021-09-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2021-09-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2021-09-26"},{"lineNumber":246,"author":{"gitId":"ntwbruce"},"content":"                    \u0026\u0026 getBirthDate().equals(e.getBirthDate());","lastModifiedDate":"2021-10-19"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":249,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"XXJJXJ":14,"kanjitp":53,"ntwbruce":16,"-":159,"lowkangn":7}},{"path":"src/main/java/seedu/address/logic/commands/EditEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import java.util.List;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":" * Edits the details of an existing Event in Managera.","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"public class EditEventCommand extends Command {","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    public static final String COMMAND_WORD \u003d \"editEvent\";","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the event with specified index. \"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"            + \"Index should be positive integer.\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"            + \"Existing details will be overwritten by the new input details.\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"            + \"Parameters: INDEX \"","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"            + \"[\" + PREFIX_DATE + \"DATE] \"","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"            + \"[\" + PREFIX_TIME + \"TIME]\\n\"","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"            + PREFIX_NAME + \"24Km Run \"","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"            + PREFIX_TIME + \"0000\";","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_EDIT_EVENT_SUCCESS \u003d \"Edited event:\\n%1$s\";","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in Managera\";","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"    private final Index index;","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"    private final EditEventDescriptor editEventDescriptor;","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"     * This is a constructor of EditEventCommand.","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"     * @param index  of the Event in the filtered Event list to edit.","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"    public EditEventCommand(Index index, EditEventDescriptor editEventDescriptor) {","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(editEventDescriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"        this.editEventDescriptor \u003d new EditEventDescriptor(editEventDescriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"        List\u003cEvent\u003e lastShownEventList \u003d model.getFilteredEventList();","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownEventList.size()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"        Event eventToEdit \u003d lastShownEventList.get(index.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"        Event editedEvent \u003d createEditedEvent(eventToEdit, editEventDescriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"        if (!eventToEdit.isSameEvent(editedEvent) \u0026\u0026 model.hasEvent(editedEvent)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"        model.setEvent(eventToEdit, editedEvent);","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_EVENT_SUCCESS, editedEvent));","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"            return true;","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"        if (!(other instanceof EditEventCommand)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"            return false;","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"        EditEventCommand e \u003d (EditEventCommand) other;","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"        return index.equals(e.index) \u0026\u0026 editEventDescriptor.equals(e.editEventDescriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"     * Creates and returns an edited Event instance.","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"     * @param eventToEdit           The event instance to be edited.","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"     * @param editEventDescriptor   The instance containing fields of the event to be edited.","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"     * @return An Event instance with fields modified.","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"    private static Event createEditedEvent(Event eventToEdit, EditEventDescriptor editEventDescriptor) {","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(eventToEdit);","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(editEventDescriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"        EventName updatedEventName \u003d editEventDescriptor.getEventName().orElse(eventToEdit.getName());","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"        EventDate updatedEventDate \u003d editEventDescriptor.getEventDate().orElse(eventToEdit.getDate());","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"        EventTime updatedEventTime \u003d editEventDescriptor.getEventTime().orElse(eventToEdit.getTime());","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"        return new Event(updatedEventName, updatedEventDate,","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"lowkangn"},"content":"                updatedEventTime, eventToEdit.getDoneValue(), eventToEdit.getParticipants());","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"XXJJXJ"},"content":"     * Stores the details to edit the Event with. Each non-empty field value wil replace the","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"     * corresponding field value of the Event.","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"XXJJXJ"},"content":"    public static class EditEventDescriptor {","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"XXJJXJ"},"content":"        private EventName eventName;","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"XXJJXJ"},"content":"        private EventDate eventDate;","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"XXJJXJ"},"content":"        private EventTime eventTime;","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"XXJJXJ"},"content":"        public EditEventDescriptor() {","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"XXJJXJ"},"content":"        /**","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"XXJJXJ"},"content":"         * Copy constructor.","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"XXJJXJ"},"content":"         *","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"XXJJXJ"},"content":"         * @param toCopy An instance of EditEventDescriptor.","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"XXJJXJ"},"content":"         */","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"XXJJXJ"},"content":"        public EditEventDescriptor(EditEventDescriptor toCopy) {","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"XXJJXJ"},"content":"            setEventName(toCopy.eventName);","lastModifiedDate":"2021-10-17"},{"lineNumber":127,"author":{"gitId":"XXJJXJ"},"content":"            setEventDate(toCopy.eventDate);","lastModifiedDate":"2021-10-17"},{"lineNumber":128,"author":{"gitId":"XXJJXJ"},"content":"            setEventTime(toCopy.eventTime);","lastModifiedDate":"2021-10-17"},{"lineNumber":129,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":130,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":131,"author":{"gitId":"XXJJXJ"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"XXJJXJ"},"content":"            return CollectionUtil.isAnyNonNull(eventName, eventDate, eventTime);","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":135,"author":{"gitId":"XXJJXJ"},"content":"        public void setEventName(EventName eventName) {","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"XXJJXJ"},"content":"            this.eventName \u003d eventName;","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"XXJJXJ"},"content":"        public Optional\u003cEventName\u003e getEventName() {","lastModifiedDate":"2021-10-17"},{"lineNumber":140,"author":{"gitId":"XXJJXJ"},"content":"            return Optional.ofNullable(eventName);","lastModifiedDate":"2021-10-17"},{"lineNumber":141,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":142,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":143,"author":{"gitId":"XXJJXJ"},"content":"        public void setEventDate(EventDate eventDate) {","lastModifiedDate":"2021-10-17"},{"lineNumber":144,"author":{"gitId":"XXJJXJ"},"content":"            this.eventDate \u003d eventDate;","lastModifiedDate":"2021-10-17"},{"lineNumber":145,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":146,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":147,"author":{"gitId":"XXJJXJ"},"content":"        public Optional\u003cEventDate\u003e getEventDate() {","lastModifiedDate":"2021-10-17"},{"lineNumber":148,"author":{"gitId":"XXJJXJ"},"content":"            return Optional.ofNullable(eventDate);","lastModifiedDate":"2021-10-17"},{"lineNumber":149,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":150,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":151,"author":{"gitId":"XXJJXJ"},"content":"        public void setEventTime(EventTime eventTime) {","lastModifiedDate":"2021-10-17"},{"lineNumber":152,"author":{"gitId":"XXJJXJ"},"content":"            this.eventTime \u003d eventTime;","lastModifiedDate":"2021-10-17"},{"lineNumber":153,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":154,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":155,"author":{"gitId":"XXJJXJ"},"content":"        public Optional\u003cEventTime\u003e getEventTime() {","lastModifiedDate":"2021-10-17"},{"lineNumber":156,"author":{"gitId":"XXJJXJ"},"content":"            return Optional.ofNullable(eventTime);","lastModifiedDate":"2021-10-17"},{"lineNumber":157,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":159,"author":{"gitId":"XXJJXJ"},"content":"        @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":160,"author":{"gitId":"XXJJXJ"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-17"},{"lineNumber":161,"author":{"gitId":"XXJJXJ"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-17"},{"lineNumber":162,"author":{"gitId":"XXJJXJ"},"content":"                return true;","lastModifiedDate":"2021-10-17"},{"lineNumber":163,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":164,"author":{"gitId":"XXJJXJ"},"content":"            if (!(other instanceof EditEventDescriptor)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":165,"author":{"gitId":"XXJJXJ"},"content":"                return false;","lastModifiedDate":"2021-10-17"},{"lineNumber":166,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":167,"author":{"gitId":"XXJJXJ"},"content":"            EditEventDescriptor e \u003d (EditEventDescriptor) other;","lastModifiedDate":"2021-10-17"},{"lineNumber":168,"author":{"gitId":"XXJJXJ"},"content":"            return getEventName().equals(e.getEventName())","lastModifiedDate":"2021-10-17"},{"lineNumber":169,"author":{"gitId":"XXJJXJ"},"content":"                    \u0026\u0026 getEventDate().equals(e.getEventDate())","lastModifiedDate":"2021-10-17"},{"lineNumber":170,"author":{"gitId":"XXJJXJ"},"content":"                    \u0026\u0026 getEventTime().equals(e.getEventTime());","lastModifiedDate":"2021-10-17"},{"lineNumber":171,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":172,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":173,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"XXJJXJ":172,"lowkangn":1}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Managera as requested ...\";","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":18,"lowkangn":1}},{"path":"src/main/java/seedu/address/logic/commands/FilterEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDateTimePredicate;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":" * Filters the Event list for Events occurring on a specific date and optionally, time.","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"public class FilterEventCommand extends Command {","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    public static final String COMMAND_WORD \u003d \"filterEvents\";","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters the event list for events occurring \"","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"            + \"on the specified date (in YYYY-MM-DD format) and optionally include time (in 24hr format),\"","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"            + \" and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"            + PREFIX_DATE + \"DATE\"","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"            + \" [\" + PREFIX_TIME + \"TIME]\\n\"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"            + \"Example: \" + COMMAND_WORD + \" d/2021-09-20\\n\";","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    private final EventDateTimePredicate predicate;","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"     * This is a constructor for FilterEventCommand.","lastModifiedDate":"2021-09-21"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"     * @param predicate that determines if an Event is to be displayed in the list.","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    public FilterEventCommand(EventDateTimePredicate predicate) {","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-09-21"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        model.updateFilteredEventList(predicate);","lastModifiedDate":"2021-09-21"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"        return new CommandResult(","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"                String.format(Messages.MESSAGE_EVENTS_LISTED_OVERVIEW, model.getFilteredEventList().size()));","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-21"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-09-21"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"                || (other instanceof FilterEventCommand","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 predicate.equals(((FilterEventCommand) other).predicate));","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"XXJJXJ":51,"lowkangn":1}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.ParticipantNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":" * Finds and lists all Participants in Managera whose name contains any of the argument keywords.","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all participants whose names contain any of \"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"    private final ParticipantNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"    public FindCommand(ParticipantNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"        model.updateFilteredParticipantList(predicate);","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_PARTICIPANTS_LISTED_OVERVIEW,","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"                model.getFilteredParticipantList().size()));","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"XXJJXJ":1,"kanjitp":3,"-":34,"lowkangn":4}},{"path":"src/main/java/seedu/address/logic/commands/FindEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":" * Finds and lists all Events in Managera whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"public class FindEventCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"    public static final String COMMAND_WORD \u003d \"findEvent\";","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all events whose names contain any of \"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"            + \"Example: \" + COMMAND_WORD + \" 240km Marathon\";","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"    private final EventNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"    public FindEventCommand(EventNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"        model.updateFilteredEventList(predicate);","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_EVENTS_LISTED_OVERVIEW,","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"                model.getFilteredEventList().size()));","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"lowkangn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"                || (other instanceof FindEventCommand // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"                \u0026\u0026 predicate.equals(((FindEventCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"lowkangn":42}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PARTICIPANTS;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":" * Lists all Participants in the address book to the user.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all participants\";","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"        model.updateFilteredParticipantList(PREDICATE_SHOW_ALL_PARTICIPANTS);","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"kanjitp":4,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ListEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"public class ListEventCommand extends Command {","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"    public static final String COMMAND_WORD \u003d \"listEvents\";","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all events\";","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"XXJJXJ":19,"lowkangn":1}},{"path":"src/main/java/seedu/address/logic/commands/RemoveParticipantFromEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"public class RemoveParticipantFromEventCommand extends Command {","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"    public static final String COMMAND_WORD \u003d \"expel\";","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"            + \": Removes the Participant with specified index from an event with another specified index.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"            + \"Index should be positive integer.\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"            + \"PARTICIPANT_INDEX \"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"            + \"EVENT_INDEX\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 2\";","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"    public static final String MESSAGE_REMOVE_PARTICIPANT_FROM_EVENT_SUCCESS \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"            \"Removed %1$s from %2$s successfully\";","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"    private final Index participantIndex;","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"    private final Index eventIndex;","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"     * Creates an RemoveParticipantFromEventByIndexCommand to remove {@code Participant} at","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"     * specified {@code participantIndex} from {@code event} at specified {@code eventIndex}","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"    public RemoveParticipantFromEventCommand(Index participantIndex, Index eventIndex) {","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"        this.participantIndex \u003d participantIndex;","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"        this.eventIndex \u003d eventIndex;","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"        List\u003cParticipant\u003e lastShownParticipantList \u003d model.getFilteredParticipantList();","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"        List\u003cEvent\u003e lastShownEventList \u003d model.getFilteredEventList();","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"        Participant participantToRemove;","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"            participantToRemove \u003d lastShownParticipantList.get(participantIndex.getZeroBased());","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"        Event selectedEvent;","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"            selectedEvent \u003d lastShownEventList.get(eventIndex.getZeroBased());","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"        if (!selectedEvent.hasParticipant(participantToRemove)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"            throw new CommandException(Messages.showParticipantDoesNotExist(","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"                    participantToRemove.getFullName(), selectedEvent.getNameString()));","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"ntwbruce"},"content":"        // remove participant","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"lowkangn"},"content":"        selectedEvent.removeParticipant(participantToRemove);","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"lowkangn"},"content":"        return new CommandResult(String.format(MESSAGE_REMOVE_PARTICIPANT_FROM_EVENT_SUCCESS,","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"ntwbruce"},"content":"                participantToRemove.getFullName(), selectedEvent.getName()));","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"                || (other instanceof RemoveParticipantFromEventCommand // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"ntwbruce"},"content":"                \u0026\u0026 participantIndex.equals(((RemoveParticipantFromEventCommand) other).participantIndex))","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"ntwbruce"},"content":"                \u0026\u0026 eventIndex.equals(((RemoveParticipantFromEventCommand) other).eventIndex); //state check","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"XXJJXJ":3,"kanjitp":44,"ntwbruce":32,"lowkangn":3}},{"path":"src/main/java/seedu/address/logic/commands/ShowEventDetailsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-25"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-09-25"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":" * Shows the details of an existing Event in the Managera Event list.","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-09-25"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"public class ShowEventDetailsCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"    public static final String COMMAND_WORD \u003d \"showDetails\";","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-09-25"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"            + \": Displays the details of the event at the specified index.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"            + \"Index should be positive integer.\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"            + \"Parameters: INDEX \\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \";","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    private final Index index;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"     * Creates a ShowEventDetailsCommand for the Event with the specified {@code eventName}","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    public ShowEventDetailsCommand(Index index) {","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-25"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"        List\u003cEvent\u003e lastShownEventList \u003d model.getFilteredEventList();","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        if (lastShownEventList.size() \u003d\u003d 0 || lastShownEventList.size() \u003c index.getOneBased()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"            throw new CommandException(Messages.MESSAGE_EVENT_NOT_FOUND);","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"        Event desiredEvent \u003d lastShownEventList.get(index.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"        return new CommandResult(desiredEvent.toString());","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-25"},{"lineNumber":52,"author":{"gitId":"lowkangn"},"content":"                || (other instanceof ShowEventDetailsCommand // instanceof handles nulls","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 index.equals(((ShowEventDetailsCommand) other).index)); // state check","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"XXJJXJ":14,"ntwbruce":39,"lowkangn":2}},{"path":"src/main/java/seedu/address/logic/commands/ShowEventParticipantsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"import java.util.List;","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":" * Shows a list of participants of an existing Event in the Managera Event list.","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"public class ShowEventParticipantsCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"    public static final String COMMAND_WORD \u003d \"showParticipants\";","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"            + \": Displays a list of participants of the event at the specified index.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"            + \"Index should be positive integer.\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"            + \"Parameters: INDEX\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"    private final Index index;","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"     * Creates a ShowEventParticipantsCommand for the Event with the specified {@code eventName}","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"    public ShowEventParticipantsCommand(Index index) {","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"        List\u003cEvent\u003e lastShownEventList \u003d model.getFilteredEventList();","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"        if (lastShownEventList.size() \u003d\u003d 0 || lastShownEventList.size() \u003c index.getOneBased()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"            throw new CommandException(Messages.MESSAGE_EVENT_NOT_FOUND);","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"        Event desiredEvent \u003d lastShownEventList.get(index.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"        List\u003cParticipant\u003e participantList \u003d desiredEvent.getParticipants();","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"        participantList.sort(Comparator.comparing(Participant::getFullName));","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"        String displayedMessage \u003d String.format(\"Event Name: %s\\nNumber of participants: %d\\nParticipant list:\\n%s\",","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"                desiredEvent.getName(),","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"                participantList.size(),","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"                Stream.iterate(0, i -\u003e i + 1)","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"                        .limit(participantList.size())","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"                        .map(i -\u003e (i + 1) + \". \" + participantList.get(i).getFullName() + \"\\n\")","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"                        .collect(Collectors.joining())","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"                );","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"        return new CommandResult(displayedMessage);","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":64,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":65,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"ntwbruce"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-30"},{"lineNumber":67,"author":{"gitId":"ntwbruce"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"ntwbruce"},"content":"                || (other instanceof ShowEventParticipantsCommand // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 index.equals(((ShowEventParticipantsCommand) other).index)); // state check","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"XXJJXJ":13,"ntwbruce":59}},{"path":"src/main/java/seedu/address/logic/commands/SortEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-20"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-20"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-20"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":" * This is a SortEventCommand class that handles sorting of events in Chronological order.","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"public class SortEventCommand extends Command {","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"    public static final String COMMAND_WORD \u003d \"sortEvents\";","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Events sorted chronologically\";","lastModifiedDate":"2021-09-20"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-09-20"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"        model.sortEvents();","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-09-20"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-20"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-09-20"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"                || other instanceof SortEventCommand;","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-20"}],"authorContributionMap":{"XXJJXJ":25}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":" * Finds a Participant in Managera whose ID matches the given ID.","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds the participant identified by the \"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"            + \"index number used in the displayed participant list and displays the participant\u0027s details.\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"            + \"Index should be positive integer.\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"            + \"Parameters: INDEX\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"     * A constructor for ViewCommand.","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"     * @param targetIndex The index of the participant to view, as seen in the displayed participant list.","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"    public ViewCommand(Index targetIndex) {","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"lowkangn"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"        List\u003cParticipant\u003e lastShownList \u003d model.getFilteredParticipantList();","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"lowkangn"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":45,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"lowkangn"},"content":"        return new CommandResult(lastShownList.get(targetIndex.getZeroBased()).toString());","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"lowkangn"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"lowkangn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"lowkangn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"lowkangn"},"content":"                || (other instanceof ViewCommand // instanceof handles nulls","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"lowkangn"},"content":"                \u0026\u0026 targetIndex.equals(((ViewCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"XXJJXJ":2,"lowkangn":53}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEXT_OF_KIN;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Address;","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.BirthDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Email;","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Name;","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.NextOfKin;","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Phone;","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"                PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_DATE);","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"        // REQUIRED","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"        // NOT REQUIRED","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"        BirthDate birthDate \u003d ParserUtil.parseBirthDate(argMultimap.getValue(PREFIX_DATE).orElse(\"N/A\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: If separating adding NOK, change to simply an Empty Arraylist.","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"        ArrayList\u003cNextOfKin\u003e nextOfKins \u003d ParserUtil.parseNextOfKins(argMultimap.getAllValues(PREFIX_NEXT_OF_KIN));","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"        Participant participant \u003d new Participant(name, phone, email, address, birthDate,","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"                nextOfKins);","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"        return new AddCommand(participant);","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"XXJJXJ":4,"kanjitp":10,"ntwbruce":1,"-":47,"lowkangn":5}},{"path":"src/main/java/seedu/address/logic/parser/AddEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"davelowqx"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"davelowqx"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"davelowqx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"davelowqx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"davelowqx"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"davelowqx"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"davelowqx"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"davelowqx"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"davelowqx"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"davelowqx"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"davelowqx"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"davelowqx"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"davelowqx"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"davelowqx"},"content":" * Parses input arguments and creates a new AddEventCommand object","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"davelowqx"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"davelowqx"},"content":"public class AddEventCommandParser implements Parser\u003cAddEventCommand\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"davelowqx"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"davelowqx"},"content":"     * Parses the given {@code String} of arguments in the context of the AddEventCommand","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"davelowqx"},"content":"     * and returns a AddEventCommand object for execution.","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"davelowqx"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"davelowqx"},"content":"    public AddEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"davelowqx"},"content":"        ArgumentMultimap argMultiMap \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"davelowqx"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_DATE, PREFIX_TIME);","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"davelowqx"},"content":"        if (!arePrefixesPresent(argMultiMap, PREFIX_NAME, PREFIX_DATE) || !argMultiMap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"davelowqx"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"        EventName eventName \u003d ParserUtil.parseEventName(argMultiMap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"        EventDate eventDate \u003d ParserUtil.parseEventDate(argMultiMap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        EventTime eventTime \u003d ParserUtil.parseEventTime(argMultiMap.getValue(PREFIX_TIME).orElse(\"\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        Event event \u003d new Event(eventName, eventDate, eventTime);","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"davelowqx"},"content":"        return new AddEventCommand(event);","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"davelowqx"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"davelowqx"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"davelowqx"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"XXJJXJ":5,"davelowqx":39}},{"path":"src/main/java/seedu/address/logic/parser/AddNextOfKinParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.commands.AddNextOfKinCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Name;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.NextOfKin;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Phone;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"public class AddNextOfKinParser implements Parser\u003cAddNextOfKinCommand\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"    public AddNextOfKinCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"        String[] sections \u003d args.split(\" \");","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"        if (sections.length \u003c 5) {","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"                    MESSAGE_INVALID_COMMAND_FORMAT, AddNextOfKinCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        Index participantIndex \u003d ParserUtil.parseIndex(sections[1]);","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"                PREFIX_NAME, PREFIX_PHONE, PREFIX_TAG);","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_TAG)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddNextOfKinCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"        // REQUIRED","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"        Tag tag \u003d ParserUtil.parseTag(argMultimap.getValue(PREFIX_TAG).get());","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"        NextOfKin nok \u003d new NextOfKin(name, phone, tag);","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"        return new AddNextOfKinCommand(participantIndex, nok);","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"XXJJXJ":1,"kanjitp":56}},{"path":"src/main/java/seedu/address/logic/parser/AddParticipantToEventParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.commands.AddParticipantToEventCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"public class AddParticipantToEventParser implements Parser\u003cAddParticipantToEventCommand\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"    public AddParticipantToEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"        String[] sections \u003d args.split(\" \");","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"        if (sections.length !\u003d 3) {","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"                    MESSAGE_INVALID_COMMAND_FORMAT, AddParticipantToEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"        Index participantIndex \u003d ParserUtil.parseIndex(sections[1]);","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"        Index eventIndex \u003d ParserUtil.parseIndex(sections[2]);","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"        return new AddParticipantToEventCommand(participantIndex, eventIndex);","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"kanjitp":16,"ntwbruce":8}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"davelowqx"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.commands.AddNextOfKinCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.commands.AddParticipantToEventCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"davelowqx"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.commands.DeleteNextOfKinCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.commands.DoneCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.commands.EditEventCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.commands.FilterEventCommand;","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.commands.FindEventCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.commands.ListEventCommand;","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.commands.RemoveParticipantFromEventCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.commands.ShowEventDetailsCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.logic.commands.ShowEventParticipantsCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.commands.SortEventCommand;","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"        //Add new Commands and cases here:","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"davelowqx"},"content":"        case AddEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"davelowqx"},"content":"            return new AddEventCommandParser().parse(arguments);","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"davelowqx"},"content":"        case DeleteEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"davelowqx"},"content":"            return new DeleteEventCommandParser().parse(arguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"lowkangn"},"content":"        case DoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"lowkangn"},"content":"            return new DoneCommandParser().parse(arguments);","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"        case SortEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-20"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"            return new SortEventCommand();","lastModifiedDate":"2021-09-20"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"        case FilterEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-21"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"            return new FilterEventCommandParser().parse(arguments);","lastModifiedDate":"2021-09-21"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"        case ListEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-22"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"            return new ListEventCommand();","lastModifiedDate":"2021-09-22"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"kanjitp"},"content":"        case AddParticipantToEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"kanjitp"},"content":"            return new AddParticipantToEventParser().parse(arguments);","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"kanjitp"},"content":"        case RemoveParticipantFromEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"kanjitp"},"content":"            return new RemoveParticipantFromEventParser().parse(arguments);","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"kanjitp"},"content":"        case AddNextOfKinCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"kanjitp"},"content":"            return new AddNextOfKinParser().parse(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"lowkangn"},"content":"        case DeleteNextOfKinCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"lowkangn"},"content":"            return new DeleteNextOfKinParser().parse(arguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"lowkangn"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-18"},{"lineNumber":119,"author":{"gitId":"lowkangn"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2021-10-18"},{"lineNumber":120,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":121,"author":{"gitId":"ntwbruce"},"content":"        case ShowEventDetailsCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"ntwbruce"},"content":"            return new ShowEventDetailsCommandParser().parse(arguments);","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"ntwbruce"},"content":"        case ShowEventParticipantsCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"ntwbruce"},"content":"            return new ShowEventParticipantsCommandParser().parse(arguments);","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":127,"author":{"gitId":"lowkangn"},"content":"        case FindEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"lowkangn"},"content":"            return new FindEventCommandParser().parse(arguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"XXJJXJ"},"content":"        case EditEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-17"},{"lineNumber":131,"author":{"gitId":"XXJJXJ"},"content":"            return new EditEventCommandParser().parse(arguments);","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"XXJJXJ":25,"davelowqx":6,"kanjitp":11,"ntwbruce":5,"-":76,"lowkangn":15}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"    public static final Prefix PREFIX_PARTICIPANT_ID \u003d new Prefix(\"id/\");","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"tag/\");","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"    public static final Prefix PREFIX_TIME \u003d new Prefix(\"t/\");","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"    public static final Prefix PREFIX_EVENT \u003d new Prefix(\"ev/\");","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"    public static final Prefix PREFIX_NOTE \u003d new Prefix(\"note/\");","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"    public static final Prefix PREFIX_NEXT_OF_KIN \u003d new Prefix(\"nok/\");","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"kanjitp":7,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeleteEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"davelowqx"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"davelowqx"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"davelowqx"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"davelowqx"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"davelowqx"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"davelowqx"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"davelowqx"},"content":" * Parses input arguments and creates a new DeleteEventCommand object","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"davelowqx"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"davelowqx"},"content":"public class DeleteEventCommandParser implements Parser\u003cDeleteEventCommand\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"davelowqx"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"davelowqx"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteEventCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"davelowqx"},"content":"     * and returns a DeleteEventCommand object for execution.","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"davelowqx"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"davelowqx"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"davelowqx"},"content":"    public DeleteEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"davelowqx"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"davelowqx"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"davelowqx"},"content":"            return new DeleteEventCommand(index);","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"davelowqx"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"davelowqx"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"davelowqx"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"davelowqx"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"davelowqx"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"davelowqx":29}},{"path":"src/main/java/seedu/address/logic/parser/DeleteNextOfKinParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.commands.DeleteNextOfKinCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"public class DeleteNextOfKinParser implements Parser\u003cDeleteNextOfKinCommand\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"    public DeleteNextOfKinCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"        String[] sections \u003d args.split(\" \");","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"        if (sections.length !\u003d 3) {","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"                    MESSAGE_INVALID_COMMAND_FORMAT, DeleteNextOfKinCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"        Index nokIndex \u003d ParserUtil.parseIndex(sections[1]);","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"        Index participantIndex \u003d ParserUtil.parseIndex(sections[2]);","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"        return new DeleteNextOfKinCommand(nokIndex, participantIndex);","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kanjitp":16,"lowkangn":7}},{"path":"src/main/java/seedu/address/logic/parser/DoneCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.commands.DoneCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":" * Parses input arguments and creates a new DoneCommand object","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"public class DoneCommandParser implements Parser\u003cDoneCommand\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"     * Parses the given {@code String} of arguments in the context of the DoneCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"     * and returns a DoneCommand object for execution.","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"    public DoneCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"        try {","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"            return new DoneCommand(index);","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DoneCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"lowkangn":29}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.commands.EditCommand.EditParticipantDescriptor;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_DATE);","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"        EditParticipantDescriptor editParticipantDescriptor \u003d new EditParticipantDescriptor();","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"            editParticipantDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"            editParticipantDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"            editParticipantDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"            editParticipantDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"            editParticipantDescriptor.setBirthDate(ParserUtil.parseBirthDate(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"        if (!editParticipantDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"        return new EditCommand(index, editParticipantDescriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"XXJJXJ":1,"kanjitp":8,"ntwbruce":3,"-":51}},{"path":"src/main/java/seedu/address/logic/parser/EditEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.commands.EditEventCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.commands.EditEventCommand.EditEventDescriptor;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"public class EditEventCommandParser implements Parser\u003cEditEventCommand\u003e {","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"    public EditEventCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"        ArgumentMultimap argumentMultimap \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"                ArgumentTokenizer.tokenize(userInput, PREFIX_NAME, PREFIX_DATE, PREFIX_TIME);","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"        Index index;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"        try {","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"            index \u003d ParserUtil.parseIndex(argumentMultimap.getPreamble());","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditEventCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        EditEventDescriptor editEventDescriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        if (argumentMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"            editEventDescriptor.setEventName(ParserUtil.parseEventName(argumentMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"        if (argumentMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"            editEventDescriptor.setEventDate(ParserUtil.parseEventDate(argumentMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        if (argumentMultimap.getValue(PREFIX_TIME).isPresent()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"            editEventDescriptor.setEventTime(ParserUtil.parseEventTime(argumentMultimap.getValue(PREFIX_TIME).get()));","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        if (!editEventDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"            throw new ParseException(EditEventCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"        return new EditEventCommand(index, editEventDescriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"XXJJXJ":45}},{"path":"src/main/java/seedu/address/logic/parser/FilterEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.commands.FilterEventCommand;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDateTimePredicate;","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":" * Parses input arguments and creates a new FilterEventCommand object.","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"public class FilterEventCommandParser implements Parser\u003cFilterEventCommand\u003e {","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterEventCommand","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"     * and returns a FilterCommand object for execution.","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"     * @throws ParseException if the user input does not conform to the expected format","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    public FilterEventCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"        ArgumentMultimap argMultiMap \u003d","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"                ArgumentTokenizer.tokenize(userInput, PREFIX_DATE, PREFIX_TIME);","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        if (!arePrefixesPresent(argMultiMap, PREFIX_DATE) || !argMultiMap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-21"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"        String eventDate \u003d argMultiMap.getValue(PREFIX_DATE).get();","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"        String eventTime \u003d argMultiMap.getValue(PREFIX_TIME).orElse(\"\");","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        ArrayList\u003cString\u003e eventDateTime \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        if (eventDate \u003d\u003d null || !EventDate.isValidDate(eventDate)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"            throw new ParseException(EventDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        } else {","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"            eventDateTime.add(eventDate);","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        if (eventTime \u003d\u003d null || (!eventTime.equals(\"\") \u0026\u0026 !EventTime.isValidTime(eventTime))) {","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"            throw new ParseException(EventTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"        if (!eventTime.equals(\"\") \u0026\u0026 EventTime.isValidTime(eventTime)) {","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"            eventDateTime.add(eventTime);","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"        EventDateTimePredicate predicate \u003d new EventDateTimePredicate(eventDateTime);","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"        return new FilterEventCommand(predicate);","lastModifiedDate":"2021-09-27"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-09-21"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-09-21"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-09-21"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-09-21"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"XXJJXJ":58}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.ParticipantNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"        return new FindCommand(new ParticipantNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"-":31,"lowkangn":2}},{"path":"src/main/java/seedu/address/logic/parser/FindEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.commands.FindEventCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":" * Parses input arguments and creates a new FindEventCommand object","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"public class FindEventCommandParser implements Parser\u003cFindEventCommand\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"     * Parses the given {@code String} of arguments in the context of the FindEventCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"     * and returns a FindEventCommand object for execution.","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"    public FindEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"        return new FindEventCommand(new EventNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"lowkangn":33}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Address;","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.BirthDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Email;","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Name;","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.NextOfKin;","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.ParticipantId;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Phone;","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":132,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"kanjitp"},"content":"     * Parses {@code String birthDate} into a {@code BirthDate}.","lastModifiedDate":"2021-09-26"},{"lineNumber":135,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"kanjitp"},"content":"    public static BirthDate parseBirthDate(String birthDate) throws ParseException {","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(birthDate);","lastModifiedDate":"2021-09-26"},{"lineNumber":138,"author":{"gitId":"kanjitp"},"content":"        String trimmedBirthDate \u003d birthDate.trim();","lastModifiedDate":"2021-09-26"},{"lineNumber":139,"author":{"gitId":"ntwbruce"},"content":"        if (trimmedBirthDate.equals(\"N/A\")) {","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"kanjitp"},"content":"            return BirthDate.notSpecified();","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"XXJJXJ"},"content":"        } else if (!BirthDate.checkDateComponents(trimmedBirthDate)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":142,"author":{"gitId":"XXJJXJ"},"content":"            throw new ParseException(BirthDate.MESSAGE_DATE_FORMAT_ERROR);","lastModifiedDate":"2021-10-31"},{"lineNumber":143,"author":{"gitId":"XXJJXJ"},"content":"        } else if (!BirthDate.isValidDate(trimmedBirthDate)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":144,"author":{"gitId":"XXJJXJ"},"content":"            throw new ParseException(BirthDate.MESSAGE_DATE_DOES_NOT_EXIST);","lastModifiedDate":"2021-10-31"},{"lineNumber":145,"author":{"gitId":"kanjitp"},"content":"        } else if (!BirthDate.isValidBirthDate(trimmedBirthDate)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":146,"author":{"gitId":"kanjitp"},"content":"            throw new ParseException(BirthDate.MESSAGE_DATE_CONSTRAINTS);","lastModifiedDate":"2021-09-26"},{"lineNumber":147,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":148,"author":{"gitId":"XXJJXJ"},"content":"        return BirthDate.of(trimmedBirthDate);","lastModifiedDate":"2021-10-22"},{"lineNumber":149,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":150,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":151,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":152,"author":{"gitId":"kanjitp"},"content":"     * Parses {@code String nextOfKin} into a {@code NextOfKin}.","lastModifiedDate":"2021-09-26"},{"lineNumber":153,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":154,"author":{"gitId":"kanjitp"},"content":"    public static NextOfKin parseNextOfKin(String nextOfKin) throws ParseException {","lastModifiedDate":"2021-09-26"},{"lineNumber":155,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(nextOfKin);","lastModifiedDate":"2021-09-26"},{"lineNumber":156,"author":{"gitId":"kanjitp"},"content":"        return new NextOfKin(new Name(\"Test\"), new Phone(\"12345678\"), new Tag(\"Test\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":157,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":158,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":159,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":160,"author":{"gitId":"kanjitp"},"content":"     * Parses {@code Collection\u003cString\u003e nextOfKins} into a {@code ArrayList\u003cNextOfKin\u003e}.","lastModifiedDate":"2021-09-26"},{"lineNumber":161,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":162,"author":{"gitId":"kanjitp"},"content":"    public static ArrayList\u003cNextOfKin\u003e parseNextOfKins(Collection\u003cString\u003e noks) throws ParseException {","lastModifiedDate":"2021-09-26"},{"lineNumber":163,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(noks);","lastModifiedDate":"2021-09-26"},{"lineNumber":164,"author":{"gitId":"kanjitp"},"content":"        final ArrayList\u003cNextOfKin\u003e nextOfKins \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":165,"author":{"gitId":"kanjitp"},"content":"        for (String nextOfKin : noks) {","lastModifiedDate":"2021-09-26"},{"lineNumber":166,"author":{"gitId":"kanjitp"},"content":"            nextOfKins.add(parseNextOfKin(nextOfKin));","lastModifiedDate":"2021-09-26"},{"lineNumber":167,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":168,"author":{"gitId":"kanjitp"},"content":"        return nextOfKins;","lastModifiedDate":"2021-09-26"},{"lineNumber":169,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":170,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":171,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":172,"author":{"gitId":"XXJJXJ"},"content":"     * Parses {@code String eventName} into a {@code EventName}.","lastModifiedDate":"2021-10-06"},{"lineNumber":173,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":174,"author":{"gitId":"XXJJXJ"},"content":"    public static EventName parseEventName(String eventName) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":175,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(eventName);","lastModifiedDate":"2021-10-06"},{"lineNumber":176,"author":{"gitId":"XXJJXJ"},"content":"        String trimmedEventName \u003d eventName.trim();","lastModifiedDate":"2021-10-06"},{"lineNumber":177,"author":{"gitId":"XXJJXJ"},"content":"        if (!EventName.isValidEventName(trimmedEventName)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":178,"author":{"gitId":"XXJJXJ"},"content":"            throw new ParseException(EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":179,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":180,"author":{"gitId":"XXJJXJ"},"content":"        return new EventName(trimmedEventName);","lastModifiedDate":"2021-10-06"},{"lineNumber":181,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":182,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":183,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":184,"author":{"gitId":"XXJJXJ"},"content":"     * Parses {@code String eventDate} into a {@code EventDate}.","lastModifiedDate":"2021-10-06"},{"lineNumber":185,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":186,"author":{"gitId":"XXJJXJ"},"content":"    public static EventDate parseEventDate(String eventDate) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":187,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(eventDate);","lastModifiedDate":"2021-10-06"},{"lineNumber":188,"author":{"gitId":"XXJJXJ"},"content":"        String trimmedEventDate \u003d eventDate.trim();","lastModifiedDate":"2021-10-06"},{"lineNumber":189,"author":{"gitId":"XXJJXJ"},"content":"        if (!EventDate.checkDateComponents(trimmedEventDate)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":190,"author":{"gitId":"XXJJXJ"},"content":"            throw new ParseException(EventDate.MESSAGE_DATE_FORMAT_ERROR);","lastModifiedDate":"2021-10-31"},{"lineNumber":191,"author":{"gitId":"XXJJXJ"},"content":"        } else if (!EventDate.isValidDate(trimmedEventDate)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":192,"author":{"gitId":"XXJJXJ"},"content":"            throw new ParseException(EventDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":193,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":194,"author":{"gitId":"XXJJXJ"},"content":"        return new EventDate(trimmedEventDate);","lastModifiedDate":"2021-10-06"},{"lineNumber":195,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":196,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":197,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":198,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":199,"author":{"gitId":"XXJJXJ"},"content":"     * Parses {@code String eventTime} into a {@code EventTime}.","lastModifiedDate":"2021-10-06"},{"lineNumber":200,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":201,"author":{"gitId":"XXJJXJ"},"content":"    public static EventTime parseEventTime(String eventTime) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":202,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(eventTime);","lastModifiedDate":"2021-10-06"},{"lineNumber":203,"author":{"gitId":"XXJJXJ"},"content":"        if (eventTime.equals(\"\")) {","lastModifiedDate":"2021-10-06"},{"lineNumber":204,"author":{"gitId":"XXJJXJ"},"content":"            return new EventTime();","lastModifiedDate":"2021-10-06"},{"lineNumber":205,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":206,"author":{"gitId":"XXJJXJ"},"content":"        String trimmedEventTime \u003d eventTime.trim();","lastModifiedDate":"2021-10-06"},{"lineNumber":207,"author":{"gitId":"XXJJXJ"},"content":"        if (!EventTime.isValidTime(trimmedEventTime)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":208,"author":{"gitId":"XXJJXJ"},"content":"            throw new ParseException(EventTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":209,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":210,"author":{"gitId":"XXJJXJ"},"content":"        return new EventTime(trimmedEventTime);","lastModifiedDate":"2021-10-06"},{"lineNumber":211,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":212,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":213,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":214,"author":{"gitId":"kanjitp"},"content":"     *  Parses {@code String id} into a {@code ParticipantId object}.","lastModifiedDate":"2021-10-06"},{"lineNumber":215,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":216,"author":{"gitId":"kanjitp"},"content":"    public static ParticipantId parseParticipantId(String id) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":217,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(id);","lastModifiedDate":"2021-10-06"},{"lineNumber":218,"author":{"gitId":"kanjitp"},"content":"        String trimmedId \u003d id.trim();","lastModifiedDate":"2021-10-06"},{"lineNumber":219,"author":{"gitId":"kanjitp"},"content":"        if (!ParticipantId.isValidId(trimmedId)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":220,"author":{"gitId":"kanjitp"},"content":"            throw new ParseException(ParticipantId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":221,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":222,"author":{"gitId":"kanjitp"},"content":"        return new ParticipantId(id);","lastModifiedDate":"2021-10-06"},{"lineNumber":223,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"XXJJXJ":47,"kanjitp":51,"ntwbruce":1,"-":120,"lowkangn":5}},{"path":"src/main/java/seedu/address/logic/parser/RemoveParticipantFromEventParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.commands.RemoveParticipantFromEventCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"public class RemoveParticipantFromEventParser implements Parser\u003cRemoveParticipantFromEventCommand\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"    public RemoveParticipantFromEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"        String[] sections \u003d args.split(\" \");","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"        if (sections.length !\u003d 3) {","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"                    MESSAGE_INVALID_COMMAND_FORMAT, RemoveParticipantFromEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"        Index participantIndex \u003d ParserUtil.parseIndex(sections[1]);","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"        Index eventIndex \u003d ParserUtil.parseIndex(sections[2]);","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"        return new RemoveParticipantFromEventCommand(participantIndex, eventIndex);","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"kanjitp":15,"ntwbruce":8}},{"path":"src/main/java/seedu/address/logic/parser/ShowEventDetailsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-25"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.commands.ShowEventDetailsCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-25"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"public class ShowEventDetailsCommandParser implements Parser\u003cShowEventDetailsCommand\u003e {","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-09-25"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"    public ShowEventDetailsCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"            Index index \u003d ParserUtil.parseIndex(userInput);","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"            return new ShowEventDetailsCommand(index);","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"            throw new ParseException(","lastModifiedDate":"2021-09-25"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ShowEventDetailsCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-25"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-09-25"}],"authorContributionMap":{"XXJJXJ":6,"ntwbruce":11,"lowkangn":3}},{"path":"src/main/java/seedu/address/logic/parser/ShowEventParticipantsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.logic.commands.ShowEventParticipantsCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"public class ShowEventParticipantsCommandParser implements Parser\u003cShowEventParticipantsCommand\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"    public ShowEventParticipantsCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"            Index index \u003d ParserUtil.parseIndex(userInput);","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"            return new ShowEventParticipantsCommand(index);","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"            throw new ParseException(","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ShowEventParticipantsCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"XXJJXJ":6,"ntwbruce":14}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"     * and returns a ViewCommand object for execution.","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"            return new ViewCommand(index);","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"lowkangn":29}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.UniqueEventList;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.UniqueParticipantList;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":" * Duplicates are not allowed (by .isSameParticipant comparison)","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"    private final UniqueParticipantList participants;","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    private final UniqueEventList events;","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"        participants \u003d new UniqueParticipantList();","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        //Add on for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"        events \u003d new UniqueEventList();","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"     * Creates an AddressBook using the Participants in the {@code toBeCopied}","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"     * Replaces the contents of the participant list with {@code participant}.","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"     * {@code participant} must not contain duplicate participants.","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"    public void setParticipants(List\u003cParticipant\u003e participants) {","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"        this.participants.setParticipants(participants);","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"        setParticipants(newData.getParticipantList());","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"        setEvents(newData.getEventList());","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if a participant with the same identity as {@code participant} exists in the address book.","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"    public boolean hasParticipant(Participant participant) {","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(participant);","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"        return participants.contains(participant);","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"     * Adds a Particpant to the Managera.","lastModifiedDate":"2021-09-28"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"     * The Participant must not already exist in Managera.","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"    public void addParticipant(Participant p) {","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"        participants.add(p);","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"     * Replaces the given Participant {@code target} in the list with {@code editedParticipant}.","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"     * {@code target} must exist in Managera.","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"     * The person identity of {@code editedParticipant} must not be the same as another","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"     * existing Participant in Managera.","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"    public void setParticipant(Participant target, Participant editedParticipant) {","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(editedParticipant);","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"        participants.setParticipant(target, editedParticipant);","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"     * {@code key} must exist in Managera.","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"    public void removeParticipant(Participant key) {","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"kanjitp"},"content":"        participants.remove(key);","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"    //Add on for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"     * Replaces the contents of the event list with {@code events}.","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"XXJJXJ"},"content":"        this.events.setEvents(events);","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":113,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if an event with the same identity as {@code event} exists in the address book.","lastModifiedDate":"2021-09-18"},{"lineNumber":114,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":115,"author":{"gitId":"XXJJXJ"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2021-09-18"},{"lineNumber":116,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-09-18"},{"lineNumber":117,"author":{"gitId":"XXJJXJ"},"content":"        return events.contains(event);","lastModifiedDate":"2021-09-18"},{"lineNumber":118,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":119,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":120,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":121,"author":{"gitId":"kanjitp"},"content":"     * Adds a participant to the Managera.","lastModifiedDate":"2021-09-28"},{"lineNumber":122,"author":{"gitId":"kanjitp"},"content":"     * The participant must not already exist in the Managera.","lastModifiedDate":"2021-09-28"},{"lineNumber":123,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"XXJJXJ"},"content":"    public void addEvent(Event e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"XXJJXJ"},"content":"        events.add(e);","lastModifiedDate":"2021-09-18"},{"lineNumber":126,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":127,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":128,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":129,"author":{"gitId":"XXJJXJ"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2021-09-18"},{"lineNumber":130,"author":{"gitId":"kanjitp"},"content":"     * {@code key} must exist in Managera.","lastModifiedDate":"2021-09-28"},{"lineNumber":131,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":132,"author":{"gitId":"davelowqx"},"content":"    public void deleteEvent(Event key) {","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"XXJJXJ"},"content":"        events.remove(key);","lastModifiedDate":"2021-09-18"},{"lineNumber":134,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":135,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":136,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"XXJJXJ"},"content":"     * Replaces the given Event {@code target} with {@code editedEvent}.","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"XXJJXJ"},"content":"     * {@code target} must exist in Managera.","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"XXJJXJ"},"content":"     * This Event identity of {@code editedEvent} must not be the same","lastModifiedDate":"2021-10-17"},{"lineNumber":140,"author":{"gitId":"XXJJXJ"},"content":"     * as another existing Event in Managera.","lastModifiedDate":"2021-10-17"},{"lineNumber":141,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":142,"author":{"gitId":"XXJJXJ"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-10-17"},{"lineNumber":143,"author":{"gitId":"XXJJXJ"},"content":"        events.setEvent(target, editedEvent);","lastModifiedDate":"2021-10-17"},{"lineNumber":144,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":145,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":146,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-20"},{"lineNumber":147,"author":{"gitId":"XXJJXJ"},"content":"    public void sortEvents() {","lastModifiedDate":"2021-09-20"},{"lineNumber":148,"author":{"gitId":"XXJJXJ"},"content":"        events.sort();","lastModifiedDate":"2021-09-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":155,"author":{"gitId":"kanjitp"},"content":"        return participants.asUnmodifiableObservableList().size() + \" participants\";","lastModifiedDate":"2021-09-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"kanjitp"},"content":"    public ObservableList\u003cParticipant\u003e getParticipantList() {","lastModifiedDate":"2021-09-26"},{"lineNumber":161,"author":{"gitId":"kanjitp"},"content":"        return participants.asUnmodifiableObservableList();","lastModifiedDate":"2021-09-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":164,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":165,"author":{"gitId":"XXJJXJ"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2021-09-18"},{"lineNumber":166,"author":{"gitId":"XXJJXJ"},"content":"        return events.asUnmodifiableObservableList();","lastModifiedDate":"2021-09-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":173,"author":{"gitId":"kanjitp"},"content":"                \u0026\u0026 participants.equals(((AddressBook) other).participants));","lastModifiedDate":"2021-09-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":178,"author":{"gitId":"kanjitp"},"content":"        return participants.hashCode();","lastModifiedDate":"2021-09-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"XXJJXJ":58,"kanjitp":30,"davelowqx":1,"-":91}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    Predicate\u003cEvent\u003e PREDICATE_SHOW_ALL_EVENTS \u003d unused -\u003e true;","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    Predicate\u003cParticipant\u003e PREDICATE_SHOW_ALL_PARTICIPANTS \u003d unused -\u003e true;","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if a Participant with the same identity as {@code participant} exists in Managera.","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"    boolean hasParticipant(Participant participant);","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"     * Deletes the given Participant.","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"     * The Participant must exist in Managera.","lastModifiedDate":"2021-09-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"    void deleteParticipant(Participant target);","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"     * Adds the given Participant.","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"     * {@code participant} must not already exist in Managera.","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"    void addParticipant(Participant participant);","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"     * Replaces the given Participant {@code target} with {@code editedParticipant}.","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"     * {@code target} must exist in Managera.","lastModifiedDate":"2021-09-28"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"     * The Participant identity of {@code editedParticipant} must not be the same","lastModifiedDate":"2021-09-28"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"     * as another existing Participant in Managera.","lastModifiedDate":"2021-09-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"    void setParticipant(Participant target, Participant editedParticipant);","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"    /** Returns an unmodifiable view of the filtered Participant list */","lastModifiedDate":"2021-09-28"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"    ObservableList\u003cParticipant\u003e getFilteredParticipantList();","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"lowkangn"},"content":"    /** Returns the Participant that satisfies the given predicate, if the Participant exists. */","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"lowkangn"},"content":"    Optional\u003cParticipant\u003e findParticipant(Predicate\u003cParticipant\u003e predicate);","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"     * Updates the filter of the filtered Participant list to filter by the given {@code predicate}.","lastModifiedDate":"2021-09-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"kanjitp"},"content":"    void updateFilteredParticipantList(Predicate\u003cParticipant\u003e predicate);","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if an Event with the same identity as {@code event} exists in Managera.","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"    boolean hasEvent(Event event);","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":103,"author":{"gitId":"davelowqx"},"content":"     * Adds the given Event {@code event}.","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"davelowqx"},"content":"    void addEvent(Event event);","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"davelowqx"},"content":"     * Deletes the given Event {@code target}.","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"davelowqx"},"content":"     * {@code target} must exist in Managera.","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"davelowqx"},"content":"    void deleteEvent(Event target);","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"XXJJXJ"},"content":"     * Replaces the given Event {@code target} with {@code editedEvent}.","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"XXJJXJ"},"content":"     * {@code target} must exist in Managera.","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"XXJJXJ"},"content":"     * This Event identity of {@code editedEvent} must not be the same","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"XXJJXJ"},"content":"     * as another existing Event in Managera.","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"XXJJXJ"},"content":"    void setEvent(Event target, Event editedEvent);","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"lowkangn"},"content":"     * Marks the given Event {@code target} as done.","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"lowkangn"},"content":"     * {@code target} must exist in Managera.","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":125,"author":{"gitId":"lowkangn"},"content":"    void markEventAsDone(Event target);","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":127,"author":{"gitId":"XXJJXJ"},"content":"    /** Returns an unmodifiable view of list of Events *///getFilteredEventList","lastModifiedDate":"2021-09-30"},{"lineNumber":128,"author":{"gitId":"XXJJXJ"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2021-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":131,"author":{"gitId":"lowkangn"},"content":"     * Updates the filter of the filtered Event list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":134,"author":{"gitId":"XXJJXJ"},"content":"    void updateFilteredEventList(Predicate\u003cEvent\u003e predicate);","lastModifiedDate":"2021-09-21"},{"lineNumber":135,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":136,"author":{"gitId":"XXJJXJ"},"content":"    /** Sorts the event lists chronologically */","lastModifiedDate":"2021-09-20"},{"lineNumber":137,"author":{"gitId":"XXJJXJ"},"content":"    void sortEvents();","lastModifiedDate":"2021-09-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"XXJJXJ":30,"kanjitp":9,"davelowqx":5,"-":85,"lowkangn":9}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":" * Represents the in-memory model of the Managera data.","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"    private final FilteredList\u003cParticipant\u003e filteredParticipants;","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    //Add-ons for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    private final FilteredList\u003cEvent\u003e filteredEvents;","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"        filteredParticipants \u003d new FilteredList\u003c\u003e(this.addressBook.getParticipantList());","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"        //Add-ons for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"        filteredEvents \u003d new FilteredList\u003c\u003e(this.addressBook.getEventList());","lastModifiedDate":"2021-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"kanjitp"},"content":"    public boolean hasParticipant(Participant participant) {","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(participant);","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"kanjitp"},"content":"        return addressBook.hasParticipant(participant);","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"kanjitp"},"content":"    public void deleteParticipant(Participant target) {","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(target);","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"        target.deleteFromEvents();","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"kanjitp"},"content":"        addressBook.removeParticipant(target);","lastModifiedDate":"2021-09-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"kanjitp"},"content":"    public void addParticipant(Participant participant) {","lastModifiedDate":"2021-09-26"},{"lineNumber":112,"author":{"gitId":"kanjitp"},"content":"        addressBook.addParticipant(participant);","lastModifiedDate":"2021-09-26"},{"lineNumber":113,"author":{"gitId":"lowkangn"},"content":"        logger.info(\"Participant \" + participant.getParticipantIdValue()","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"lowkangn"},"content":"                + \" was successfully added to AddressBook\");","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"kanjitp"},"content":"        updateFilteredParticipantList(PREDICATE_SHOW_ALL_PARTICIPANTS);","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":119,"author":{"gitId":"kanjitp"},"content":"    public void setParticipant(Participant target, Participant editedParticipant) {","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"kanjitp"},"content":"        requireAllNonNull(target, editedParticipant);","lastModifiedDate":"2021-09-26"},{"lineNumber":121,"author":{"gitId":"ntwbruce"},"content":"        target.shiftEvents(editedParticipant);","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"kanjitp"},"content":"        addressBook.setParticipant(target, editedParticipant);","lastModifiedDate":"2021-09-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":125,"author":{"gitId":"XXJJXJ"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Participant List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":132,"author":{"gitId":"kanjitp"},"content":"    public ObservableList\u003cParticipant\u003e getFilteredParticipantList() {","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"kanjitp"},"content":"        return filteredParticipants;","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":136,"author":{"gitId":"lowkangn"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"lowkangn"},"content":"    public Optional\u003cParticipant\u003e findParticipant(Predicate\u003cParticipant\u003e predicate) {","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"lowkangn"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"lowkangn"},"content":"        return filteredParticipants.stream().filter(predicate).findFirst();","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":143,"author":{"gitId":"kanjitp"},"content":"    public void updateFilteredParticipantList(Predicate\u003cParticipant\u003e predicate) {","lastModifiedDate":"2021-09-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":145,"author":{"gitId":"kanjitp"},"content":"        filteredParticipants.setPredicate(predicate);","lastModifiedDate":"2021-09-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":148,"author":{"gitId":"ntwbruce"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Event List Accessor \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-29"},{"lineNumber":149,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":150,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":151,"author":{"gitId":"XXJJXJ"},"content":"     * Returns an unmodifiable view of the list of {@code Event} backed by the internal list of","lastModifiedDate":"2021-09-18"},{"lineNumber":152,"author":{"gitId":"XXJJXJ"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-09-18"},{"lineNumber":153,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":154,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":155,"author":{"gitId":"XXJJXJ"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-09-21"},{"lineNumber":156,"author":{"gitId":"ntwbruce"},"content":"        logger.info(\"AddressBook\u0027s FilteredList of Participants accessed.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"XXJJXJ"},"content":"        return filteredEvents;","lastModifiedDate":"2021-09-21"},{"lineNumber":158,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":159,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":160,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":161,"author":{"gitId":"XXJJXJ"},"content":"    public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2021-09-21"},{"lineNumber":162,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-09-21"},{"lineNumber":163,"author":{"gitId":"XXJJXJ"},"content":"        filteredEvents.setPredicate(predicate);","lastModifiedDate":"2021-09-21"},{"lineNumber":164,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":165,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":166,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":167,"author":{"gitId":"XXJJXJ"},"content":"     * Sorts the events in the addressBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":168,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":169,"author":{"gitId":"davelowqx"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":170,"author":{"gitId":"XXJJXJ"},"content":"    public void sortEvents() {","lastModifiedDate":"2021-09-29"},{"lineNumber":171,"author":{"gitId":"XXJJXJ"},"content":"        addressBook.sortEvents();","lastModifiedDate":"2021-09-29"},{"lineNumber":172,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":173,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":174,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":175,"author":{"gitId":"XXJJXJ"},"content":"     * Returns a boolean if Managera already contain this event.","lastModifiedDate":"2021-10-06"},{"lineNumber":176,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":177,"author":{"gitId":"XXJJXJ"},"content":"     * @param event An Event instance.","lastModifiedDate":"2021-10-06"},{"lineNumber":178,"author":{"gitId":"XXJJXJ"},"content":"     * @return A boolean indicating if the event already exists.","lastModifiedDate":"2021-10-06"},{"lineNumber":179,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":180,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":181,"author":{"gitId":"XXJJXJ"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2021-10-06"},{"lineNumber":182,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-10-06"},{"lineNumber":183,"author":{"gitId":"XXJJXJ"},"content":"        return addressBook.hasEvent(event);","lastModifiedDate":"2021-10-06"},{"lineNumber":184,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":185,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":186,"author":{"gitId":"davelowqx"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":187,"author":{"gitId":"davelowqx"},"content":"     * Add the event to Managera.","lastModifiedDate":"2021-10-06"},{"lineNumber":188,"author":{"gitId":"davelowqx"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":189,"author":{"gitId":"davelowqx"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":190,"author":{"gitId":"davelowqx"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2021-10-06"},{"lineNumber":191,"author":{"gitId":"davelowqx"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-10-06"},{"lineNumber":192,"author":{"gitId":"davelowqx"},"content":"        addressBook.addEvent(event);","lastModifiedDate":"2021-10-06"},{"lineNumber":193,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":194,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":195,"author":{"gitId":"davelowqx"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":196,"author":{"gitId":"davelowqx"},"content":"     * Remove the event from Managera.","lastModifiedDate":"2021-10-06"},{"lineNumber":197,"author":{"gitId":"davelowqx"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":198,"author":{"gitId":"davelowqx"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":199,"author":{"gitId":"davelowqx"},"content":"    public void deleteEvent(Event target) {","lastModifiedDate":"2021-10-27"},{"lineNumber":200,"author":{"gitId":"davelowqx"},"content":"        requireNonNull(target);","lastModifiedDate":"2021-10-06"},{"lineNumber":201,"author":{"gitId":"XXJJXJ"},"content":"        target.deleteFromParticipants();","lastModifiedDate":"2021-10-25"},{"lineNumber":202,"author":{"gitId":"davelowqx"},"content":"        addressBook.deleteEvent(target);","lastModifiedDate":"2021-10-27"},{"lineNumber":203,"author":{"gitId":"davelowqx"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":204,"author":{"gitId":"davelowqx"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":205,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":206,"author":{"gitId":"XXJJXJ"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-10-17"},{"lineNumber":207,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(target);","lastModifiedDate":"2021-10-17"},{"lineNumber":208,"author":{"gitId":"XXJJXJ"},"content":"        target.shiftParticipants(editedEvent);","lastModifiedDate":"2021-10-22"},{"lineNumber":209,"author":{"gitId":"XXJJXJ"},"content":"        addressBook.setEvent(target, editedEvent);","lastModifiedDate":"2021-10-17"},{"lineNumber":210,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":211,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":212,"author":{"gitId":"lowkangn"},"content":"    @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":213,"author":{"gitId":"lowkangn"},"content":"    public void markEventAsDone(Event target) {","lastModifiedDate":"2021-10-23"},{"lineNumber":214,"author":{"gitId":"lowkangn"},"content":"        target.markAsDone();","lastModifiedDate":"2021-10-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":233,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 filteredParticipants.equals(other.filteredParticipants)","lastModifiedDate":"2021-10-22"},{"lineNumber":234,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 filteredEvents.equals(other.filteredEvents);","lastModifiedDate":"2021-10-22"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"XXJJXJ":52,"kanjitp":19,"davelowqx":19,"ntwbruce":4,"-":133,"lowkangn":10}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"     * Returns an unmodifiable view of the Participants list.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"     * This list will not contain any duplicate Participants.","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"    ObservableList\u003cParticipant\u003e getParticipantList();","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"     * Returns an unmodifiable view of the events list.","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"     * This list will not contain any duplicate events.","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-20"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"     * Sorts the event list chronologically.","lastModifiedDate":"2021-09-20"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-20"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    void sortEvents();","lastModifiedDate":"2021-09-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"XXJJXJ":13,"kanjitp":4,"-":14}},{"path":"src/main/java/seedu/address/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-17"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import java.util.List;","lastModifiedDate":"2021-09-17"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"import javafx.beans.Observable;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"import javafx.beans.property.BooleanProperty;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"import javafx.beans.property.SimpleBooleanProperty;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-17"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":" * This is an Event class.","lastModifiedDate":"2021-09-17"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-17"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"public class Event implements Comparable\u003cEvent\u003e {","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    public static final String COMPLETED \u003d \"Completed\";","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    public static final String UNCOMPLETED \u003d \"Uncompleted\";","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"    private BooleanProperty isDone;","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"    private ObservableList\u003cParticipant\u003e participants \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    private EventName eventName;","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    private EventDate eventDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    private EventTime eventTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"     * This is the constructor of an Event.","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"     * @param name of the Event.","lastModifiedDate":"2021-09-17"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"     * @param date at which the Event occurs.","lastModifiedDate":"2021-09-17"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"     * @param time of the Event.","lastModifiedDate":"2021-09-17"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"    public Event(EventName name, EventDate date, EventTime time) {","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        this.eventName \u003d name;","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        this.eventDate \u003d date;","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        this.eventTime \u003d time;","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"        this.isDone \u003d new SimpleBooleanProperty(false);","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"     * This is an overloaded constructor of an Event.","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"     * @param name of the Event.","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"     * @param date at which the Event occurs.","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"     * @param time of the Event.","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"     * @param isDone A boolean to indicate is the event is done.","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"     * @param participants participants to be added","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"    public Event(EventName name, EventDate date, EventTime time, boolean isDone, List\u003cParticipant\u003e participants) {","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(participants);","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"        this.eventName \u003d name;","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"        this.eventDate \u003d date;","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"        this.eventTime \u003d time;","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"lowkangn"},"content":"        this.isDone \u003d new SimpleBooleanProperty(isDone);","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"        this.participants.addAll(participants);","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"     * This is an overloaded constructor of Event.","lastModifiedDate":"2021-09-17"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-17"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"     * @param name of the Event.","lastModifiedDate":"2021-09-17"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"     * @param date at which the Event occurs.","lastModifiedDate":"2021-09-17"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"    public Event(EventName name, EventDate date) {","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"        this(name, date, new EventTime());","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"    public EventName getName() {","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"ntwbruce"},"content":"        return eventName;","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"ntwbruce"},"content":"    public String getNameString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"        return eventName.toString();","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"    public EventDate getDate() {","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"ntwbruce"},"content":"        return eventDate;","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"ntwbruce"},"content":"    public String getDateString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"ntwbruce"},"content":"        return eventDate.toString();","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"    public EventTime getTime() {","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"ntwbruce"},"content":"        return eventTime;","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"ntwbruce"},"content":"    public String getTimeString() {","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"ntwbruce"},"content":"        return eventTime.toString();","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"    public String getTimeDisplayString() {","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"        return eventTime.getTimeDisplayString();","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"lowkangn"},"content":"    public boolean getDoneValue() {","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"lowkangn"},"content":"        return isDone.get();","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"lowkangn"},"content":"    public Observable getIsDone() {","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"ntwbruce"},"content":"        return isDone;","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":106,"author":{"gitId":"lowkangn"},"content":"    public ObservableList\u003cParticipant\u003e getParticipants() {","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"ntwbruce"},"content":"        return participants;","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":109,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"     * Re-links the participant of this event to the newly edited event.","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"XXJJXJ"},"content":"     * @param editedEvent  An instance of the newly edited event.","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"XXJJXJ"},"content":"    public void shiftParticipants(Event editedEvent) {","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"XXJJXJ"},"content":"        for (int i \u003d 0; i \u003c participants.size(); i++) {","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"XXJJXJ"},"content":"            participants.get(i).replaceEvent(this, editedEvent);","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"ntwbruce"},"content":"     * Replaces a Participant with an edited Participant.","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"ntwbruce"},"content":"     * @param oldParticipant     An instance of an existing Participant in this Event that was edited.","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"ntwbruce"},"content":"     * @param editedParticipant  The newly edited Participant to replace the existing Participant.","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"ntwbruce"},"content":"    public void replaceParticipant(Participant oldParticipant, Participant editedParticipant) {","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"ntwbruce"},"content":"        participants.remove(oldParticipant);","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"ntwbruce"},"content":"        participants.add(editedParticipant);","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"lowkangn"},"content":"     * Adds the given participant to the list of participants.","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"lowkangn"},"content":"     * @param participant The participant to be added.","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"lowkangn"},"content":"    public void addParticipant(Participant participant) {","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"lowkangn"},"content":"        requireNonNull(participant);","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"lowkangn"},"content":"        this.participants.add(participant);","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"lowkangn"},"content":"        participant.addEvent(this);","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"lowkangn"},"content":"     * Removes the given participant from the list of participants.","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"lowkangn"},"content":"     * @param participant The participant to be removed.","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"lowkangn"},"content":"    public void removeParticipant(Participant participant) {","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"lowkangn"},"content":"        requireNonNull(participant);","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"lowkangn"},"content":"        this.participants.remove(participant);","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"davelowqx"},"content":"        participant.deleteEvent(this);","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"lowkangn"},"content":"    /** Returns true if the given participant is attending this event.","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"lowkangn"},"content":"     * @param participant The given participant.","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"lowkangn"},"content":"     * @return True if the participant is attending.","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"lowkangn"},"content":"    public boolean hasParticipant(Participant participant) {","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"lowkangn"},"content":"        requireNonNull(participant);","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"lowkangn"},"content":"        return this.participants.stream().anyMatch(p -\u003e p.isSameParticipant(participant));","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-17"},{"lineNumber":165,"author":{"gitId":"lowkangn"},"content":"     * Marks the event as done.","lastModifiedDate":"2021-10-22"},{"lineNumber":166,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-17"},{"lineNumber":167,"author":{"gitId":"lowkangn"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-10-22"},{"lineNumber":168,"author":{"gitId":"lowkangn"},"content":"        this.isDone.set(true);","lastModifiedDate":"2021-10-22"},{"lineNumber":169,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":170,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-17"},{"lineNumber":171,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":172,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if both events have the same name.","lastModifiedDate":"2021-09-18"},{"lineNumber":173,"author":{"gitId":"XXJJXJ"},"content":"     * This defines a weaker notion of equality between two events.","lastModifiedDate":"2021-09-18"},{"lineNumber":174,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":175,"author":{"gitId":"XXJJXJ"},"content":"     * @param otherEvent to be compared to this event.","lastModifiedDate":"2021-09-18"},{"lineNumber":176,"author":{"gitId":"XXJJXJ"},"content":"     * @return A boolean to indicate if the events are the same or has the same name.","lastModifiedDate":"2021-09-18"},{"lineNumber":177,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":178,"author":{"gitId":"XXJJXJ"},"content":"    public boolean isSameEvent(Event otherEvent) {","lastModifiedDate":"2021-09-18"},{"lineNumber":179,"author":{"gitId":"XXJJXJ"},"content":"        if (otherEvent \u003d\u003d this) {","lastModifiedDate":"2021-09-18"},{"lineNumber":180,"author":{"gitId":"XXJJXJ"},"content":"            return true;","lastModifiedDate":"2021-09-18"},{"lineNumber":181,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":182,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":183,"author":{"gitId":"XXJJXJ"},"content":"        return otherEvent !\u003d null","lastModifiedDate":"2021-09-18"},{"lineNumber":184,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 otherEvent.getName().equals(getName())","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 otherEvent.getDate().equals(getDate());","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"XXJJXJ"},"content":"     * Removes this {@code Event} from the {@code participants} participating in it.","lastModifiedDate":"2021-10-25"},{"lineNumber":190,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":191,"author":{"gitId":"XXJJXJ"},"content":"    public void deleteFromParticipants() {","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"XXJJXJ"},"content":"        for (int i \u003d participants.size() - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"davelowqx"},"content":"            participants.get(i).deleteEvent(this);","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":195,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":196,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":197,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":198,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if both events have the same identity and data fields.","lastModifiedDate":"2021-09-18"},{"lineNumber":199,"author":{"gitId":"XXJJXJ"},"content":"     * This defines a stronger notion of equality between two events.","lastModifiedDate":"2021-09-18"},{"lineNumber":200,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":201,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":202,"author":{"gitId":"XXJJXJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-18"},{"lineNumber":203,"author":{"gitId":"XXJJXJ"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-18"},{"lineNumber":204,"author":{"gitId":"XXJJXJ"},"content":"            return true;","lastModifiedDate":"2021-09-18"},{"lineNumber":205,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":206,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":207,"author":{"gitId":"XXJJXJ"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":208,"author":{"gitId":"XXJJXJ"},"content":"            return false;","lastModifiedDate":"2021-09-18"},{"lineNumber":209,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":210,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":211,"author":{"gitId":"XXJJXJ"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2021-09-18"},{"lineNumber":212,"author":{"gitId":"XXJJXJ"},"content":"        return otherEvent.getName().equals(getName())","lastModifiedDate":"2021-09-18"},{"lineNumber":213,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 otherEvent.getDate().equals(getDate())","lastModifiedDate":"2021-09-18"},{"lineNumber":214,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 otherEvent.getTime().equals(getTime())","lastModifiedDate":"2021-09-18"},{"lineNumber":215,"author":{"gitId":"lowkangn"},"content":"                \u0026\u0026 otherEvent.getDoneValue() \u003d\u003d (getDoneValue())","lastModifiedDate":"2021-10-22"},{"lineNumber":216,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 otherEvent.getParticipants().equals(getParticipants());","lastModifiedDate":"2021-09-18"},{"lineNumber":217,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":218,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":219,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":220,"author":{"gitId":"XXJJXJ"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-18"},{"lineNumber":221,"author":{"gitId":"XXJJXJ"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-09-18"},{"lineNumber":222,"author":{"gitId":"XXJJXJ"},"content":"        return Objects.hash(eventName, isDone, eventDate, eventTime, participants);","lastModifiedDate":"2021-09-18"},{"lineNumber":223,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":224,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":225,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-17"},{"lineNumber":226,"author":{"gitId":"XXJJXJ"},"content":"    public String toString() {","lastModifiedDate":"2021-09-17"},{"lineNumber":227,"author":{"gitId":"ntwbruce"},"content":"        return String.format(","lastModifiedDate":"2021-10-16"},{"lineNumber":228,"author":{"gitId":"ntwbruce"},"content":"                \"Event Name: %s\\nEvent Date: %s\\nEvent Time: %s\\nCompletion Status: %s\\nNumber of participants: %d\",","lastModifiedDate":"2021-10-16"},{"lineNumber":229,"author":{"gitId":"ntwbruce"},"content":"                getNameString(),","lastModifiedDate":"2021-10-16"},{"lineNumber":230,"author":{"gitId":"ntwbruce"},"content":"                getDateString(),","lastModifiedDate":"2021-10-16"},{"lineNumber":231,"author":{"gitId":"ntwbruce"},"content":"                getTimeString(),","lastModifiedDate":"2021-10-16"},{"lineNumber":232,"author":{"gitId":"lowkangn"},"content":"                getDoneValue() ? \"Completed\" : \"Uncompleted\",","lastModifiedDate":"2021-10-22"},{"lineNumber":233,"author":{"gitId":"ntwbruce"},"content":"                getParticipants().size());","lastModifiedDate":"2021-10-16"},{"lineNumber":234,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":235,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":236,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":237,"author":{"gitId":"XXJJXJ"},"content":"    public int compareTo(Event o) {","lastModifiedDate":"2021-09-18"},{"lineNumber":238,"author":{"gitId":"XXJJXJ"},"content":"        int compareDateResult \u003d eventDate.compareTo(o.eventDate);","lastModifiedDate":"2021-10-16"},{"lineNumber":239,"author":{"gitId":"XXJJXJ"},"content":"        if (compareDateResult \u003d\u003d 0) { // same date","lastModifiedDate":"2021-09-18"},{"lineNumber":240,"author":{"gitId":"ntwbruce"},"content":"            int compareTimeResult \u003d eventTime.compareTo(o.eventTime);","lastModifiedDate":"2021-10-10"},{"lineNumber":241,"author":{"gitId":"XXJJXJ"},"content":"            if (compareTimeResult \u003d\u003d 0) { // same time","lastModifiedDate":"2021-09-18"},{"lineNumber":242,"author":{"gitId":"XXJJXJ"},"content":"                return eventName.compareTo(o.eventName);","lastModifiedDate":"2021-10-16"},{"lineNumber":243,"author":{"gitId":"XXJJXJ"},"content":"            } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":244,"author":{"gitId":"XXJJXJ"},"content":"                return compareTimeResult;","lastModifiedDate":"2021-09-18"},{"lineNumber":245,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":246,"author":{"gitId":"XXJJXJ"},"content":"        } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":247,"author":{"gitId":"XXJJXJ"},"content":"            return compareDateResult;","lastModifiedDate":"2021-09-18"},{"lineNumber":248,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":249,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-17"},{"lineNumber":250,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-17"}],"authorContributionMap":{"XXJJXJ":141,"kanjitp":20,"davelowqx":2,"ntwbruce":34,"lowkangn":53}},{"path":"src/main/java/seedu/address/model/event/EventDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import java.text.DateFormat;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-20"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":" * This is an EventDate class representing the Date of an Event.","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"public class EventDate implements Comparable\u003cEventDate\u003e {","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Date does not exist!\";","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_DATE_FORMAT_ERROR \u003d \"Dates should be in YYYY-MM-DD format!\";","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    public static final String DATE_FORMAT \u003d \"y-M-d\";","lastModifiedDate":"2021-09-20"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"     * Constructs an {@code EventDate}","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"     * @param date of the Event.","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    public EventDate(String date) {","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        this.date \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-09-20"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if a given string is a valid date.","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"     * @param test A String representing a date to be tested.","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"     * @return A boolean to indicate if a string is a valid date.","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        DateFormat sdf \u003d new SimpleDateFormat(DATE_FORMAT);","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"        sdf.setLenient(false);","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"            sdf.parse(test);","lastModifiedDate":"2021-09-20"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"            return false;","lastModifiedDate":"2021-09-20"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"        return true;","lastModifiedDate":"2021-09-20"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"    public static boolean checkDateComponents(String date) {","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        return date.split(\"-\").length \u003d\u003d 3;","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"    public String toString() {","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"        return date.toString();","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"                || (other instanceof EventDate","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 date.equals(((EventDate) other).date));","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"        return date.hashCode();","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"    public int compareTo(EventDate o) {","lastModifiedDate":"2021-10-16"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"        return date.compareTo(o.date);","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":76}},{"path":"src/main/java/seedu/address/model/event/EventDateTimePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-21"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import java.util.List;","lastModifiedDate":"2021-09-21"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-09-21"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"public class EventDateTimePredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2021-09-21"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"    private final List\u003cString\u003e dateTime;","lastModifiedDate":"2021-09-21"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"    public EventDateTimePredicate(List\u003cString\u003e dateTime) {","lastModifiedDate":"2021-09-21"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-09-21"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2021-09-21"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"        EventDate eventDate \u003d new EventDate(dateTime.get(0));","lastModifiedDate":"2021-09-21"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"        if (dateTime.size() \u003d\u003d 2) { // has date and time","lastModifiedDate":"2021-09-21"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"            EventTime eventTime \u003d new EventTime(dateTime.get(1));","lastModifiedDate":"2021-09-21"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"            return event.getDate().equals(eventDate) \u0026\u0026 event.getTime().equals(eventTime);","lastModifiedDate":"2021-09-21"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"        } else { // date only","lastModifiedDate":"2021-09-21"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"            return event.getDate().equals(eventDate);","lastModifiedDate":"2021-09-21"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-21"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-21"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-21"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-09-21"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"                || (other instanceof EventDateTimePredicate","lastModifiedDate":"2021-09-21"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 dateTime.equals(((EventDateTimePredicate) other).dateTime));","lastModifiedDate":"2021-09-21"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-21"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-21"}],"authorContributionMap":{"XXJJXJ":30}},{"path":"src/main/java/seedu/address/model/event/EventName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":" * Represents an Event\u0027s name in the address book.","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEventName(String)}","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"public class EventName implements Comparable\u003cEventName\u003e {","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"            \"EventNames should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    private final String eventName;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"     * Constructs an {@code EventName}.","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"     * @param name A valid name.","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    public EventName(String name) {","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        checkArgument(isValidEventName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        eventName \u003d name;","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"     * @param test A String that represents a name to be tested.","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"     * @return A boolean indicating if the String is a valid name.","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"    public static boolean isValidEventName(String test) {","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"    public String toString() {","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"        return eventName;","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"                || (other instanceof EventName","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 eventName.equals(((EventName) other).eventName));","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"        return eventName.hashCode();","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"    public int compareTo(EventName o) {","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"        return eventName.compareTo(o.eventName);","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":65}},{"path":"src/main/java/seedu/address/model/event/EventNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":" * Tests that a {@code Event}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"public class EventNameContainsKeywordsPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"    public EventNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(event.getNameString(), keyword));","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"                || (other instanceof EventNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"                \u0026\u0026 keywords.equals(((EventNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"lowkangn":31}},{"path":"src/main/java/seedu/address/model/event/EventNamePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":" * Tests that a {@code Event}\u0027s {@code Name} matches a given name.","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"public class EventNamePredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"    private final String eventName;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"    public EventNamePredicate(String eventName) {","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"        this.eventName \u003d eventName;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"        return eventName.equals(event.getNameString());","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"                || (other instanceof seedu.address.model.event.EventNamePredicate // instanceof handles nulls","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"                \u0026\u0026 eventName.equals(((seedu.address.model.event.EventNamePredicate) other).eventName)); // state check","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"XXJJXJ":1,"ntwbruce":26}},{"path":"src/main/java/seedu/address/model/event/EventTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import java.text.DateFormat;","lastModifiedDate":"2021-09-20"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-09-20"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":" * This is an EventTime class that represents the Time of an Event.","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"public class EventTime implements Comparable\u003cEventTime\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Time should be in 24hr format. \"","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"            + \"Input time should be from 0000 to 2359 inclusive.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    private static final String TIME_FORMAT \u003d \"HHmm\";","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    private static final String TIME_DISPLAY_FORMAT \u003d \"HH:mm\";","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    private final LocalTime time;","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    private boolean hasTime;","lastModifiedDate":"2021-09-21"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"     * Constructors an {@code EventTime}","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"     * @param time    A valid time.","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"    public EventTime(String time) {","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(time);","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"        checkArgument(isValidTime(time), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"        this.time \u003d LocalTime.parse(time, DateTimeFormatter.ofPattern(TIME_FORMAT));","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"        this.hasTime \u003d true;","lastModifiedDate":"2021-09-21"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-21"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"     * This is an overloaded Constructor for Event Time with no time.","lastModifiedDate":"2021-09-21"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-21"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"    public EventTime() {","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        this.time \u003d LocalTime.MIN;","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"        this.hasTime \u003d false;","lastModifiedDate":"2021-09-21"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if a given string is a valid time.","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"     * @param test A String to be tested if it is a valid time.","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"     * @return A boolean indicating if the string is a valid time.","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"    public static boolean isValidTime(String test) {","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        if (test.length() !\u003d 4) {","lastModifiedDate":"2021-09-25"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"            return false;","lastModifiedDate":"2021-09-25"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"        DateFormat sdf \u003d new SimpleDateFormat(TIME_FORMAT);","lastModifiedDate":"2021-09-20"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"        sdf.setLenient(false);","lastModifiedDate":"2021-09-20"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"            sdf.parse(test);","lastModifiedDate":"2021-09-20"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-09-20"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"            return false;","lastModifiedDate":"2021-09-20"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"        return true;","lastModifiedDate":"2021-09-20"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"     * Returns the String format of time using {@code TIME_DISPLAY_FORMAT}.","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"    public String getTimeDisplayString() {","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"        return hasTime ? time.format(DateTimeFormatter.ofPattern(TIME_DISPLAY_FORMAT)) : \"\";","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"    public String toString() {","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"        return this.hasTime ? this.time.format(DateTimeFormatter.ofPattern(TIME_FORMAT)) : \"\";","lastModifiedDate":"2021-09-25"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"                || (other instanceof EventTime","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"ntwbruce"},"content":"                \u0026\u0026 hasTime \u003d\u003d ((EventTime) other).hasTime \u0026\u0026 time.equals(((EventTime) other).time));","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"        return time.hashCode();","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"    public int compareTo(EventTime o) {","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"        if (hasTime \u0026\u0026 o.hasTime) {","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"            return this.time.compareTo(o.time);","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"        } else if (hasTime) {","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"            return 1;","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"        } else if (o.hasTime) {","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"            return -1;","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"        } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"            return 0;","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":100,"ntwbruce":1}},{"path":"src/main/java/seedu/address/model/event/UniqueEventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-09-20"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import java.util.List;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"import javafx.beans.Observable;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":" * A list of events that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":" * An event is considered unique by comparing using {@code Event#isSameEvent(Event)}. As such, adding and updating of","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":" * events uses Event#isSameEvent(Event) for equality so as to ensure that the event being added or updated is","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":" * unique in terms of identity in the UniqueEventList. However, the removal of a event uses Event#equals(Object) so","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":" * as to ensure that the event with exactly the same fields will be removed.","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":" *","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":" *","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":" * @see Event#isSameEvent(Event)","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"public class UniqueEventList implements Iterable\u003cEvent\u003e {","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"    private final ObservableList\u003cEvent\u003e internalList \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"            FXCollections.observableList(","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"                    new ArrayList\u003c\u003e(), (Event e) -\u003e new Observable[]{e.getParticipants(), e.getIsDone()});","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"    private final ObservableList\u003cEvent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if the list contains an equivalent event as the given argument.","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"    public boolean contains(Event toCheck) {","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        return internalList.stream().anyMatch(toCheck::isSameEvent);","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"     * Adds an event to the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"     * The event must not already exist in the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"     * @param toAdd An Event instance to be added to the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"    public void add(Event toAdd) {","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"    //Edit function setEvent temporarily omitted.","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"     * Removes the equivalent event from the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"     * The event must exist in the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"     * @param toRemove An Event instance to be removed from the list.","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"    public void remove(Event toRemove) {","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"lowkangn"},"content":"     * Replaces the event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"lowkangn"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-03"},{"lineNumber":75,"author":{"gitId":"lowkangn"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the list.","lastModifiedDate":"2021-10-03"},{"lineNumber":76,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":77,"author":{"gitId":"lowkangn"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"lowkangn"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2021-10-03"},{"lineNumber":79,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":80,"author":{"gitId":"lowkangn"},"content":"        if (!target.isSameEvent(editedEvent) \u0026\u0026 contains(editedEvent)) {","lastModifiedDate":"2021-10-03"},{"lineNumber":81,"author":{"gitId":"lowkangn"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2021-10-03"},{"lineNumber":82,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":83,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":84,"author":{"gitId":"lowkangn"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-03"},{"lineNumber":85,"author":{"gitId":"lowkangn"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-03"},{"lineNumber":86,"author":{"gitId":"lowkangn"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2021-10-03"},{"lineNumber":87,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":88,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":89,"author":{"gitId":"lowkangn"},"content":"        internalList.set(index, editedEvent);","lastModifiedDate":"2021-10-03"},{"lineNumber":90,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":91,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"     * Sets the list of Events.","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"     * @param replacement A UniqueEventList that replaces the current list of events.","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"    public void setEvents(UniqueEventList replacement) {","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"     * Replaces the contents of this list with {@code events}.","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"     * @param events A List of Events.","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"XXJJXJ"},"content":"        requireAllNonNull(events);","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"        if (!eventsAreUnique(events)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":113,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":114,"author":{"gitId":"XXJJXJ"},"content":"        internalList.setAll(events);","lastModifiedDate":"2021-09-18"},{"lineNumber":115,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":116,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":117,"author":{"gitId":"XXJJXJ"},"content":"    public void sort() {","lastModifiedDate":"2021-09-20"},{"lineNumber":118,"author":{"gitId":"XXJJXJ"},"content":"        internalList.sort(Comparator.naturalOrder());","lastModifiedDate":"2021-09-20"},{"lineNumber":119,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-20"},{"lineNumber":120,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-20"},{"lineNumber":121,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":122,"author":{"gitId":"XXJJXJ"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-09-18"},{"lineNumber":123,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"XXJJXJ"},"content":"    public ObservableList\u003cEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"XXJJXJ"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-09-18"},{"lineNumber":126,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":127,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":128,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":129,"author":{"gitId":"XXJJXJ"},"content":"    public Iterator\u003cEvent\u003e iterator() {","lastModifiedDate":"2021-09-18"},{"lineNumber":130,"author":{"gitId":"XXJJXJ"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-09-18"},{"lineNumber":131,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":132,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":133,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":134,"author":{"gitId":"XXJJXJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-18"},{"lineNumber":135,"author":{"gitId":"XXJJXJ"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-09-18"},{"lineNumber":136,"author":{"gitId":"XXJJXJ"},"content":"                || (other instanceof UniqueEventList","lastModifiedDate":"2021-09-18"},{"lineNumber":137,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 internalList.equals(((UniqueEventList) other).internalList));","lastModifiedDate":"2021-09-18"},{"lineNumber":138,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":139,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":140,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":141,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if {@code events} contains only unique events.","lastModifiedDate":"2021-09-18"},{"lineNumber":142,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":143,"author":{"gitId":"XXJJXJ"},"content":"    private boolean eventsAreUnique(List\u003cEvent\u003e events) {","lastModifiedDate":"2021-09-18"},{"lineNumber":144,"author":{"gitId":"XXJJXJ"},"content":"        for (int i \u003d 0; i \u003c events.size() - 1; i++) {","lastModifiedDate":"2021-09-18"},{"lineNumber":145,"author":{"gitId":"XXJJXJ"},"content":"            for (int j \u003d i + 1; j \u003c events.size(); j++) {","lastModifiedDate":"2021-09-18"},{"lineNumber":146,"author":{"gitId":"XXJJXJ"},"content":"                if (events.get(i).isSameEvent(events.get(j))) {","lastModifiedDate":"2021-09-18"},{"lineNumber":147,"author":{"gitId":"XXJJXJ"},"content":"                    return false;","lastModifiedDate":"2021-09-18"},{"lineNumber":148,"author":{"gitId":"XXJJXJ"},"content":"                }","lastModifiedDate":"2021-09-18"},{"lineNumber":149,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":150,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":151,"author":{"gitId":"XXJJXJ"},"content":"        return true;","lastModifiedDate":"2021-09-18"},{"lineNumber":152,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":153,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":128,"lowkangn":25}},{"path":"src/main/java/seedu/address/model/event/exceptions/DuplicateEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":" * Signals that the operation will result in duplicate Events (Events are considered duplicates if they have the same","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":" * identity).","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"public class DuplicateEventException extends RuntimeException {","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"    public DuplicateEventException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"        super(\"Operation will result in Duplicate Events!\");","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":11}},{"path":"src/main/java/seedu/address/model/event/exceptions/EventNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":" * Signals that the operation is unable to find the specified event.","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"public class EventNotFoundException extends RuntimeException {","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":7}},{"path":"src/main/java/seedu/address/model/participant/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.model.participant;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"    private final String value;","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ntwbruce":1,"-":55,"lowkangn":1}},{"path":"src/main/java/seedu/address/model/participant/BirthDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.model.participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import java.text.DateFormat;","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import java.text.ParseException;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.time.Period;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Participant\u0027s date of birth in the event.","lastModifiedDate":"2021-09-12"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidBirthDate(String)}}","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class BirthDate {","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_DATE_CONSTRAINTS \u003d \"Date of birth cannot be in the future.\";","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_DATE_FORMAT_ERROR \u003d \"Dates should be in YYYY-MM-DD format!\";","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_DATE_DOES_NOT_EXIST \u003d \"Date does not exist!\";","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    public static final String DATE_FORMAT \u003d \"y-M-d\";","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private BirthDate(LocalDate date) {","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Factory method for birthdate starting from dayOfMonth, then month, then year.","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param dayOfMonth day of the month.","lastModifiedDate":"2021-09-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param month      month from 1-12.","lastModifiedDate":"2021-09-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param year       year to be this year or before, year in the future is invalid in this case.","lastModifiedDate":"2021-09-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return Birthdate object with specified date.","lastModifiedDate":"2021-09-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static BirthDate of(int year, int month, int dayOfMonth) {","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        LocalDate date \u003d LocalDate.of(year, month, dayOfMonth);","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        checkArgument(isPresentOrPast(date), MESSAGE_DATE_CONSTRAINTS);","lastModifiedDate":"2021-09-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new BirthDate(date);","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"     * Factory method for birthdate using LocalDate instance.","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"     * @param date    A String representation of Date.","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"     * @return        A BirthDate instance.","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"    public static BirthDate of(String date) {","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"            return BirthDate.notSpecified();","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"        LocalDate localDate \u003d LocalDate.parse(date, DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"        return new BirthDate(localDate);","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Factory method for birthdate which might not have been initialised yet.","lastModifiedDate":"2021-09-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @return Birthdate with \"N/A\" String representation.","lastModifiedDate":"2021-09-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static BirthDate notSpecified() {","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new BirthDate(null);","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Getter for date of this BirthDate.","lastModifiedDate":"2021-09-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @return date of the BirthDate.","lastModifiedDate":"2021-09-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this.date;","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns the age from the BirthDate.","lastModifiedDate":"2021-09-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * @return age","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public int getAge() {","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return Period.between(this.date, LocalDate.now()).getYears();","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns true if a given LocalDate instance is in the past or present.","lastModifiedDate":"2021-09-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * This is used to ensure no one\u0027s BirthDate is in the future.","lastModifiedDate":"2021-09-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @param date     A LocalDate instance.","lastModifiedDate":"2021-09-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @return         A boolean representing if a date is in the past or present.","lastModifiedDate":"2021-09-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static boolean isPresentOrPast(LocalDate date) {","lastModifiedDate":"2021-09-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return (LocalDate.now().isEqual(date) || LocalDate.now().isAfter(date));","lastModifiedDate":"2021-09-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if a given String form of birthDate is valid.","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"     * @param birthDate   A String representing a date.","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"     * @return            A boolean representing if the String form birthDate is valid.","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"    public static boolean isValidBirthDate(String birthDate) {","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"        boolean isValid;","lastModifiedDate":"2021-09-20"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"            LocalDate date \u003d LocalDate.parse(birthDate, DateTimeFormatter.ofPattern(DATE_FORMAT));","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"            isValid \u003d isPresentOrPast(date);","lastModifiedDate":"2021-09-20"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-31"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":109,"author":{"gitId":"XXJJXJ"},"content":"        return isValid;","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":112,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":113,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if a given String form is a valid date.","lastModifiedDate":"2021-10-31"},{"lineNumber":114,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-10-31"},{"lineNumber":115,"author":{"gitId":"XXJJXJ"},"content":"     * @param date  A String representing a date.","lastModifiedDate":"2021-10-31"},{"lineNumber":116,"author":{"gitId":"XXJJXJ"},"content":"     * @return      A boolean indicating if it is a valid date.","lastModifiedDate":"2021-10-31"},{"lineNumber":117,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":118,"author":{"gitId":"XXJJXJ"},"content":"    public static boolean isValidDate(String date) {","lastModifiedDate":"2021-10-31"},{"lineNumber":119,"author":{"gitId":"XXJJXJ"},"content":"        boolean isValid;","lastModifiedDate":"2021-10-31"},{"lineNumber":120,"author":{"gitId":"XXJJXJ"},"content":"        DateFormat sdf \u003d new SimpleDateFormat(DATE_FORMAT);","lastModifiedDate":"2021-10-31"},{"lineNumber":121,"author":{"gitId":"XXJJXJ"},"content":"        sdf.setLenient(false);","lastModifiedDate":"2021-10-31"},{"lineNumber":122,"author":{"gitId":"XXJJXJ"},"content":"        try {","lastModifiedDate":"2021-10-31"},{"lineNumber":123,"author":{"gitId":"XXJJXJ"},"content":"            sdf.parse(date);","lastModifiedDate":"2021-10-31"},{"lineNumber":124,"author":{"gitId":"XXJJXJ"},"content":"            isValid \u003d true;","lastModifiedDate":"2021-10-31"},{"lineNumber":125,"author":{"gitId":"XXJJXJ"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-22"},{"lineNumber":126,"author":{"gitId":"XXJJXJ"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-09-20"},{"lineNumber":127,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":128,"author":{"gitId":"XXJJXJ"},"content":"        return isValid;","lastModifiedDate":"2021-09-20"},{"lineNumber":129,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":130,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":131,"author":{"gitId":"XXJJXJ"},"content":"    public static boolean checkDateComponents(String date) {","lastModifiedDate":"2021-10-31"},{"lineNumber":132,"author":{"gitId":"XXJJXJ"},"content":"        return date.split(\"-\").length \u003d\u003d 3;","lastModifiedDate":"2021-10-31"},{"lineNumber":133,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":134,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2021-09-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (!(other instanceof BirthDate)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2021-09-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        BirthDate otherBirthDate \u003d (BirthDate) other;","lastModifiedDate":"2021-09-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (this.getDate() \u003d\u003d null || otherBirthDate.getDate() \u003d\u003d null) {","lastModifiedDate":"2021-09-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            return this.getDate() \u003d\u003d otherBirthDate.getDate();","lastModifiedDate":"2021-09-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-09-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return otherBirthDate.getDate().equals(getDate());","lastModifiedDate":"2021-09-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (this.date \u003d\u003d null) {","lastModifiedDate":"2021-09-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            return \"N/A\";","lastModifiedDate":"2021-09-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return date.toString();","lastModifiedDate":"2021-09-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"XXJJXJ":64,"kanjitp":1,"-":96}},{"path":"src/main/java/seedu/address/model/participant/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.model.participant;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"    private final String value;","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ntwbruce":1,"-":69,"lowkangn":1}},{"path":"src/main/java/seedu/address/model/participant/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.model.participant;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"    private final String fullName;","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ntwbruce":1,"-":57,"lowkangn":1}},{"path":"src/main/java/seedu/address/model/participant/NextOfKin.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.model.participant;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"public class NextOfKin {","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"    // Identity fields","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"    private final Name name;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"    private final Phone phone;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"    private final Tag tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"     * Constructor for NextOfKin.","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"     * @param name  name of next of kin.","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"     * @param phone phone of next of kin.","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"     * @param tag   tag to describe relation of the next of kin.","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"    public NextOfKin(Name name, Phone phone, Tag tag) {","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"        requireAllNonNull(name, phone, tag);","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"    public Name getName() {","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"        return name;","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"    public String getFullName() {","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"        return name.toString();","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"    public Phone getPhone() {","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"        return phone;","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"    public String getPhoneValue() {","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"        return phone.toString();","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"    public Tag getTag() {","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"        return tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"     * Returns true if both next of kins have the same name.","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"     * This defines a weaker notion of equality between two next of kins.","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"    public boolean isSameNextOfKin(NextOfKin otherNextOfKin) {","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"        if (otherNextOfKin \u003d\u003d this) {","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"            return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"        return otherNextOfKin !\u003d null","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"                \u0026\u0026 otherNextOfKin.getName().equals(getName());","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"            return true;","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"        if (!(other instanceof NextOfKin)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"            return false;","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"        NextOfKin otherNextOfKin \u003d (NextOfKin) other;","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"        return otherNextOfKin.getName().equals(getName())","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"            \u0026\u0026 otherNextOfKin.getPhone().equals(getPhone())","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"            \u0026\u0026 otherNextOfKin.getTag().equals(getTag());","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"kanjitp"},"content":"        return Objects.hash(name, phone, tag);","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"kanjitp"},"content":"    public String toString() {","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"ntwbruce"},"content":"        return String.format(\"%s (%s): %s\", getName(), getTag(), getPhone());","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"kanjitp":91,"ntwbruce":8,"lowkangn":1}},{"path":"src/main/java/seedu/address/model/participant/Participant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.model.participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import java.util.Collection;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents a Participant in an event.","lastModifiedDate":"2021-09-12"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":" * Guarantees: name, phone, email, address, birthDate, nextOfKins are present and not null, field values","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * are validated, immutable.","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"public class Participant {","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"    // Identity fields","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"    private final Name name;","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"    private final Phone phone;","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"    private final Email email;","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"    // Data fields","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"    private final Address address;","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"    private final ParticipantId id;","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final BirthDate birthDate;","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"    private final ObservableList\u003cNextOfKin\u003e nextOfKins \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"    private final ArrayList\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"     * Called upon creation of new Participant.","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"     * @param name       Name object of the participant.","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"     * @param phone      Phone object of the participant.","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"     * @param email      Email object of the participant.","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"lowkangn"},"content":"     * @param address    Address object of the participant.","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"lowkangn"},"content":"     * @param birthDate  birthdate of the participant.","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"lowkangn"},"content":"     * @param nextOfKin  nextOfKin of the participant.","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"    public Participant(Name name, Phone phone, Email email, Address address, BirthDate birthDate,","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"                       Collection\u003cNextOfKin\u003e nextOfKin) {","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"        requireAllNonNull(name, phone, email, address, birthDate);","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"lowkangn"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"lowkangn"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"lowkangn"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"lowkangn"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.birthDate \u003d birthDate;","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"        this.nextOfKins.addAll(nextOfKin);","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"        this.id \u003d ParticipantId.of(this);","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"     * Overloaded constructor with provided Participant ID. Every field must be present and not null.","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"     * Called when converting existing Participants in memory (JSONAdaptedParticipant) to Participant.","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"lowkangn"},"content":"     * @param name       Name object of the participant.","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"lowkangn"},"content":"     * @param phone      Phone object of the participant.","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"lowkangn"},"content":"     * @param email      Email object of the participant.","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"lowkangn"},"content":"     * @param address    Address object of the participant.","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"lowkangn"},"content":"     * @param birthDate  birthdate of the participant.","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"lowkangn"},"content":"     * @param nextOfKin  nextOfKin of the participant.","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"lowkangn"},"content":"     * @param id         ParticipantId object of the participant.","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"    public Participant(Name name, Phone phone, Email email, Address address, BirthDate birthDate,","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"                       Collection\u003cNextOfKin\u003e nextOfKin, ParticipantId id) {","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"        requireAllNonNull(name, phone, email, address, birthDate);","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"ntwbruce"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"ntwbruce"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"ntwbruce"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"ntwbruce"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"ntwbruce"},"content":"        this.birthDate \u003d birthDate;","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"ntwbruce"},"content":"        this.nextOfKins.addAll(nextOfKin);","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"ntwbruce"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"lowkangn"},"content":"    public Name getName() {","lastModifiedDate":"2021-10-04"},{"lineNumber":84,"author":{"gitId":"lowkangn"},"content":"        return name;","lastModifiedDate":"2021-10-04"},{"lineNumber":85,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":86,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":87,"author":{"gitId":"lowkangn"},"content":"    public String getFullName() {","lastModifiedDate":"2021-10-04"},{"lineNumber":88,"author":{"gitId":"lowkangn"},"content":"        return name.toString();","lastModifiedDate":"2021-10-04"},{"lineNumber":89,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":90,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":91,"author":{"gitId":"lowkangn"},"content":"    public Phone getPhone() {","lastModifiedDate":"2021-10-04"},{"lineNumber":92,"author":{"gitId":"lowkangn"},"content":"        return phone;","lastModifiedDate":"2021-10-04"},{"lineNumber":93,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":94,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":95,"author":{"gitId":"lowkangn"},"content":"    public String getPhoneValue() {","lastModifiedDate":"2021-10-04"},{"lineNumber":96,"author":{"gitId":"lowkangn"},"content":"        return phone.toString();","lastModifiedDate":"2021-10-04"},{"lineNumber":97,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":98,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":99,"author":{"gitId":"lowkangn"},"content":"    public Email getEmail() {","lastModifiedDate":"2021-10-04"},{"lineNumber":100,"author":{"gitId":"lowkangn"},"content":"        return email;","lastModifiedDate":"2021-10-04"},{"lineNumber":101,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":102,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":103,"author":{"gitId":"lowkangn"},"content":"    public String getEmailValue() {","lastModifiedDate":"2021-10-04"},{"lineNumber":104,"author":{"gitId":"lowkangn"},"content":"        return email.toString();","lastModifiedDate":"2021-10-04"},{"lineNumber":105,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":106,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":107,"author":{"gitId":"lowkangn"},"content":"    public Address getAddress() {","lastModifiedDate":"2021-10-04"},{"lineNumber":108,"author":{"gitId":"lowkangn"},"content":"        return address;","lastModifiedDate":"2021-10-04"},{"lineNumber":109,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":110,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":111,"author":{"gitId":"lowkangn"},"content":"    public String getAddressValue() {","lastModifiedDate":"2021-10-04"},{"lineNumber":112,"author":{"gitId":"lowkangn"},"content":"        return address.toString();","lastModifiedDate":"2021-10-04"},{"lineNumber":113,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":114,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @return this object\u0027s birthDate.","lastModifiedDate":"2021-09-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public BirthDate getBirthDate() {","lastModifiedDate":"2021-09-11"},{"lineNumber":119,"author":{"gitId":"ntwbruce"},"content":"        return birthDate;","lastModifiedDate":"2021-10-03"},{"lineNumber":120,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":121,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":122,"author":{"gitId":"ntwbruce"},"content":"    public String getBirthDateString() {","lastModifiedDate":"2021-10-03"},{"lineNumber":123,"author":{"gitId":"ntwbruce"},"content":"        return birthDate.toString();","lastModifiedDate":"2021-10-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":127,"author":{"gitId":"kanjitp"},"content":"     * Returns an Arraylist of next of kin that represents the participant\u0027s next of kins.","lastModifiedDate":"2021-09-28"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-09-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @return this object\u0027s nextOfKins.","lastModifiedDate":"2021-09-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":131,"author":{"gitId":"kanjitp"},"content":"    public ObservableList\u003cNextOfKin\u003e getNextOfKins() {","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"ntwbruce"},"content":"        return nextOfKins;","lastModifiedDate":"2021-10-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":135,"author":{"gitId":"kanjitp"},"content":"    public ParticipantId getParticipantId() {","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"ntwbruce"},"content":"        return id;","lastModifiedDate":"2021-10-03"},{"lineNumber":137,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":138,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":139,"author":{"gitId":"ntwbruce"},"content":"    public String getParticipantIdValue() {","lastModifiedDate":"2021-10-03"},{"lineNumber":140,"author":{"gitId":"ntwbruce"},"content":"        return id.toString();","lastModifiedDate":"2021-10-03"},{"lineNumber":141,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":142,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":144,"author":{"gitId":"lowkangn"},"content":"     * Adds an Event to the list of events.","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"lowkangn"},"content":"     * @param event Event to be added.","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"lowkangn"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"lowkangn"},"content":"        events.add(event);","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"davelowqx"},"content":"     * Deletes a specific Event from the list of events.","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"lowkangn"},"content":"     * @param event Event to be removed.","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"davelowqx"},"content":"    public void deleteEvent(Event event) {","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"lowkangn"},"content":"        events.remove(event);","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"lowkangn"},"content":"     * Returns an Arraylist of events the participant is attending.","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"lowkangn"},"content":"     * @return this object\u0027s events.","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"lowkangn"},"content":"    public ArrayList\u003cEvent\u003e getEvents() {","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"lowkangn"},"content":"        return events;","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"kanjitp"},"content":"     * Adds a next of kin to the participant.","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"kanjitp"},"content":"     * @param nextOfKin next of kin to be added.","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"kanjitp"},"content":"    public void addNextOfKin(NextOfKin nextOfKin) {","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"kanjitp"},"content":"        nextOfKins.add(nextOfKin);","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"kanjitp"},"content":"     * Removes the next of kin from the participant.","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"kanjitp"},"content":"     * @param nextOfKin next of kin to be removed.","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"kanjitp"},"content":"    public void removeNextOfKin(NextOfKin nextOfKin) {","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"kanjitp"},"content":"        nextOfKins.remove(nextOfKin);","lastModifiedDate":"2021-10-24"},{"lineNumber":186,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":188,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"kanjitp"},"content":"     * Returns a next of kin object at specified index.","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":191,"author":{"gitId":"kanjitp"},"content":"     * @param index index of next of kin to get.","lastModifiedDate":"2021-10-24"},{"lineNumber":192,"author":{"gitId":"kanjitp"},"content":"     * @return next of kin at specified index.","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"kanjitp"},"content":"    public NextOfKin getNextOfKin(int index) {","lastModifiedDate":"2021-10-24"},{"lineNumber":195,"author":{"gitId":"kanjitp"},"content":"        return nextOfKins.get(index);","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":197,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":198,"author":{"gitId":"kanjitp"},"content":"    public String getNextOfKinsListString() {","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"kanjitp"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-27"},{"lineNumber":200,"author":{"gitId":"kanjitp"},"content":"        IntStream.range(1, nextOfKins.size() + 1).forEach(i -\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":201,"author":{"gitId":"kanjitp"},"content":"                builder.append(i).append(\". \").append(nextOfKins.get(i - 1).toString()).append(\"\\n\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":202,"author":{"gitId":"kanjitp"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-27"},{"lineNumber":203,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":204,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":206,"author":{"gitId":"kanjitp"},"content":"     * Returns true if the given next of kin is already assigned to this participant.","lastModifiedDate":"2021-10-27"},{"lineNumber":207,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":208,"author":{"gitId":"kanjitp"},"content":"     * @param nextOfKin The given next of kin.","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"kanjitp"},"content":"     * @return True if the nextOfKin is assigned to this participant.","lastModifiedDate":"2021-10-24"},{"lineNumber":210,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":211,"author":{"gitId":"kanjitp"},"content":"    public boolean hasNextOfKin(NextOfKin nextOfKin) {","lastModifiedDate":"2021-10-24"},{"lineNumber":212,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(nextOfKin);","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"kanjitp"},"content":"        return this.nextOfKins.stream().anyMatch(nok -\u003e nok.isSameNextOfKin(nextOfKin));","lastModifiedDate":"2021-10-24"},{"lineNumber":214,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":216,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":217,"author":{"gitId":"lowkangn"},"content":"     * Returns a string representation of the Participant\u0027s id.","lastModifiedDate":"2021-10-11"},{"lineNumber":218,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":219,"author":{"gitId":"lowkangn"},"content":"     * @return the Participant\u0027s id.","lastModifiedDate":"2021-10-11"},{"lineNumber":220,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":221,"author":{"gitId":"lowkangn"},"content":"    public String getIdValue() {","lastModifiedDate":"2021-10-11"},{"lineNumber":222,"author":{"gitId":"lowkangn"},"content":"        return this.id.toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":223,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":224,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     * Returns true if both participants have the same name.","lastModifiedDate":"2021-09-11"},{"lineNumber":227,"author":{"gitId":"lowkangn"},"content":"     * This defines a weaker notion of equality between two participants.","lastModifiedDate":"2021-10-10"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * This allow Participant to both pass in Person and Participant objects.","lastModifiedDate":"2021-09-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    public boolean isSameParticipant(Participant otherParticipant) {","lastModifiedDate":"2021-09-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        if (otherParticipant \u003d\u003d this) {","lastModifiedDate":"2021-09-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2021-09-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        return otherParticipant !\u003d null","lastModifiedDate":"2021-09-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherParticipant.getName().equals(getName())","lastModifiedDate":"2021-09-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherParticipant.getBirthDate().equals(getBirthDate());","lastModifiedDate":"2021-09-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":240,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":241,"author":{"gitId":"XXJJXJ"},"content":"     * Removes this {@code Participant} from the {@code events} he/she is participating in.","lastModifiedDate":"2021-10-21"},{"lineNumber":242,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":243,"author":{"gitId":"lowkangn"},"content":"    public void deleteFromEvents() {","lastModifiedDate":"2021-10-11"},{"lineNumber":244,"author":{"gitId":"XXJJXJ"},"content":"        for (int i \u003d events.size() - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2021-10-21"},{"lineNumber":245,"author":{"gitId":"XXJJXJ"},"content":"            this.events.get(i).removeParticipant(this);","lastModifiedDate":"2021-10-21"},{"lineNumber":246,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":247,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":248,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":249,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":250,"author":{"gitId":"XXJJXJ"},"content":"     * Re-links this participant with the newly editedEvent.","lastModifiedDate":"2021-10-22"},{"lineNumber":251,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-10-22"},{"lineNumber":252,"author":{"gitId":"XXJJXJ"},"content":"     * @param oldEvent      An instance of event that was edited.","lastModifiedDate":"2021-10-22"},{"lineNumber":253,"author":{"gitId":"XXJJXJ"},"content":"     * @param editedEvent   The newly edited event to link this participant to.","lastModifiedDate":"2021-10-22"},{"lineNumber":254,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":255,"author":{"gitId":"XXJJXJ"},"content":"    public void replaceEvent(Event oldEvent, Event editedEvent) {","lastModifiedDate":"2021-10-22"},{"lineNumber":256,"author":{"gitId":"XXJJXJ"},"content":"        events.remove(oldEvent);","lastModifiedDate":"2021-10-22"},{"lineNumber":257,"author":{"gitId":"XXJJXJ"},"content":"        events.add(editedEvent);","lastModifiedDate":"2021-10-22"},{"lineNumber":258,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":259,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":260,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":261,"author":{"gitId":"ntwbruce"},"content":"     * Replaces this Participant with a given edited Participant in this Participant\u0027s Events.","lastModifiedDate":"2021-10-23"},{"lineNumber":262,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":263,"author":{"gitId":"ntwbruce"},"content":"     * @param editedParticipant The given edited Participant.","lastModifiedDate":"2021-10-23"},{"lineNumber":264,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":265,"author":{"gitId":"ntwbruce"},"content":"    public void shiftEvents(Participant editedParticipant) {","lastModifiedDate":"2021-10-23"},{"lineNumber":266,"author":{"gitId":"ntwbruce"},"content":"        for (int i \u003d 0; i \u003c events.size(); i++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":267,"author":{"gitId":"ntwbruce"},"content":"            events.get(i).replaceParticipant(this, editedParticipant);","lastModifiedDate":"2021-10-23"},{"lineNumber":268,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":269,"author":{"gitId":"XXJJXJ"},"content":"        editedParticipant.getAllEvents(this.events);","lastModifiedDate":"2021-10-23"},{"lineNumber":270,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":271,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":272,"author":{"gitId":"XXJJXJ"},"content":"    private void getAllEvents(ArrayList\u003cEvent\u003e events) {","lastModifiedDate":"2021-10-23"},{"lineNumber":273,"author":{"gitId":"XXJJXJ"},"content":"        this.events.addAll(events);","lastModifiedDate":"2021-10-23"},{"lineNumber":274,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":275,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":277,"author":{"gitId":"-"},"content":"     * Returns true if both participants have the same identity and data fields.","lastModifiedDate":"2021-09-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two participants.","lastModifiedDate":"2021-09-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-11"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-11"},{"lineNumber":283,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2021-09-11"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        if (!(other instanceof Participant)) {","lastModifiedDate":"2021-09-11"},{"lineNumber":287,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2021-09-11"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-11"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        Participant otherParticipant \u003d (Participant) other;","lastModifiedDate":"2021-09-11"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        return otherParticipant.getName().equals(getName())","lastModifiedDate":"2021-09-11"},{"lineNumber":292,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherParticipant.getPhone().equals(getPhone())","lastModifiedDate":"2021-09-11"},{"lineNumber":293,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherParticipant.getEmail().equals(getEmail())","lastModifiedDate":"2021-09-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherParticipant.getAddress().equals(getAddress())","lastModifiedDate":"2021-09-11"},{"lineNumber":295,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherParticipant.getBirthDate().equals(getBirthDate())","lastModifiedDate":"2021-09-11"},{"lineNumber":296,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherParticipant.getNextOfKins().equals(getNextOfKins());","lastModifiedDate":"2021-09-11"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-11"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-09-11"},{"lineNumber":302,"author":{"gitId":"XXJJXJ"},"content":"        return Objects.hash(getName(), getPhone(), getEmail(), getAddress(), birthDate, nextOfKins);","lastModifiedDate":"2021-10-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-09-11"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-09-11"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-09-11"},{"lineNumber":308,"author":{"gitId":"ntwbruce"},"content":"        builder.append(\"Name: \")","lastModifiedDate":"2021-10-16"},{"lineNumber":309,"author":{"gitId":"ntwbruce"},"content":"                .append(getName())","lastModifiedDate":"2021-10-16"},{"lineNumber":310,"author":{"gitId":"ntwbruce"},"content":"                .append(\"\\nPhone: \")","lastModifiedDate":"2021-10-16"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2021-09-11"},{"lineNumber":312,"author":{"gitId":"ntwbruce"},"content":"                .append(\"\\nEmail: \")","lastModifiedDate":"2021-10-16"},{"lineNumber":313,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2021-09-11"},{"lineNumber":314,"author":{"gitId":"ntwbruce"},"content":"                .append(\"\\nAddress: \")","lastModifiedDate":"2021-10-16"},{"lineNumber":315,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2021-09-11"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":317,"author":{"gitId":"ntwbruce"},"content":"        builder.append(\"\\nDate of birth: \").append(getBirthDate());","lastModifiedDate":"2021-10-19"},{"lineNumber":318,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":319,"author":{"gitId":"kanjitp"},"content":"        if (!nextOfKins.isEmpty()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":320,"author":{"gitId":"kanjitp"},"content":"            builder.append(\"\\nNext Of Kins: \\n\");","lastModifiedDate":"2021-10-24"},{"lineNumber":321,"author":{"gitId":"kanjitp"},"content":"            builder.append(getNextOfKinsListString());","lastModifiedDate":"2021-10-27"},{"lineNumber":322,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":323,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":324,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":325,"author":{"gitId":"lowkangn"},"content":"        if (!events.isEmpty()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":326,"author":{"gitId":"lowkangn"},"content":"            builder.append(\"\\n\\nAttending events:\\n\").append(formEventsList());","lastModifiedDate":"2021-10-23"},{"lineNumber":327,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":328,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":329,"author":{"gitId":"lowkangn"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-23"},{"lineNumber":330,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":331,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":332,"author":{"gitId":"lowkangn"},"content":"    private String formEventsList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":333,"author":{"gitId":"lowkangn"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-10-23"},{"lineNumber":334,"author":{"gitId":"lowkangn"},"content":"        StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-23"},{"lineNumber":335,"author":{"gitId":"lowkangn"},"content":"        for (Event event : events) {","lastModifiedDate":"2021-10-23"},{"lineNumber":336,"author":{"gitId":"lowkangn"},"content":"            builder.append(index)","lastModifiedDate":"2021-10-23"},{"lineNumber":337,"author":{"gitId":"lowkangn"},"content":"                    .append(\". \")","lastModifiedDate":"2021-10-23"},{"lineNumber":338,"author":{"gitId":"lowkangn"},"content":"                    .append(event.getNameString())","lastModifiedDate":"2021-10-23"},{"lineNumber":339,"author":{"gitId":"lowkangn"},"content":"                    .append(\"\\n\");","lastModifiedDate":"2021-10-23"},{"lineNumber":340,"author":{"gitId":"lowkangn"},"content":"            index++;","lastModifiedDate":"2021-10-23"},{"lineNumber":341,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2021-09-11"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"XXJJXJ":30,"kanjitp":67,"davelowqx":2,"ntwbruce":45,"-":85,"lowkangn":115}},{"path":"src/main/java/seedu/address/model/participant/ParticipantId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.model.participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"public class ParticipantId {","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Participant ID should be of length 1 - 6\";","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"    private static HashMap\u003cString, Integer\u003e idMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"    private String id;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"     * Creates a ParticipantId with the provided String.","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"     * Called when converting existing Participants in memory (JSONAdaptedParticipant) to Participant.","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"     * Sets up the idMap with latest ID values for each ID name.","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"     * @param id of the Participant.","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"    public ParticipantId(String id) {","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"        String idName \u003d id.replaceAll(\"[0-9]\", \"\");","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"        int idNumber \u003d Integer.parseInt(id.replaceAll(\"[^\\\\d.]\", \"\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"        if (idMap.containsKey(idName)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"            int currentIdValue \u003d idMap.get(idName);","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"            if (idNumber \u003e currentIdValue) {","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"                idMap.replace(idName, idNumber);","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"        } else {","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"            idMap.put(idName, idNumber);","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"    private ParticipantId(Participant p) {","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"        this.id \u003d encode(p);","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"     * Factory method for id.","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"     * Called upon creation of new Participant.","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"     * @param p participant to encode the id.","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"     * @return the ParticipantId for given participant.","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"    public static ParticipantId of(Participant p) {","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"        return new ParticipantId(p);","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"     * Encode the given participant to give id.","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"     * @param p participant to encode the id.","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"     * @return the id for given participant.","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"    public static String encode(Participant p) {","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"        StringBuilder idString \u003d new StringBuilder();","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"        idString.append(generateIdString(p.getFullName()));","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"        if (ParticipantId.idMap.containsKey(idString.toString())) {","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"            int count \u003d ParticipantId.idMap.get(idString.toString());","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"            ParticipantId.idMap.replace(idString.toString(), count + 1);","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"ntwbruce"},"content":"            idString.append(count + 1);","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"ntwbruce"},"content":"        } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"ntwbruce"},"content":"            ParticipantId.idMap.put(idString.toString(), 1);","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"ntwbruce"},"content":"            idString.append(1);","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"ntwbruce"},"content":"        return idString.toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"ntwbruce"},"content":"     * Generates the name part of the Participant ID.","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"ntwbruce"},"content":"     * @param fullName of the Participant.","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"ntwbruce"},"content":"     * @return the name part of the Participant ID.","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"ntwbruce"},"content":"    public static String generateIdString(String fullName) {","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"ntwbruce"},"content":"        String[] sections \u003d fullName.trim().split(\" \");","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"ntwbruce"},"content":"        if (sections.length \u003d\u003d 1) {","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"ntwbruce"},"content":"            String name \u003d sections[0];","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"ntwbruce"},"content":"            return name.length() \u003c 6 ? name.toLowerCase() : name.substring(0, 6).toLowerCase();","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"ntwbruce"},"content":"        } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"ntwbruce"},"content":"            String first \u003d sections[0];","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"ntwbruce"},"content":"            String last \u003d sections[sections.length - 1];","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"ntwbruce"},"content":"            String firstPart \u003d first.length() \u003c 3 ? first : first.substring(0, 3);","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"ntwbruce"},"content":"            String lastPart \u003d last.length() \u003c 3 ? last : last.substring(0, 3);","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"ntwbruce"},"content":"            return (firstPart + lastPart).toLowerCase();","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"ntwbruce"},"content":"     * Checks whether the provided ID is valid.","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"ntwbruce"},"content":"     * @param id to be checked for validity.","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"ntwbruce"},"content":"     * @return true if the ID is valid.","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"    public static boolean isValidId(String id) {","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"ntwbruce"},"content":"        String idName \u003d id.replaceAll(\"[0-9]\", \"\");","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"ntwbruce"},"content":"        String idNumber \u003d id.replaceAll(\"[^\\\\d.]\", \"\");","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"ntwbruce"},"content":"        return idName.length() \u003e 0 \u0026\u0026 idName.length() \u003c\u003d 6 \u0026\u0026 idNumber.length() \u003e 0 \u0026\u0026 Integer.parseInt(idNumber) \u003e 0;","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"kanjitp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"kanjitp"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"kanjitp"},"content":"            return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"kanjitp"},"content":"        if (!(other instanceof ParticipantId)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"kanjitp"},"content":"            return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"kanjitp"},"content":"        ParticipantId otherParticipantId \u003d (ParticipantId) other;","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"kanjitp"},"content":"        return otherParticipantId.id.equals(id);","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"kanjitp"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"kanjitp"},"content":"        return Objects.hash(id);","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":123,"author":{"gitId":"kanjitp"},"content":"    public String toString() {","lastModifiedDate":"2021-09-26"},{"lineNumber":124,"author":{"gitId":"kanjitp"},"content":"        return this.id;","lastModifiedDate":"2021-09-26"},{"lineNumber":125,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":126,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-26"},{"lineNumber":127,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"XXJJXJ":1,"kanjitp":62,"ntwbruce":64}},{"path":"src/main/java/seedu/address/model/participant/ParticipantNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.model.participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":" * Tests that a {@code Participant}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"public class ParticipantNameContainsKeywordsPredicate implements Predicate\u003cParticipant\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"    public ParticipantNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"    public boolean test(Participant participant) {","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(participant.getFullName(), keyword));","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"                || (other instanceof ParticipantNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"                \u0026\u0026 keywords.equals(((ParticipantNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"XXJJXJ":1,"kanjitp":2,"ntwbruce":1,"-":23,"lowkangn":4}},{"path":"src/main/java/seedu/address/model/participant/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.model.participant;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"    private final String value;","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ntwbruce":1,"-":51,"lowkangn":1}},{"path":"src/main/java/seedu/address/model/participant/UniqueParticipantList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.model.participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import java.util.List;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import javafx.beans.Observable;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.exceptions.DuplicateParticipantException;","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.exceptions.ParticipantNotFoundException;","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":" * A list of participants that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":" * A participant is considered unique by comparing using {@code Participant#isSameParticipant(Participant)}.","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":" * As such, adding and updating of participants uses Participant#isSameParticipant(Participant) for equality so","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":" * as to ensure that the participant being added or updated is unique in terms of identity in the","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":" * UniqueParticipantList. However, the removal of a participant uses Participant#equals(Object) so","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":" * as to ensure that the participant with exactly the same fields will be removed.","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":" *","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":" *","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":" * @see Participant#isSameParticipant(Participant)","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"public class UniqueParticipantList implements Iterable\u003cParticipant\u003e {","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"    private final ObservableList\u003cParticipant\u003e internalList \u003d FXCollections.observableList(","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"            new ArrayList\u003c\u003e(), (Participant p) -\u003e new Observable[]{p.getNextOfKins()});","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"    private final ObservableList\u003cParticipant\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if the list contains an equivalent participant as the given argument.","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"    public boolean contains(Participant toCheck) {","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"        return internalList.stream().anyMatch(toCheck::isSameParticipant);","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"     * Adds a participant to the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"     * The participant must not already exist in the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"    public void add(Participant toAdd) {","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"            throw new DuplicateParticipantException();","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"     * Replaces the participant {@code target} in the list with {@code editedParticipant}.","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"     * The participant identity of {@code editedParticipant} must not be the same","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"     * as another existing participant in the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"    public void setParticipant(Participant target, Participant editedParticipant) {","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"        requireAllNonNull(target, editedParticipant);","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"            throw new ParticipantNotFoundException();","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"        if (!target.isSameParticipant(editedParticipant) \u0026\u0026 contains(editedParticipant)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"            throw new DuplicateParticipantException();","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"        internalList.set(index, editedParticipant);","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"     * Removes the equivalent participant from the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"     * The participant must exist in the list.","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"    public void remove(Participant toRemove) {","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"            throw new ParticipantNotFoundException();","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"    public void setParticipants(UniqueParticipantList replacement) {","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"     * Replaces the contents of this list with {@code participants}.","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"     * {@code participants} must not contain duplicate participants.","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"kanjitp"},"content":"    public void setParticipants(List\u003cParticipant\u003e participants) {","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"kanjitp"},"content":"        requireAllNonNull(participants);","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"kanjitp"},"content":"        if (!participantsAreUnique(participants)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"            throw new DuplicateParticipantException();","lastModifiedDate":"2021-09-28"},{"lineNumber":100,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"kanjitp"},"content":"        internalList.setAll(participants);","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"kanjitp"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-09-26"},{"lineNumber":107,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":108,"author":{"gitId":"kanjitp"},"content":"    public ObservableList\u003cParticipant\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"kanjitp"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":111,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":112,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":113,"author":{"gitId":"kanjitp"},"content":"    public Iterator\u003cParticipant\u003e iterator() {","lastModifiedDate":"2021-09-26"},{"lineNumber":114,"author":{"gitId":"kanjitp"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":117,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":118,"author":{"gitId":"kanjitp"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-26"},{"lineNumber":119,"author":{"gitId":"kanjitp"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"kanjitp"},"content":"            || (other instanceof UniqueParticipantList// instanceof handles nulls","lastModifiedDate":"2021-09-26"},{"lineNumber":121,"author":{"gitId":"kanjitp"},"content":"            \u0026\u0026 internalList.equals(((UniqueParticipantList) other).internalList));","lastModifiedDate":"2021-09-26"},{"lineNumber":122,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":123,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":124,"author":{"gitId":"kanjitp"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":125,"author":{"gitId":"kanjitp"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-26"},{"lineNumber":126,"author":{"gitId":"kanjitp"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-09-26"},{"lineNumber":127,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":128,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":129,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":130,"author":{"gitId":"XXJJXJ"},"content":"     * Returns true if {@code participants} contains only unique participants.","lastModifiedDate":"2021-09-28"},{"lineNumber":131,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":132,"author":{"gitId":"kanjitp"},"content":"    private boolean participantsAreUnique(List\u003cParticipant\u003e participants) {","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"kanjitp"},"content":"        for (int i \u003d 0; i \u003c participants.size() - 1; i++) {","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"kanjitp"},"content":"            for (int j \u003d i + 1; j \u003c participants.size(); j++) {","lastModifiedDate":"2021-09-26"},{"lineNumber":135,"author":{"gitId":"kanjitp"},"content":"                if (participants.get(i).isSameParticipant(participants.get(j))) {","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"kanjitp"},"content":"                    return false;","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"kanjitp"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":138,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":139,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":140,"author":{"gitId":"kanjitp"},"content":"        return true;","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":142,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"XXJJXJ":11,"kanjitp":131}},{"path":"src/main/java/seedu/address/model/participant/exceptions/DuplicateParticipantException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.model.participant.exceptions;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":" * Signals that the operation will result in duplicate Participants (Participants are considered duplicates if they","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":" * have the same identity).","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"public class DuplicateParticipantException extends RuntimeException {","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"    public DuplicateParticipantException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"        super(\"Operation would result in duplicate participants\");","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"kanjitp":11}},{"path":"src/main/java/seedu/address/model/participant/exceptions/ParticipantNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.model.participant.exceptions;","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"/**","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":" * Signals that the operation is unable to find the specified Participant.","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":" */","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"public class ParticipantNotFoundException extends RuntimeException {","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"    public ParticipantNotFoundException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"        super(\"Participant not found\");","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"kanjitp":5,"ntwbruce":5}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"    private final String tagName;","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"    public String getTagName() {","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"        return tagName;","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"        return tagName;","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ntwbruce":6,"-":52}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import java.util.List;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Address;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.BirthDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Email;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Name;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.NextOfKin;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Phone;","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"    public static Participant[] getSampleParticipants() {","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"        return new Participant[]{","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"            new Participant(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), BirthDate.of(2000, 8, 2),","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"                List.of(new NextOfKin(new Name(\"Janette Yeoh\"), new Phone(\"93822312\"), new Tag(\"Spouse\")))),","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"            new Participant(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), BirthDate.of(1970, 4, 2),","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"                List.of(new NextOfKin(new Name(\"Bennett Yu\"), new Phone(\"83612412\"), new Tag(\"Parent\")))),","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"            new Participant(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), BirthDate.of(1982, 5, 13),","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"                List.of(new NextOfKin(new Name(\"Daniel Pruvos\"), new Phone(\"83460328\"), new Tag(\"Brother\")))),","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"            new Participant(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), BirthDate.of(1999, 2, 2),","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"                List.of(new NextOfKin(new Name(\"Maria Li\"), new Phone(\"84459923\"), new Tag(\"Girlfriend\")))),","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"            new Participant(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), BirthDate.of(2000, 5, 23),","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"                List.of(new NextOfKin(new Name(\"Juliet Ibrahim\"), new Phone(\"89345342\"), new Tag(\"Grandparent\")))),","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"            new Participant(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), BirthDate.of(1999, 2, 8),","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"                List.of(new NextOfKin(new Name(\"Rouse Balakrishnan\"), new Phone(\"93822312\"), new Tag(\"Brother\"))))","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"    public static Event[] getSampleEvents() {","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"        return new Event[]{","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"davelowqx"},"content":"            new Event(new EventName(\"Investment Pitch with Sequoia Capital\"), new EventDate(\"2022-08-20\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"davelowqx"},"content":"                    new EventTime(\"0800\")),","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"davelowqx"},"content":"            new Event(new EventName(\"Managera Marketing Team Retreat\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"davelowqx"},"content":"                    new EventDate(\"2022-08-20\"), new EventTime(\"0900\")),","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"davelowqx"},"content":"            new Event(new EventName(\"Managera Product Team Retreat\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"davelowqx"},"content":"                    new EventDate(\"2021-09-21\"), new EventTime(\"0800\")),","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"davelowqx"},"content":"            new Event(new EventName(\"Managera Annual Shareholder Meeting\"),","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"davelowqx"},"content":"                    new EventDate(\"2021-11-20\"), new EventTime(\"0900\")),","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"davelowqx"},"content":"            new Event(new EventName(\"Managera Dinner and Dance\"), new EventDate(\"2021-09-30\")),","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"            new Event(new EventName(\"Monthly Roundup 28\"), new EventDate(\"2021-09-26\"), new EventTime(\"0900\")),","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"            new Event(new EventName(\"Monthly Roundup 29\"), new EventDate(\"2021-10-28\"), new EventTime(\"0900\")),","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"            new Event(new EventName(\"Monthly Roundup 30\"), new EventDate(\"2021-11-28\"), new EventTime(\"0900\")),","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"davelowqx"},"content":"            new Event(new EventName(\"Managera Alpha Release Milestone\"), new EventDate(\"2021-09-20\")),","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"        for (Participant sampleParticipant : getSampleParticipants()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"            sampleAb.addParticipant(sampleParticipant);","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"        for (Event sampleEvent : getSampleEvents()) {","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"            sampleAb.addEvent(sampleEvent);","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"XXJJXJ":17,"kanjitp":24,"davelowqx":10,"-":24,"lowkangn":5}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import java.util.List;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.ParticipantId;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":" * Json friendly {@link Event}","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"public class JsonAdaptedEvent {","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Event\u0027s %s field is missing!\";","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    private final String name;","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    private String isDone;","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    private String date;","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    private String time;","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"    private final List\u003cString\u003e participantIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"     * Constructs a {@code JsonAdaptedEvent} with the given Event details.","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    @JsonCreator","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"name\") String name, @JsonProperty(\"isDone\") String isDone,","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"                             @JsonProperty(\"date\") String date, @JsonProperty(\"time\") String time,","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"                             @JsonProperty(\"participants\") List\u003cString\u003e participantIds) {","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"        if (participantIds !\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"            this.participantIds.addAll(participantIds);","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"     * Converts a given {@code Event} into this class for Jackson use.","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"        name \u003d source.getNameString();","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        date \u003d source.getDateString();","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"        time \u003d source.getTimeString();","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"lowkangn"},"content":"        isDone \u003d source.getDoneValue() ? Event.COMPLETED : Event.UNCOMPLETED;","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"        participantIds.addAll(source.getParticipants().stream()","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"                .map(Participant::getParticipantId).map(ParticipantId::toString)","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"     * Converts this Json-friendly adapted person object into the model\u0027s {@code Event} object.","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"     * @return an Event instance representing the JsonAdaptedEvent.","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted event.","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"lowkangn"},"content":"    public Event toModelType(List\u003cParticipant\u003e allParticipants) throws IllegalValueException {","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"        if (this.name \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"                    EventName.class.getSimpleName()));","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"        if (!EventName.isValidEventName(this.name)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"        final EventName eventName \u003d new EventName(this.name);","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"        // Implementation might need improvements","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"        if (this.date \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"                    EventDate.class.getSimpleName()));","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"        if (!EventDate.isValidDate(this.date)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(EventDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"        final EventDate eventDate \u003d new EventDate(this.date);","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"        EventTime eventTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"        if (this.time \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"                    EventTime.class.getSimpleName()));","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"        if (EventTime.isValidTime(this.time)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"            eventTime \u003d new EventTime(this.time);","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"        } else if (this.time.equals(\"\")) {","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"            eventTime \u003d new EventTime(); //No time given","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"        } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(EventTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"kanjitp"},"content":"        boolean isDone \u003d this.isDone.equals(Event.COMPLETED);","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"lowkangn"},"content":"        final Event eventModel \u003d new Event(eventName, eventDate, eventTime, isDone, new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"lowkangn"},"content":"        // TODO: Optimise querying by using different data structures and algorithm in future updates","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"lowkangn"},"content":"        for (String participantId : participantIds) {","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"lowkangn"},"content":"            allParticipants.stream().filter(p -\u003e p.getIdValue().equals(participantId))","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"lowkangn"},"content":"                    .findFirst().ifPresent(eventModel::addParticipant);","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"lowkangn"},"content":"        return eventModel;","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":91,"kanjitp":10,"lowkangn":10}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedNextOfKin.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Name;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.NextOfKin;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Phone;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"public class JsonAdaptedNextOfKin {","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Next of Kin\u0027s %s field is missing!\";","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"    private final String name;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"    private final String phone;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"    private final JsonAdaptedTag tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"     * Constructs a {@code JsonAdaptedNextOfKin} with the given NextOfKin details.","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"    @JsonCreator","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"    public JsonAdaptedNextOfKin(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"                                @JsonProperty(\"tag\") JsonAdaptedTag tag) {","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"        this.tag \u003d tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"     * Converts a given {@code NextOfKin} into this class for Jackson use.","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"    public JsonAdaptedNextOfKin(NextOfKin source) {","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"        name \u003d source.getFullName();","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"        phone \u003d source.getPhoneValue();","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"        tag \u003d new JsonAdaptedTag(source.getTag());","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"     * Convert this Json representation of NextOfKin to NextOfKin object.","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"     * @return  NextOfKin object of this JsonAdaptedNextOfKin","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"     * @throws IllegalValueException if the given attributes in json fields is illegal","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"    public NextOfKin toModelType() throws IllegalValueException {","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"        final Tag tag \u003d this.tag.toModelType();","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"        return new NextOfKin(modelName, modelPhone, tag);","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"XXJJXJ":2,"kanjitp":60,"ntwbruce":2,"lowkangn":3}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedParticipant.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import java.util.List;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Address;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.BirthDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Email;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Name;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.NextOfKin;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.participant.ParticipantId;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Phone;","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"public class JsonAdaptedParticipant {","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Participant\u0027s %s field is missing!\";","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"    private final String id;","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    private final String name;","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    private final String phone;","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    private final String email;","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    private final String address;","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    //Add on for Managera Participants","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    private final String birthDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"    private final List\u003cJsonAdaptedNextOfKin\u003e nextOfKins \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"     * Constructs a {@code JsonAdaptedParticipant} with the given participant details.","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"    @JsonCreator","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"    public JsonAdaptedParticipant(@JsonProperty(\"id\") String id, @JsonProperty(\"name\") String name,","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"                                  @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"                                  @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"                                  @JsonProperty(\"birthDate\") String birthDate,","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"                                  @JsonProperty(\"nextOfKin\") List\u003cJsonAdaptedNextOfKin\u003e nextOfKins) {","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"        this.email \u003d email;","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"        this.address \u003d address;","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"        this.birthDate \u003d birthDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"        if (nextOfKins !\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"            this.nextOfKins.addAll(nextOfKins);","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"     * Converts a given {@code Participant} into this class for Json use.","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"    public JsonAdaptedParticipant(Participant source) {","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"        id \u003d source.getParticipantIdValue();","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"        name \u003d source.getFullName();","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"        phone \u003d source.getPhoneValue();","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"        email \u003d source.getEmailValue();","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"        address \u003d source.getAddressValue();","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"        birthDate \u003d source.getBirthDateString();","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"        nextOfKins.addAll(source.getNextOfKins().stream().map(JsonAdaptedNextOfKin::new).collect(Collectors.toList()));","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"    public String getId() {","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"        return id;","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"     * Converts this Jackson-friendly adapted participant object into the model\u0027s {@code Participant} object.","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted participant.","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"    public Participant toModelType() throws IllegalValueException {","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2021-09-18"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"kanjitp"},"content":"        BirthDate modelBirthDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":109,"author":{"gitId":"XXJJXJ"},"content":"        if (!(BirthDate.isValidDate(this.birthDate) \u0026\u0026 BirthDate.isValidBirthDate(this.birthDate))) {","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"            // throw new IllegalValueException(BirthDate.MESSAGE_DATE_CONSTRAINTS);","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"            // Can\u0027t do this due to BirthDate implementation","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"kanjitp"},"content":"            modelBirthDate \u003d BirthDate.notSpecified();","lastModifiedDate":"2021-09-26"},{"lineNumber":113,"author":{"gitId":"XXJJXJ"},"content":"        } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":114,"author":{"gitId":"XXJJXJ"},"content":"            modelBirthDate \u003d BirthDate.of(this.birthDate);","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":117,"author":{"gitId":"kanjitp"},"content":"        ArrayList\u003cNextOfKin\u003e modelNextOfKins \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":118,"author":{"gitId":"kanjitp"},"content":"        for (JsonAdaptedNextOfKin nok : nextOfKins) {","lastModifiedDate":"2021-09-26"},{"lineNumber":119,"author":{"gitId":"kanjitp"},"content":"            modelNextOfKins.add(nok.toModelType());","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":121,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":122,"author":{"gitId":"ntwbruce"},"content":"        ParticipantId modelId \u003d new ParticipantId(id);","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"ntwbruce"},"content":"        if (!ParticipantId.isValidId(id)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"ntwbruce"},"content":"            throw new IllegalValueException(ParticipantId.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"XXJJXJ"},"content":"        return new Participant(modelName, modelPhone, modelEmail, modelAddress,","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"XXJJXJ"},"content":"                modelBirthDate, modelNextOfKins, modelId);","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":130,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":90,"kanjitp":23,"ntwbruce":12,"lowkangn":5}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"        tagName \u003d source.getTagName();","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ntwbruce":1,"-":47}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"    public static final String MESSAGE_DUPLICATE_PARTICIPANT \u003d \"Participants list contains duplicate participant(s).\";","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    //Add on for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"Events list contains duplicate event(s).\";","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"    private final List\u003cJsonAdaptedParticipant\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    //Add on for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    private final List\u003cJsonAdaptedEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given participants and events.","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"participants\") List\u003cJsonAdaptedParticipant\u003e participants,","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"                                       @JsonProperty(\"events\") List\u003cJsonAdaptedEvent\u003e events) {","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"        this.participants.addAll(participants);","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        //Add on for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"        this.events.addAll(events);","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"        participants.addAll(source.getParticipantList().stream()","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"                .map(JsonAdaptedParticipant::new).collect(Collectors.toList()));","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"        //Add on for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"        events.addAll(source.getEventList().stream().map(JsonAdaptedEvent::new).collect(Collectors.toList()));","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"lowkangn"},"content":"        // Changed for Managera","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"lowkangn"},"content":"        for (JsonAdaptedParticipant jsonAdaptedParticipant : participants) {","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"lowkangn"},"content":"            Participant participant \u003d jsonAdaptedParticipant.toModelType();","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"lowkangn"},"content":"            if (addressBook.hasParticipant(participant)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"lowkangn"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PARTICIPANT);","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"lowkangn"},"content":"            addressBook.addParticipant(participant);","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"lowkangn"},"content":"        List\u003cParticipant\u003e participantList \u003d addressBook.getParticipantList();","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"lowkangn"},"content":"        //Add on for Managera","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"lowkangn"},"content":"        for (JsonAdaptedEvent jsonAdaptedEvent : events) {","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"lowkangn"},"content":"            Event event \u003d jsonAdaptedEvent.toModelType(participantList);","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"lowkangn"},"content":"            if (addressBook.hasEvent(event)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"lowkangn"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"lowkangn"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"lowkangn"},"content":"            addressBook.addEvent(event);","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"XXJJXJ":11,"kanjitp":7,"-":48,"lowkangn":17}},{"path":"src/main/java/seedu/address/ui/EventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"public class EventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"    private static final String FXML \u003d \"EventListCard.fxml\";","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"    public final Event event;","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    private Label id;","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    private Label name;","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    private Label isDone;","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    private Label date;","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    private Label time;","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    private Label numberOfParticipants;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"     * Creates a {@code EventCard} with the given {@code Event} and index to display.","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    public EventCard(Event event, int displayedIndex) {","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"        super(FXML);","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        this.event \u003d event;","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        name.setText(event.getNameString());","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"        isDone.setText(event.getDoneValue() ? Event.COMPLETED : Event.UNCOMPLETED);","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"        date.setText(event.getDateString());","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        time.setText(event.getTimeDisplayString());","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        int noOfParticipants \u003d event.getParticipants().size();","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"        if (noOfParticipants \u003c\u003d 1) {","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"            numberOfParticipants.setText(String.format(\"%d participant\", noOfParticipants));","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"        } else {","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"            numberOfParticipants.setText(String.format(\"%d participants\", noOfParticipants));","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"        // short circuit if same object","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"            return true;","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"        if (!(other instanceof EventCard)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"            return false;","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"        // state check","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"        EventCard card \u003d (EventCard) other;","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"                \u0026\u0026 event.equals(card.event);","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":65,"lowkangn":1}},{"path":"src/main/java/seedu/address/ui/EventListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"public class EventListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"    private static final String FXML \u003d \"EventListPanel.fxml\";","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"    private ListView\u003cEvent\u003e eventListView;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"     * Creates a {@code EventListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    public EventListPanel(ObservableList\u003cEvent\u003e eventList) {","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"        super(FXML);","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"        eventListView.setItems(eventList);","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"        eventListView.setCellFactory(listView -\u003e new EventListViewCell());","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Event} using a {@code EventCard}.","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    class EventListViewCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"                setGraphic(null);","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"                setText(null);","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"            } else {","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"                setGraphic(new EventCard(event, getIndex() + 1).getRoot());","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":42}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-t10-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"XXJJXJ":1,"-":101}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"    private ParticipantListPanel participantListPanel;","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"    //add-on for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"    private EventListPanel eventListPanel;","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"    private StackPane participantListPanelPlaceholder;","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"    //Add on for Managera","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"    private StackPane eventListPanelPlaceholder;","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"        this.primaryStage.setResizable(true);","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"kanjitp"},"content":"        participantListPanel \u003d new ParticipantListPanel(logic.getFilteredParticipantList());","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"ntwbruce"},"content":"        participantListPanelPlaceholder.getChildren().add(participantListPanel.getRoot());","lastModifiedDate":"2021-10-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"XXJJXJ"},"content":"        //Add-on for Managera","lastModifiedDate":"2021-09-18"},{"lineNumber":123,"author":{"gitId":"XXJJXJ"},"content":"        eventListPanel \u003d new EventListPanel(logic.getFilteredEventList());","lastModifiedDate":"2021-09-21"},{"lineNumber":124,"author":{"gitId":"XXJJXJ"},"content":"        eventListPanelPlaceholder.getChildren().add(eventListPanel.getRoot());","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"kanjitp"},"content":"    public ParticipantListPanel getParticipantListPanel() {","lastModifiedDate":"2021-09-26"},{"lineNumber":177,"author":{"gitId":"kanjitp"},"content":"        return participantListPanel;","lastModifiedDate":"2021-09-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"XXJJXJ":7,"kanjitp":5,"ntwbruce":3,"-":191}},{"path":"src/main/java/seedu/address/ui/ParticipantCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":" * An UI component that displays information of a {@code Participant}.","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"public class ParticipantCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"    private static final String FXML \u003d \"ParticipantListCard.fxml\";","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"    public final Participant participant;","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"    private Label birthDate;","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"    @FXML","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"    private Label nextOfKins;","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"     * Creates a {@code ParticipantCode} with the given {@code Participant} and index to display.","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"    public ParticipantCard(Participant participant, int displayedIndex) {","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"        this.participant \u003d participant;","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"        name.setText(participant.getFullName());","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"        phone.setText(participant.getPhoneValue());","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"        address.setText(participant.getAddressValue());","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"        email.setText(participant.getEmailValue());","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"        birthDate.setText(participant.getBirthDateString());","lastModifiedDate":"2021-10-03"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"        nextOfKins.setText(participant.getNextOfKinsListString());","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2021-10-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-02"},{"lineNumber":66,"author":{"gitId":"ntwbruce"},"content":"        if (!(other instanceof ParticipantCard)) {","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2021-10-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2021-10-02"},{"lineNumber":71,"author":{"gitId":"ntwbruce"},"content":"        ParticipantCard card \u003d (ParticipantCard) other;","lastModifiedDate":"2021-10-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-02"},{"lineNumber":73,"author":{"gitId":"ntwbruce"},"content":"                \u0026\u0026 participant.equals(card.participant);","lastModifiedDate":"2021-10-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kanjitp":1,"ntwbruce":19,"-":55}},{"path":"src/main/java/seedu/address/ui/ParticipantListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":" * Panel containing the list of participants.","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"public class ParticipantListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"    private static final String FXML \u003d \"ParticipantListPanel.fxml\";","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ParticipantListPanel.class);","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"    @FXML","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"    private ListView\u003cParticipant\u003e participantListView;","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"     * Creates a {@code ParticipantListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"    public ParticipantListPanel(ObservableList\u003cParticipant\u003e participantList) {","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"        super(FXML);","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"        participantListView.setItems(participantList);","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"        participantListView.setCellFactory(listView -\u003e new ParticipantListViewCell());","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Participant} using a {@code ParticipantCard}.","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"    class ParticipantListViewCell extends ListCell\u003cParticipant\u003e {","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"        @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"        protected void updateItem(Participant participant, boolean empty) {","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"            super.updateItem(participant, empty);","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"            if (empty || participant \u003d\u003d null) {","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"                setGraphic(null);","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"                setText(null);","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"            } else {","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"                setGraphic(new ParticipantCard(participant, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"XXJJXJ":1,"kanjitp":41,"ntwbruce":7}},{"path":"src/main/java/seedu/address/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import javafx.animation.Animation;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import javafx.animation.Transition;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import javafx.util.Duration;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"        Animation animation \u003d new Transition() {","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"            {","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"                setCycleDuration(Duration.millis(500));","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"            @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"            protected void interpolate(double frac) {","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"                // cast to float so Math round to int","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"                int n \u003d Math.round(feedbackToUser.length() * (float) frac);","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"                resultDisplay.setText(feedbackToUser.substring(0, n));","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"                resultDisplay.setWrapText(true);","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"        };","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"        animation.play();","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"kanjitp":19,"-":27}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/ManageraIcon.png\";","lastModifiedDate":"2021-09-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"XXJJXJ":1,"-":88}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"ntwbruce"},"content":"#tags, #notes, #participants {","lastModifiedDate":"2021-10-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":354,"author":{"gitId":"ntwbruce"},"content":"#participants .label {","lastModifiedDate":"2021-10-08"},{"lineNumber":355,"author":{"gitId":"ntwbruce"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-08"},{"lineNumber":356,"author":{"gitId":"ntwbruce"},"content":"    -fx-background-color: #4f7942;","lastModifiedDate":"2021-10-08"},{"lineNumber":357,"author":{"gitId":"ntwbruce"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-10-08"},{"lineNumber":358,"author":{"gitId":"ntwbruce"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-10-08"},{"lineNumber":359,"author":{"gitId":"ntwbruce"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-10-08"},{"lineNumber":360,"author":{"gitId":"ntwbruce"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-10-08"},{"lineNumber":361,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"ntwbruce":10,"-":351}},{"path":"src/main/resources/view/EventListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"            \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"            \u003cLabel fx:id\u003d\"time\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$time\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"            \u003cLabel fx:id\u003d\"isDone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$isDone\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"            \u003cLabel fx:id\u003d\"numberOfParticipants\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$numberOfParticipants\" /\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":36}},{"path":"src/main/resources/view/EventListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"    \u003cListView fx:id\u003d\"eventListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":1,"-":7}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"kanjitp":2,"-":44}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"\u003c?import javafx.scene.layout.BorderPane?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"\u003cfx:root minHeight\u003d\"800.0\" minWidth\u003d\"1400.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Managera\" type\u003d\"javafx.stage.Stage\"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"         xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"        \u003cImage url\u003d\"@/images/ManageraIcon.png\" /\u003e","lastModifiedDate":"2021-09-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"            \u003cVBox alignment\u003d\"CENTER\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                        \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"                \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" /\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"                \u003cBorderPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" style\u003d\"-fx-background-color: #616875#616875; -fx-padding: 10;\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"                    \u003ccenter\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"                        \u003cHBox alignment\u003d\"CENTER\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"                            \u003cchildren\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"                                \u003cVBox prefHeight\u003d\"849.0\" prefWidth\u003d\"589.0\" style\u003d\"-fx-padding: 5; -fx-background-color: #8B919A#8B919A;                                        -fx-background-radius: 20;\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"                                    \u003cchildren\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"                                        \u003cBorderPane maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" prefHeight\u003d\"60.0\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"                                            \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"                                                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"                                            \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"                                            \u003ccenter\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"                                                \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" prefHeight\u003d\"62.0\" prefWidth\u003d\"559.0\" style\u003d\"-fx-background-radius: 18 18 18 18;\" styleClass\u003d\"background\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                                                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"                                                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                                                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                                                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"                                            \u003c/center\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"                                        \u003c/BorderPane\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"                                        \u003cBorderPane VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"                                            \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"                                                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"                                            \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"                                            \u003ccenter\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"                                                \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" style\u003d\"-fx-background-radius: 18;\" styleClass\u003d\"background\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                                                    \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"                                                        \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                                    \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                                \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"                                            \u003c/center\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"                                        \u003c/BorderPane\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"                                    \u003c/children\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"                                \u003c/VBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"                                \u003cBorderPane prefHeight\u003d\"852.0\" prefWidth\u003d\"936.0\" style\u003d\"-fx-padding: 5; -fx-background-color: #8B919A#8B919A #8B919A#8B919A;                                              -fx-background-radius: 20;\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"                                    \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"                                        \u003cInsets left\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"                                    \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"                                    \u003ccenter\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"                                        \u003cHBox prefHeight\u003d\"100.0\" prefWidth\u003d\"200.0\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"                                            \u003cchildren\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"                                                \u003cBorderPane prefHeight\u003d\"965.0\" prefWidth\u003d\"570.0\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"                                                    \u003ccenter\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"                                                        \u003cVBox fx:id\u003d\"eventList\" minWidth\u003d\"126.0\" prefHeight\u003d\"634.0\" prefWidth\u003d\"580.0\" style\u003d\"-fx-padding: 10; -fx-background-color: #434A57#434A57;                                                                -fx-background-radius: 20;\" styleClass\u003d\"background\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                                                            \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"                                                                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                                                            \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"                                                            \u003cStackPane fx:id\u003d\"eventListPanelPlaceholder\" prefHeight\u003d\"612.0\" prefWidth\u003d\"116.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"                                                            \u003cBorderPane.margin\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"                                                                \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"                                                            \u003c/BorderPane.margin\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                                                        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"                                                    \u003c/center\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"                                                    \u003cpadding\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"                                                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"                                                    \u003c/padding\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"kanjitp"},"content":"                                                \u003c/BorderPane\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"kanjitp"},"content":"                                                \u003cBorderPane prefHeight\u003d\"200.0\" prefWidth\u003d\"570.0\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"kanjitp"},"content":"                                                    \u003ccenter\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"kanjitp"},"content":"                                                        \u003cVBox fx:id\u003d\"participantList\" minWidth\u003d\"219.0\" prefHeight\u003d\"634.0\" prefWidth\u003d\"580.0\" style\u003d\"-fx-padding: 10; -fx-background-color: #434A57#434A57; -fx-background-radius: 20;\" styleClass\u003d\"background\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"kanjitp"},"content":"                                                            \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"                                                                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"kanjitp"},"content":"                                                            \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"kanjitp"},"content":"                                                            \u003cStackPane fx:id\u003d\"participantListPanelPlaceholder\" prefHeight\u003d\"612.0\" prefWidth\u003d\"487.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"kanjitp"},"content":"                                                            \u003cBorderPane.margin\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"kanjitp"},"content":"                                                                \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"kanjitp"},"content":"                                                            \u003c/BorderPane.margin\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"kanjitp"},"content":"                                                        \u003c/VBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"kanjitp"},"content":"                                                    \u003c/center\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"kanjitp"},"content":"                                                    \u003cpadding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"kanjitp"},"content":"                                                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"kanjitp"},"content":"                                                    \u003c/padding\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"kanjitp"},"content":"                                                \u003c/BorderPane\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"kanjitp"},"content":"                                            \u003c/children\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"kanjitp"},"content":"                                        \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"kanjitp"},"content":"                                    \u003c/center\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"kanjitp"},"content":"                                \u003c/BorderPane\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"kanjitp"},"content":"                            \u003c/children\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"kanjitp"},"content":"                        \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"kanjitp"},"content":"                    \u003c/center\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"kanjitp"},"content":"                \u003c/BorderPane\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"XXJJXJ":3,"kanjitp":76,"-":43}},{"path":"src/main/resources/view/ParticipantListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" style\u003d\"-fx-background-radius: 18;\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"      xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"    \u003cGridPane style\u003d\"-fx-border-radius: 18;\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" style\u003d\"-fx-background-radius: 18;\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"                \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"            \u003cLabel fx:id\u003d\"birthDate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$birthDate\" /\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"            \u003cLabel fx:id\u003d\"nextOfKins\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$nextOfKins\" /\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"kanjitp":11,"ntwbruce":31}},{"path":"src/main/resources/view/ParticipantListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"\u003cVBox style\u003d\"-fx-background-radius: 18 18 18 18;\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"      xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"    \u003cListView fx:id\u003d\"participantListView\" style\u003d\"-fx-background-radius: 18 18 18 18;\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"kanjitp":9}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidParticipantAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"{","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"  \"participants\": [","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"      \"name\": \"Valid Person\",","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"      \"phone\": \"9482424\",","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"      \"email\": \"hans@example.com\",","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"      \"address\": \"4th street\",","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"      \"birthDate\": \"2000-08-02\",","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"      \"notes\": [","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"        {","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"          \"content\": \"Vegetarian\",","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"          \"importance\": \"VERY_HIGH\"","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"      ],","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"      \"nextOfKins\": [","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"        {","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"          \"name\": \"Janette Yeoh\",","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"          \"phone\": \"93822312\",","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"          \"tag\": \"Spouse\"","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"      ]","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"    },","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"    {","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"      \"name\": \"Person With Invalid Phone Field\",","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"      \"phone\": \"948asdf2424\",","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"      \"email\": \"hans@example.com\",","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"      \"address\": \"4th street\",","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"      \"birthDate\": \"2000-08-02\",","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"      \"notes\": [","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"        {","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"          \"content\": \"Vegetarian\",","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"          \"importance\": \"VERY_HIGH\"","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"      ],","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"      \"nextOfKins\": [","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"        {","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"          \"name\": \"Janette Yeoh\",","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"          \"phone\": \"93822312\",","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"          \"tag\": \"Spouse\"","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"      ]","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"  ]","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"kanjitp":44}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicateEventAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"{","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"  \"participants\" : [ ],","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"  \"events\" : [","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"    {","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"      \"name\" : \"Sleep\",","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"      \"isDone\" : \"Uncompleted\",","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"      \"date\" : \"2021-09-18\",","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"      \"time\" : \"1000\",","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"      \"participants\" : [ ]","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"    }, {","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"      \"name\" : \"Sleep\",","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"      \"isDone\" : \"Uncompleted\",","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"      \"date\" : \"2021-09-18\",","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"      \"time\" : \"1000\",","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"      \"participants\" : [ ]","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"  ]","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":17,"kanjitp":1}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicateParticipantAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"  \"participants\": [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"    \"id\" : \"aleyeo1\",","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"    \"name\" : \"Alex Yeoh\",","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"    \"phone\" : \"87438807\",","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"    \"email\" : \"alexyeoh@example.com\",","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"    \"address\" : \"Blk 30 Geylang Street 29, #06-40\",","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"    \"birthDate\" : \"2000-08-02\",","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"    \"notes\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"      \"content\" : \"Vegetarian\",","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"      \"importance\" : \"VERY_HIGH\"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"    } ],","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"    \"nextOfKins\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"      \"name\" : \"Janette Yeoh\",","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"      \"phone\" : \"93822312\",","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"      \"tag\" : \"Spouse\"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"    }] }, {","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"    \"id\" : \"aleyeo1\",","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"    \"name\" : \"Alex Yeoh\",","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"    \"phone\" : \"87438807\",","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"    \"email\" : \"alexyeoh@example.com\",","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"    \"address\" : \"Blk 30 Geylang Street 29, #06-40\",","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"    \"birthDate\" : \"2000-08-02\",","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"    \"notes\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"      \"content\" : \"Vegetarian\",","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"      \"importance\" : \"VERY_HIGH\"","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"    } ],","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"    \"nextOfKins\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"      \"name\" : \"Janette Yeoh\",","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"      \"phone\" : \"93822312\",","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"      \"tag\" : \"Spouse\"","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"    }] } ],","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"  \"events\" : []","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"XXJJXJ":2,"kanjitp":30,"ntwbruce":2,"-":2}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidEventAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"{","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"  \"participants\": [ ],","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"  \"events\" : [","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"     {","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"       \"name\" : \"^^^asda\",","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"       \"isDone\" : \"Uncompleted\",","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"       \"date\" : \"2021-09-18\",","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"       \"time\" : \"1000\",","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"       \"participants\" : [ ]","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"     }","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"   ]","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":11,"kanjitp":1}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidParticipantAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"  \"participants\": [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"    \"id\" : \"aleyeo1\",","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"    \"name\" : \"Alex Yeoh\",","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"    \"phone\" : \"87438807\",","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"    \"address\" : \"Blk 30 Geylang Street 29, #06-40\",","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"    \"birthDate\" : \"2000-08-02\",","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"    \"notes\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"      \"content\" : \"Vegetarian\",","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"      \"importance\" : \"VERY_HIGH\"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"    } ],","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"    \"nextOfKins\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"      \"name\" : \"Janette Yeoh\",","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"      \"phone\" : \"93822312\",","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"      \"tag\" : \"Spouse\"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"    } ] }],","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"  \"events\" : []","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"XXJJXJ":2,"kanjitp":14,"ntwbruce":1,"-":3}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalEventsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"{","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"  \"_comment\": \"AddressBook save file which contains the same Event values as in TypicalEvents#getTypicalAddressBook()\",","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"  \"participants\" : [ ],","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"  \"events\" : [","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"    {","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"      \"name\" : \"Sleep\",","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"      \"isDone\" : \"Uncompleted\",","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"      \"date\" : \"2021-09-18\",","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"      \"time\" : \"1000\",","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"      \"participants\" : [ ]","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"    }, {","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"      \"name\" : \"Sleep2\",","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"      \"isDone\" : \"Uncompleted\",","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"      \"date\" : \"2021-09-18\",","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"      \"time\" : \"1001\",","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"      \"participants\" : [ ]","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"  ]","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":18,"kanjitp":1}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalParticipantsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"  \"participants\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"    \"id\" : \"aleyeo1\",","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"    \"name\" : \"Alex Yeoh\",","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"    \"phone\" : \"87438807\",","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"    \"email\" : \"alexyeoh@example.com\",","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"    \"address\" : \"Blk 30 Geylang Street 29, #06-40\",","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"    \"birthDate\" : \"2000-08-02\",","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"    \"notes\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"      \"content\" : \"Vegetarian\",","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"      \"importance\" : \"VERY_HIGH\"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"    } ],","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"    \"nextOfKins\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"      \"name\" : \"Janette Yeoh\",","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"      \"phone\" : \"93822312\",","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"      \"tag\" : \"Spouse\"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"    } ]","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"    \"id\" : \"beryu1\",","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"    \"name\" : \"Bernice Yu\",","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"    \"phone\" : \"99272758\",","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"    \"email\" : \"berniceyu@example.com\",","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"    \"address\" : \"Blk 30 Lorong 3 Serangoon Gardens, #07-18\",","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"    \"tagged\" : [ \"colleagues\", \"friends\" ],","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"    \"birthDate\" : \"1970-04-02\",","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"    \"notes\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"      \"content\" : \"Allergic to Alcohol\",","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"      \"importance\" : \"VERY_HIGH\"","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"    } ],","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"    \"nextOfKins\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"      \"name\" : \"Bennett Yu\",","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"      \"phone\" : \"83612412\",","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"      \"tag\" : \"Parent\"","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"    } ]","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"    \"id\" : \"chaoli1\",","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"    \"name\" : \"Charlotte Oliveiro\",","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"    \"phone\" : \"93210283\",","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"    \"email\" : \"charlotte@example.com\",","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"    \"address\" : \"Blk 11 Ang Mo Kio Street 74, #11-04\",","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"    \"tagged\" : [ \"neighbours\" ],","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"    \"birthDate\" : \"1982-05-13\",","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"    \"notes\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"      \"content\" : \"Dislike pepper\",","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"      \"importance\" : \"MEDIUM\"","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"    } ],","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"    \"nextOfKins\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"      \"name\" : \"Daniel Pruvos\",","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"      \"phone\" : \"83460328\",","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"      \"tag\" : \"Brother\"","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"    } ]","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"    \"id\" : \"davli1\",","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"    \"name\" : \"David Li\",","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"    \"phone\" : \"91031282\",","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"    \"email\" : \"lidavid@example.com\",","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"    \"address\" : \"Blk 436 Serangoon Gardens Street 26, #16-43\",","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"    \"tagged\" : [ \"family\" ],","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"    \"birthDate\" : \"1999-02-02\",","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"    \"notes\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"      \"content\" : \"Vegetarian\",","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"      \"importance\" : \"VERY_HIGH\"","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"    } ],","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"    \"nextOfKins\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"      \"name\" : \"Maria Li\",","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"      \"phone\" : \"84459923\",","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"      \"tag\" : \"Girlfriend\"","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"    } ]","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"ntwbruce"},"content":"    \"id\" : \"irfibr1\",","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"    \"name\" : \"Irfan Ibrahim\",","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"    \"phone\" : \"92492021\",","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"    \"email\" : \"irfan@example.com\",","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"    \"address\" : \"Blk 47 Tampines Street 20, #17-35\",","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"    \"tagged\" : [ \"classmates\" ],","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"    \"birthDate\" : \"2000-05-23\",","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"    \"notes\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"      \"content\" : \"Dislike ill-mannered Person\",","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"      \"importance\" : \"MEDIUM\"","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"    } ],","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"    \"nextOfKins\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"      \"name\" : \"Juliet Ibrahim\",","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"      \"phone\" : \"89345342\",","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"      \"tag\" : \"Grandparent\"","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"    } ]","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"ntwbruce"},"content":"    \"id\" : \"roybal1\",","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"    \"name\" : \"Roy Balakrishnan\",","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"kanjitp"},"content":"    \"phone\" : \"92624417\",","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"    \"email\" : \"royb@example.com\",","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"kanjitp"},"content":"    \"address\" : \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"kanjitp"},"content":"    \"tagged\" : [ \"colleagues\" ],","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"kanjitp"},"content":"    \"birthDate\" : \"1999-02-08\",","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"kanjitp"},"content":"    \"notes\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"kanjitp"},"content":"      \"content\" : \"Excessive attraction to Alcohol\",","lastModifiedDate":"2021-09-26"},{"lineNumber":98,"author":{"gitId":"kanjitp"},"content":"      \"importance\" : \"HIGH\"","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"    } ],","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"kanjitp"},"content":"    \"nextOfKins\" : [ {","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"kanjitp"},"content":"      \"name\" : \"Rouse Balakrishnan\",","lastModifiedDate":"2021-09-26"},{"lineNumber":102,"author":{"gitId":"kanjitp"},"content":"      \"phone\" : \"93822312\",","lastModifiedDate":"2021-09-26"},{"lineNumber":103,"author":{"gitId":"kanjitp"},"content":"      \"tag\" : \"Brother\"","lastModifiedDate":"2021-09-26"},{"lineNumber":104,"author":{"gitId":"kanjitp"},"content":"    } ]","lastModifiedDate":"2021-09-26"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"  }],","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"  \"events\": []","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"XXJJXJ":2,"kanjitp":91,"ntwbruce":6,"-":8}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.ParticipantBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"        Participant expectedPerson \u003d new ParticipantBuilder().build();","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"        expectedModel.addParticipant(expectedPerson);","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"kanjitp"},"content":"    public void getFilteredParticipantList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredParticipantList().remove(0));","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"    public void getEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredEventList().remove(0));","lastModifiedDate":"2021-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"XXJJXJ":6,"kanjitp":7,"-":153}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.getTypicalAddressBook;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.ParticipantBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"    public void execute_newParticipant_success() {","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"        Participant validParticipant \u003d new ParticipantBuilder().build();","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"        expectedModel.addParticipant(validParticipant);","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"        assertCommandSuccess(new AddCommand(validParticipant), model,","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validParticipant), expectedModel);","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"    public void execute_duplicateParticipant_throwsCommandException() {","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"        Participant personInList \u003d model.getAddressBook().getParticipantList().get(0);","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"kanjitp":11,"-":34}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.testutil.DefaultModelStub;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.ParticipantBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"    public void execute_participantAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"        ModelStubAcceptingParticipantAdded modelStub \u003d new ModelStubAcceptingParticipantAdded();","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"        Participant validParticipant \u003d new ParticipantBuilder().build();","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"        CommandResult commandResult \u003d new AddCommand(validParticipant).execute(modelStub);","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validParticipant), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"        assertEquals(Arrays.asList(validParticipant), modelStub.participantsAdded);","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"        Participant validParticipant \u003d new ParticipantBuilder().build();","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"        AddCommand addCommand \u003d new AddCommand(validParticipant);","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"        DefaultModelStub modelStub \u003d new ModelStubWithParticipant(validParticipant);","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PARTICIPANT, () -\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"                addCommand.execute(modelStub));","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"        Participant alice \u003d new ParticipantBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"        Participant bob \u003d new ParticipantBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"lowkangn"},"content":"        assertFalse(addAliceCommand.hashCode() \u003d\u003d addBobCommand.hashCode());","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"lowkangn"},"content":"        assertTrue(addAliceCommand.hashCode()","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"lowkangn"},"content":"                \u003d\u003d new AddCommand(alice).hashCode());","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"lowkangn"},"content":"    public void testToString() {","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"lowkangn"},"content":"        Participant validParticipant \u003d new ParticipantBuilder().build();","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"lowkangn"},"content":"        AddCommand addCommand \u003d new AddCommand(validParticipant);","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"lowkangn"},"content":"        assertEquals(\"AddCommand{toAdd\u003d\" + validParticipant + \"}\", addCommand.toString());","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"lowkangn"},"content":"     * A Model stub that contains a single participant.","lastModifiedDate":"2021-10-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":87,"author":{"gitId":"ntwbruce"},"content":"    private class ModelStubWithParticipant extends DefaultModelStub {","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"lowkangn"},"content":"        private final Participant participant;","lastModifiedDate":"2021-10-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"lowkangn"},"content":"        ModelStubWithParticipant(Participant participant) {","lastModifiedDate":"2021-10-04"},{"lineNumber":91,"author":{"gitId":"lowkangn"},"content":"            requireNonNull(participant);","lastModifiedDate":"2021-10-04"},{"lineNumber":92,"author":{"gitId":"lowkangn"},"content":"            this.participant \u003d participant;","lastModifiedDate":"2021-10-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"kanjitp"},"content":"        public boolean hasParticipant(Participant participant) {","lastModifiedDate":"2021-09-26"},{"lineNumber":97,"author":{"gitId":"lowkangn"},"content":"            requireNonNull(participant);","lastModifiedDate":"2021-10-04"},{"lineNumber":98,"author":{"gitId":"lowkangn"},"content":"            return this.participant.isSameParticipant(participant);","lastModifiedDate":"2021-10-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":103,"author":{"gitId":"kanjitp"},"content":"     * A Model stub that always accept the participant being added.","lastModifiedDate":"2021-09-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":105,"author":{"gitId":"ntwbruce"},"content":"    private class ModelStubAcceptingParticipantAdded extends DefaultModelStub {","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"kanjitp"},"content":"        final ArrayList\u003cParticipant\u003e participantsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"kanjitp"},"content":"        public boolean hasParticipant(Participant participant) {","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"kanjitp"},"content":"            requireNonNull(participant);","lastModifiedDate":"2021-09-26"},{"lineNumber":111,"author":{"gitId":"kanjitp"},"content":"            return participantsAdded.stream().anyMatch(participant::isSameParticipant);","lastModifiedDate":"2021-09-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"kanjitp"},"content":"        public void addParticipant(Participant participant) {","lastModifiedDate":"2021-09-26"},{"lineNumber":116,"author":{"gitId":"kanjitp"},"content":"            requireNonNull(participant);","lastModifiedDate":"2021-09-26"},{"lineNumber":117,"author":{"gitId":"kanjitp"},"content":"            participantsAdded.add(participant);","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"kanjitp":23,"ntwbruce":4,"-":84,"lowkangn":15}},{"path":"src/test/java/seedu/address/logic/commands/AddEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.TypicalEvents.ANOTHER_EVENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.TypicalEvents.SAMPLE_EVENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"import seedu.address.testutil.DefaultModelStub;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"class AddEventCommandTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"    public void constructor_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddEventCommand(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"    public void execute_eventAcceptedByModel_addEventSuccessful() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"        ModelStubAcceptingEventAdded modelStub \u003d new ModelStubAcceptingEventAdded();","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"        Event validEvent \u003d SAMPLE_EVENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"        CommandResult commandResult \u003d new AddEventCommand(validEvent).execute(modelStub);","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"        assertEquals(String.format(AddEventCommand.MESSAGE_ADD_EVENT_SUCCESS, validEvent),","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"lowkangn"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"        assertEquals(Arrays.asList(validEvent), modelStub.eventsAdded);","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"    public void execute_duplicateEvent_throwsCommandException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"lowkangn"},"content":"        Event validEvent \u003d ANOTHER_EVENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"lowkangn"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommand(validEvent);","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"lowkangn"},"content":"        DefaultModelStub modelStub \u003d new AddEventCommandTest.ModelStubWithEvent(validEvent);","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"lowkangn"},"content":"        assertThrows(CommandException.class, AddEventCommand.MESSAGE_DUPLICATE_EVENT, () -\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"lowkangn"},"content":"                addEventCommand.execute(modelStub));","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"lowkangn"},"content":"    public void equals() {","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"lowkangn"},"content":"        AddEventCommand addSampleEvent \u003d new AddEventCommand(SAMPLE_EVENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"lowkangn"},"content":"        AddEventCommand addAnotherEvent \u003d new AddEventCommand(ANOTHER_EVENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"lowkangn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"lowkangn"},"content":"        assertTrue(addSampleEvent.equals(addSampleEvent));","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"lowkangn"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"lowkangn"},"content":"        AddEventCommand addSampleEventCopy \u003d new AddEventCommand(SAMPLE_EVENT);","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"lowkangn"},"content":"        assertTrue(addSampleEvent.equals(addSampleEventCopy));","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"lowkangn"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"lowkangn"},"content":"        assertFalse(addSampleEvent.equals(1));","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"lowkangn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"lowkangn"},"content":"        assertFalse(addSampleEvent.equals(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"lowkangn"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"lowkangn"},"content":"        assertFalse(addSampleEvent.equals(addAnotherEvent));","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"lowkangn"},"content":"     * A Model stub that contains a single event.","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"lowkangn"},"content":"    private class ModelStubWithEvent extends DefaultModelStub {","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"lowkangn"},"content":"        private final Event event;","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"lowkangn"},"content":"        ModelStubWithEvent(Event event) {","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"lowkangn"},"content":"            requireNonNull(event);","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"lowkangn"},"content":"            this.event \u003d event;","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"lowkangn"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"lowkangn"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"lowkangn"},"content":"            requireNonNull(event);","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"lowkangn"},"content":"            return this.event.isSameEvent(event);","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"lowkangn"},"content":"     * A Model stub that always accept the event being added.","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"lowkangn"},"content":"    private class ModelStubAcceptingEventAdded extends DefaultModelStub {","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"lowkangn"},"content":"        final ArrayList\u003cEvent\u003e eventsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"lowkangn"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"lowkangn"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"lowkangn"},"content":"            requireNonNull(event);","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"lowkangn"},"content":"            return eventsAdded.stream().anyMatch(event::isSameEvent);","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"lowkangn"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"lowkangn"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"lowkangn"},"content":"            requireNonNull(event);","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"lowkangn"},"content":"            eventsAdded.add(event);","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"lowkangn"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"lowkangn"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"lowkangn"},"content":"            return new AddressBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"lowkangn":114}},{"path":"src/test/java/seedu/address/logic/commands/AddNextOfKinCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.commands.AddNextOfKinCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalNextOfKins.KEN;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalNextOfKins.SARAH;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.DefaultModelStub;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.ParticipantBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"public class AddNextOfKinCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"    public void execute_addNextOfKinSuccessful() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"        Participant validParticipant \u003d new ParticipantBuilder().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"        ModelStubWithParticipant modelStub \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"                new ModelStubWithParticipant(validParticipant);","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"        CommandResult commandResult \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"                new AddNextOfKinCommand(Index.fromOneBased(1), SARAH).execute(modelStub);","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"        assertEquals(String.format(MESSAGE_SUCCESS, SARAH,","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"                validParticipant.getFullName()), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"        assertTrue(validParticipant.hasNextOfKin(SARAH));","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"        Participant validParticipant \u003d new ParticipantBuilder().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"        ModelStubWithParticipant modelStub \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"                new ModelStubWithParticipant(validParticipant);","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"                String.format(MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX,","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"                        AddNextOfKinCommand.COMMAND_WORD), () -\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"                        new AddNextOfKinCommand(Index.fromOneBased(2), SARAH).execute(modelStub));","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"    public void execute_participantContainsNextOfKin_throwsCommandException() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"        Participant validParticipant \u003d new ParticipantBuilder().withName(\"Johnny Tester\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"        ModelStubWithParticipant modelStub \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"                new ModelStubWithParticipant(validParticipant);","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"        CommandResult addKenFirst \u003d new AddNextOfKinCommand(Index.fromOneBased(1), KEN).execute(modelStub);","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"        AddNextOfKinCommand tryAddingKenAgain \u003d new AddNextOfKinCommand(Index.fromOneBased(1), KEN);","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"                Messages.showNextOfKinExists(KEN.getFullName(), validParticipant.getFullName()), () -\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"                        tryAddingKenAgain.execute(modelStub));","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"    public void equals() {","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"        Index firstIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"        Index secondIndex \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"        AddNextOfKinCommand addSarahSample \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"                new AddNextOfKinCommand(firstIndex, SARAH);","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"        AddNextOfKinCommand addSarahFirstIndex \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"                new AddNextOfKinCommand(firstIndex, SARAH);","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"        AddNextOfKinCommand addSarahSecondIndex \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"                new AddNextOfKinCommand(secondIndex, SARAH);","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"        AddNextOfKinCommand addKenSecondIndex \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"                new AddNextOfKinCommand(secondIndex, KEN);","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"        assertTrue(addSarahSample.equals(addSarahSample));","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"        assertTrue(addSarahSample.equals(addSarahFirstIndex));","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"        assertFalse(addSarahSample.equals(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"kanjitp"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"        assertFalse(addSarahSample.equals(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"kanjitp"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"kanjitp"},"content":"        assertFalse(addSarahFirstIndex.equals(addSarahSecondIndex));","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"kanjitp"},"content":"        // different next of kin -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"kanjitp"},"content":"        assertFalse(addSarahSecondIndex.equals(addKenSecondIndex));","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"kanjitp"},"content":"     * A Model stub that contains a single Event and single Participant.","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"kanjitp"},"content":"    private static class ModelStubWithParticipant extends DefaultModelStub {","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"kanjitp"},"content":"        private final Participant participant;","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"kanjitp"},"content":"        ModelStubWithParticipant(Participant participant) {","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"kanjitp"},"content":"            requireNonNull(participant);","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"kanjitp"},"content":"            this.participant \u003d participant;","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"kanjitp"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"kanjitp"},"content":"        public ObservableList\u003cParticipant\u003e getFilteredParticipantList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"kanjitp"},"content":"            ObservableList\u003cParticipant\u003e participants \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"kanjitp"},"content":"            participants.add(participant);","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"kanjitp"},"content":"            return participants;","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kanjitp":119}},{"path":"src/test/java/seedu/address/logic/commands/AddParticipantToEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.logic.commands.AddParticipantToEventCommand.MESSAGE_ADD_PARTICIPANT_TO_EVENT_SUCCESS;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.TypicalEvents.SAMPLE_EVENT;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"import seedu.address.testutil.DefaultModelStub;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"import seedu.address.testutil.ParticipantBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"class AddParticipantToEventCommandTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"    public void execute_addParticipantToEventSuccessful() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"        Participant validParticipant \u003d new ParticipantBuilder().build();","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"        EventName eventName \u003d SAMPLE_EVENT.getName();","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"        ModelStubWithEventAndParticipant modelStub \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"                new ModelStubWithEventAndParticipant(validParticipant, new EventBuilder().build());","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"        CommandResult commandResult \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"                new AddParticipantToEventCommand(Index.fromOneBased(1), Index.fromOneBased(1)).execute(modelStub);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"        assertEquals(String.format(MESSAGE_ADD_PARTICIPANT_TO_EVENT_SUCCESS,","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"                validParticipant.getFullName(), eventName), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"        assertTrue(modelStub.event.hasParticipant(validParticipant));","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"lowkangn"},"content":"    public void execute_participantNotInModel_throwsCommandException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"        ModelStubWithEvent modelStub \u003d new ModelStubWithEvent(new EventBuilder().build());","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"lowkangn"},"content":"        AddParticipantToEventCommand addParticipantToEventCommand \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"                new AddParticipantToEventCommand(Index.fromOneBased(1), Index.fromOneBased(1));","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"lowkangn"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"                MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX, () -\u003e addParticipantToEventCommand.execute(modelStub));","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"lowkangn"},"content":"    public void execute_eventNotInModel_throwsCommandException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"lowkangn"},"content":"        Participant validParticipant \u003d new ParticipantBuilder().build();","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"        ModelStubWithParticipant modelStub \u003d new ModelStubWithParticipant(validParticipant);","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"lowkangn"},"content":"        AddParticipantToEventCommand addParticipantToEventCommand \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"                new AddParticipantToEventCommand(Index.fromOneBased(1), Index.fromOneBased(1));","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"lowkangn"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"ntwbruce"},"content":"                MESSAGE_INVALID_EVENT_DISPLAYED_INDEX, () -\u003e addParticipantToEventCommand.execute(modelStub));","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"lowkangn"},"content":"    public void execute_eventContainsParticipant_throwsCommandException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"lowkangn"},"content":"        Participant validParticipant \u003d new ParticipantBuilder().build();","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"lowkangn"},"content":"        EventBuilder eventBuilder \u003d new EventBuilder();","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"lowkangn"},"content":"        eventBuilder.addParticipant(validParticipant);","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"        Event event \u003d eventBuilder.build();","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"lowkangn"},"content":"        ModelStubWithEventAndParticipant modelStub \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"                new ModelStubWithEventAndParticipant(validParticipant, event);","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"lowkangn"},"content":"        AddParticipantToEventCommand addParticipantToEventCommand \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"ntwbruce"},"content":"                new AddParticipantToEventCommand(Index.fromOneBased(1), Index.fromOneBased(1));","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"lowkangn"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"                Messages.showParticipantAlreadyEnrolled(validParticipant.getFullName(), event.getNameString()), () -\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"lowkangn"},"content":"                        addParticipantToEventCommand.execute(modelStub));","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"lowkangn"},"content":"    public void equals() {","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"ntwbruce"},"content":"        AddParticipantToEventCommand addFirstParticipantFirstEvent \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"ntwbruce"},"content":"                new AddParticipantToEventCommand(Index.fromOneBased(1), Index.fromOneBased(1));","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"ntwbruce"},"content":"        AddParticipantToEventCommand addSecondParticipantFirstEvent \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"ntwbruce"},"content":"                new AddParticipantToEventCommand(Index.fromOneBased(2), Index.fromOneBased(1));","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"ntwbruce"},"content":"        AddParticipantToEventCommand addFirstParticipantSecondEvent \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"ntwbruce"},"content":"                new AddParticipantToEventCommand(Index.fromOneBased(1), Index.fromOneBased(2));","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"lowkangn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(addFirstParticipantFirstEvent.equals(addFirstParticipantFirstEvent));","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"lowkangn"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"ntwbruce"},"content":"        AddParticipantToEventCommand addFirstParticipantFirstEventCopy \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"ntwbruce"},"content":"                new AddParticipantToEventCommand(Index.fromOneBased(1), Index.fromOneBased(1));","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(addFirstParticipantFirstEvent.equals(addFirstParticipantFirstEventCopy));","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"lowkangn"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(addFirstParticipantFirstEvent.equals(1));","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"lowkangn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(addFirstParticipantFirstEvent.equals(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"lowkangn"},"content":"        // different participant -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(addFirstParticipantFirstEvent.equals(addSecondParticipantFirstEvent));","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"lowkangn"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(addFirstParticipantFirstEvent.equals(addFirstParticipantSecondEvent));","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"lowkangn"},"content":"     * A Model stub that contains a single Event and single Participant.","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"lowkangn"},"content":"    private class ModelStubWithEventAndParticipant extends DefaultModelStub {","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"lowkangn"},"content":"        private final Participant participant;","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"lowkangn"},"content":"        private final Event event;","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"lowkangn"},"content":"        ModelStubWithEventAndParticipant(Participant participant, Event event) {","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"lowkangn"},"content":"            requireNonNull(event);","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"lowkangn"},"content":"            this.participant \u003d participant;","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"lowkangn"},"content":"            this.event \u003d event;","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"lowkangn"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"lowkangn"},"content":"        public ObservableList\u003cParticipant\u003e getFilteredParticipantList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"lowkangn"},"content":"            ObservableList\u003cParticipant\u003e participants \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"lowkangn"},"content":"            participants.add(participant);","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"lowkangn"},"content":"            return participants;","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"lowkangn"},"content":"        @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"lowkangn"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"lowkangn"},"content":"            ObservableList\u003cEvent\u003e events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"lowkangn"},"content":"            events.add(event);","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"lowkangn"},"content":"            return events;","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"ntwbruce"},"content":"     * A Model stub that contains a single Participant.","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":146,"author":{"gitId":"ntwbruce"},"content":"    private class ModelStubWithParticipant extends DefaultModelStub {","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"ntwbruce"},"content":"        private final Participant participant;","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"ntwbruce"},"content":"        ModelStubWithParticipant(Participant participant) {","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"ntwbruce"},"content":"            requireNonNull(participant);","lastModifiedDate":"2021-10-23"},{"lineNumber":151,"author":{"gitId":"ntwbruce"},"content":"            this.participant \u003d participant;","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":154,"author":{"gitId":"ntwbruce"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":155,"author":{"gitId":"ntwbruce"},"content":"        public ObservableList\u003cParticipant\u003e getFilteredParticipantList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":156,"author":{"gitId":"ntwbruce"},"content":"            ObservableList\u003cParticipant\u003e participants \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"ntwbruce"},"content":"            participants.add(participant);","lastModifiedDate":"2021-10-23"},{"lineNumber":158,"author":{"gitId":"ntwbruce"},"content":"            return participants;","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":160,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":161,"author":{"gitId":"ntwbruce"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":162,"author":{"gitId":"ntwbruce"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":163,"author":{"gitId":"ntwbruce"},"content":"            return FXCollections.observableArrayList();","lastModifiedDate":"2021-10-23"},{"lineNumber":164,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":167,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":168,"author":{"gitId":"ntwbruce"},"content":"     * A Model stub that contains a single Event.","lastModifiedDate":"2021-10-23"},{"lineNumber":169,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":170,"author":{"gitId":"ntwbruce"},"content":"    private class ModelStubWithEvent extends DefaultModelStub {","lastModifiedDate":"2021-10-23"},{"lineNumber":171,"author":{"gitId":"ntwbruce"},"content":"        private final Event event;","lastModifiedDate":"2021-10-23"},{"lineNumber":172,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":173,"author":{"gitId":"ntwbruce"},"content":"        ModelStubWithEvent(Event event) {","lastModifiedDate":"2021-10-23"},{"lineNumber":174,"author":{"gitId":"ntwbruce"},"content":"            requireNonNull(event);","lastModifiedDate":"2021-10-23"},{"lineNumber":175,"author":{"gitId":"ntwbruce"},"content":"            this.event \u003d event;","lastModifiedDate":"2021-10-23"},{"lineNumber":176,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":177,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":178,"author":{"gitId":"ntwbruce"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":179,"author":{"gitId":"ntwbruce"},"content":"        public ObservableList\u003cParticipant\u003e getFilteredParticipantList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":180,"author":{"gitId":"ntwbruce"},"content":"            return FXCollections.observableArrayList();","lastModifiedDate":"2021-10-23"},{"lineNumber":181,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":182,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":183,"author":{"gitId":"ntwbruce"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":184,"author":{"gitId":"ntwbruce"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":185,"author":{"gitId":"ntwbruce"},"content":"            ObservableList\u003cEvent\u003e events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-23"},{"lineNumber":186,"author":{"gitId":"ntwbruce"},"content":"            events.add(event);","lastModifiedDate":"2021-10-23"},{"lineNumber":187,"author":{"gitId":"ntwbruce"},"content":"            return events;","lastModifiedDate":"2021-10-23"},{"lineNumber":188,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":189,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":190,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"XXJJXJ":3,"ntwbruce":73,"lowkangn":114}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.getTypicalAddressBook;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"kanjitp":1,"-":31}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.parser.AddCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.parser.AddEventCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.parser.AddParticipantToEventParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.parser.DeleteCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"davelowqx"},"content":"import seedu.address.logic.parser.DeleteEventCommandParser;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.parser.DoneCommandParser;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.parser.EditCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.parser.FilterEventCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.parser.FindCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.parser.RemoveParticipantFromEventParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.parser.ShowEventDetailsCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.parser.ShowEventParticipantsCommandParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    private Model model;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"        model \u003d new ModelManager();","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"    public void isShowHelp_addCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from AddCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(new AddCommandParser().parse(\" n/Tom p/123 e/a@a.com a/Road\").execute(model).isShowHelp());","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"    public void isShowHelp_addEventCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from AddEventCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(new AddEventCommandParser().parse(\" n/Marathon SG d/2021-10-10\").execute(model).isShowHelp());","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"    public void isShowHelp_addParticipantToEventCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from AddParticipantToEvent","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"        AddCommand addCommand \u003d new AddCommandParser().parse(\" n/Tom p/123 e/a@a.com a/Road\");","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"        addCommand.execute(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommandParser().parse(\" n/M d/2021-11-11\");","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"        addEventCommand.execute(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(new AddParticipantToEventParser().parse(\" 1 1\").execute(model).isShowHelp());","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"    public void isShowHelp_deleteCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from DeleteCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"        AddCommand addCommand \u003d new AddCommandParser().parse(\" n/Tom p/123 e/a@a.com a/Road\");","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"        addCommand.execute(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(new DeleteCommandParser().parse(\" 1\").execute(model).isShowHelp());","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"    public void isShowHelp_doneEventCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"lowkangn"},"content":"        // CommandResult from DoneCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommandParser().parse(\" n/M d/2021-11-11\");","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"        addEventCommand.execute(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"lowkangn"},"content":"        assertFalse(new DoneCommandParser().parse(\" 1\").execute(model).isShowHelp());","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"    public void isShowHelp_editCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from EditCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"        AddCommand addCommand \u003d new AddCommandParser().parse(\" n/Tom p/123 e/a@a.com a/Road\");","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"        addCommand.execute(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(new EditCommandParser().parse(\" 1 n/Kenny\").execute(model).isShowHelp());","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"XXJJXJ"},"content":"    public void isShowHelp_filterEventCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from FilterEventCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(new FilterEventCommandParser().parse(\" d/2021-11-1\").execute(model).isShowHelp());","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"XXJJXJ"},"content":"    public void isShowHelp_findCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from FindCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(new FindCommandParser().parse(\" tom\").execute(model).isShowHelp());","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"XXJJXJ"},"content":"    public void isShowHelp_listCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from ListCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(new ListCommand().execute(model).isShowHelp());","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"XXJJXJ"},"content":"    public void isShowHelp_listEventCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from ListEventCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(new ListEventCommand().execute(model).isShowHelp());","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"XXJJXJ"},"content":"    public void isShowHelp_removeEventCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from RemoveEventCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"XXJJXJ"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommandParser().parse(\" n/M d/2021-11-11\");","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"XXJJXJ"},"content":"        addEventCommand.execute(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"davelowqx"},"content":"        assertFalse(new DeleteEventCommandParser().parse(\" 1\").execute(model).isShowHelp());","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"XXJJXJ"},"content":"    public void isShowHelp_removeParticipantFromEventCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from RemoveParticipantFromEventCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"XXJJXJ"},"content":"        AddCommand addCommand \u003d new AddCommandParser().parse(\" n/Tom p/123 e/a@a.com a/Road\");","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"XXJJXJ"},"content":"        addCommand.execute(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"XXJJXJ"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommandParser().parse(\" n/M d/2021-11-11\");","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"XXJJXJ"},"content":"        addEventCommand.execute(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"XXJJXJ"},"content":"        AddParticipantToEventCommand addParticipantToEventCommand \u003d new AddParticipantToEventParser()","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"ntwbruce"},"content":"                .parse(\" 1 1\");","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"XXJJXJ"},"content":"        addParticipantToEventCommand.execute(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(new RemoveParticipantFromEventParser().parse(\" 1 1\").execute(model).isShowHelp());","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"XXJJXJ"},"content":"    public void isShowHelp_showEventDetailsCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from ShowEventDetailsCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"XXJJXJ"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommandParser().parse(\" n/M d/2021-11-11\");","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"XXJJXJ"},"content":"        addEventCommand.execute(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(new ShowEventDetailsCommandParser().parse(\" 1\").execute(model).isShowHelp());","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"XXJJXJ"},"content":"    public void isShowHelp_showEventParticipantsCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from ShowEventParticipantsCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"XXJJXJ"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommandParser().parse(\" n/M d/2021-11-11\");","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"XXJJXJ"},"content":"        addEventCommand.execute(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(new ShowEventParticipantsCommandParser().parse(\" 1\").execute(model).isShowHelp());","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"XXJJXJ"},"content":"    public void isShowHelp_sortEventCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from SortEventCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(new SortEventCommand().execute(model).isShowHelp());","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"XXJJXJ"},"content":"    public void isShowHelp_clearCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from ClearCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(new ClearCommand().execute(model).isShowHelp());","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"XXJJXJ"},"content":"    public void isShowHelp_exitCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from ExitCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(new ExitCommand().execute(model).isShowHelp());","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"XXJJXJ"},"content":"    public void isShowHelp_helpCommand_returnsTrue() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from HelpCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(new HelpCommand().execute(model).isShowHelp());","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"XXJJXJ"},"content":"    public void isExit_addCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from AddCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(new AddCommandParser().parse(\" n/Tom p/123 e/a@a.com a/Road\").execute(model).isExit());","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"XXJJXJ"},"content":"    public void isExit_addEventCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from AddEventCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(new AddEventCommandParser().parse(\" n/Marathon SG d/2021-10-10\").execute(model).isExit());","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"XXJJXJ"},"content":"    public void isExit_addParticipantToEventCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from AddParticipantToEvent","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"XXJJXJ"},"content":"        AddCommand addCommand \u003d new AddCommandParser().parse(\" n/Tom p/123 e/a@a.com a/Road\");","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"XXJJXJ"},"content":"        addCommand.execute(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":211,"author":{"gitId":"XXJJXJ"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommandParser().parse(\" n/M d/2021-11-11\");","lastModifiedDate":"2021-10-12"},{"lineNumber":212,"author":{"gitId":"XXJJXJ"},"content":"        addEventCommand.execute(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(new AddParticipantToEventParser().parse(\" 1 1\").execute(model).isExit());","lastModifiedDate":"2021-10-23"},{"lineNumber":214,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"XXJJXJ"},"content":"    public void isExit_deleteCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from DeleteCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"XXJJXJ"},"content":"        AddCommand addCommand \u003d new AddCommandParser().parse(\" n/Tom p/123 e/a@a.com a/Road\");","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"XXJJXJ"},"content":"        addCommand.execute(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(new DeleteCommandParser().parse(\" 1\").execute(model).isExit());","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"XXJJXJ"},"content":"    public void isExit_doneEventCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"lowkangn"},"content":"        // CommandResult from DoneCommand","lastModifiedDate":"2021-10-23"},{"lineNumber":227,"author":{"gitId":"XXJJXJ"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommandParser().parse(\" n/M d/2021-11-11\");","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"XXJJXJ"},"content":"        addEventCommand.execute(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":229,"author":{"gitId":"lowkangn"},"content":"        assertFalse(new DoneCommandParser().parse(\" 1\").execute(model).isExit());","lastModifiedDate":"2021-10-23"},{"lineNumber":230,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"XXJJXJ"},"content":"    public void isExit_editCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from EditCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"XXJJXJ"},"content":"        AddCommand addCommand \u003d new AddCommandParser().parse(\" n/Tom p/123 e/a@a.com a/Road\");","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"XXJJXJ"},"content":"        addCommand.execute(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(new EditCommandParser().parse(\" 1 n/Kenny\").execute(model).isExit());","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":239,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":240,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":241,"author":{"gitId":"XXJJXJ"},"content":"    public void isExit_filterEventCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":242,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from FilterEventCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":243,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(new FilterEventCommandParser().parse(\" d/2021-11-1\").execute(model).isExit());","lastModifiedDate":"2021-10-12"},{"lineNumber":244,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":245,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":246,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":247,"author":{"gitId":"XXJJXJ"},"content":"    public void isExit_findCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":248,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from FindCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":249,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(new FindCommandParser().parse(\" tom\").execute(model).isExit());","lastModifiedDate":"2021-10-12"},{"lineNumber":250,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":251,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":252,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":253,"author":{"gitId":"XXJJXJ"},"content":"    public void isExit_listCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":254,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from ListCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":255,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(new ListCommand().execute(model).isExit());","lastModifiedDate":"2021-10-12"},{"lineNumber":256,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":257,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":258,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":259,"author":{"gitId":"XXJJXJ"},"content":"    public void isExit_listEventCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":260,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from ListEventCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":261,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(new ListEventCommand().execute(model).isExit());","lastModifiedDate":"2021-10-12"},{"lineNumber":262,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":263,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":264,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":265,"author":{"gitId":"XXJJXJ"},"content":"    public void isExit_removeEventCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":266,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from RemoveEventCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":267,"author":{"gitId":"XXJJXJ"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommandParser().parse(\" n/M d/2021-11-11\");","lastModifiedDate":"2021-10-12"},{"lineNumber":268,"author":{"gitId":"XXJJXJ"},"content":"        addEventCommand.execute(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":269,"author":{"gitId":"davelowqx"},"content":"        assertFalse(new DeleteEventCommandParser().parse(\" 1\").execute(model).isExit());","lastModifiedDate":"2021-10-27"},{"lineNumber":270,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":271,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":272,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":273,"author":{"gitId":"XXJJXJ"},"content":"    public void isExit_removeParticipantFromEventCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":274,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from RemoveParticipantFromEventCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":275,"author":{"gitId":"XXJJXJ"},"content":"        AddCommand addCommand \u003d new AddCommandParser().parse(\" n/Tom p/123 e/a@a.com a/Road\");","lastModifiedDate":"2021-10-12"},{"lineNumber":276,"author":{"gitId":"XXJJXJ"},"content":"        addCommand.execute(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":277,"author":{"gitId":"XXJJXJ"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommandParser().parse(\" n/M d/2021-11-11\");","lastModifiedDate":"2021-10-12"},{"lineNumber":278,"author":{"gitId":"XXJJXJ"},"content":"        addEventCommand.execute(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":279,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":280,"author":{"gitId":"XXJJXJ"},"content":"        AddParticipantToEventCommand addParticipantToEventCommand \u003d new AddParticipantToEventParser()","lastModifiedDate":"2021-10-12"},{"lineNumber":281,"author":{"gitId":"ntwbruce"},"content":"                .parse(\" 1 1\");","lastModifiedDate":"2021-10-23"},{"lineNumber":282,"author":{"gitId":"XXJJXJ"},"content":"        addParticipantToEventCommand.execute(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":283,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(new RemoveParticipantFromEventParser().parse(\" 1 1\").execute(model).isExit());","lastModifiedDate":"2021-10-23"},{"lineNumber":284,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":285,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":286,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":287,"author":{"gitId":"XXJJXJ"},"content":"    public void isExit_showEventDetailsCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":288,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from ShowEventDetailsCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":289,"author":{"gitId":"XXJJXJ"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommandParser().parse(\" n/M d/2021-11-11\");","lastModifiedDate":"2021-10-12"},{"lineNumber":290,"author":{"gitId":"XXJJXJ"},"content":"        addEventCommand.execute(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":291,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(new ShowEventDetailsCommandParser().parse(\" 1\").execute(model).isExit());","lastModifiedDate":"2021-10-24"},{"lineNumber":292,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":293,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":294,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":295,"author":{"gitId":"XXJJXJ"},"content":"    public void isExit_showEventParticipantsCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":296,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from ShowEventParticipantsCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":297,"author":{"gitId":"XXJJXJ"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommandParser().parse(\" n/M d/2021-11-11\");","lastModifiedDate":"2021-10-12"},{"lineNumber":298,"author":{"gitId":"XXJJXJ"},"content":"        addEventCommand.execute(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":299,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(new ShowEventParticipantsCommandParser().parse(\" 1\").execute(model).isExit());","lastModifiedDate":"2021-10-24"},{"lineNumber":300,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":301,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":302,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":303,"author":{"gitId":"XXJJXJ"},"content":"    public void isExit_sortEventCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":304,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from SortEventCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":305,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(new SortEventCommand().execute(model).isExit());","lastModifiedDate":"2021-10-12"},{"lineNumber":306,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":307,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":308,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":309,"author":{"gitId":"XXJJXJ"},"content":"    public void isExit_clearCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":310,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from ClearCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":311,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(new ClearCommand().execute(model).isExit());","lastModifiedDate":"2021-10-12"},{"lineNumber":312,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":313,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":314,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":315,"author":{"gitId":"XXJJXJ"},"content":"    public void isExit_helpCommand_returnsFalse() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":316,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from HelpCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":317,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(new HelpCommand().execute(model).isExit());","lastModifiedDate":"2021-10-12"},{"lineNumber":318,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":319,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":320,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":321,"author":{"gitId":"XXJJXJ"},"content":"    public void isExit_exitCommand_returnsTrue() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":322,"author":{"gitId":"XXJJXJ"},"content":"        // CommandResult from ExitCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":323,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(new ExitCommand().execute(model).isExit());","lastModifiedDate":"2021-10-12"},{"lineNumber":324,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":325,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":328,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":333,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":336,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"XXJJXJ":272,"davelowqx":3,"ntwbruce":8,"-":54,"lowkangn":5}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.ParticipantNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.EditParticipantDescriptorBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"    public static final String VALID_BIRTHDATE_AMY \u003d \"2001-08-22\";","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"    public static final String VALID_BIRTHDATE_BOB \u003d \"1989-12-31\";","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"    public static final String VALID_EVENT_NAME_SLEEP \u003d \"Sleep\";","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"    public static final String VALID_EVENT_NAME_JOGGING \u003d \"Jogging\";","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"    public static final String VALID_EVENT_DATE_SLEEP \u003d \"2021-10-10\";","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"    public static final String VALID_EVENT_DATE_JOGGING \u003d \"2022-12-12\";","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"    public static final String VALID_EVENT_TIME_SLEEP \u003d \"0000\";","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"    public static final String VALID_EVENT_TIME_JOGGING \u003d \"2359\";","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"    public static final String INVALID_EVENT_NAME_DESC \u003d \" \" + PREFIX_NAME + \"!@#@#!@\";","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"    public static final String INVALID_EVENT_DATE_DESC \u003d \" \" + PREFIX_DATE + \"2021-13\";","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"    public static final String INVALID_EVENT_TIME_DESC \u003d \" \" + PREFIX_TIME + \"2500\";","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"    public static final String EVENT_NAME_DESC_SLEEP \u003d \" \" + PREFIX_NAME + VALID_EVENT_NAME_SLEEP;","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"    public static final String EVENT_NAME_DESC_JOGGING \u003d \" \" + PREFIX_NAME + VALID_EVENT_NAME_JOGGING;","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"    public static final String EVENT_DATE_DESC_SLEEP \u003d \" \" + PREFIX_DATE + VALID_EVENT_DATE_SLEEP;","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"    public static final String EVENT_DATE_DESC_JOGGING \u003d \" \" + PREFIX_DATE + VALID_EVENT_DATE_JOGGING;","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"    public static final String EVENT_TIME_DESC_SLEEP \u003d \" \" + PREFIX_TIME + VALID_EVENT_TIME_SLEEP;","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"    public static final String EVENT_TIME_DESC_JOGGING \u003d \" \" + PREFIX_TIME + VALID_EVENT_TIME_JOGGING;","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"    public static final EditCommand.EditParticipantDescriptor DESC_P_AMY;","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"    public static final EditCommand.EditParticipantDescriptor DESC_P_BOB;","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"    public static final EditEventCommand.EditEventDescriptor DESC_E_SLEEP;","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"    public static final EditEventCommand.EditEventDescriptor DESC_E_JOGGING;","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"        DESC_P_AMY \u003d new EditParticipantDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).build();;","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"kanjitp"},"content":"        DESC_P_BOB \u003d new EditParticipantDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"        DESC_E_SLEEP \u003d new EditEventDescriptorBuilder().withEventName(VALID_EVENT_NAME_SLEEP).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"        DESC_E_JOGGING \u003d new EditEventDescriptorBuilder().withEventName(VALID_EVENT_NAME_JOGGING).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"lowkangn"},"content":"        List\u003cParticipant\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredParticipantList());","lastModifiedDate":"2021-10-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"kanjitp"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredParticipantList());","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":144,"author":{"gitId":"XXJJXJ"},"content":"     * Updates {@code model}\u0027s filtered list to show only the Participant at the given {@code targetIndex} in the","lastModifiedDate":"2021-09-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":147,"author":{"gitId":"kanjitp"},"content":"    public static void showParticipantAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-09-28"},{"lineNumber":148,"author":{"gitId":"kanjitp"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredParticipantList().size());","lastModifiedDate":"2021-09-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":150,"author":{"gitId":"lowkangn"},"content":"        Participant participant \u003d model.getFilteredParticipantList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-04"},{"lineNumber":151,"author":{"gitId":"lowkangn"},"content":"        final String[] splitName \u003d participant.getFullName().split(\"\\\\s+\");","lastModifiedDate":"2021-10-04"},{"lineNumber":152,"author":{"gitId":"lowkangn"},"content":"        model.updateFilteredParticipantList(new ParticipantNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"kanjitp"},"content":"        assertEquals(1, model.getFilteredParticipantList().size());","lastModifiedDate":"2021-09-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":157,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":158,"author":{"gitId":"lowkangn"},"content":"     * Updates {@code model}\u0027s filtered list to show only the Event at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-13"},{"lineNumber":159,"author":{"gitId":"lowkangn"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2021-10-13"},{"lineNumber":160,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":161,"author":{"gitId":"lowkangn"},"content":"    public static void showEventAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-13"},{"lineNumber":162,"author":{"gitId":"lowkangn"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredEventList().size());","lastModifiedDate":"2021-10-13"},{"lineNumber":163,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":164,"author":{"gitId":"lowkangn"},"content":"        Event event \u003d model.getFilteredEventList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-13"},{"lineNumber":165,"author":{"gitId":"lowkangn"},"content":"        final String[] splitName \u003d event.getNameString().split(\"\\\\s+\");","lastModifiedDate":"2021-10-13"},{"lineNumber":166,"author":{"gitId":"lowkangn"},"content":"        model.updateFilteredEventList(new EventNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-10-13"},{"lineNumber":167,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":168,"author":{"gitId":"lowkangn"},"content":"        assertEquals(1, model.getFilteredEventList().size());","lastModifiedDate":"2021-10-13"},{"lineNumber":169,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"XXJJXJ":28,"kanjitp":12,"-":108,"lowkangn":22}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showParticipantAtIndex;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.getTypicalAddressBook;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"        Participant participantToDelete \u003d model.getFilteredParticipantList()","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"                .get(INDEX_FIRST_PARTICIPANT.getZeroBased());","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PARTICIPANT_SUCCESS, participantToDelete);","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"        expectedModel.deleteParticipant(participantToDelete);","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredParticipantList().size() + 1);","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"        showParticipantAtIndex(model, INDEX_FIRST_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"lowkangn"},"content":"        Participant participantToDelete \u003d model.getFilteredParticipantList()","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"lowkangn"},"content":"                .get(INDEX_FIRST_PARTICIPANT.getZeroBased());","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"lowkangn"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PARTICIPANT_SUCCESS, participantToDelete);","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"lowkangn"},"content":"        expectedModel.deleteParticipant(participantToDelete);","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"lowkangn"},"content":"        showNoParticipant(expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"        showParticipantAtIndex(model, INDEX_FIRST_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getParticipantList().size());","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"lowkangn"},"content":"        // different participant -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"lowkangn"},"content":"    private void showNoParticipant(Model model) {","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"kanjitp"},"content":"        model.updateFilteredParticipantList(p -\u003e false);","lastModifiedDate":"2021-09-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"kanjitp"},"content":"        assertTrue(model.getFilteredParticipantList().isEmpty());","lastModifiedDate":"2021-09-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"kanjitp":23,"-":81,"lowkangn":7}},{"path":"src/test/java/seedu/address/logic/commands/DeleteEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showEventAtIndex;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"davelowqx"},"content":"import static seedu.address.logic.commands.DeleteEventCommand.MESSAGE_DELETE_EVENT_SUCCESS;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalAddressBook;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"davelowqx"},"content":" * {@code DeleteEventCommand}.","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"davelowqx"},"content":"class DeleteEventCommandTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"davelowqx"},"content":"        Event eventToDelete \u003d model.getFilteredEventList()","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"                .get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"davelowqx"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"davelowqx"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DELETE_EVENT_SUCCESS, eventToDelete);","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"davelowqx"},"content":"        expectedModel.deleteEvent(eventToDelete);","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"davelowqx"},"content":"        assertCommandSuccess(deleteEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"lowkangn"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"lowkangn"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEventList().size() + 1);","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"davelowqx"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"davelowqx"},"content":"        assertCommandFailure(deleteEventCommand, model, MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"lowkangn"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"lowkangn"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"davelowqx"},"content":"        Event eventToDelete \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"davelowqx"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"davelowqx"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DELETE_EVENT_SUCCESS, eventToDelete);","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"lowkangn"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"davelowqx"},"content":"        expectedModel.deleteEvent(eventToDelete);","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"lowkangn"},"content":"        showNoEvent(expectedModel);","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"davelowqx"},"content":"        assertCommandSuccess(deleteEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"lowkangn"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"lowkangn"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"lowkangn"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"lowkangn"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"lowkangn"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getEventList().size());","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"davelowqx"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"davelowqx"},"content":"        assertCommandFailure(deleteEventCommand, model, MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"lowkangn"},"content":"    public void equals() {","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"davelowqx"},"content":"        DeleteEventCommand deleteFirstCommand \u003d new DeleteEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"davelowqx"},"content":"        DeleteEventCommand deleteSecondCommand \u003d new DeleteEventCommand(INDEX_SECOND_EVENT);","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"lowkangn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"lowkangn"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"lowkangn"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"davelowqx"},"content":"        DeleteEventCommand deleteFirstCommandCopy \u003d new DeleteEventCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"lowkangn"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"lowkangn"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"lowkangn"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"lowkangn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"lowkangn"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"lowkangn"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"lowkangn"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"lowkangn"},"content":"     * Updates {@code model}\u0027s filtered list to show no events.","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"lowkangn"},"content":"    private void showNoEvent(Model model) {","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"lowkangn"},"content":"        model.updateFilteredEventList(p -\u003e false);","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"lowkangn"},"content":"        assertTrue(model.getFilteredEventList().isEmpty());","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"davelowqx":20,"lowkangn":91}},{"path":"src/test/java/seedu/address/logic/commands/DeleteNextOfKinCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.logic.commands.DeleteNextOfKinCommand.MESSAGE_INVALID_NOK_INDEX;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.logic.commands.DeleteNextOfKinCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.ALEX;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.NextOfKin;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.DefaultModelStub;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.ParticipantBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"public class DeleteNextOfKinCommandTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"    public void execute_addNextOfKinSuccessful() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"        Participant validParticipant \u003d new ParticipantBuilder(ALEX).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"        ModelStubWithParticipant modelStub \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"                new ModelStubWithParticipant(validParticipant);","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"        NextOfKin nextOfKinToRemove \u003d validParticipant.getNextOfKin(0);","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"        CommandResult commandResult \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"                new DeleteNextOfKinCommand(Index.fromOneBased(1), Index.fromOneBased(1)).execute(modelStub);","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"        assertEquals(String.format(MESSAGE_SUCCESS, nextOfKinToRemove.getFullName(),","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"                ALEX.getFullName()), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"        assertFalse(validParticipant.hasNextOfKin(nextOfKinToRemove));","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"        Participant validParticipant \u003d new ParticipantBuilder(ALEX).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"        ModelStubWithParticipant modelStub \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"                new ModelStubWithParticipant(validParticipant);","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"lowkangn"},"content":"                String.format(MESSAGE_INVALID_NOK_INDEX,","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"lowkangn"},"content":"                        DeleteNextOfKinCommand.COMMAND_WORD), () -\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"lowkangn"},"content":"                        new DeleteNextOfKinCommand(Index.fromOneBased(2), Index.fromOneBased(1)).execute(modelStub));","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"                String.format(MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX,","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"lowkangn"},"content":"                        DeleteNextOfKinCommand.COMMAND_WORD), () -\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"lowkangn"},"content":"                        new DeleteNextOfKinCommand(Index.fromOneBased(1), Index.fromOneBased(2)).execute(modelStub));","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"    public void equals() {","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"        Index firstIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"        Index secondIndex \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"lowkangn"},"content":"        DeleteNextOfKinCommand removeFirstSample \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"lowkangn"},"content":"                new DeleteNextOfKinCommand(firstIndex, firstIndex);","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"lowkangn"},"content":"        DeleteNextOfKinCommand removeFirstFromFirst \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"lowkangn"},"content":"                new DeleteNextOfKinCommand(firstIndex, firstIndex);","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"lowkangn"},"content":"        DeleteNextOfKinCommand removeFirstFromSecond \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"lowkangn"},"content":"                new DeleteNextOfKinCommand(firstIndex, secondIndex);","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"lowkangn"},"content":"        DeleteNextOfKinCommand removeSecondfromSecond \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"lowkangn"},"content":"                new DeleteNextOfKinCommand(secondIndex, secondIndex);","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"        assertTrue(removeFirstSample.equals(removeFirstSample));","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"        assertTrue(removeFirstSample.equals(removeFirstFromFirst));","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"        assertFalse(removeFirstFromFirst.equals(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"        assertFalse(removeFirstFromFirst.equals(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"        assertFalse(removeFirstFromFirst.equals(removeFirstFromSecond));","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"        assertFalse(removeFirstFromSecond.equals(removeSecondfromSecond));","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"        assertFalse(removeFirstFromFirst.equals(removeSecondfromSecond));","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"kanjitp"},"content":"     * A Model stub that contains a single Event and single Participant.","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"kanjitp"},"content":"    private static class ModelStubWithParticipant extends DefaultModelStub {","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"kanjitp"},"content":"        private final Participant participant;","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"kanjitp"},"content":"        ModelStubWithParticipant(Participant participant) {","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"kanjitp"},"content":"            requireNonNull(participant);","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"kanjitp"},"content":"            this.participant \u003d participant;","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"kanjitp"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"kanjitp"},"content":"        public ObservableList\u003cParticipant\u003e getFilteredParticipantList() {","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"kanjitp"},"content":"            ObservableList\u003cParticipant\u003e participants \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"kanjitp"},"content":"            participants.add(participant);","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"kanjitp"},"content":"            return participants;","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kanjitp":93,"lowkangn":17}},{"path":"src/test/java/seedu/address/logic/commands/DoneCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.logic.commands.DoneCommand.MESSAGE_EVENT_ALREADY_DONE;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalAddressBookCopy;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":" * {@code DoneCommand}.","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"class DoneCommandTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBookCopy(), new UserPrefs());","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"    public void execute_validIndex_success() {","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"        ModelManager expectedModel \u003d new ModelManager(getTypicalAddressBookCopy(), new UserPrefs());","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"        Event eventMarkedAsDone \u003d expectedModel.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"        eventMarkedAsDone.markAsDone();","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"        String expectedMessage \u003d String.format(DoneCommand.MESSAGE_DONE_EVENT_SUCCESS,","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"lowkangn"},"content":"                eventMarkedAsDone);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"        assertCommandSuccess(doneCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"lowkangn"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"lowkangn"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEventList().size() + 1);","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"lowkangn"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"lowkangn"},"content":"        assertCommandFailure(doneCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"lowkangn"},"content":"    public void execute_eventAlreadyDone_throwsCommandException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"lowkangn"},"content":"        model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased()).markAsDone();","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"lowkangn"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"lowkangn"},"content":"        assertCommandFailure(doneCommand, model, MESSAGE_EVENT_ALREADY_DONE);","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"lowkangn"},"content":"    public void equals() {","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"lowkangn"},"content":"        DoneCommand doneFirstCommand \u003d new DoneCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"lowkangn"},"content":"        DoneCommand doneSecondCommand \u003d new DoneCommand(INDEX_SECOND_EVENT);","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"lowkangn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"lowkangn"},"content":"        assertTrue(doneFirstCommand.equals(doneFirstCommand));","lastModifiedDate":"2021-10-03"},{"lineNumber":64,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":65,"author":{"gitId":"lowkangn"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-03"},{"lineNumber":66,"author":{"gitId":"lowkangn"},"content":"        DoneCommand doneFirstCommandCopy \u003d new DoneCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"lowkangn"},"content":"        assertTrue(doneFirstCommand.equals(doneFirstCommandCopy));","lastModifiedDate":"2021-10-03"},{"lineNumber":68,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":69,"author":{"gitId":"lowkangn"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"lowkangn"},"content":"        assertFalse(doneFirstCommand.equals(1));","lastModifiedDate":"2021-10-03"},{"lineNumber":71,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":72,"author":{"gitId":"lowkangn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"lowkangn"},"content":"        assertFalse(doneFirstCommand.equals(null));","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":75,"author":{"gitId":"lowkangn"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-03"},{"lineNumber":76,"author":{"gitId":"lowkangn"},"content":"        assertFalse(doneFirstCommand.equals(doneSecondCommand));","lastModifiedDate":"2021-10-03"},{"lineNumber":77,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"lowkangn":78}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_P_AMY;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_P_BOB;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showParticipantAtIndex;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.getTypicalAddressBook;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.commands.EditCommand.EditParticipantDescriptor;","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.EditParticipantDescriptorBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.ParticipantBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"        Participant editedParticipant \u003d new ParticipantBuilder().build();","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"        EditParticipantDescriptor descriptor \u003d new EditParticipantDescriptorBuilder(editedParticipant).build();","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PARTICIPANT, descriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PARTICIPANT_SUCCESS, editedParticipant);","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"        expectedModel.setParticipant(model.getFilteredParticipantList().get(0), editedParticipant);","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"        Index indexLastParticipant \u003d Index.fromOneBased(model.getFilteredParticipantList().size());","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"        Participant lastParticipant \u003d model.getFilteredParticipantList().get(indexLastParticipant.getZeroBased());","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"        ParticipantBuilder participantInList \u003d new ParticipantBuilder(lastParticipant);","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"        Participant editedParticipant \u003d participantInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"        EditParticipantDescriptor descriptor \u003d new EditParticipantDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastParticipant, descriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PARTICIPANT_SUCCESS, editedParticipant);","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"        expectedModel.setParticipant(lastParticipant, editedParticipant);","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PARTICIPANT, new EditParticipantDescriptor());","lastModifiedDate":"2021-09-28"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"        Participant editedParticipant \u003d model.getFilteredParticipantList().get(INDEX_FIRST_PARTICIPANT.getZeroBased());","lastModifiedDate":"2021-09-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PARTICIPANT_SUCCESS, editedParticipant);","lastModifiedDate":"2021-09-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"        showParticipantAtIndex(model, INDEX_FIRST_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"        Participant participantInFilteredList \u003d model.getFilteredParticipantList()","lastModifiedDate":"2021-09-28"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"                .get(INDEX_FIRST_PARTICIPANT.getZeroBased());","lastModifiedDate":"2021-09-28"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"        Participant editedParticipant \u003d new ParticipantBuilder(participantInFilteredList)","lastModifiedDate":"2021-09-28"},{"lineNumber":89,"author":{"gitId":"kanjitp"},"content":"                .withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-09-28"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PARTICIPANT,","lastModifiedDate":"2021-09-28"},{"lineNumber":91,"author":{"gitId":"kanjitp"},"content":"                new EditParticipantDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"kanjitp"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PARTICIPANT_SUCCESS, editedParticipant);","lastModifiedDate":"2021-09-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"        showParticipantAtIndex(expectedModel, INDEX_FIRST_PARTICIPANT);","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"kanjitp"},"content":"        expectedModel.setParticipant(model.getFilteredParticipantList().get(0), editedParticipant);","lastModifiedDate":"2021-09-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"kanjitp"},"content":"    public void execute_duplicateParticipantUnfilteredList_failure() {","lastModifiedDate":"2021-09-28"},{"lineNumber":104,"author":{"gitId":"kanjitp"},"content":"        Participant firstParticipant \u003d model.getFilteredParticipantList().get(INDEX_FIRST_PARTICIPANT.getZeroBased());","lastModifiedDate":"2021-09-28"},{"lineNumber":105,"author":{"gitId":"kanjitp"},"content":"        EditParticipantDescriptor descriptor \u003d new EditParticipantDescriptorBuilder(firstParticipant).build();","lastModifiedDate":"2021-09-28"},{"lineNumber":106,"author":{"gitId":"kanjitp"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PARTICIPANT, descriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"kanjitp"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"kanjitp"},"content":"    public void execute_duplicateParticipantFilteredList_failure() {","lastModifiedDate":"2021-09-28"},{"lineNumber":113,"author":{"gitId":"kanjitp"},"content":"        showParticipantAtIndex(model, INDEX_FIRST_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"kanjitp"},"content":"        // edit participant in filtered list into a duplicate in address book","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"kanjitp"},"content":"        Participant participantInList \u003d model.getAddressBook()","lastModifiedDate":"2021-09-28"},{"lineNumber":117,"author":{"gitId":"kanjitp"},"content":"                .getParticipantList().get(INDEX_SECOND_PARTICIPANT.getZeroBased());","lastModifiedDate":"2021-09-28"},{"lineNumber":118,"author":{"gitId":"kanjitp"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PARTICIPANT,","lastModifiedDate":"2021-09-28"},{"lineNumber":119,"author":{"gitId":"kanjitp"},"content":"                new EditParticipantDescriptorBuilder(participantInList).build());","lastModifiedDate":"2021-09-28"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"kanjitp"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"kanjitp"},"content":"    public void execute_invalidParticipantIndexUnfilteredList_failure() {","lastModifiedDate":"2021-09-28"},{"lineNumber":126,"author":{"gitId":"kanjitp"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredParticipantList().size() + 1);","lastModifiedDate":"2021-09-26"},{"lineNumber":127,"author":{"gitId":"kanjitp"},"content":"        EditParticipantDescriptor descriptor \u003d new EditParticipantDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-09-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"kanjitp"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"kanjitp"},"content":"    public void execute_invalidParticipantIndexFilteredList_failure() {","lastModifiedDate":"2021-09-28"},{"lineNumber":139,"author":{"gitId":"kanjitp"},"content":"        showParticipantAtIndex(model, INDEX_FIRST_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":140,"author":{"gitId":"kanjitp"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"kanjitp"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getParticipantList().size());","lastModifiedDate":"2021-09-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"kanjitp"},"content":"                new EditParticipantDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-09-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"kanjitp"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-28"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"kanjitp"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PARTICIPANT, DESC_P_AMY);","lastModifiedDate":"2021-09-28"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"kanjitp"},"content":"        EditParticipantDescriptor copyDescriptor \u003d new EditParticipantDescriptor(DESC_P_AMY);","lastModifiedDate":"2021-09-26"},{"lineNumber":156,"author":{"gitId":"kanjitp"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PARTICIPANT, copyDescriptor);","lastModifiedDate":"2021-09-28"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"kanjitp"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PARTICIPANT, DESC_P_AMY)));","lastModifiedDate":"2021-09-28"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"kanjitp"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PARTICIPANT, DESC_P_BOB)));","lastModifiedDate":"2021-09-28"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"XXJJXJ":3,"kanjitp":62,"-":110}},{"path":"src/test/java/seedu/address/logic/commands/EditEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_E_JOGGING;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_E_SLEEP;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_JOGGING;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showEventAtIndex;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalAddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.commands.EditEventCommand.EditEventDescriptor;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditEventCommand.","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"public class EditEventCommandTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"    public void execute_allFieldsSpecifiedUnfilteredEventList_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        Event editedEvent \u003d new EventBuilder().build();","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        EditEventDescriptor editEventDescriptor \u003d new EditEventDescriptorBuilder(editedEvent).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT, editEventDescriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d String.format(EditEventCommand.MESSAGE_EDIT_EVENT_SUCCESS, editedEvent);","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"        expectedModel.setEvent(model.getFilteredEventList().get(0), editedEvent);","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"        assertCommandSuccess(editEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"        Index indexLastEvent \u003d Index.fromOneBased(model.getFilteredEventList().size());","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"        Event lastEvent \u003d model.getFilteredEventList().get(indexLastEvent.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"        EventBuilder eventInList \u003d new EventBuilder(lastEvent);","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"        Event editedEvent \u003d eventInList.withEventName(VALID_EVENT_NAME_JOGGING).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder()","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"                .withEventName(VALID_EVENT_NAME_JOGGING).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(indexLastEvent, descriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d String.format(EditEventCommand.MESSAGE_EDIT_EVENT_SUCCESS, editedEvent);","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"        expectedModel.setEvent(lastEvent, editedEvent);","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"        assertCommandSuccess(editEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT, new EditEventDescriptor());","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"        Event editedEvent \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d String.format(EditEventCommand.MESSAGE_EDIT_EVENT_SUCCESS, editedEvent);","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"        assertCommandSuccess(editEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"        Event eventInFilteredList \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"        Event editedEvent \u003d new EventBuilder(eventInFilteredList).withEventName(VALID_EVENT_NAME_JOGGING).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT,","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"                new EditEventDescriptorBuilder().withEventName(VALID_EVENT_NAME_JOGGING).build());","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d String.format(EditEventCommand.MESSAGE_EDIT_EVENT_SUCCESS, editedEvent);","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"        showEventAtIndex(expectedModel, INDEX_FIRST_EVENT);","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"        expectedModel.setEvent(model.getFilteredEventList().get(0), editedEvent);","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"        assertCommandSuccess(editEventCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"    public void execute_duplicateEventUnfilteredList_failure() {","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"        Event firstEvent \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(firstEvent).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_SECOND_EVENT, descriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"        assertCommandFailure(editEventCommand, model, EditEventCommand.MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"    public void execute_duplicateEventFilteredList_failure() {","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"XXJJXJ"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"        // edit event in filtered list into a duplicate in address book","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"XXJJXJ"},"content":"        Event eventInList \u003d model.getAddressBook().getEventList().get(INDEX_SECOND_EVENT.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"XXJJXJ"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT,","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"XXJJXJ"},"content":"                new EditEventDescriptorBuilder(eventInList).build());","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"XXJJXJ"},"content":"        assertCommandFailure(editEventCommand, model, EditEventCommand.MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"XXJJXJ"},"content":"    public void execute_invalidEventIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"XXJJXJ"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEventList().size() + 1);","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"XXJJXJ"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder()","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"XXJJXJ"},"content":"                .withEventName(VALID_EVENT_NAME_JOGGING).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"XXJJXJ"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"XXJJXJ"},"content":"        assertCommandFailure(editEventCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-17"},{"lineNumber":127,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":128,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":129,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":130,"author":{"gitId":"XXJJXJ"},"content":"    public void execute_invalidEventIndexFilteredList_failure() {","lastModifiedDate":"2021-10-17"},{"lineNumber":131,"author":{"gitId":"XXJJXJ"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"XXJJXJ"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"XXJJXJ"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getEventList().size());","lastModifiedDate":"2021-10-17"},{"lineNumber":135,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"XXJJXJ"},"content":"        EditEventCommand editEventCommand \u003d new EditEventCommand(outOfBoundIndex,","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"XXJJXJ"},"content":"                new EditEventDescriptorBuilder().withEventName(VALID_EVENT_NAME_JOGGING).build());","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"XXJJXJ"},"content":"        assertCommandFailure(editEventCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-17"},{"lineNumber":140,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":141,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":142,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":143,"author":{"gitId":"XXJJXJ"},"content":"    public void equals() {","lastModifiedDate":"2021-10-17"},{"lineNumber":144,"author":{"gitId":"XXJJXJ"},"content":"        final EditEventCommand standardEditEventCommand \u003d new EditEventCommand(INDEX_FIRST_EVENT, DESC_E_JOGGING);","lastModifiedDate":"2021-10-17"},{"lineNumber":145,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":146,"author":{"gitId":"XXJJXJ"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-17"},{"lineNumber":147,"author":{"gitId":"XXJJXJ"},"content":"        EditEventDescriptor copyDescriptor \u003d new EditEventDescriptor(DESC_E_JOGGING);","lastModifiedDate":"2021-10-17"},{"lineNumber":148,"author":{"gitId":"XXJJXJ"},"content":"        EditEventCommand commandWithSameValues \u003d new EditEventCommand(INDEX_FIRST_EVENT, copyDescriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":149,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(standardEditEventCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-17"},{"lineNumber":150,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":151,"author":{"gitId":"XXJJXJ"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-17"},{"lineNumber":152,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(standardEditEventCommand.equals(standardEditEventCommand));","lastModifiedDate":"2021-10-17"},{"lineNumber":153,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":154,"author":{"gitId":"XXJJXJ"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":155,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(standardEditEventCommand.equals(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":156,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":157,"author":{"gitId":"XXJJXJ"},"content":"        // different command type -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(standardEditEventCommand.equals(new SortEventCommand()));","lastModifiedDate":"2021-10-17"},{"lineNumber":159,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":160,"author":{"gitId":"XXJJXJ"},"content":"        // different index -\u003e false","lastModifiedDate":"2021-10-17"},{"lineNumber":161,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(standardEditEventCommand.equals(new EditEventCommand(INDEX_SECOND_EVENT, DESC_E_JOGGING)));","lastModifiedDate":"2021-10-17"},{"lineNumber":162,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":163,"author":{"gitId":"XXJJXJ"},"content":"        // different descriptor -\u003e false","lastModifiedDate":"2021-10-17"},{"lineNumber":164,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(standardEditEventCommand.equals(new EditEventCommand(INDEX_FIRST_EVENT, DESC_E_SLEEP)));","lastModifiedDate":"2021-10-17"},{"lineNumber":165,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":166,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":167,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"XXJJXJ":167}},{"path":"src/test/java/seedu/address/logic/commands/FilterEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_EVENTS_LISTED_OVERVIEW;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalAddressBook;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDateTimePredicate;","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":" * Contains integration tests (interaction with the Model) for FilterEventCommand.","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"public class FilterEventCommandTest {","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    public void equals() {","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        EventDateTimePredicate firstPredicate \u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"                new EventDateTimePredicate(Collections.singletonList(\"2021-09-18\"));","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        EventDateTimePredicate secondPredicate \u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"                new EventDateTimePredicate(Arrays.asList(\"2021-09-18\", \"1000\"));","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"        FilterEventCommand filterFirstCommand \u003d new FilterEventCommand(firstPredicate);","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        FilterEventCommand filterSecondCommand \u003d new FilterEventCommand(secondPredicate);","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCommand));","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-09-22"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        FilterEventCommand filterFirstCopy \u003d new FilterEventCommand(firstPredicate);","lastModifiedDate":"2021-09-22"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(filterFirstCommand.equals(filterFirstCopy));","lastModifiedDate":"2021-09-22"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-09-22"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(filterFirstCommand.equals(1));","lastModifiedDate":"2021-09-22"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-22"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(filterFirstCommand.equals(null));","lastModifiedDate":"2021-09-22"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"        // different object -\u003e returns false","lastModifiedDate":"2021-09-22"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(filterFirstCommand.equals(filterSecondCommand));","lastModifiedDate":"2021-09-22"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"    public void execute_onlyDateInput_multipleEventsFound() {","lastModifiedDate":"2021-09-22"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EVENTS_LISTED_OVERVIEW, 4);","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"        EventDateTimePredicate predicate \u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"                new EventDateTimePredicate(Collections.singletonList(\"2021-09-18\"));","lastModifiedDate":"2021-09-22"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"        FilterEventCommand command \u003d new FilterEventCommand(predicate);","lastModifiedDate":"2021-09-22"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2021-09-22"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-22"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(model.getFilteredEventList(), expectedModel.getFilteredEventList());","lastModifiedDate":"2021-09-22"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"    public void execute_dateAndTimeInput_oneEventFound() {","lastModifiedDate":"2021-09-22"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EVENTS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"        EventDateTimePredicate predicate \u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"ntwbruce"},"content":"                new EventDateTimePredicate(Arrays.asList(\"2021-09-18\", \"1001\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"        FilterEventCommand command \u003d new FilterEventCommand(predicate);","lastModifiedDate":"2021-09-22"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-22"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(model.getFilteredEventList(), expectedModel.getFilteredEventList());","lastModifiedDate":"2021-09-22"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"    public void execute_onlyDateInput_noEventFound() {","lastModifiedDate":"2021-09-22"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EVENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"        EventDateTimePredicate predicate \u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"                new EventDateTimePredicate(Collections.singletonList(\"1-9-18\"));","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"        FilterEventCommand command \u003d new FilterEventCommand(predicate);","lastModifiedDate":"2021-09-22"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-22"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(model.getFilteredEventList(), expectedModel.getFilteredEventList());","lastModifiedDate":"2021-09-22"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"    public void execute_dateAndTimeInput_noEventFound() {","lastModifiedDate":"2021-09-22"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EVENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-09-22"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"        EventDateTimePredicate predicate \u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"                new EventDateTimePredicate(Arrays.asList(\"2021-09-18\", \"1020\"));","lastModifiedDate":"2021-09-22"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"        FilterEventCommand command \u003d new FilterEventCommand(predicate);","lastModifiedDate":"2021-09-22"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2021-09-22"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-09-22"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(model.getFilteredEventList(), expectedModel.getFilteredEventList());","lastModifiedDate":"2021-09-22"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"XXJJXJ":95,"ntwbruce":2}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PARTICIPANTS_LISTED_OVERVIEW;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.ALEX;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.BERNICE;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.getTypicalAddressBook;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.ParticipantNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"        ParticipantNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"                new ParticipantNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"        ParticipantNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"                new ParticipantNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"lowkangn"},"content":"    public void execute_zeroKeywords_noParticipantFound() {","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PARTICIPANTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"lowkangn"},"content":"        ParticipantNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"        expectedModel.updateFilteredParticipantList(predicate);","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredParticipantList());","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"lowkangn"},"content":"    public void execute_multipleKeywords_multipleParticipantsFound() {","lastModifiedDate":"2021-10-18"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PARTICIPANTS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-09-28"},{"lineNumber":69,"author":{"gitId":"lowkangn"},"content":"        ParticipantNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Alex Bernice\");","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"        expectedModel.updateFilteredParticipantList(predicate);","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"        assertEquals(Arrays.asList(ALEX, BERNICE), model.getFilteredParticipantList());","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"lowkangn"},"content":"    private ParticipantNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"lowkangn"},"content":"        return new ParticipantNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kanjitp":10,"-":61,"lowkangn":11}},{"path":"src/test/java/seedu/address/logic/commands/FindEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_EVENTS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.TypicalEvents.ANOTHER_EVENT;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.TypicalEvents.SAMPLE_EVENT;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":" * Contains integration tests (interaction with the Model) for {@code FindEventCommand}.","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"public class FindEventCommandTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"    public void equals() {","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"        EventNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"                new EventNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"        EventNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"                new EventNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"        FindEventCommand findEventFirstCommand \u003d new FindEventCommand(firstPredicate);","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"lowkangn"},"content":"        FindEventCommand findEventSecondCommand \u003d new FindEventCommand(secondPredicate);","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"        assertTrue(findEventFirstCommand.equals(findEventFirstCommand));","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"lowkangn"},"content":"        FindEventCommand findEventFirstCommandCopy \u003d new FindEventCommand(firstPredicate);","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"lowkangn"},"content":"        assertTrue(findEventFirstCommand.equals(findEventFirstCommandCopy));","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"lowkangn"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"lowkangn"},"content":"        assertFalse(findEventFirstCommand.equals(1));","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"lowkangn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"lowkangn"},"content":"        assertFalse(findEventFirstCommand.equals(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"lowkangn"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"lowkangn"},"content":"        assertFalse(findEventFirstCommand.equals(findEventSecondCommand));","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"lowkangn"},"content":"    public void execute_zeroKeywords_noEventFound() {","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"lowkangn"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EVENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"lowkangn"},"content":"        EventNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"lowkangn"},"content":"        FindEventCommand command \u003d new FindEventCommand(predicate);","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"lowkangn"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"lowkangn"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"lowkangn"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredEventList());","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"lowkangn"},"content":"    public void execute_multipleKeywords_multipleEventsFound() {","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"lowkangn"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EVENTS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"lowkangn"},"content":"        EventNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Sleep Sleep2\");","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"lowkangn"},"content":"        FindEventCommand command \u003d new FindEventCommand(predicate);","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"lowkangn"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"lowkangn"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"lowkangn"},"content":"        assertEquals(Arrays.asList(SAMPLE_EVENT, ANOTHER_EVENT), model.getFilteredEventList());","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"lowkangn"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"lowkangn"},"content":"    private EventNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"lowkangn"},"content":"        return new EventNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"lowkangn":82}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showParticipantAtIndex;","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.getTypicalAddressBook;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"        showParticipantAtIndex(model, INDEX_FIRST_PARTICIPANT);","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kanjitp":4,"-":35}},{"path":"src/test/java/seedu/address/logic/commands/ListEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalAddressBook;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-09-22"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDateTimePredicate;","lastModifiedDate":"2021-09-22"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListEventCommand.","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"public class ListEventCommandTest {","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    private Model model;","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    @BeforeEach","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"        assertCommandSuccess(new ListEventCommand(), model, ListEventCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2021-09-22"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        model.updateFilteredEventList(new EventDateTimePredicate(Arrays.asList(\"1-1-1\")));","lastModifiedDate":"2021-09-22"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        assertCommandSuccess(new ListEventCommand(), model, ListEventCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-09-22"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"XXJJXJ":40}},{"path":"src/test/java/seedu/address/logic/commands/RemoveParticipantFromEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.logic.commands.RemoveParticipantFromEventCommand","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"        .MESSAGE_REMOVE_PARTICIPANT_FROM_EVENT_SUCCESS;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.TypicalEvents.SAMPLE_EVENT;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"import seedu.address.testutil.DefaultModelStub;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"import seedu.address.testutil.ParticipantBuilder;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"class RemoveParticipantFromEventCommandTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"    public void execute_removeParticipantFromEventSuccessful() throws Exception {","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"        Participant validParticipant \u003d new ParticipantBuilder().build();","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"        EventBuilder eventBuilder \u003d new EventBuilder();","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"        eventBuilder.addParticipant(validParticipant);","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"        EventName eventName \u003d SAMPLE_EVENT.getName();","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"        ModelStubWithEventAndParticipant modelStub \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"lowkangn"},"content":"                new ModelStubWithEventAndParticipant(validParticipant, eventBuilder.build());","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"        CommandResult commandResult \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"                new RemoveParticipantFromEventCommand(Index.fromOneBased(1), Index.fromOneBased(1)).execute(modelStub);","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"        assertEquals(String.format(MESSAGE_REMOVE_PARTICIPANT_FROM_EVENT_SUCCESS,","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"lowkangn"},"content":"                validParticipant.getFullName(), eventName), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"lowkangn"},"content":"        assertFalse(modelStub.event.hasParticipant(validParticipant));","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"lowkangn"},"content":"    public void execute_participantNotInModel_throwsCommandException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"        ModelStubWithEvent modelStub \u003d new ModelStubWithEvent(new EventBuilder().build());","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"lowkangn"},"content":"        RemoveParticipantFromEventCommand removeParticipantFromEventCommand \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"                new RemoveParticipantFromEventCommand(Index.fromOneBased(1), Index.fromOneBased(1));","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"        assertThrows(CommandException.class, MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX, () -\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"                removeParticipantFromEventCommand.execute(modelStub));","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"lowkangn"},"content":"    public void execute_eventNotInModel_throwsCommandException() {","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"lowkangn"},"content":"        Participant validParticipant \u003d new ParticipantBuilder().build();","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"        ModelStubWithParticipant modelStub \u003d new ModelStubWithParticipant(validParticipant);","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"lowkangn"},"content":"        RemoveParticipantFromEventCommand removeParticipantFromEventCommand \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"ntwbruce"},"content":"                new RemoveParticipantFromEventCommand(Index.fromOneBased(1), Index.fromOneBased(1));","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"ntwbruce"},"content":"        assertThrows(CommandException.class, MESSAGE_INVALID_EVENT_DISPLAYED_INDEX, () -\u003e","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"ntwbruce"},"content":"                removeParticipantFromEventCommand.execute(modelStub));","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"lowkangn"},"content":"    public void equals() {","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"ntwbruce"},"content":"        RemoveParticipantFromEventCommand removeFirstParticipantFirstEvent \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"ntwbruce"},"content":"                new RemoveParticipantFromEventCommand(Index.fromOneBased(1), Index.fromOneBased(1));","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"ntwbruce"},"content":"        RemoveParticipantFromEventCommand removeSecondParticipantFirstEvent \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"ntwbruce"},"content":"                new RemoveParticipantFromEventCommand(Index.fromOneBased(2), Index.fromOneBased(1));","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"ntwbruce"},"content":"        RemoveParticipantFromEventCommand removeFirstParticipantSecondEvent \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"ntwbruce"},"content":"                new RemoveParticipantFromEventCommand(Index.fromOneBased(1), Index.fromOneBased(2));","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"lowkangn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(removeFirstParticipantFirstEvent.equals(removeFirstParticipantFirstEvent));","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"lowkangn"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"ntwbruce"},"content":"        RemoveParticipantFromEventCommand removeFirstParticipantFirstEventCopy \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"ntwbruce"},"content":"                new RemoveParticipantFromEventCommand(Index.fromOneBased(1), Index.fromOneBased(1));","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(removeFirstParticipantFirstEvent.equals(removeFirstParticipantFirstEventCopy));","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"lowkangn"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(removeFirstParticipantFirstEvent.equals(1));","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"lowkangn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(removeFirstParticipantFirstEvent.equals(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"lowkangn"},"content":"        // different participant -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(removeFirstParticipantFirstEvent.equals(removeSecondParticipantFirstEvent));","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"lowkangn"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(removeFirstParticipantFirstEvent.equals(removeFirstParticipantSecondEvent));","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"lowkangn"},"content":"     * A Model stub that contains a single Event and single Participant.","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"lowkangn"},"content":"    private class ModelStubWithEventAndParticipant extends DefaultModelStub {","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"lowkangn"},"content":"        private final Participant participant;","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"lowkangn"},"content":"        private final Event event;","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"lowkangn"},"content":"        ModelStubWithEventAndParticipant(Participant participant, Event event) {","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"lowkangn"},"content":"            requireNonNull(event);","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"lowkangn"},"content":"            this.participant \u003d participant;","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"lowkangn"},"content":"            this.event \u003d event;","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"lowkangn"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"lowkangn"},"content":"        public ObservableList\u003cParticipant\u003e getFilteredParticipantList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"lowkangn"},"content":"            ObservableList\u003cParticipant\u003e participants \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"lowkangn"},"content":"            participants.add(participant);","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"lowkangn"},"content":"            return participants;","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"lowkangn"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"lowkangn"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"lowkangn"},"content":"            ObservableList\u003cEvent\u003e events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"lowkangn"},"content":"            events.add(event);","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"lowkangn"},"content":"            return events;","lastModifiedDate":"2021-10-13"},{"lineNumber":125,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"ntwbruce"},"content":"     * A Model stub that contains a single Event.","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"ntwbruce"},"content":"    private class ModelStubWithEvent extends DefaultModelStub {","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"ntwbruce"},"content":"        private final Event event;","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"ntwbruce"},"content":"        ModelStubWithEvent(Event event) {","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"ntwbruce"},"content":"            requireNonNull(event);","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"ntwbruce"},"content":"            this.event \u003d event;","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"ntwbruce"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"ntwbruce"},"content":"        public ObservableList\u003cParticipant\u003e getFilteredParticipantList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"ntwbruce"},"content":"            return FXCollections.observableArrayList();","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"ntwbruce"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"ntwbruce"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":146,"author":{"gitId":"ntwbruce"},"content":"            ObservableList\u003cEvent\u003e events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"ntwbruce"},"content":"            events.add(event);","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"ntwbruce"},"content":"            return events;","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":151,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"ntwbruce"},"content":"     * A Model stub that contains a single Participant.","lastModifiedDate":"2021-10-23"},{"lineNumber":154,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":155,"author":{"gitId":"ntwbruce"},"content":"    private class ModelStubWithParticipant extends DefaultModelStub {","lastModifiedDate":"2021-10-23"},{"lineNumber":156,"author":{"gitId":"ntwbruce"},"content":"        private final Participant participant;","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":158,"author":{"gitId":"ntwbruce"},"content":"        ModelStubWithParticipant(Participant participant) {","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"ntwbruce"},"content":"            requireNonNull(participant);","lastModifiedDate":"2021-10-23"},{"lineNumber":160,"author":{"gitId":"ntwbruce"},"content":"            this.participant \u003d participant;","lastModifiedDate":"2021-10-23"},{"lineNumber":161,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":162,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":163,"author":{"gitId":"ntwbruce"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":164,"author":{"gitId":"ntwbruce"},"content":"        public ObservableList\u003cParticipant\u003e getFilteredParticipantList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"ntwbruce"},"content":"            ObservableList\u003cParticipant\u003e participants \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"ntwbruce"},"content":"            participants.add(participant);","lastModifiedDate":"2021-10-23"},{"lineNumber":167,"author":{"gitId":"ntwbruce"},"content":"            return participants;","lastModifiedDate":"2021-10-23"},{"lineNumber":168,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":169,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":170,"author":{"gitId":"ntwbruce"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":171,"author":{"gitId":"ntwbruce"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":172,"author":{"gitId":"ntwbruce"},"content":"            return FXCollections.observableArrayList();","lastModifiedDate":"2021-10-23"},{"lineNumber":173,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":174,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":175,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"ntwbruce":74,"lowkangn":101}},{"path":"src/test/java/seedu/address/logic/commands/ShowEventDetailsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_EVENT_NOT_FOUND;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.testutil.TypicalParticipants.getTypicalAddressBook;","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.event.UniqueEventList;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.testutil.DefaultModelStub;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.testutil.TypicalEvents;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":" * Contains integration tests (interaction with the Model) for {@code ShowEventDetailsCommand}.","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"public class ShowEventDetailsCommandTest {","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"    private final Event sampleEventWithTimeAndCompletion \u003d TypicalEvents.SAMPLE_EVENT_SPECIFIED_TIME_AND_COMPLETION;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"    private final Event sampleEventWithoutTimeAndCompletion \u003d TypicalEvents.SAMPLE_EVENT_DEFAULT_TIME_AND_COMPLETION;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"    private final Index sampleEventIndexWithTimeAndCompletion \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    private final Index sampleEventIndexWithoutTimeAndCompletion \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"    public ShowEventDetailsCommandTest() {","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"        model.addEvent(sampleEventWithTimeAndCompletion);","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"        model.addEvent(sampleEventWithoutTimeAndCompletion);","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"        expectedModel.addEvent(sampleEventWithTimeAndCompletion);","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"        expectedModel.addEvent(sampleEventWithoutTimeAndCompletion);","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"    public void equals() {","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"        Index indexOne \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"        Index indexTwo \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"        ShowEventDetailsCommand showEventDetailsFirstCommand \u003d new ShowEventDetailsCommand(indexOne);","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"        ShowEventDetailsCommand showEventDetailsSecondCommand \u003d new ShowEventDetailsCommand(indexTwo);","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(showEventDetailsFirstCommand.equals(showEventDetailsFirstCommand));","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"        ShowEventDetailsCommand showEventDetailsFirstCommandCopy \u003d new ShowEventDetailsCommand(indexOne);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(showEventDetailsFirstCommand.equals(showEventDetailsFirstCommandCopy));","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(showEventDetailsFirstCommand.equals(1));","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(showEventDetailsFirstCommand.equals(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"ntwbruce"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(showEventDetailsFirstCommand.equals(showEventDetailsSecondCommand));","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"ntwbruce"},"content":"    public void constructor_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"lowkangn"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ShowEventDetailsCommand(null));","lastModifiedDate":"2021-10-03"},{"lineNumber":72,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"ntwbruce"},"content":"    public void execute_eventNotInList_throwsCommandException() {","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"        Index index \u003d Index.fromOneBased(200);","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"        ShowEventDetailsCommand command \u003d new ShowEventDetailsCommand(index);","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"ntwbruce"},"content":"        assertThrows(CommandException.class, MESSAGE_EVENT_NOT_FOUND, () -\u003e command.execute(model));","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"ntwbruce"},"content":"     * Checks that the UI is unaffected by the use of a ShowEventDetailsCommand.","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"ntwbruce"},"content":"     * @throws CommandException if model provided to ShowEventDetailsCommand execute method is invalid.","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"ntwbruce"},"content":"    public void execute_eventInList_noUiChangeSuccessful() throws CommandException {","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"        CommandResult commandResult \u003d new ShowEventDetailsCommand(sampleEventIndexWithTimeAndCompletion).execute(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(model.getFilteredEventList(), expectedModel.getFilteredEventList());","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"ntwbruce"},"content":"     * Tests CommandResult output of ShowEventDetailsCommand.","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"ntwbruce"},"content":"     * Event is created with specified time and completion status.","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"ntwbruce"},"content":"     * @throws CommandException if model provided to ShowEventDetailsCommand execute method is invalid.","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"ntwbruce"},"content":"    public void execute_eventWithSpecifiedTimeAndCompletionInList_showDetailsSuccessful() throws CommandException {","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"        CommandResult commandResult \u003d new ShowEventDetailsCommand(sampleEventIndexWithTimeAndCompletion).execute(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"ntwbruce"},"content":"        String expectedOutput \u003d String.format(","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"ntwbruce"},"content":"                \"Event Name: %s\\nEvent Date: %s\\nEvent Time: %s\\nCompletion Status: %s\\nNumber of participants: %d\",","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"ntwbruce"},"content":"                sampleEventWithTimeAndCompletion.getNameString(),","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"ntwbruce"},"content":"                sampleEventWithTimeAndCompletion.getDateString(),","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"ntwbruce"},"content":"                sampleEventWithTimeAndCompletion.getTimeString(),","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"lowkangn"},"content":"                sampleEventWithTimeAndCompletion.getDoneValue() ? \"Completed\" : \"Uncompleted\",","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"ntwbruce"},"content":"                sampleEventWithTimeAndCompletion.getParticipants().size()","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"ntwbruce"},"content":"                );","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(commandResult.getFeedbackToUser(), expectedOutput);","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"ntwbruce"},"content":"     * Tests CommandResult output of ShowEventDetailsCommand.","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"ntwbruce"},"content":"     * Event is created without specified time and completion status.","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"ntwbruce"},"content":"     * @throws CommandException if model provided to ShowEventDetailsCommand execute method is invalid.","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"ntwbruce"},"content":"    public void execute_eventWithDefaultTimeAndCompletionInList_showDetailsSuccessful() throws CommandException {","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"XXJJXJ"},"content":"        CommandResult commandResult \u003d new ShowEventDetailsCommand(sampleEventIndexWithoutTimeAndCompletion)","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"ntwbruce"},"content":"                .execute(model);","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"ntwbruce"},"content":"        String expectedOutput \u003d String.format(","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"ntwbruce"},"content":"                \"Event Name: %s\\nEvent Date: %s\\nEvent Time: %s\\nCompletion Status: %s\\nNumber of participants: %d\",","lastModifiedDate":"2021-10-16"},{"lineNumber":124,"author":{"gitId":"ntwbruce"},"content":"                sampleEventWithoutTimeAndCompletion.getNameString(),","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"ntwbruce"},"content":"                sampleEventWithoutTimeAndCompletion.getDateString(),","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"ntwbruce"},"content":"                sampleEventWithoutTimeAndCompletion.getTimeString(),","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"lowkangn"},"content":"                sampleEventWithoutTimeAndCompletion.getDoneValue() ? \"Completed\" : \"Uncompleted\",","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"ntwbruce"},"content":"                sampleEventWithoutTimeAndCompletion.getParticipants().size()","lastModifiedDate":"2021-10-16"},{"lineNumber":129,"author":{"gitId":"ntwbruce"},"content":"        );","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(commandResult.getFeedbackToUser(), expectedOutput);","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"ntwbruce"},"content":"     * Tests CommandResult output of ShowEventDetailsCommand using a ModelStub.","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"ntwbruce"},"content":"     * Event is created with specified time and completion status.","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"ntwbruce"},"content":"     * @throws CommandException if model provided to ShowEventDetailsCommand execute method is invalid.","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":140,"author":{"gitId":"ntwbruce"},"content":"    public void execute_eventWithSpecifiedTimeAndCompletionInListUsingModelStub_showDetailsSuccessful()","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"ntwbruce"},"content":"            throws CommandException {","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"ntwbruce"},"content":"        ModelStubWithEvent modelStub \u003d new ModelStubWithEvent(sampleEventWithTimeAndCompletion);","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"XXJJXJ"},"content":"        CommandResult commandResult \u003d new ShowEventDetailsCommand(sampleEventIndexWithTimeAndCompletion)","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"ntwbruce"},"content":"                .execute(modelStub);","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"ntwbruce"},"content":"        String expectedOutput \u003d String.format(","lastModifiedDate":"2021-10-16"},{"lineNumber":146,"author":{"gitId":"ntwbruce"},"content":"                \"Event Name: %s\\nEvent Date: %s\\nEvent Time: %s\\nCompletion Status: %s\\nNumber of participants: %d\",","lastModifiedDate":"2021-10-16"},{"lineNumber":147,"author":{"gitId":"ntwbruce"},"content":"                sampleEventWithTimeAndCompletion.getNameString(),","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"ntwbruce"},"content":"                sampleEventWithTimeAndCompletion.getDateString(),","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"ntwbruce"},"content":"                sampleEventWithTimeAndCompletion.getTimeString(),","lastModifiedDate":"2021-10-11"},{"lineNumber":150,"author":{"gitId":"lowkangn"},"content":"                sampleEventWithTimeAndCompletion.getDoneValue() ? \"Completed\" : \"Uncompleted\",","lastModifiedDate":"2021-10-22"},{"lineNumber":151,"author":{"gitId":"ntwbruce"},"content":"                sampleEventWithTimeAndCompletion.getParticipants().size()","lastModifiedDate":"2021-10-16"},{"lineNumber":152,"author":{"gitId":"ntwbruce"},"content":"        );","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(commandResult.getFeedbackToUser(), expectedOutput);","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"ntwbruce"},"content":"     * Tests CommandResult output of ShowEventDetailsCommand using a ModelStub.","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"ntwbruce"},"content":"     * Event is created without specified time and completion status.","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"ntwbruce"},"content":"     * @throws CommandException if model provided to ShowEventDetailsCommand execute method is invalid.","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"ntwbruce"},"content":"    public void execute_eventWithDefaultTimeAndCompletionInListUsingModelStub_showDetailsSuccessful()","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"ntwbruce"},"content":"            throws CommandException {","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"ntwbruce"},"content":"        ModelStubWithEvent modelStub \u003d new ModelStubWithEvent(sampleEventWithoutTimeAndCompletion);","lastModifiedDate":"2021-10-11"},{"lineNumber":166,"author":{"gitId":"XXJJXJ"},"content":"        CommandResult commandResult \u003d new ShowEventDetailsCommand(Index.fromOneBased(1))","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"ntwbruce"},"content":"                .execute(modelStub);","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"ntwbruce"},"content":"        String expectedOutput \u003d String.format(","lastModifiedDate":"2021-10-16"},{"lineNumber":169,"author":{"gitId":"ntwbruce"},"content":"                \"Event Name: %s\\nEvent Date: %s\\nEvent Time: %s\\nCompletion Status: %s\\nNumber of participants: %d\",","lastModifiedDate":"2021-10-16"},{"lineNumber":170,"author":{"gitId":"ntwbruce"},"content":"                sampleEventWithoutTimeAndCompletion.getNameString(),","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"ntwbruce"},"content":"                sampleEventWithoutTimeAndCompletion.getDateString(),","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"ntwbruce"},"content":"                sampleEventWithoutTimeAndCompletion.getTimeString(),","lastModifiedDate":"2021-10-11"},{"lineNumber":173,"author":{"gitId":"lowkangn"},"content":"                sampleEventWithoutTimeAndCompletion.getDoneValue() ? \"Completed\" : \"Uncompleted\",","lastModifiedDate":"2021-10-22"},{"lineNumber":174,"author":{"gitId":"ntwbruce"},"content":"                sampleEventWithoutTimeAndCompletion.getParticipants().size()","lastModifiedDate":"2021-10-16"},{"lineNumber":175,"author":{"gitId":"ntwbruce"},"content":"        );","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(commandResult.getFeedbackToUser(), expectedOutput);","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":179,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":180,"author":{"gitId":"ntwbruce"},"content":"     * A Model stub that contains a single Event.","lastModifiedDate":"2021-10-08"},{"lineNumber":181,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":182,"author":{"gitId":"ntwbruce"},"content":"    private static class ModelStubWithEvent extends DefaultModelStub {","lastModifiedDate":"2021-10-10"},{"lineNumber":183,"author":{"gitId":"ntwbruce"},"content":"        private final Event event;","lastModifiedDate":"2021-10-08"},{"lineNumber":184,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":185,"author":{"gitId":"ntwbruce"},"content":"        ModelStubWithEvent(Event event) {","lastModifiedDate":"2021-10-08"},{"lineNumber":186,"author":{"gitId":"ntwbruce"},"content":"            requireNonNull(event);","lastModifiedDate":"2021-10-08"},{"lineNumber":187,"author":{"gitId":"ntwbruce"},"content":"            this.event \u003d event;","lastModifiedDate":"2021-10-08"},{"lineNumber":188,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":189,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":190,"author":{"gitId":"ntwbruce"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":191,"author":{"gitId":"ntwbruce"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":192,"author":{"gitId":"ntwbruce"},"content":"            UniqueEventList eventList \u003d new UniqueEventList();","lastModifiedDate":"2021-10-08"},{"lineNumber":193,"author":{"gitId":"ntwbruce"},"content":"            eventList.add(event);","lastModifiedDate":"2021-10-08"},{"lineNumber":194,"author":{"gitId":"ntwbruce"},"content":"            return new FilteredList\u003c\u003e(eventList.asUnmodifiableObservableList());","lastModifiedDate":"2021-10-08"},{"lineNumber":195,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":196,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":197,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"XXJJXJ":15,"ntwbruce":176,"lowkangn":6}},{"path":"src/test/java/seedu/address/logic/commands/ShowEventParticipantsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_EVENT_NOT_FOUND;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.testutil.TypicalParticipants.getTypicalAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.event.UniqueEventList;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.testutil.DefaultModelStub;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.testutil.ParticipantBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.testutil.TypicalEvents;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":" * Contains integration tests (interaction with the Model) for {@code ShowEventParticipantsCommand}.","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"public class ShowEventParticipantsCommandTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"    private final Event sampleEvent \u003d TypicalEvents.SAMPLE_EVENT_SPECIFIED_TIME_AND_COMPLETION;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"    private final Index sampleIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"    public ShowEventParticipantsCommandTest() {","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"        model.addEvent(sampleEvent);","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"        expectedModel.addEvent(sampleEvent);","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"    public void equals() {","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"        Index indexOne \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"        Index indexTwo \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"        ShowEventParticipantsCommand showEventParticipantsFirstCommand \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"                new ShowEventParticipantsCommand(indexOne);","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"        ShowEventParticipantsCommand showEventParticipantsSecondCommand \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"                new ShowEventParticipantsCommand(indexTwo);","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(showEventParticipantsFirstCommand.equals(showEventParticipantsFirstCommand));","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"        ShowEventParticipantsCommand showEventParticipantsFirstCommandCopy \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"                new ShowEventParticipantsCommand(indexOne);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(showEventParticipantsFirstCommand.equals(showEventParticipantsFirstCommandCopy));","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(showEventParticipantsFirstCommand.equals(1));","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(showEventParticipantsFirstCommand.equals(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"ntwbruce"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(showEventParticipantsFirstCommand.equals(showEventParticipantsSecondCommand));","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"ntwbruce"},"content":"    public void constructor_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"ntwbruce"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ShowEventParticipantsCommand(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"ntwbruce"},"content":"    public void execute_eventNotInList_throwsCommandException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"        Index index \u003d Index.fromOneBased(200);","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"        ShowEventParticipantsCommand command \u003d new ShowEventParticipantsCommand(index);","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"ntwbruce"},"content":"        assertThrows(CommandException.class, MESSAGE_EVENT_NOT_FOUND, () -\u003e command.execute(model));","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"ntwbruce"},"content":"     * Checks that the UI is unaffected by the use of a ShowEventParticipantsCommand.","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"ntwbruce"},"content":"     * @throws CommandException if model provided to ShowEventParticipantsCommand execute method is invalid.","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"ntwbruce"},"content":"    public void execute_eventInList_noUiChangeSuccessful() throws CommandException {","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"        CommandResult commandResult \u003d new ShowEventParticipantsCommand(sampleIndex).execute(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(model.getFilteredEventList(), expectedModel.getFilteredEventList());","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"ntwbruce"},"content":"     * Tests CommandResult output of ShowEventParticipantsCommand.","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"ntwbruce"},"content":"     * @throws CommandException if model provided to ShowEventParticipantsCommand execute method is invalid.","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"ntwbruce"},"content":"    public void execute_eventWithSingleParticipantInList_showDetailsSuccessful() throws CommandException {","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"        CommandResult commandResult \u003d new ShowEventParticipantsCommand(sampleIndex).execute(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"ntwbruce"},"content":"        String expectedOutput \u003d String.format(\"Event Name: %s\\nNumber of participants: %d\\nParticipant list:\\n1. %s\\n\",","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"ntwbruce"},"content":"                sampleEvent.getNameString(),","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"ntwbruce"},"content":"                sampleEvent.getParticipants().size(),","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"ntwbruce"},"content":"                ParticipantBuilder.DEFAULT_NAME);","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(commandResult.getFeedbackToUser(), expectedOutput);","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"ntwbruce"},"content":"     * Tests CommandResult output of ShowEventDetailsCommand using a ModelStub.","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"ntwbruce"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"ntwbruce"},"content":"     * @throws CommandException if model provided to ShowEventDetailsCommand execute method is invalid.","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"ntwbruce"},"content":"    public void execute_eventWithSingleParticipantInListUsingModelStub_showDetailsSuccessful() throws CommandException {","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"ntwbruce"},"content":"        ModelStubWithEventWithParticipant modelStub \u003d new ModelStubWithEventWithParticipant(sampleEvent);","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"XXJJXJ"},"content":"        CommandResult commandResult \u003d new ShowEventParticipantsCommand(sampleIndex).execute(modelStub);","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"ntwbruce"},"content":"        String expectedOutput \u003d String.format(\"Event Name: %s\\nNumber of participants: %d\\nParticipant list:\\n1. %s\\n\",","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"ntwbruce"},"content":"                sampleEvent.getNameString(),","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"ntwbruce"},"content":"                sampleEvent.getParticipants().size(),","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"ntwbruce"},"content":"                ParticipantBuilder.DEFAULT_NAME);","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(commandResult.getFeedbackToUser(), expectedOutput);","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"ntwbruce"},"content":"     * A Model stub that contains a single Event that has accepted a single Participant.","lastModifiedDate":"2021-10-09"},{"lineNumber":125,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"ntwbruce"},"content":"    private static class ModelStubWithEventWithParticipant extends DefaultModelStub {","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"ntwbruce"},"content":"        private final Event event;","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"ntwbruce"},"content":"        ModelStubWithEventWithParticipant(Event event) {","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"ntwbruce"},"content":"            requireNonNull(event);","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"ntwbruce"},"content":"            this.event \u003d event;","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"ntwbruce"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"ntwbruce"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"ntwbruce"},"content":"            UniqueEventList eventList \u003d new UniqueEventList();","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"ntwbruce"},"content":"            eventList.add(event);","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"ntwbruce"},"content":"            return new FilteredList\u003c\u003e(eventList.asUnmodifiableObservableList());","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"ntwbruce"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"XXJJXJ":12,"ntwbruce":129}},{"path":"src/test/java/seedu/address/logic/commands/SortEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-23"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-23"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.CODE_FOR_SANITY;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.MARATHON_HAS_TIME;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.MARATHON_NO_TIME;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.getTypicalAddressBook;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-23"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"public class SortEventCommandTest {","lastModifiedDate":"2021-09-23"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-09-23"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    public void execute_sortOneNotTheOther_notEquals() {","lastModifiedDate":"2021-09-23"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: Once addEvents implemented, can update the test cases here","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"        SortEventCommand command \u003d new SortEventCommand();","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"        command.execute(model);","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(model.getAddressBook().getEventList().equals(expectedModel.getAddressBook().getEventList()));","lastModifiedDate":"2021-09-23"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    public void execute_addEventsThenSortOneNotTheOther_notEquals() {","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        SortEventCommand command \u003d new SortEventCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        model.addEvent(CODE_FOR_SANITY);","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"        model.addEvent(MARATHON_HAS_TIME);","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"        model.addEvent(MARATHON_NO_TIME);","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"        expectedModel.addEvent(CODE_FOR_SANITY);","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        expectedModel.addEvent(MARATHON_HAS_TIME);","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        expectedModel.addEvent(MARATHON_NO_TIME);","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        command.execute(model);","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(model.getAddressBook().getEventList().equals(expectedModel.getAddressBook().getEventList()));","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-23"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"    public void execute_sortBoth_equals() {","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: Once addEvents implemented, can update the test cases here","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"        SortEventCommand command \u003d new SortEventCommand();","lastModifiedDate":"2021-09-23"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"        command.execute(model);","lastModifiedDate":"2021-09-23"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"        command.execute(expectedModel);","lastModifiedDate":"2021-09-23"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(model.getAddressBook().getEventList().equals(expectedModel.getAddressBook().getEventList()));","lastModifiedDate":"2021-09-23"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-23"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"    public void execute_addEventsThenSortBoth_equals() {","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        SortEventCommand command \u003d new SortEventCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"        model.addEvent(CODE_FOR_SANITY);","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"        model.addEvent(MARATHON_HAS_TIME);","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"        model.addEvent(MARATHON_NO_TIME);","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"        expectedModel.addEvent(CODE_FOR_SANITY);","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"        expectedModel.addEvent(MARATHON_HAS_TIME);","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"        expectedModel.addEvent(MARATHON_NO_TIME);","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"        command.execute(model);","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"        command.execute(expectedModel);","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(model.getAddressBook().getEventList().equals(expectedModel.getAddressBook().getEventList()));","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"    public void equals() {","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"        SortEventCommand command \u003d new SortEventCommand();","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(new SortEventCommand().equals(command));","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"XXJJXJ":69}},{"path":"src/test/java/seedu/address/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showParticipantAtIndex;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PARTICIPANT;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PARTICIPANT;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.TypicalParticipants.getTypicalAddressBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":" * {@code ViewCommand}.","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"public class ViewCommandTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"        Participant participantToView \u003d model.getFilteredParticipantList()","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"                .get(INDEX_FIRST_PARTICIPANT.getZeroBased());","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(INDEX_FIRST_PARTICIPANT);","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"        String expectedMessage \u003d participantToView.toString();","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"lowkangn"},"content":"        assertCommandSuccess(viewCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredParticipantList().size() + 1);","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"lowkangn"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"lowkangn"},"content":"        assertCommandFailure(viewCommand, model, Messages.MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"lowkangn"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"lowkangn"},"content":"        showParticipantAtIndex(model, INDEX_FIRST_PARTICIPANT);","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"lowkangn"},"content":"        Participant participantToView \u003d model.getFilteredParticipantList()","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"lowkangn"},"content":"                .get(INDEX_FIRST_PARTICIPANT.getZeroBased());","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"lowkangn"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(INDEX_FIRST_PARTICIPANT);","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"lowkangn"},"content":"        String expectedMessage \u003d participantToView.toString();","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"lowkangn"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"lowkangn"},"content":"        showParticipantAtIndex(expectedModel, INDEX_FIRST_PARTICIPANT);","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"lowkangn"},"content":"        assertCommandSuccess(viewCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":65,"author":{"gitId":"lowkangn"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"lowkangn"},"content":"        showParticipantAtIndex(model, INDEX_FIRST_PARTICIPANT);","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"lowkangn"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PARTICIPANT;","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"lowkangn"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"lowkangn"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getParticipantList().size());","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"lowkangn"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"lowkangn"},"content":"        assertCommandFailure(viewCommand, model, Messages.MESSAGE_INVALID_PARTICIPANT_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"lowkangn"},"content":"    public void equals() {","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"lowkangn"},"content":"        ViewCommand viewFirstCommand \u003d new ViewCommand(INDEX_FIRST_PARTICIPANT);","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"lowkangn"},"content":"        ViewCommand viewSecondCommand \u003d new ViewCommand(INDEX_SECOND_PARTICIPANT);","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"lowkangn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"lowkangn"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommand));","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"lowkangn"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"lowkangn"},"content":"        ViewCommand viewFirstCommandCopy \u003d new ViewCommand(INDEX_FIRST_PARTICIPANT);","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"lowkangn"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommandCopy));","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"lowkangn"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"lowkangn"},"content":"        assertFalse(viewFirstCommand.equals(1));","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"lowkangn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"lowkangn"},"content":"        assertFalse(viewFirstCommand.equals(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"lowkangn"},"content":"        // different participant -\u003e returns false","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"lowkangn"},"content":"        assertFalse(viewFirstCommand.equals(viewSecondCommand));","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"lowkangn":97}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.ParticipantBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        Participant expectedParticipant \u003d new ParticipantBuilder().build();","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"                + ADDRESS_DESC_AMY, new AddCommand(expectedParticipant));","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"lowkangn"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"                + ADDRESS_DESC_AMY, new AddCommand(expectedParticipant));","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_BOB + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"                + ADDRESS_DESC_AMY, new AddCommand(expectedParticipant));","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"lowkangn"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_BOB + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"                + ADDRESS_DESC_AMY, new AddCommand(expectedParticipant));","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"lowkangn"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"                + ADDRESS_DESC_AMY, new AddCommand(expectedParticipant));","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"        // no BirthDate, no Next Of Kin","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"        Participant expectedParticipant \u003d new ParticipantBuilder().build();","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"                new AddCommand(expectedParticipant));","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"XXJJXJ":8,"kanjitp":3,"-":71,"lowkangn":5}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.commands.EditCommand.EditParticipantDescriptor;","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.logic.commands.ShowEventDetailsCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.logic.commands.ShowEventParticipantsCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.ParticipantNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.EditParticipantDescriptorBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.ParticipantBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.ParticipantUtil;","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"        Participant participant \u003d new ParticipantBuilder().build();","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(ParticipantUtil.getAddCommand(participant));","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"        assertEquals(new AddCommand(participant).toString(), command.toString());","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"            DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PARTICIPANT.getOneBased());","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PARTICIPANT), command);","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"        Participant participant \u003d new ParticipantBuilder().build();","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"        EditParticipantDescriptor descriptor \u003d new EditParticipantDescriptorBuilder(participant).build();","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"                + INDEX_FIRST_PARTICIPANT.getOneBased() + \" \"","lastModifiedDate":"2021-09-28"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"                + ParticipantUtil.getEditParticipantDescriptorDetails(descriptor));","lastModifiedDate":"2021-09-28"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PARTICIPANT, descriptor), command);","lastModifiedDate":"2021-09-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"lowkangn"},"content":"        assertEquals(new FindCommand(new ParticipantNameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"ntwbruce"},"content":"    public void parseCommand_showDetails() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"ntwbruce"},"content":"        ShowEventDetailsCommand command \u003d (ShowEventDetailsCommand) parser.parseCommand(","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"                String.format(\"%s %s\", ShowEventDetailsCommand.COMMAND_WORD, \"1\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(new ShowEventDetailsCommand(Index.fromOneBased(1)), command);","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"ntwbruce"},"content":"    public void parseCommand_showParticipants() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"ntwbruce"},"content":"        ShowEventParticipantsCommand command \u003d (ShowEventParticipantsCommand) parser.parseCommand(","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"                String.format(\"%s %s\", ShowEventParticipantsCommand.COMMAND_WORD, \"1\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(new ShowEventParticipantsCommand(Index.fromOneBased(1)), command);","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"XXJJXJ":5,"kanjitp":16,"ntwbruce":12,"-":84,"lowkangn":2}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PARTICIPANT));","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"                DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"kanjitp":2,"-":29,"lowkangn":2}},{"path":"src/test/java/seedu/address/logic/parser/DoneCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.commands.DoneCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":" * outside of the DoneCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":" * same path through the DoneCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"class DoneCommandParserTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"    private DoneCommandParser parser \u003d new DoneCommandParser();","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"        assertParseSuccess(parser, \"1\", new DoneCommand(INDEX_FIRST_EVENT));","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"                DoneCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"lowkangn":33}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.commands.EditCommand.EditParticipantDescriptor;","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Address;","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Email;","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Name;","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Phone;","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.EditParticipantDescriptorBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"kanjitp"},"content":"        Index targetIndex \u003d INDEX_SECOND_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"kanjitp"},"content":"        EditParticipantDescriptor descriptor \u003d new EditParticipantDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-09-26"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"kanjitp"},"content":"        Index targetIndex \u003d INDEX_FIRST_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"kanjitp"},"content":"        EditParticipantDescriptor descriptor \u003d new EditParticipantDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-09-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"kanjitp"},"content":"        Index targetIndex \u003d INDEX_THIRD_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"kanjitp"},"content":"        EditParticipantDescriptor descriptor \u003d new EditParticipantDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-09-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":128,"author":{"gitId":"kanjitp"},"content":"        descriptor \u003d new EditParticipantDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-09-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":134,"author":{"gitId":"kanjitp"},"content":"        descriptor \u003d new EditParticipantDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-09-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":140,"author":{"gitId":"kanjitp"},"content":"        descriptor \u003d new EditParticipantDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":147,"author":{"gitId":"kanjitp"},"content":"        Index targetIndex \u003d INDEX_FIRST_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"XXJJXJ"},"content":"                + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"XXJJXJ"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"kanjitp"},"content":"        EditParticipantDescriptor descriptor \u003d new EditParticipantDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-09-26"},{"lineNumber":153,"author":{"gitId":"XXJJXJ"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"kanjitp"},"content":"        Index targetIndex \u003d INDEX_FIRST_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":164,"author":{"gitId":"kanjitp"},"content":"        EditParticipantDescriptor descriptor \u003d new EditParticipantDescriptorBuilder()","lastModifiedDate":"2021-09-26"},{"lineNumber":165,"author":{"gitId":"kanjitp"},"content":"            .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-09-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"kanjitp"},"content":"        descriptor \u003d new EditParticipantDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-09-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"XXJJXJ":6,"kanjitp":20,"-":148,"lowkangn":4}},{"path":"src/test/java/seedu/address/logic/parser/EditEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EVENT_DATE_DESC_JOGGING;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EVENT_DATE_DESC_SLEEP;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EVENT_NAME_DESC_JOGGING;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EVENT_NAME_DESC_SLEEP;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EVENT_TIME_DESC_JOGGING;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EVENT_TIME_DESC_SLEEP;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EVENT_DATE_DESC;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EVENT_NAME_DESC;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EVENT_TIME_DESC;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_DATE_JOGGING;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_DATE_SLEEP;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_JOGGING;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_NAME_SLEEP;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_TIME_JOGGING;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_TIME_SLEEP;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIME;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.commands.EditEventCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.commands.EditEventCommand.EditEventDescriptor;","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"public class EditEventCommandParserTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"    private EditEventCommandParser parser \u003d new EditEventCommandParser();","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"        // no index specified","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"        assertParseFailure(parser, VALID_EVENT_NAME_JOGGING, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"        // no field specified","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"        assertParseFailure(parser, \"1\", EditEventCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"        // no index and no field specified","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"        // negative index","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"        assertParseFailure(parser, \"-5\" + PREFIX_NAME + VALID_EVENT_NAME_JOGGING, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"        // zero index","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"        assertParseFailure(parser, \"0\" + PREFIX_NAME + VALID_EVENT_NAME_JOGGING, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"        // invalid EventName","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EVENT_NAME_DESC, EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"        // invalid EventDate","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EVENT_DATE_DESC, EventDate.MESSAGE_DATE_FORMAT_ERROR);","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"        // invalid EventTime","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EVENT_TIME_DESC, EventTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"        // valid EventName followed by invalid EventDate","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"        assertParseFailure(parser, \"1\" + EVENT_NAME_DESC_JOGGING + INVALID_EVENT_DATE_DESC,","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"                EventDate.MESSAGE_DATE_FORMAT_ERROR);","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"        // invalid EventName followed by valid EventDate","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EVENT_NAME_DESC + EVENT_DATE_DESC_JOGGING,","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"                EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"        // multiple invalid values, only first is captured","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EVENT_NAME_DESC + PREFIX_DATE + \"2021-13\" + PREFIX_TIME + \"3333\",","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"                EventName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"        Index targetIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"        String userInput \u003d targetIndex.getOneBased() + EVENT_NAME_DESC_JOGGING + EVENT_DATE_DESC_JOGGING","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"                + EVENT_TIME_DESC_JOGGING;","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withEventName(VALID_EVENT_NAME_JOGGING)","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"                .withEventDate(VALID_EVENT_DATE_JOGGING).withEventTime(VALID_EVENT_TIME_JOGGING).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"        EditEventCommand expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"        Index targetIndex \u003d INDEX_FIRST_EVENT;","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"        String userInput \u003d targetIndex.getOneBased() + EVENT_NAME_DESC_SLEEP + EVENT_TIME_DESC_SLEEP;","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"XXJJXJ"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withEventName(VALID_EVENT_NAME_SLEEP)","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"                .withEventTime(VALID_EVENT_TIME_SLEEP).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"        EditEventCommand expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"XXJJXJ"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"XXJJXJ"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"XXJJXJ"},"content":"        // EventName","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"XXJJXJ"},"content":"        Index targetIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"XXJJXJ"},"content":"        String userInput \u003d targetIndex.getOneBased() + EVENT_NAME_DESC_SLEEP;","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"XXJJXJ"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withEventName(VALID_EVENT_NAME_SLEEP).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"XXJJXJ"},"content":"        EditEventCommand expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"XXJJXJ"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"XXJJXJ"},"content":"        // EventDate","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"XXJJXJ"},"content":"        userInput \u003d targetIndex.getOneBased() + EVENT_DATE_DESC_SLEEP;","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"XXJJXJ"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withEventDate(VALID_EVENT_DATE_SLEEP).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":127,"author":{"gitId":"XXJJXJ"},"content":"        expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":128,"author":{"gitId":"XXJJXJ"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":129,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":130,"author":{"gitId":"XXJJXJ"},"content":"        // EventTime","lastModifiedDate":"2021-10-17"},{"lineNumber":131,"author":{"gitId":"XXJJXJ"},"content":"        userInput \u003d targetIndex.getOneBased() + EVENT_TIME_DESC_SLEEP;","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"XXJJXJ"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withEventTime(VALID_EVENT_TIME_SLEEP).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"XXJJXJ"},"content":"        expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"XXJJXJ"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":135,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"XXJJXJ"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"XXJJXJ"},"content":"        Index targetIndex \u003d INDEX_FIRST_EVENT;","lastModifiedDate":"2021-10-17"},{"lineNumber":140,"author":{"gitId":"XXJJXJ"},"content":"        String userInput \u003d targetIndex.getOneBased() + EVENT_TIME_DESC_SLEEP + EVENT_TIME_DESC_JOGGING;","lastModifiedDate":"2021-10-17"},{"lineNumber":141,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":142,"author":{"gitId":"XXJJXJ"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder()","lastModifiedDate":"2021-10-17"},{"lineNumber":143,"author":{"gitId":"XXJJXJ"},"content":"                .withEventTime(VALID_EVENT_TIME_JOGGING).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":144,"author":{"gitId":"XXJJXJ"},"content":"        EditEventCommand expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":145,"author":{"gitId":"XXJJXJ"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":146,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":147,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":148,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":149,"author":{"gitId":"XXJJXJ"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":150,"author":{"gitId":"XXJJXJ"},"content":"        // no other valid values","lastModifiedDate":"2021-10-17"},{"lineNumber":151,"author":{"gitId":"XXJJXJ"},"content":"        Index targetIndex \u003d INDEX_FIRST_EVENT;","lastModifiedDate":"2021-10-17"},{"lineNumber":152,"author":{"gitId":"XXJJXJ"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_EVENT_NAME_DESC + EVENT_NAME_DESC_SLEEP;","lastModifiedDate":"2021-10-17"},{"lineNumber":153,"author":{"gitId":"XXJJXJ"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder()","lastModifiedDate":"2021-10-17"},{"lineNumber":154,"author":{"gitId":"XXJJXJ"},"content":"                .withEventName(VALID_EVENT_NAME_SLEEP).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":155,"author":{"gitId":"XXJJXJ"},"content":"        EditEventCommand expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":156,"author":{"gitId":"XXJJXJ"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":157,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"XXJJXJ"},"content":"        // other valid values","lastModifiedDate":"2021-10-17"},{"lineNumber":159,"author":{"gitId":"XXJJXJ"},"content":"        userInput \u003d targetIndex.getOneBased() + EVENT_DATE_DESC_JOGGING","lastModifiedDate":"2021-10-17"},{"lineNumber":160,"author":{"gitId":"XXJJXJ"},"content":"                + INVALID_EVENT_TIME_DESC + EVENT_TIME_DESC_JOGGING;","lastModifiedDate":"2021-10-17"},{"lineNumber":161,"author":{"gitId":"XXJJXJ"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withEventDate(VALID_EVENT_DATE_JOGGING)","lastModifiedDate":"2021-10-17"},{"lineNumber":162,"author":{"gitId":"XXJJXJ"},"content":"                .withEventTime(VALID_EVENT_TIME_JOGGING).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":163,"author":{"gitId":"XXJJXJ"},"content":"        expectedCommand \u003d new EditEventCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":164,"author":{"gitId":"XXJJXJ"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":165,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":166,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"XXJJXJ":166}},{"path":"src/test/java/seedu/address/logic/parser/FilterEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-22"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-22"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-09-22"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-22"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.commands.FilterEventCommand;","lastModifiedDate":"2021-09-22"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDateTimePredicate;","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-22"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":" * Contains integration tests (interaction with the Model) for FilterEventCommandParser.","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"public class FilterEventCommandParserTest {","lastModifiedDate":"2021-09-22"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    private FilterEventCommandParser parser \u003d new FilterEventCommandParser();","lastModifiedDate":"2021-09-22"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-22"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"    public void parse_invalidArgsOnlyTime_throwsParseException() {","lastModifiedDate":"2021-09-22"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        assertParseFailure(parser, \"0900\",","lastModifiedDate":"2021-09-22"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-09-22"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"    public void parse_invalidDate_throwsParseException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        // invalid month","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        assertParseFailure(parser, \" d/2021-20-10\", EventDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        // invalid day","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        assertParseFailure(parser, \" d/2021-10-32\", EventDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"        // invalid month and day","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"        assertParseFailure(parser, \" d/2021-20-32\", EventDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"        // invalid year","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"        assertParseFailure(parser, \" d/-2021-10-10\", EventDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"        // Empty date","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"        assertParseFailure(parser, \" d/\", EventDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"    public void parse_validDateInvalidTime_throwsParseException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"        // invalid hour","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"        assertParseFailure(parser, \" d/2021-9-9 t/2500\", EventTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"        // invalid minute","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"        assertParseFailure(parser, \" d/2021-9-9 t/2060\", EventTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"        // invalid hour and minute","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"        assertParseFailure(parser, \" d/2021-9-9 t/2560\", EventTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"    public void parse_validArgsOnlyDate_returnsFilterEventCommand() {","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-09-22"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"        FilterEventCommand expectedFilterEventCommand \u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"                new FilterEventCommand(new EventDateTimePredicate(Arrays.asList(\"2021-9-1\")));","lastModifiedDate":"2021-09-22"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"        assertParseSuccess(parser, \" d/2021-9-1\", expectedFilterEventCommand);","lastModifiedDate":"2021-09-27"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"        // multiple whitespaces","lastModifiedDate":"2021-09-27"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"        assertParseSuccess(parser, \"       d/2021-9-1      \", expectedFilterEventCommand);","lastModifiedDate":"2021-09-27"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-22"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"    public void parse_validArgsDateAndTime_returnsFilterEventCommand() {","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-09-22"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"        FilterEventCommand expectedFilterEventCommand \u003d","lastModifiedDate":"2021-09-22"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"                new FilterEventCommand(new EventDateTimePredicate(Arrays.asList(\"2021-9-1\", \"0900\")));","lastModifiedDate":"2021-09-22"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"        assertParseSuccess(parser, \" d/2021-9-1 t/0900\", expectedFilterEventCommand);","lastModifiedDate":"2021-09-27"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"        // only leading and trailing whitespaces (multiple spaces in between)","lastModifiedDate":"2021-09-27"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"        assertParseSuccess(parser, \"   \\n \\t    d/2021-9-1  \\t \\n  t/0900 \\n  \", expectedFilterEventCommand);","lastModifiedDate":"2021-09-27"},{"lineNumber":85,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-22"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-22"}],"authorContributionMap":{"XXJJXJ":86}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.ParticipantNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"                new FindCommand(new ParticipantNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"-":32,"lowkangn":2}},{"path":"src/test/java/seedu/address/logic/parser/FindEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.commands.FindEventCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.event.EventNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"public class FindEventCommandParserTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"    private FindEventCommandParser parser \u003d new FindEventCommandParser();","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"    public void parse_validArgs_returnsFindEventCommand() {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"        FindEventCommand expectedFindEventCommand \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"                new FindEventCommand(new EventNameContainsKeywordsPredicate(Arrays.asList(\"240Km\", \"Marathon\")));","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"        assertParseSuccess(parser, \"240Km Marathon\", expectedFindEventCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"        assertParseSuccess(parser, \" \\n 240Km \\n \\t Marathon  \\t\", expectedFindEventCommand);","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"lowkangn":35}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PARTICIPANT;","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Address;","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.participant.BirthDate;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Email;","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Name;","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.participant.ParticipantId;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Phone;","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"        assertEquals(INDEX_FIRST_PARTICIPANT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"        assertEquals(INDEX_FIRST_PARTICIPANT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":201,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":202,"author":{"gitId":"XXJJXJ"},"content":"    public void parseBirthDate_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":203,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseBirthDate(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":204,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":205,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":206,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":207,"author":{"gitId":"XXJJXJ"},"content":"    public void parseBirthDate_notSpecifiedValidDate_returnsBirthDate() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":208,"author":{"gitId":"ntwbruce"},"content":"        BirthDate actualBirthDate \u003d ParserUtil.parseBirthDate(\"N/A\");","lastModifiedDate":"2021-10-19"},{"lineNumber":209,"author":{"gitId":"XXJJXJ"},"content":"        BirthDate expectedBirthDate \u003d BirthDate.notSpecified();","lastModifiedDate":"2021-10-11"},{"lineNumber":210,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(expectedBirthDate, actualBirthDate);","lastModifiedDate":"2021-10-11"},{"lineNumber":211,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":212,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":213,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":214,"author":{"gitId":"XXJJXJ"},"content":"    public void parseBirthDate_invalidBirthDate_throwsParseException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":215,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseBirthDate(\"2021-13-10\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":216,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":217,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":218,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":219,"author":{"gitId":"XXJJXJ"},"content":"    public void parseBirthDate_specifiedValidDate_returnsBirthDate() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":220,"author":{"gitId":"XXJJXJ"},"content":"        BirthDate expectedBirthDate \u003d BirthDate.of(2020, 11, 30);","lastModifiedDate":"2021-10-11"},{"lineNumber":221,"author":{"gitId":"XXJJXJ"},"content":"        BirthDate actualBirthDate \u003d ParserUtil.parseBirthDate(\"2020-11-30\");","lastModifiedDate":"2021-10-11"},{"lineNumber":222,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(expectedBirthDate, actualBirthDate);","lastModifiedDate":"2021-10-11"},{"lineNumber":223,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":224,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":225,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":226,"author":{"gitId":"XXJJXJ"},"content":"    public void parseEventName_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":227,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEventName(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":228,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":229,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":230,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":231,"author":{"gitId":"XXJJXJ"},"content":"    public void parseEventName_invalidEventName_throwsParseException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":232,"author":{"gitId":"XXJJXJ"},"content":"        // empty name","lastModifiedDate":"2021-10-11"},{"lineNumber":233,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEventName(\"\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":234,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":235,"author":{"gitId":"XXJJXJ"},"content":"        // invalid characters","lastModifiedDate":"2021-10-11"},{"lineNumber":236,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEventName(\"Race @ SG\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":237,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":238,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":239,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":240,"author":{"gitId":"XXJJXJ"},"content":"    public void parseEventName_validEventName_returnsEventName() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":241,"author":{"gitId":"XXJJXJ"},"content":"        EventName expectedEventName \u003d new EventName(\"Race for sanity\");","lastModifiedDate":"2021-10-11"},{"lineNumber":242,"author":{"gitId":"XXJJXJ"},"content":"        EventName actualEventName \u003d ParserUtil.parseEventName(\"Race for sanity\");","lastModifiedDate":"2021-10-11"},{"lineNumber":243,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(expectedEventName, actualEventName);","lastModifiedDate":"2021-10-11"},{"lineNumber":244,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":245,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":246,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":247,"author":{"gitId":"XXJJXJ"},"content":"    public void parseEventDate_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":248,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEventDate(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":249,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":250,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":251,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":252,"author":{"gitId":"XXJJXJ"},"content":"    public void parseEventDate_invalidDate_throwsParseException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":253,"author":{"gitId":"XXJJXJ"},"content":"        // invalid year","lastModifiedDate":"2021-10-11"},{"lineNumber":254,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEventDate(\"-2021-10-11\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":255,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":256,"author":{"gitId":"XXJJXJ"},"content":"        // invalid month","lastModifiedDate":"2021-10-11"},{"lineNumber":257,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEventDate(\"2021-130-11\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":258,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":259,"author":{"gitId":"XXJJXJ"},"content":"        // invalid day","lastModifiedDate":"2021-10-11"},{"lineNumber":260,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEventDate(\"2021-10-320\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":261,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":262,"author":{"gitId":"XXJJXJ"},"content":"        // invalid characters","lastModifiedDate":"2021-10-11"},{"lineNumber":263,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEventDate(\"20th May 2021\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":264,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":265,"author":{"gitId":"XXJJXJ"},"content":"        // empty date","lastModifiedDate":"2021-10-11"},{"lineNumber":266,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEventDate(\"\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":267,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":268,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":269,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":270,"author":{"gitId":"XXJJXJ"},"content":"    public void parseEventDate_validDate_returnsEventDate() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":271,"author":{"gitId":"XXJJXJ"},"content":"        EventDate expectedEventDate \u003d new EventDate(\"2021-11-30\");","lastModifiedDate":"2021-10-11"},{"lineNumber":272,"author":{"gitId":"XXJJXJ"},"content":"        EventDate actualEventDate \u003d ParserUtil.parseEventDate(\"2021-11-30\");","lastModifiedDate":"2021-10-11"},{"lineNumber":273,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(expectedEventDate, actualEventDate);","lastModifiedDate":"2021-10-11"},{"lineNumber":274,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":275,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":276,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":277,"author":{"gitId":"XXJJXJ"},"content":"    public void parseEventTime_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":278,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEventTime(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":279,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":280,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":281,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":282,"author":{"gitId":"XXJJXJ"},"content":"    public void parseEventTime_invalidTime_throwsParseException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":283,"author":{"gitId":"XXJJXJ"},"content":"        // invalid hour","lastModifiedDate":"2021-10-11"},{"lineNumber":284,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEventTime(\"2500\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":285,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":286,"author":{"gitId":"XXJJXJ"},"content":"        // invalid minutes","lastModifiedDate":"2021-10-11"},{"lineNumber":287,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEventTime(\"2060\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":288,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":289,"author":{"gitId":"XXJJXJ"},"content":"        // invalid hour and minutes","lastModifiedDate":"2021-10-11"},{"lineNumber":290,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEventTime(\"2560\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":291,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":292,"author":{"gitId":"XXJJXJ"},"content":"        // invalid length","lastModifiedDate":"2021-10-11"},{"lineNumber":293,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEventTime(\"500\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":294,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":295,"author":{"gitId":"XXJJXJ"},"content":"        // invalid characters","lastModifiedDate":"2021-10-11"},{"lineNumber":296,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEventTime(\"abcd\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":297,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":298,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":299,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":300,"author":{"gitId":"XXJJXJ"},"content":"    public void parseEventTime_validTime_returnEventTime() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":301,"author":{"gitId":"XXJJXJ"},"content":"        // no time","lastModifiedDate":"2021-10-11"},{"lineNumber":302,"author":{"gitId":"XXJJXJ"},"content":"        EventTime actualNoTime \u003d new EventTime();","lastModifiedDate":"2021-10-11"},{"lineNumber":303,"author":{"gitId":"XXJJXJ"},"content":"        EventTime expectedNoTime \u003d ParserUtil.parseEventTime(\"\");","lastModifiedDate":"2021-10-11"},{"lineNumber":304,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(expectedNoTime, actualNoTime);","lastModifiedDate":"2021-10-11"},{"lineNumber":305,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":306,"author":{"gitId":"XXJJXJ"},"content":"        // hasTime","lastModifiedDate":"2021-10-11"},{"lineNumber":307,"author":{"gitId":"XXJJXJ"},"content":"        EventTime actualSomeTime \u003d new EventTime(\"2359\");","lastModifiedDate":"2021-10-11"},{"lineNumber":308,"author":{"gitId":"XXJJXJ"},"content":"        EventTime expectedSomeTime \u003d ParserUtil.parseEventTime(\"2359\");","lastModifiedDate":"2021-10-11"},{"lineNumber":309,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(expectedSomeTime, actualSomeTime);","lastModifiedDate":"2021-10-11"},{"lineNumber":310,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":311,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":312,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":313,"author":{"gitId":"XXJJXJ"},"content":"    public void parseParticipantId_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":314,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseParticipantId(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":315,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":316,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":317,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":318,"author":{"gitId":"XXJJXJ"},"content":"    public void parseParticipantId_invalidId_throwsParseException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":319,"author":{"gitId":"XXJJXJ"},"content":"        // invalid id numbering","lastModifiedDate":"2021-10-11"},{"lineNumber":320,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseParticipantId(\"aleyeo0\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":321,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":322,"author":{"gitId":"XXJJXJ"},"content":"        // empty id numbering","lastModifiedDate":"2021-10-11"},{"lineNumber":323,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseParticipantId(\"aleyeo\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":324,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":325,"author":{"gitId":"XXJJXJ"},"content":"        // invalid alphabets length","lastModifiedDate":"2021-10-11"},{"lineNumber":326,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseParticipantId(\"alexyeo0\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":327,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":328,"author":{"gitId":"XXJJXJ"},"content":"        // empty alphabet","lastModifiedDate":"2021-10-11"},{"lineNumber":329,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseParticipantId(\"0\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":330,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":331,"author":{"gitId":"XXJJXJ"},"content":"        // empty id","lastModifiedDate":"2021-10-11"},{"lineNumber":332,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseParticipantId(\"\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":333,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":334,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":335,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":336,"author":{"gitId":"XXJJXJ"},"content":"    public void parseParticipantId_validId_returnsParticipantId() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":337,"author":{"gitId":"XXJJXJ"},"content":"        ParticipantId expectedId \u003d new ParticipantId(\"aleyeo1\");","lastModifiedDate":"2021-10-11"},{"lineNumber":338,"author":{"gitId":"XXJJXJ"},"content":"        ParticipantId actualId \u003d ParserUtil.parseParticipantId(\"aleyeo1\");","lastModifiedDate":"2021-10-11"},{"lineNumber":339,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(expectedId, actualId);","lastModifiedDate":"2021-10-11"},{"lineNumber":340,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":341,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"XXJJXJ":146,"kanjitp":3,"ntwbruce":1,"-":188,"lowkangn":4}},{"path":"src/test/java/seedu/address/logic/parser/ShowEventDetailsCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.commands.ShowEventDetailsCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"public class ShowEventDetailsCommandParserTest {","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"    private final ShowEventDetailsCommandParser parser \u003d new ShowEventDetailsCommandParser();","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ShowEventDetailsCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"    public void parse_validArgs_returnsShowDetailsCommand() {","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"        // exact event name","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"        ShowEventDetailsCommand expectedShowEventDetailsCommand \u003d","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"                new ShowEventDetailsCommand(Index.fromOneBased(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"        assertParseSuccess(parser, \"1\", expectedShowEventDetailsCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"        // event name with extra whitespaces and newlines","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        assertParseSuccess(parser, \" \\n \\n \\t 1  \\t\", expectedShowEventDetailsCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"XXJJXJ":4,"ntwbruce":24,"lowkangn":5}},{"path":"src/test/java/seedu/address/logic/parser/ShowEventParticipantsCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.logic.commands.ShowEventParticipantsCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"public class ShowEventParticipantsCommandParserTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"    private final ShowEventParticipantsCommandParser parser \u003d new ShowEventParticipantsCommandParser();","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, ShowEventParticipantsCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"    public void parse_validArgs_returnsShowParticipantsCommand() {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"        // exact event name","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"        ShowEventParticipantsCommand expectedShowEventParticipantsCommand \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"                new ShowEventParticipantsCommand(Index.fromOneBased(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"        assertParseSuccess(parser, \"1\", expectedShowEventParticipantsCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"        // event name with extra whitespaces and newlines","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        assertParseSuccess(parser, \" \\n\\n \\t 1  \\t\", expectedShowEventParticipantsCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"XXJJXJ":4,"ntwbruce":27}},{"path":"src/test/java/seedu/address/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PARTICIPANT;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"class ViewCommandParserTest {","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"    private final ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"    public void parse_validArgs_returnsViewCommand() {","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"        assertParseSuccess(parser, \"1\", new ViewCommand(INDEX_FIRST_PARTICIPANT));","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"                ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"lowkangn":25}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.SAMPLE_EVENT;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.ALEX;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.getTypicalAddressBook;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.exceptions.DuplicateParticipantException;","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.ParticipantBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"        assertEquals(Collections.emptyList(), addressBook.getParticipantList());","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        Participant editedAlex \u003d new ParticipantBuilder(ALEX).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"        List\u003cParticipant\u003e newParticipants \u003d Arrays.asList(ALEX, editedAlex);","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newParticipants);","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"        assertThrows(DuplicateParticipantException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasParticipant(null));","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"        assertFalse(addressBook.hasParticipant(ALEX));","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"        addressBook.addParticipant(ALEX);","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"kanjitp"},"content":"        assertTrue(addressBook.hasParticipant(ALEX));","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"        addressBook.addParticipant(ALEX);","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"        Participant editedAlex \u003d new ParticipantBuilder(ALEX).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"        assertTrue(addressBook.hasParticipant(editedAlex));","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getParticipantList().remove(0));","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"    public void hasEvent_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasEvent(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"XXJJXJ"},"content":"    public void hasEvent_eventNotInAddressBook_returnFalse() {","lastModifiedDate":"2021-09-18"},{"lineNumber":94,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(addressBook.hasEvent(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":95,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"    public void hasEvent_eventInAddressBook_returnsTrue() {","lastModifiedDate":"2021-09-18"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"        addressBook.addEvent(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(addressBook.hasEvent(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"    public void getEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getEventList().remove(0));","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"davelowqx"},"content":"    public void deleteEvent_eventInAddressBook_returnFalse() {","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"        addressBook.addEvent(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(addressBook.getEventList().contains(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":112,"author":{"gitId":"davelowqx"},"content":"        addressBook.deleteEvent(SAMPLE_EVENT);","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(addressBook.hasEvent(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":114,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":115,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":116,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":117,"author":{"gitId":"XXJJXJ"},"content":"    public void addEvent_eventNotInAddressBook_returnTrue() {","lastModifiedDate":"2021-09-18"},{"lineNumber":118,"author":{"gitId":"XXJJXJ"},"content":"        addressBook.addEvent(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":119,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(addressBook.hasEvent(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":120,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":121,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":122,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":123,"author":{"gitId":"XXJJXJ"},"content":"    public void addEvent_eventInAddressBook_throwsDuplicateEventException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"XXJJXJ"},"content":"        addressBook.addEvent(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":125,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e addressBook.addEvent(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":129,"author":{"gitId":"kanjitp"},"content":"     * A stub ReadOnlyAddressBook whose participants list can violate interface constraints.","lastModifiedDate":"2021-09-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":132,"author":{"gitId":"kanjitp"},"content":"        private final ObservableList\u003cParticipant\u003e participants \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-09-28"},{"lineNumber":133,"author":{"gitId":"XXJJXJ"},"content":"        private final ObservableList\u003cEvent\u003e events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-09-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":135,"author":{"gitId":"kanjitp"},"content":"        AddressBookStub(Collection\u003cParticipant\u003e participants) {","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"kanjitp"},"content":"            this.participants.setAll(participants);","lastModifiedDate":"2021-09-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":140,"author":{"gitId":"kanjitp"},"content":"        public ObservableList\u003cParticipant\u003e getParticipantList() {","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"kanjitp"},"content":"            return participants;","lastModifiedDate":"2021-09-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":143,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":144,"author":{"gitId":"XXJJXJ"},"content":"        @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":145,"author":{"gitId":"XXJJXJ"},"content":"        public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2021-09-18"},{"lineNumber":146,"author":{"gitId":"XXJJXJ"},"content":"            return events;","lastModifiedDate":"2021-09-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-09-23"},{"lineNumber":150,"author":{"gitId":"XXJJXJ"},"content":"        public void sortEvents() {","lastModifiedDate":"2021-09-23"},{"lineNumber":151,"author":{"gitId":"XXJJXJ"},"content":"            events.sort(Comparator.naturalOrder());","lastModifiedDate":"2021-09-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-09-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"XXJJXJ":50,"kanjitp":22,"davelowqx":2,"-":81}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PARTICIPANTS;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.ALEX;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.BERNICE;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.ParticipantNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasParticipant(null));","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"        assertFalse(modelManager.hasParticipant(ALEX));","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"        modelManager.addParticipant(ALEX);","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"        assertTrue(modelManager.hasParticipant(ALEX));","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"kanjitp"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredParticipantList().remove(0));","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":97,"author":{"gitId":"XXJJXJ"},"content":"    public void getEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":98,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredEventList().remove(0));","lastModifiedDate":"2021-09-21"},{"lineNumber":99,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"    // TODO: Implement hasEvent tests after adding addEvent and removeEvent features.","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"kanjitp"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withParticipant(ALEX).withParticipant(BERNICE).build();","lastModifiedDate":"2021-09-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"ntwbruce"},"content":"        String[] keywords \u003d ALEX.getFullName().split(\"\\\\s+\");","lastModifiedDate":"2021-10-03"},{"lineNumber":128,"author":{"gitId":"lowkangn"},"content":"        modelManager.updateFilteredParticipantList(","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"lowkangn"},"content":"                new ParticipantNameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"kanjitp"},"content":"        modelManager.updateFilteredParticipantList(PREDICATE_SHOW_ALL_PARTICIPANTS);","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"XXJJXJ":7,"kanjitp":10,"ntwbruce":1,"-":119,"lowkangn":3}},{"path":"src/test/java/seedu/address/model/event/EventDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"public class EventDateTest {","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EventDate(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new EventDate(invalidDate));","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    public void isValidDate() {","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"        // null date","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e EventDate.isValidDate(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"        // invalid dates","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventDate.isValidDate(\"\")); // empty string","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventDate.isValidDate(\"123\")); // wrong format","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventDate.isValidDate(\"123-10\")); // wrong format","lastModifiedDate":"2021-09-20"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventDate.isValidDate(\"2021 August 20\")); // wrong format","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventDate.isValidDate(\"123-1-32\")); // invalid day","lastModifiedDate":"2021-09-20"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventDate.isValidDate(\"0-13-1\")); // invalid month","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventDate.isValidDate(\"0-1-1\")); // invalid year","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        // valid dates","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventDate.isValidDate(\"2021-08-31\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventDate.isValidDate(\"2021-9-1\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventDate.isValidDate(\"0001-9-1\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventDate.isValidDate(\"1-9-1\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventDate.isValidDate(\"21-9-1\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventDate.isValidDate(\"121-9-1\"));","lastModifiedDate":"2021-09-20"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"    public void testEquals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"        EventDate firstEventDate \u003d new EventDate(\"2020-11-11\");","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"        EventDate firstEventDateCopy \u003d new EventDate(\"2020-11-11\");","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"        EventDate secondEventDate \u003d new EventDate(\"2020-11-12\");","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"        // same EventDate","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(firstEventDate.equals(firstEventDate));","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"        // different EventDate, same date","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(firstEventDate.equals(firstEventDateCopy));","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(firstEventDate.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"        // different EventDate, different date","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(firstEventDate.equals(secondEventDate));","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":45,"ntwbruce":19}},{"path":"src/test/java/seedu/address/model/event/EventDateTimePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"public class EventDateTimePredicateTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"    private final EventDateTimePredicate firstPredicate \u003d new EventDateTimePredicate(","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"            new ArrayList\u003c\u003e(List.of(\"2020-11-11\", \"1000\")));","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"    private final EventDateTimePredicate firstPredicateCopy \u003d new EventDateTimePredicate(","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"            new ArrayList\u003c\u003e(List.of(\"2020-11-11\", \"1000\")));","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"    private final EventDateTimePredicate secondPredicate \u003d new EventDateTimePredicate(","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"            new ArrayList\u003c\u003e(List.of(\"2020-11-12\", \"1001\")));","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"    private final EventDateTimePredicate thirdPredicate \u003d new EventDateTimePredicate(","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"            new ArrayList\u003c\u003e(List.of(\"2020-11-12\")));","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"    public void testEquals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"        // different objects, same values -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"        // date and time present, different values -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"        // one Event with date only  -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(firstPredicate.equals(thirdPredicate));","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"ntwbruce":42}},{"path":"src/test/java/seedu/address/model/event/EventNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"import java.util.List;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"public class EventNameContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"    public void equals() {","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"        EventNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"                new EventNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"        EventNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"                new EventNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"        EventNameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"                new EventNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"        // One keyword","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"        EventNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"                new EventNameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(predicate.test(new EventBuilder().withEventName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"        // Multiple keywords","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"        predicate \u003d new EventNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(predicate.test(new EventBuilder().withEventName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"        predicate \u003d new EventNameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(predicate.test(new EventBuilder().withEventName(\"Alice Carol\").build()));","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"        predicate \u003d new EventNameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(predicate.test(new EventBuilder().withEventName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"ntwbruce"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"ntwbruce"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"ntwbruce"},"content":"        EventNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"ntwbruce"},"content":"                new EventNameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(predicate.test(new EventBuilder().withEventName(\"Alice\").build()));","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"ntwbruce"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"ntwbruce"},"content":"        predicate \u003d new EventNameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(predicate.test(new EventBuilder().withEventName(\"Alice Bob\").build()));","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"ntwbruce":75}},{"path":"src/test/java/seedu/address/model/event/EventNamePredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"public class EventNamePredicateTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"    public void equals() {","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"        EventNamePredicate firstPredicate \u003d new EventNamePredicate(\"first\");","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"        EventNamePredicate secondPredicate \u003d new EventNamePredicate(\"second\");","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"        EventNamePredicate firstPredicateCopy \u003d new EventNamePredicate(\"first\");","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"        EventNamePredicate predicate \u003d new EventNamePredicate(\"Dinner\");","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(predicate.test(new Event(new EventName(\"Dinner\"), new EventDate(\"2021-11-11\"))));","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"        EventNamePredicate predicate \u003d new EventNamePredicate(\"\");","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(predicate.test(new Event(new EventName(\"Dinner\"), new EventDate(\"2021-11-11\"))));","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"        predicate \u003d new EventNamePredicate(\"Lunch\");","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(predicate.test(new Event(new EventName(\"Dinner\"), new EventDate(\"2021-11-11\"))));","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"ntwbruce":48}},{"path":"src/test/java/seedu/address/model/event/EventNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"public class EventNameTest {","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EventName(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new EventName(invalidName));","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    public void isValidEventName() {","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"        // null name","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e EventName.isValidEventName(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"        // invalid name","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventName.isValidEventName(\"\")); // empty string","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventName.isValidEventName(\" \")); // spaces only","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventName.isValidEventName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventName.isValidEventName(\"sleep*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"        // valid name","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventName.isValidEventName(\"sleep and wake up\")); // alphabets only","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventName.isValidEventName(\"12345\")); // numbers only","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventName.isValidEventName(\"2nd time sleeping\")); // alphanumeric characters","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventName.isValidEventName(\"gO hOmE aH bOi\")); // with capital letters","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"        // long names","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventName.isValidEventName(\"Run for Charity sponsored by NUS CS2103T AY2122S1 T10 group 2\"));","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"    public void testEquals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"        EventName firstEventName \u003d new EventName(\"first\");","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"        EventName secondEventName \u003d new EventName(\"second\");","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"        // same EventName","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(firstEventName.equals(firstEventName));","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"        // different EventName, same name","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"        EventName firstEventNameCopy \u003d new EventName(\"first\");","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(firstEventName.equals(firstEventNameCopy));","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(firstEventName.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"        // different EventName, different name","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(firstEventName.equals(secondEventName));","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":41,"ntwbruce":20}},{"path":"src/test/java/seedu/address/model/event/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.ANOTHER_EVENT;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.SAMPLE_EVENT;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.testutil.TypicalEvents.SAMPLE_EVENT_2;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.testutil.TypicalEvents.SAMPLE_EVENT_COPY_DIFFERENT_COMPLETION;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.testutil.TypicalEvents.SAMPLE_EVENT_COPY_DIFFERENT_DATE;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.testutil.TypicalEvents.SAMPLE_EVENT_COPY_DIFFERENT_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.testutil.TypicalEvents.SAMPLE_EVENT_COPY_DIFFERENT_PARTICIPANTS;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.SAMPLE_EVENT_COPY_DIFFERENT_TIME;","lastModifiedDate":"2021-09-19"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.testutil.TypicalEvents.SAMPLE_EVENT_DEFAULT_TIME_AND_COMPLETION;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.testutil.TypicalEvents.SAMPLE_EVENT_SPECIFIED_TIME_AND_COMPLETION;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.testutil.TypicalEvents.SAMPLE_EVENT_SPECIFIED_TIME_AND_COMPLETION_COPY;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.TypicalParticipants.ALEX;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"public class EventTest {","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"    private Event testEvent;","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"    void init() {","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"lowkangn"},"content":"        testEvent \u003d new Event(new EventName(\"Testing\"), new EventDate(\"2021-09-18\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"                new EventTime(\"1000\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"    public void getParticipants() {","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"        assertEquals(testEvent.getParticipants().size(), 0);","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"        testEvent.getParticipants().add(ALEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"        List\u003cParticipant\u003e expectedParticipants \u003d new ArrayList\u003c\u003e(List.of(ALEX));","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"        assertEquals(testEvent.getParticipants(), expectedParticipants);","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"lowkangn"},"content":"        assertEquals(testEvent.getParticipants().size(), 1);","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"lowkangn"},"content":"    public void addParticipant() {","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"lowkangn"},"content":"        testEvent.addParticipant(ALEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"lowkangn"},"content":"        List\u003cParticipant\u003e expectedParticipants \u003d new ArrayList\u003c\u003e(List.of(ALEX));","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"lowkangn"},"content":"        assertEquals(testEvent.getParticipants(), expectedParticipants);","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"lowkangn"},"content":"        assertEquals(testEvent.getParticipants().size(), 1);","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"lowkangn"},"content":"    public void removeParticipant() {","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"lowkangn"},"content":"        testEvent.addParticipant(ALEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"lowkangn"},"content":"        testEvent.getParticipants().remove(ALEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"lowkangn"},"content":"        List\u003cParticipant\u003e expectedParticipants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"lowkangn"},"content":"        assertEquals(testEvent.getParticipants(), expectedParticipants);","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"lowkangn"},"content":"        assertEquals(testEvent.getParticipants().size(), 0);","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"lowkangn"},"content":"    public void hasParticipant() {","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"lowkangn"},"content":"        testEvent.addParticipant(ALEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"lowkangn"},"content":"        assertTrue(testEvent.hasParticipant(ALEX));","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"lowkangn"},"content":"        testEvent.removeParticipant(ALEX);","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"lowkangn"},"content":"        assertFalse(testEvent.hasParticipant(ALEX));","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"lowkangn"},"content":"        assertFalse(testEvent.getDoneValue());","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"lowkangn"},"content":"        testEvent.markAsDone();","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"lowkangn"},"content":"        assertTrue(testEvent.getDoneValue());","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"    public void isSameEvent() {","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"ntwbruce"},"content":"        // same name -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(SAMPLE_EVENT.isSameEvent(SAMPLE_EVENT));","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(SAMPLE_EVENT.isSameEvent(SAMPLE_EVENT_COPY_DIFFERENT_TIME));","lastModifiedDate":"2021-09-19"},{"lineNumber":83,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"ntwbruce"},"content":"        //null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(SAMPLE_EVENT.isSameEvent(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"ntwbruce"},"content":"    public void testEquals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"XXJJXJ"},"content":"        // same Event","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(SAMPLE_EVENT.equals(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":92,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"ntwbruce"},"content":"        // same name but different other fields","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(SAMPLE_EVENT.equals(ANOTHER_EVENT));","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"ntwbruce"},"content":"        // different Event, identical details","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(SAMPLE_EVENT_SPECIFIED_TIME_AND_COMPLETION","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"ntwbruce"},"content":"                .equals(SAMPLE_EVENT_SPECIFIED_TIME_AND_COMPLETION_COPY));","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(SAMPLE_EVENT.equals(null));","lastModifiedDate":"2021-09-19"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"ntwbruce"},"content":"        // different name","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(SAMPLE_EVENT.equals(SAMPLE_EVENT_COPY_DIFFERENT_NAME));","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"ntwbruce"},"content":"        // different date","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(SAMPLE_EVENT.equals(SAMPLE_EVENT_COPY_DIFFERENT_DATE));","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"ntwbruce"},"content":"        // different time","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(SAMPLE_EVENT.equals(SAMPLE_EVENT_COPY_DIFFERENT_TIME));","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"ntwbruce"},"content":"        // different completion status","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(SAMPLE_EVENT.equals(SAMPLE_EVENT_COPY_DIFFERENT_COMPLETION));","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"ntwbruce"},"content":"        // different participant list","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(SAMPLE_EVENT.equals(SAMPLE_EVENT_COPY_DIFFERENT_PARTICIPANTS));","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"XXJJXJ"},"content":"        // TODO: If implementing edit Event, can add more testcases.","lastModifiedDate":"2021-09-18"},{"lineNumber":119,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":120,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"ntwbruce"},"content":"    public void testHashCode() {","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"ntwbruce"},"content":"        // same Event -\u003e returns same hashcode","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(SAMPLE_EVENT.hashCode(), SAMPLE_EVENT.hashCode());","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"ntwbruce"},"content":"        // different Event -\u003e returns different hashcode","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(SAMPLE_EVENT.hashCode(), SAMPLE_EVENT_2.hashCode());","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"ntwbruce"},"content":"        // same EventName, different other details","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(SAMPLE_EVENT_SPECIFIED_TIME_AND_COMPLETION.hashCode(),","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"ntwbruce"},"content":"                SAMPLE_EVENT_SPECIFIED_TIME_AND_COMPLETION_COPY.hashCode());","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"ntwbruce"},"content":"    public void testToString() {","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"ntwbruce"},"content":"        Event firstTestEvent \u003d SAMPLE_EVENT_SPECIFIED_TIME_AND_COMPLETION;","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"ntwbruce"},"content":"        Event secondTestEvent \u003d SAMPLE_EVENT_DEFAULT_TIME_AND_COMPLETION;","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"ntwbruce"},"content":"        final String firstTestEventString \u003d String.format(","lastModifiedDate":"2021-10-16"},{"lineNumber":141,"author":{"gitId":"ntwbruce"},"content":"                \"Event Name: %s\\nEvent Date: %s\\nEvent Time: %s\\nCompletion Status: %s\\nNumber of participants: %d\",","lastModifiedDate":"2021-10-16"},{"lineNumber":142,"author":{"gitId":"ntwbruce"},"content":"                firstTestEvent.getNameString(),","lastModifiedDate":"2021-10-16"},{"lineNumber":143,"author":{"gitId":"ntwbruce"},"content":"                firstTestEvent.getDateString(),","lastModifiedDate":"2021-10-16"},{"lineNumber":144,"author":{"gitId":"ntwbruce"},"content":"                firstTestEvent.getTimeString(),","lastModifiedDate":"2021-10-16"},{"lineNumber":145,"author":{"gitId":"lowkangn"},"content":"                firstTestEvent.getDoneValue() ? \"Completed\" : \"Uncompleted\",","lastModifiedDate":"2021-10-22"},{"lineNumber":146,"author":{"gitId":"ntwbruce"},"content":"                firstTestEvent.getParticipants().size());","lastModifiedDate":"2021-10-16"},{"lineNumber":147,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":148,"author":{"gitId":"ntwbruce"},"content":"        final String secondTestEventString \u003d String.format(","lastModifiedDate":"2021-10-16"},{"lineNumber":149,"author":{"gitId":"ntwbruce"},"content":"                \"Event Name: %s\\nEvent Date: %s\\nEvent Time: %s\\nCompletion Status: %s\\nNumber of participants: %d\",","lastModifiedDate":"2021-10-16"},{"lineNumber":150,"author":{"gitId":"ntwbruce"},"content":"                secondTestEvent.getNameString(),","lastModifiedDate":"2021-10-16"},{"lineNumber":151,"author":{"gitId":"ntwbruce"},"content":"                secondTestEvent.getDateString(),","lastModifiedDate":"2021-10-16"},{"lineNumber":152,"author":{"gitId":"ntwbruce"},"content":"                secondTestEvent.getTimeString(),","lastModifiedDate":"2021-10-16"},{"lineNumber":153,"author":{"gitId":"lowkangn"},"content":"                secondTestEvent.getDoneValue() ? \"Completed\" : \"Uncompleted\",","lastModifiedDate":"2021-10-22"},{"lineNumber":154,"author":{"gitId":"ntwbruce"},"content":"                secondTestEvent.getParticipants().size());","lastModifiedDate":"2021-10-16"},{"lineNumber":155,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":156,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(firstTestEvent.toString(), firstTestEventString);","lastModifiedDate":"2021-10-16"},{"lineNumber":157,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(secondTestEvent.toString(), secondTestEventString);","lastModifiedDate":"2021-10-16"},{"lineNumber":158,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":36,"ntwbruce":74,"lowkangn":49}},{"path":"src/test/java/seedu/address/model/event/EventTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"public class EventTimeTest {","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"    private EventTime firstEventTime \u003d new EventTime(\"1000\");","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"    private EventTime secondEventTime \u003d new EventTime(\"1001\");","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"    private EventTime defaultEventTime \u003d new EventTime();","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EventTime(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"        String invalidTime \u003d \"\";","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new EventTime(invalidTime));","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    public void isValidTime() {","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"        // null time","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e EventTime.isValidTime(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"        // invalid time","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventTime.isValidTime(\"\")); // empty string","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventTime.isValidTime(\"9\")); // wrong format","lastModifiedDate":"2021-09-20"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventTime.isValidTime(\"90\")); // wrong format","lastModifiedDate":"2021-09-20"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventTime.isValidTime(\"123\")); // wrong format","lastModifiedDate":"2021-09-25"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventTime.isValidTime(\"8pm\")); // wrong format","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventTime.isValidTime(\"00:00\")); // wrong format","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(EventTime.isValidTime(\"2500\")); // no such time","lastModifiedDate":"2021-09-20"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"        // valid time","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventTime.isValidTime(\"0000\"));","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(EventTime.isValidTime(\"2359\"));","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"    public void testEquals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"        // same EventTime","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(firstEventTime.equals(firstEventTime));","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"        // different EventTime, same time","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"        EventTime firstEventTimeCopy \u003d new EventTime(\"1000\");","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(firstEventTime.equals(firstEventTimeCopy));","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(firstEventTime.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"        // different EventTime, one uses default constructor","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(firstEventTime.equals(defaultEventTime));","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"        // different EventTime, different time","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(firstEventTime.equals(secondEventTime));","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"ntwbruce"},"content":"    public void testCompareTo() {","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"ntwbruce"},"content":"        // both EventTime objects hasTime true, firstEventTime.time \u003c secondEventTime.time","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(firstEventTime.compareTo(secondEventTime) \u003c 0);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"ntwbruce"},"content":"        // this.hasTime true, o.hasTime false","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(firstEventTime.compareTo(defaultEventTime), 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"ntwbruce"},"content":"        // this.hasTime false, o.hasTime true","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(defaultEventTime.compareTo(firstEventTime), -1);","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"ntwbruce"},"content":"        // both EventTime objects hasTime false","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(defaultEventTime.compareTo(defaultEventTime), 0);","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":40,"ntwbruce":38}},{"path":"src/test/java/seedu/address/model/event/UniqueEventListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.model.event;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.ANOTHER_EVENT;","lastModifiedDate":"2021-09-19"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.SAMPLE_EVENT;","lastModifiedDate":"2021-09-19"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Collections;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"import java.util.List;","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"class UniqueEventListTest {","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    private final UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"    private final UniqueEventList secondUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    public void contains_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.contains(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"    public void contains_eventNotInList_returnsFalse() {","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"        assertFalse(uniqueEventList.contains(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"    public void contains_eventInList_returnsTrue() {","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        uniqueEventList.add(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"        assertTrue(uniqueEventList.contains(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"    public void add_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.add(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"    public void add_duplicateEvent_throwsDuplicateEventException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"        uniqueEventList.add(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.add(SAMPLE_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"    public void remove_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.remove(null));","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"    public void remove_eventDoesNotExist_throwsEventNotFoundException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e uniqueEventList.remove(ANOTHER_EVENT));","lastModifiedDate":"2021-09-19"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"    public void remove_existingEvent_removesEvent() {","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"        uniqueEventList.add(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"        uniqueEventList.remove(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"lowkangn"},"content":"    public void setEvent_nullTargetEvent_throwsNullPointerException() {","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"lowkangn"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvent(null, SAMPLE_EVENT));","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":75,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":76,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":77,"author":{"gitId":"lowkangn"},"content":"    public void setEvent_nullEditedEvent_throwsNullPointerException() {","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"lowkangn"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvent(SAMPLE_EVENT, null));","lastModifiedDate":"2021-10-03"},{"lineNumber":79,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":80,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":81,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":82,"author":{"gitId":"lowkangn"},"content":"    public void setEvent_targetEventNotInList_throwsEventNotFoundException() {","lastModifiedDate":"2021-10-03"},{"lineNumber":83,"author":{"gitId":"lowkangn"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e uniqueEventList.setEvent(SAMPLE_EVENT, ANOTHER_EVENT));","lastModifiedDate":"2021-10-03"},{"lineNumber":84,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":85,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":86,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":87,"author":{"gitId":"lowkangn"},"content":"    public void setEvent_listContainsEditedEvent_throwsDuplicateEventException() {","lastModifiedDate":"2021-10-03"},{"lineNumber":88,"author":{"gitId":"lowkangn"},"content":"        uniqueEventList.add(SAMPLE_EVENT);","lastModifiedDate":"2021-10-03"},{"lineNumber":89,"author":{"gitId":"lowkangn"},"content":"        uniqueEventList.add(ANOTHER_EVENT);","lastModifiedDate":"2021-10-03"},{"lineNumber":90,"author":{"gitId":"lowkangn"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.setEvent(ANOTHER_EVENT, SAMPLE_EVENT));","lastModifiedDate":"2021-10-03"},{"lineNumber":91,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":92,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":93,"author":{"gitId":"lowkangn"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":94,"author":{"gitId":"lowkangn"},"content":"    public void setEvent_existingEvent_replacesEvent() {","lastModifiedDate":"2021-10-03"},{"lineNumber":95,"author":{"gitId":"lowkangn"},"content":"        uniqueEventList.add(SAMPLE_EVENT);","lastModifiedDate":"2021-10-03"},{"lineNumber":96,"author":{"gitId":"lowkangn"},"content":"        uniqueEventList.setEvent(SAMPLE_EVENT, ANOTHER_EVENT);","lastModifiedDate":"2021-10-03"},{"lineNumber":97,"author":{"gitId":"lowkangn"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-10-03"},{"lineNumber":98,"author":{"gitId":"lowkangn"},"content":"        expectedUniqueEventList.add(ANOTHER_EVENT);","lastModifiedDate":"2021-10-03"},{"lineNumber":99,"author":{"gitId":"lowkangn"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-10-03"},{"lineNumber":100,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"XXJJXJ"},"content":"    public void setEvents_uniqueEventList_replacesOwnListWithProvidedUniqueEventList() {","lastModifiedDate":"2021-09-18"},{"lineNumber":104,"author":{"gitId":"XXJJXJ"},"content":"        uniqueEventList.add(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":105,"author":{"gitId":"XXJJXJ"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"        expectedUniqueEventList.add(ANOTHER_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"        uniqueEventList.setEvents(expectedUniqueEventList);","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":111,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":112,"author":{"gitId":"XXJJXJ"},"content":"    public void setEvents_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":113,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvents((List\u003cEvent\u003e) null));","lastModifiedDate":"2021-09-18"},{"lineNumber":114,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":115,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":116,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":117,"author":{"gitId":"XXJJXJ"},"content":"    public void setEvents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-09-18"},{"lineNumber":118,"author":{"gitId":"XXJJXJ"},"content":"        uniqueEventList.add(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":119,"author":{"gitId":"XXJJXJ"},"content":"        List\u003cEvent\u003e eventList \u003d Collections.singletonList(ANOTHER_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":120,"author":{"gitId":"XXJJXJ"},"content":"        uniqueEventList.setEvents(eventList);","lastModifiedDate":"2021-09-18"},{"lineNumber":121,"author":{"gitId":"XXJJXJ"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2021-09-18"},{"lineNumber":122,"author":{"gitId":"XXJJXJ"},"content":"        expectedUniqueEventList.add(ANOTHER_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":123,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":126,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":127,"author":{"gitId":"XXJJXJ"},"content":"    public void setEvents_listWithDuplicateEvents_throwsDuplicateEventException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":128,"author":{"gitId":"XXJJXJ"},"content":"        List\u003cEvent\u003e listWithDuplicateEvents \u003d Arrays.asList(SAMPLE_EVENT, SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":129,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.setEvents(listWithDuplicateEvents));","lastModifiedDate":"2021-09-18"},{"lineNumber":130,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":131,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":132,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":133,"author":{"gitId":"XXJJXJ"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":134,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-09-18"},{"lineNumber":135,"author":{"gitId":"XXJJXJ"},"content":"            -\u003e uniqueEventList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-09-18"},{"lineNumber":136,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":137,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"ntwbruce"},"content":"    public void iterator_checkForNextInEmptyList_returnFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"ntwbruce"},"content":"        Iterator\u003cEvent\u003e iterator \u003d uniqueEventList.iterator();","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(iterator.hasNext());","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"ntwbruce"},"content":"    public void iterator_getNextInEmptyList_throwsError() {","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"ntwbruce"},"content":"        Iterator\u003cEvent\u003e iterator \u003d uniqueEventList.iterator();","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"ntwbruce"},"content":"        assertThrows(NoSuchElementException.class, iterator::next);","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"ntwbruce"},"content":"    public void testEquals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"ntwbruce"},"content":"        secondUniqueEventList.add(SAMPLE_EVENT);","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"ntwbruce"},"content":"        // same list","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(uniqueEventList.equals(uniqueEventList));","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"ntwbruce"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(uniqueEventList.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"ntwbruce"},"content":"        // second list contains event","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(uniqueEventList.equals(secondUniqueEventList));","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"ntwbruce"},"content":"        // add same event to first list","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"ntwbruce"},"content":"        uniqueEventList.add(SAMPLE_EVENT);","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(uniqueEventList.equals(secondUniqueEventList));","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":106,"ntwbruce":33,"lowkangn":28}},{"path":"src/test/java/seedu/address/model/participant/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.model.participant;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"    public void testEquals() {","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"        Address sampleAddress \u003d new Address(\"Blk 456, Den Road, #01-355\");","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"        Address sampleAddressCopy \u003d new Address(\"Blk 456, Den Road, #01-355\");","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"        Address differentSampleAddress \u003d new Address(\"Blk 456, Den Road, #01-356\");","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"        // same address -\u003e return true","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(sampleAddress, sampleAddress);","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"        // different object, same value -\u003e return true","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(sampleAddressCopy, sampleAddress);","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"        // different value -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(differentSampleAddress, sampleAddress);","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"        // null object -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(sampleAddress, null);","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"        // different type -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(sampleAddress, 5);","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"ntwbruce":24,"-":35,"lowkangn":1}},{"path":"src/test/java/seedu/address/model/participant/BirthDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.participant;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.time.Period;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class BirthDateTest {","lastModifiedDate":"2021-09-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getAgeTest() {","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        LocalDate date \u003d LocalDate.of(2000, 8, 4);","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        BirthDate birthDate \u003d BirthDate.of(2000, 8, 4);","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(Period.between(date, LocalDate.now()).getYears(), birthDate.getAge());","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void notSpecifiedBirthDateTest() {","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        BirthDate birthDate \u003d BirthDate.notSpecified();","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertEquals(\"N/A\", birthDate.toString());","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    public void ofFactoryMethod_integerParam_stringRepresentationTest() {","lastModifiedDate":"2021-09-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        BirthDate birthDate \u003d BirthDate.of(2020, 8, 4);","lastModifiedDate":"2021-09-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(\"2020-08-04\", birthDate.toString());","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"    public void ofFactoryMethod_localDateParam_stringRepresentationTest() {","lastModifiedDate":"2021-09-19"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        BirthDate birthDate \u003d BirthDate.of(\"2021-09-18\");","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(\"2021-09-18\", birthDate.toString());","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void isPresentOrPastTest() {","lastModifiedDate":"2021-09-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(BirthDate.isPresentOrPast(LocalDate.MAX));","lastModifiedDate":"2021-09-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(BirthDate.isPresentOrPast(LocalDate.now().plusYears(20)));","lastModifiedDate":"2021-09-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(BirthDate.isPresentOrPast(LocalDate.now()));","lastModifiedDate":"2021-09-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // for other use cases not strictly to participants","lastModifiedDate":"2021-09-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // BirthDate is strictly what can be born now and in the past and not in the future only","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(BirthDate.isPresentOrPast(LocalDate.now().minusYears(200)));","lastModifiedDate":"2021-09-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(BirthDate.isPresentOrPast(LocalDate.now().minusYears(50)));","lastModifiedDate":"2021-09-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"    public void testEquals() {","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"        BirthDate sampleBirthDate \u003d BirthDate.of(2020, 11, 11);","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"        BirthDate sampleBirthDateCopy \u003d BirthDate.of(2020, 11, 11);","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"        BirthDate sampleBirthDateLocalDate \u003d BirthDate.of(\"2020-11-11\");","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"        BirthDate differentSampleBirthDate \u003d BirthDate.of(2020, 11, 12);","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"        BirthDate nullSampleBirthDate \u003d BirthDate.of(null);","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"        // same object -\u003e return true","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(sampleBirthDate, sampleBirthDate);","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"ntwbruce"},"content":"        // different object, same value -\u003e return true","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(sampleBirthDate, sampleBirthDateCopy);","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"ntwbruce"},"content":"        // same object -\u003e return true","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(sampleBirthDate, sampleBirthDate);","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"ntwbruce"},"content":"        // null object -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(sampleBirthDate, null);","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"ntwbruce"},"content":"        // different type -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(sampleBirthDate, 5);","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"ntwbruce"},"content":"        // same value, different constructors -\u003e return true","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(sampleBirthDate, sampleBirthDateLocalDate);","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"ntwbruce"},"content":"        // different values -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(sampleBirthDate, differentSampleBirthDate);","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"ntwbruce"},"content":"        // one null value -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(sampleBirthDate, nullSampleBirthDate);","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(nullSampleBirthDate, sampleBirthDate);","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"ntwbruce"},"content":"        // both null values -\u003e return true","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(nullSampleBirthDate, nullSampleBirthDate);","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"XXJJXJ":8,"ntwbruce":37,"-":46}},{"path":"src/test/java/seedu/address/model/participant/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.model.participant;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":70,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"ntwbruce"},"content":"    public void testEquals() {","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"ntwbruce"},"content":"        Email sampleEmail \u003d new Email(\"e1234567@u.nus.edu\");","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"ntwbruce"},"content":"        Email sampleEmailCopy \u003d new Email(\"e1234567@u.nus.edu\");","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"ntwbruce"},"content":"        Email differentSampleEmail \u003d new Email(\"e1234568@u.nus.edu\");","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"ntwbruce"},"content":"        // same email -\u003e return true","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(sampleEmail, sampleEmail);","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"ntwbruce"},"content":"        // different object, same value -\u003e return true","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(sampleEmailCopy, sampleEmail);","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"ntwbruce"},"content":"        // different value -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(differentSampleEmail, sampleEmail);","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"ntwbruce"},"content":"        // null object -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(sampleEmail, null);","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"ntwbruce"},"content":"        // different type -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(sampleEmail, 5);","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"ntwbruce":24,"-":67,"lowkangn":1}},{"path":"src/test/java/seedu/address/model/participant/EventParticipantNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.model.participant;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.ParticipantBuilder;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"public class EventParticipantNameContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"        ParticipantNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"                new ParticipantNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"        ParticipantNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"                new ParticipantNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"        ParticipantNameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"                new ParticipantNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"lowkangn"},"content":"        ParticipantNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"lowkangn"},"content":"                new ParticipantNameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"        assertTrue(predicate.test(new ParticipantBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"lowkangn"},"content":"        predicate \u003d new ParticipantNameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"        assertTrue(predicate.test(new ParticipantBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"lowkangn"},"content":"        predicate \u003d new ParticipantNameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"        assertTrue(predicate.test(new ParticipantBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"lowkangn"},"content":"        predicate \u003d new ParticipantNameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"        assertTrue(predicate.test(new ParticipantBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"lowkangn"},"content":"        ParticipantNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"lowkangn"},"content":"                new ParticipantNameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"        assertFalse(predicate.test(new ParticipantBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"lowkangn"},"content":"        predicate \u003d new ParticipantNameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"kanjitp"},"content":"        assertFalse(predicate.test(new ParticipantBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"lowkangn"},"content":"        predicate \u003d new ParticipantNameContainsKeywordsPredicate(","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"lowkangn"},"content":"                Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"        assertFalse(predicate.test(new ParticipantBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"kanjitp":8,"-":55,"lowkangn":18}},{"path":"src/test/java/seedu/address/model/participant/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.model.participant;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"    public void testEquals() {","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"        Name sampleName \u003d new Name(\"Nakiri Ayame\");","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"        Name sampleNameCopy \u003d new Name(\"Nakiri Ayame\");","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"        Name differentSampleName \u003d new Name(\"Nakiri Ayamu\");","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"        // same name -\u003e return true","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(sampleName, sampleName);","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"        // different object, same value -\u003e return true","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(sampleNameCopy, sampleName);","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"        // different value -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(differentSampleName, sampleName);","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"        // null object -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(sampleName, null);","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"        // different type -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(sampleName, 5);","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"ntwbruce":24,"-":39,"lowkangn":1}},{"path":"src/test/java/seedu/address/model/participant/NextOfKinTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package seedu.address.model.participant;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"public class NextOfKinTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"    public void testEquals() {","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"        NextOfKin sampleNextOfKin \u003d new NextOfKin(new Name(\"Elira Pendora\"), new Phone(\"96363672\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"                new Tag(\"Mother\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"        NextOfKin sampleNextOfKinCopy \u003d new NextOfKin(new Name(\"Elira Pendora\"), new Phone(\"96363672\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"                new Tag(\"Mother\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"        NextOfKin differentNameSampleNextOfKin \u003d new NextOfKin(new Name(\"Elira Pendoro\"), new Phone(\"96363672\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"                new Tag(\"Mother\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"        NextOfKin differentPhoneSampleNextOfKin \u003d new NextOfKin(new Name(\"Elira Pendora\"), new Phone(\"96363673\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"                new Tag(\"Mother\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"        NextOfKin differentTagSampleNextOfKin \u003d new NextOfKin(new Name(\"Elira Pendora\"), new Phone(\"96363672\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"                new Tag(\"Father\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"        // same object -\u003e return true","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(sampleNextOfKin, sampleNextOfKin);","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"        // different object, same value -\u003e return true","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(sampleNextOfKin, sampleNextOfKinCopy);","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"        // null object -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(sampleNextOfKin, null);","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"        // different type -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(sampleNextOfKin, 5);","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"        // different name -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(sampleNextOfKin, differentNameSampleNextOfKin);","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"        // different phone number -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(sampleNextOfKin, differentPhoneSampleNextOfKin);","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"        // different tag -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(sampleNextOfKin, differentTagSampleNextOfKin);","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"ntwbruce":46}},{"path":"src/test/java/seedu/address/model/participant/ParticipantIdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package seedu.address.model.participant;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.testutil.ParticipantBuilder;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"public class ParticipantIdTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"    private final ParticipantId sampleParticipantId \u003d new ParticipantId(\"pomu1\");","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"    private final ParticipantId sampleParticipantIdCopy \u003d new ParticipantId(\"pomu1\");","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"    private final ParticipantId differentSampleParticipantId \u003d new ParticipantId(\"pomu2\");","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"    public void encode_differentNameLengths_returnCorrectId() {","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"        Participant sampleParticipant \u003d new ParticipantBuilder().withName(\"Alex Yeoh\").build();","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"        Participant shortFirstNameSampleParticipant \u003d new ParticipantBuilder().withName(\"Al Yeoh\").build();","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"        Participant shortSurnameSampleParticipant \u003d new ParticipantBuilder().withName(\"Alex Ye\").build();","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"        Participant shortSingleNameSampleParticipant \u003d new ParticipantBuilder().withName(\"Alex\").build();","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"        Participant longSingleNameSampleParticipant \u003d new ParticipantBuilder().withName(\"Alexander\").build();","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(\"aleyeo\", ParticipantId.encode(sampleParticipant).replaceAll(\"\\\\d\", \"\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(\"alyeo\", ParticipantId.encode(shortFirstNameSampleParticipant).replaceAll(\"\\\\d\", \"\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(\"aleye\", ParticipantId.encode(shortSurnameSampleParticipant).replaceAll(\"\\\\d\", \"\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(\"alex\", ParticipantId.encode(shortSingleNameSampleParticipant).replaceAll(\"\\\\d\", \"\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(\"alexan\", ParticipantId.encode(longSingleNameSampleParticipant).replaceAll(\"\\\\d\", \"\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"    public void testEquals() {","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"        // same name -\u003e return true","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(sampleParticipantId, sampleParticipantId);","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"        // different object, same value -\u003e return true","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(sampleParticipantId, sampleParticipantIdCopy);","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"        // different value -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(differentSampleParticipantId, sampleParticipantId);","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"        // null object -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(sampleParticipantId, null);","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"        // different type -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(sampleParticipantId, 5);","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"    public void testHashCode() {","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"        // same object -\u003e return true","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(sampleParticipantId.hashCode(), sampleParticipantId.hashCode());","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"        // different object, same value -\u003e return true","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(sampleParticipantId.hashCode(), sampleParticipantIdCopy.hashCode());","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"        // different values -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(sampleParticipantId.hashCode(), differentSampleParticipantId.hashCode());","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"ntwbruce":59}},{"path":"src/test/java/seedu/address/model/participant/ParticipantTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.participant;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-11"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.TypicalEvents.ANOTHER_EVENT;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.TypicalEvents.SAMPLE_EVENT;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.TypicalParticipants.ALEX;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.testutil.TypicalParticipants.ALEX_DIFFERENT_ADDRESS;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.testutil.TypicalParticipants.ALEX_DIFFERENT_BIRTHDATE;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.testutil.TypicalParticipants.ALEX_DIFFERENT_EMAIL;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.testutil.TypicalParticipants.ALEX_DIFFERENT_NOK;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.testutil.TypicalParticipants.ALEX_DIFFERENT_PHONE;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.testutil.TypicalParticipants.BERNICE;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-09-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.ParticipantBuilder;","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParticipantTest {","lastModifiedDate":"2021-09-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"    public void isSameParticipantTest() {","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"        assertTrue(ALEX.isSameParticipant(ALEX));","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"        assertTrue(BERNICE.isSameParticipant(BERNICE));","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"lowkangn"},"content":"        assertFalse(ALEX.isSameParticipant(BERNICE));","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"lowkangn"},"content":"        assertFalse(BERNICE.isSameParticipant(ALEX));","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(ALEX.isSameParticipant(ALEX_DIFFERENT_BIRTHDATE));","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(ALEX.isSameParticipant(null));","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void withBirthDateTest() {","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"lowkangn"},"content":"        Participant alexP \u003d new ParticipantBuilder().withBirthDate(2000, 8, 4).build();","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"        Participant bobP \u003d new ParticipantBuilder().build();","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"        assertEquals(\"2000-08-04\", alexP.getBirthDateString());","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(\"N/A\", bobP.getBirthDateString());","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"lowkangn"},"content":"    public void addEventTest() {","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"lowkangn"},"content":"        Participant alexP \u003d new ParticipantBuilder().build();","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"lowkangn"},"content":"        alexP.addEvent(SAMPLE_EVENT);","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"lowkangn"},"content":"        alexP.addEvent(ANOTHER_EVENT);","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"lowkangn"},"content":"        assertFalse(alexP.getEvents().isEmpty());","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"lowkangn"},"content":"        ArrayList\u003cEvent\u003e expectedEvents \u003d new ArrayList\u003c\u003e(List.of(SAMPLE_EVENT, ANOTHER_EVENT));","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"lowkangn"},"content":"        assertEquals(alexP.getEvents(), expectedEvents);","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"davelowqx"},"content":"    public void deleteEventTest() {","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"lowkangn"},"content":"        Participant alexP \u003d new ParticipantBuilder().build();","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"lowkangn"},"content":"        assertTrue(alexP.getEvents().isEmpty());","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"lowkangn"},"content":"        alexP.addEvent(SAMPLE_EVENT);","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"lowkangn"},"content":"        alexP.addEvent(ANOTHER_EVENT);","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"davelowqx"},"content":"        alexP.deleteEvent(ANOTHER_EVENT);","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"lowkangn"},"content":"        ArrayList\u003cEvent\u003e expectedEvents \u003d new ArrayList\u003c\u003e(List.of(SAMPLE_EVENT));","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"lowkangn"},"content":"        assertEquals(alexP.getEvents(), expectedEvents);","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"davelowqx"},"content":"        alexP.deleteEvent(SAMPLE_EVENT);","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"lowkangn"},"content":"        assertTrue(alexP.getEvents().isEmpty());","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"ntwbruce"},"content":"        Participant alexCopy \u003d new ParticipantBuilder(ALEX).build();","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(ALEX, ALEX);","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"ntwbruce"},"content":"        // object copy -\u003e returns true","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(alexCopy, ALEX);","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(ALEX, null);","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(ALEX, 5);","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(BERNICE, ALEX);","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"ntwbruce"},"content":"        // different phone number -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(ALEX, ALEX_DIFFERENT_PHONE);","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"ntwbruce"},"content":"        // different email -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(ALEX, ALEX_DIFFERENT_EMAIL);","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"ntwbruce"},"content":"        // different address -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(ALEX, ALEX_DIFFERENT_ADDRESS);","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"ntwbruce"},"content":"        // different birthdate -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(ALEX, ALEX_DIFFERENT_BIRTHDATE);","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":100,"author":{"gitId":"ntwbruce"},"content":"        // different next of kin -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(ALEX, ALEX_DIFFERENT_NOK);","lastModifiedDate":"2021-10-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"davelowqx":3,"ntwbruce":30,"-":44,"lowkangn":26}},{"path":"src/test/java/seedu/address/model/participant/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.model.participant;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"    public void testEquals() {","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"        Phone samplePhone \u003d new Phone(\"80808080\");","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"        Phone samplePhoneCopy \u003d new Phone(\"80808080\");","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"        Phone differentSamplePhone \u003d new Phone(\"80808081\");","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"        // same address -\u003e return true","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(samplePhone, samplePhone);","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"        // different object, same value -\u003e return true","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(samplePhoneCopy, samplePhone);","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"        // different value -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(differentSamplePhone, samplePhone);","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"        // null object -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(samplePhone, null);","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"        // different type -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(samplePhone, 5);","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"ntwbruce":24,"-":39,"lowkangn":1}},{"path":"src/test/java/seedu/address/model/participant/UniqueParticipantListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package seedu.address.model.participant;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.testutil.TypicalParticipants.ALEX;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.testutil.TypicalParticipants.BERNICE;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"import java.util.List;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.participant.exceptions.DuplicateParticipantException;","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.participant.exceptions.ParticipantNotFoundException;","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"public class UniqueParticipantListTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"    private final UniqueParticipantList uniqueParticipantList \u003d new UniqueParticipantList();","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"    private final UniqueParticipantList secondUniqueParticipantList \u003d new UniqueParticipantList();","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"    public void contains_nullParticipant_throwsNullPointerException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueParticipantList.contains(null));","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"    public void contains_participantNotInList_returnsFalse() {","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(uniqueParticipantList.contains(ALEX));","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"    public void contains_participantInList_returnsTrue() {","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"        uniqueParticipantList.add(ALEX);","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(uniqueParticipantList.contains(ALEX));","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"    public void add_nullParticipant_throwsNullPointerException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueParticipantList.add(null));","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"    public void add_duplicateParticipant_throwsDuplicateParticipantException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"        uniqueParticipantList.add(ALEX);","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"        assertThrows(DuplicateParticipantException.class, () -\u003e uniqueParticipantList.add(ALEX));","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"    public void remove_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueParticipantList.remove(null));","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"    public void remove_participantDoesNotExist_throwsEventNotFoundException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"        assertThrows(ParticipantNotFoundException.class, () -\u003e uniqueParticipantList.remove(BERNICE));","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"ntwbruce"},"content":"    public void remove_existingParticipant_removesParticipant() {","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"ntwbruce"},"content":"        uniqueParticipantList.add(ALEX);","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"ntwbruce"},"content":"        uniqueParticipantList.remove(ALEX);","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"ntwbruce"},"content":"        UniqueParticipantList expectedUniqueParticipantList \u003d new UniqueParticipantList();","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(expectedUniqueParticipantList, uniqueParticipantList);","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"ntwbruce"},"content":"    public void setParticipant_nullTargetParticipant_throwsNullPointerException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"ntwbruce"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueParticipantList.setParticipant(null, ALEX));","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"ntwbruce"},"content":"    public void setParticipant_nullEditedParticipant_throwsNullPointerException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"ntwbruce"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueParticipantList.setParticipant(ALEX, null));","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"ntwbruce"},"content":"    public void setParticipant_targetParticipantNotInList_throwsParticipantNotFoundException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"ntwbruce"},"content":"        assertThrows(ParticipantNotFoundException.class, () -\u003e uniqueParticipantList.setParticipant(ALEX, BERNICE));","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"ntwbruce"},"content":"    public void setParticipant_listContainsEditedParticipant_throwsDuplicateParticipantException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"ntwbruce"},"content":"        uniqueParticipantList.add(ALEX);","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"ntwbruce"},"content":"        uniqueParticipantList.add(BERNICE);","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"ntwbruce"},"content":"        assertThrows(DuplicateParticipantException.class, () -\u003e uniqueParticipantList.setParticipant(ALEX, BERNICE));","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"ntwbruce"},"content":"    public void setParticipant_existingParticipant_replacesParticipant() {","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"ntwbruce"},"content":"        uniqueParticipantList.add(ALEX);","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"ntwbruce"},"content":"        uniqueParticipantList.setParticipant(ALEX, BERNICE);","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"ntwbruce"},"content":"        UniqueParticipantList expectedUniqueParticipantList \u003d new UniqueParticipantList();","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"ntwbruce"},"content":"        expectedUniqueParticipantList.add(BERNICE);","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(expectedUniqueParticipantList, uniqueParticipantList);","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":102,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":103,"author":{"gitId":"ntwbruce"},"content":"    public void setParticipants_uniqueParticipantList_replacesOwnListWithProvidedUniqueParticipantList() {","lastModifiedDate":"2021-10-15"},{"lineNumber":104,"author":{"gitId":"ntwbruce"},"content":"        uniqueParticipantList.add(ALEX);","lastModifiedDate":"2021-10-15"},{"lineNumber":105,"author":{"gitId":"ntwbruce"},"content":"        UniqueParticipantList expectedUniqueParticipantList \u003d new UniqueParticipantList();","lastModifiedDate":"2021-10-15"},{"lineNumber":106,"author":{"gitId":"ntwbruce"},"content":"        expectedUniqueParticipantList.add(BERNICE);","lastModifiedDate":"2021-10-15"},{"lineNumber":107,"author":{"gitId":"ntwbruce"},"content":"        uniqueParticipantList.setParticipants(expectedUniqueParticipantList);","lastModifiedDate":"2021-10-15"},{"lineNumber":108,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(expectedUniqueParticipantList, uniqueParticipantList);","lastModifiedDate":"2021-10-15"},{"lineNumber":109,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":110,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":111,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":112,"author":{"gitId":"ntwbruce"},"content":"    public void setParticipants_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":113,"author":{"gitId":"ntwbruce"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueParticipantList.setParticipants(","lastModifiedDate":"2021-10-15"},{"lineNumber":114,"author":{"gitId":"ntwbruce"},"content":"                (List\u003cParticipant\u003e) null));","lastModifiedDate":"2021-10-15"},{"lineNumber":115,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":116,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":117,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":118,"author":{"gitId":"ntwbruce"},"content":"    public void setParticipants_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-15"},{"lineNumber":119,"author":{"gitId":"ntwbruce"},"content":"        uniqueParticipantList.add(ALEX);","lastModifiedDate":"2021-10-15"},{"lineNumber":120,"author":{"gitId":"ntwbruce"},"content":"        List\u003cParticipant\u003e participantList \u003d Collections.singletonList(ALEX);","lastModifiedDate":"2021-10-15"},{"lineNumber":121,"author":{"gitId":"ntwbruce"},"content":"        uniqueParticipantList.setParticipants(participantList);","lastModifiedDate":"2021-10-15"},{"lineNumber":122,"author":{"gitId":"ntwbruce"},"content":"        UniqueParticipantList expectedUniqueParticipantList \u003d new UniqueParticipantList();","lastModifiedDate":"2021-10-15"},{"lineNumber":123,"author":{"gitId":"ntwbruce"},"content":"        expectedUniqueParticipantList.add(ALEX);","lastModifiedDate":"2021-10-15"},{"lineNumber":124,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(expectedUniqueParticipantList, uniqueParticipantList);","lastModifiedDate":"2021-10-15"},{"lineNumber":125,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":126,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":127,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":128,"author":{"gitId":"ntwbruce"},"content":"    public void setParticipants_listWithDuplicateParticipants_throwsDuplicateParticipantException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":129,"author":{"gitId":"ntwbruce"},"content":"        List\u003cParticipant\u003e listWithDuplicateParticipants \u003d Arrays.asList(ALEX, ALEX);","lastModifiedDate":"2021-10-15"},{"lineNumber":130,"author":{"gitId":"ntwbruce"},"content":"        assertThrows(DuplicateParticipantException.class, () -\u003e","lastModifiedDate":"2021-10-15"},{"lineNumber":131,"author":{"gitId":"ntwbruce"},"content":"                uniqueParticipantList.setParticipants(listWithDuplicateParticipants));","lastModifiedDate":"2021-10-15"},{"lineNumber":132,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":133,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":134,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":135,"author":{"gitId":"ntwbruce"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":136,"author":{"gitId":"ntwbruce"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2021-10-15"},{"lineNumber":137,"author":{"gitId":"ntwbruce"},"content":"                uniqueParticipantList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-15"},{"lineNumber":138,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":139,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":140,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":141,"author":{"gitId":"ntwbruce"},"content":"    public void iterator_checkForNextInEmptyList_returnFalse() {","lastModifiedDate":"2021-10-15"},{"lineNumber":142,"author":{"gitId":"ntwbruce"},"content":"        Iterator\u003cParticipant\u003e iterator \u003d uniqueParticipantList.iterator();","lastModifiedDate":"2021-10-15"},{"lineNumber":143,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(iterator.hasNext());","lastModifiedDate":"2021-10-15"},{"lineNumber":144,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":145,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":146,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":147,"author":{"gitId":"ntwbruce"},"content":"    public void iterator_getNextInEmptyList_throwsError() {","lastModifiedDate":"2021-10-15"},{"lineNumber":148,"author":{"gitId":"ntwbruce"},"content":"        Iterator\u003cParticipant\u003e iterator \u003d uniqueParticipantList.iterator();","lastModifiedDate":"2021-10-15"},{"lineNumber":149,"author":{"gitId":"ntwbruce"},"content":"        assertThrows(NoSuchElementException.class, iterator::next);","lastModifiedDate":"2021-10-15"},{"lineNumber":150,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":151,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":152,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":153,"author":{"gitId":"ntwbruce"},"content":"    public void testEquals() {","lastModifiedDate":"2021-10-15"},{"lineNumber":154,"author":{"gitId":"ntwbruce"},"content":"        secondUniqueParticipantList.add(ALEX);","lastModifiedDate":"2021-10-15"},{"lineNumber":155,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":156,"author":{"gitId":"ntwbruce"},"content":"        // same list","lastModifiedDate":"2021-10-15"},{"lineNumber":157,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(uniqueParticipantList.equals(uniqueParticipantList));","lastModifiedDate":"2021-10-15"},{"lineNumber":158,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":159,"author":{"gitId":"ntwbruce"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":160,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(uniqueParticipantList.equals(null));","lastModifiedDate":"2021-10-15"},{"lineNumber":161,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":162,"author":{"gitId":"ntwbruce"},"content":"        // second list contains event","lastModifiedDate":"2021-10-15"},{"lineNumber":163,"author":{"gitId":"ntwbruce"},"content":"        assertFalse(uniqueParticipantList.equals(secondUniqueParticipantList));","lastModifiedDate":"2021-10-15"},{"lineNumber":164,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":165,"author":{"gitId":"ntwbruce"},"content":"        // add same event to first list","lastModifiedDate":"2021-10-15"},{"lineNumber":166,"author":{"gitId":"ntwbruce"},"content":"        uniqueParticipantList.add(ALEX);","lastModifiedDate":"2021-10-15"},{"lineNumber":167,"author":{"gitId":"ntwbruce"},"content":"        assertTrue(uniqueParticipantList.equals(secondUniqueParticipantList));","lastModifiedDate":"2021-10-15"},{"lineNumber":168,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":169,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":170,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":171,"author":{"gitId":"ntwbruce"},"content":"    public void testHashCode() {","lastModifiedDate":"2021-10-15"},{"lineNumber":172,"author":{"gitId":"ntwbruce"},"content":"        // same list -\u003e returns same hashcode","lastModifiedDate":"2021-10-15"},{"lineNumber":173,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(uniqueParticipantList.hashCode(), uniqueParticipantList.hashCode());","lastModifiedDate":"2021-10-15"},{"lineNumber":174,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":175,"author":{"gitId":"ntwbruce"},"content":"        // different lists -\u003e returns different hashcode","lastModifiedDate":"2021-10-15"},{"lineNumber":176,"author":{"gitId":"ntwbruce"},"content":"        secondUniqueParticipantList.add(BERNICE);","lastModifiedDate":"2021-10-15"},{"lineNumber":177,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(uniqueParticipantList.hashCode(), secondUniqueParticipantList.hashCode());","lastModifiedDate":"2021-10-15"},{"lineNumber":178,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":179,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"ntwbruce":179}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"    public void testEquals() {","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"        Tag sampleTag \u003d new Tag(\"test\");","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"        Tag sampleTagCopy \u003d new Tag(\"test\");","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"        Tag differentSampleTag \u003d new Tag(\"test2\");","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"        // same address -\u003e return true","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(sampleTag, sampleTag);","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"        // different object, same value -\u003e return true","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"        assertEquals(sampleTagCopy, sampleTag);","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"        // different value -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(differentSampleTag, sampleTag);","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"        // null object -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(sampleTag, null);","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"        // different type -\u003e return false","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"        assertNotEquals(sampleTag, 5);","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"ntwbruce":24,"-":26}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedEventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.storage.JsonAdaptedEvent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import static seedu.address.testutil.TypicalEvents.SAMPLE_EVENT;","lastModifiedDate":"2021-09-19"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import java.util.List;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.ParticipantId;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"public class JsonAdaptedEventTest {","lastModifiedDate":"2021-09-18"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    private static final String INVALID_NAME \u003d \"R@ce for Hum@nity\";","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    private static final String INVALID_DATE \u003d \"201-13-1\";","lastModifiedDate":"2021-09-20"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    private static final String INVALID_TIME \u003d \"999\";","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    private static final String VALID_NAME \u003d \"Race for Humanity\";","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"    private static final String VALID_IS_DONE \u003d \"Completed\";","lastModifiedDate":"2021-09-18"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    private static final String VALID_DATE \u003d \"2021-09-18\";","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"    private static final String VALID_TIME \u003d \"2359\";","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"    // TODO: To be updated once addParticipants are implemented","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"    private static final List\u003cString\u003e VALID_PARTICIPANT_IDS \u003d SAMPLE_EVENT.getParticipants().stream()","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"            .map(Participant::getParticipantId).map(ParticipantId::toString)","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"lowkangn"},"content":"    private static final List\u003cParticipant\u003e participants \u003d List.of();","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_validEventDetails_returnsEvent() throws Exception {","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(SAMPLE_EVENT);","lastModifiedDate":"2021-09-19"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"        assertEquals(SAMPLE_EVENT, event.toModelType(participants));","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"                new JsonAdaptedEvent(INVALID_NAME, VALID_IS_DONE, VALID_DATE, VALID_TIME, VALID_PARTICIPANT_IDS);","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d EventName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e event.toModelType(participants));","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"                new JsonAdaptedEvent(null, VALID_IS_DONE, VALID_DATE, VALID_TIME, VALID_PARTICIPANT_IDS);","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, EventName.class.getSimpleName());","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e event.toModelType(participants));","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_invalidDate_throwsIllegalValueException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"                new JsonAdaptedEvent(VALID_NAME, VALID_IS_DONE, INVALID_DATE, VALID_TIME, VALID_PARTICIPANT_IDS);","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d EventDate.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e event.toModelType(participants));","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_nullDate_throwsIllegalValueException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"                new JsonAdaptedEvent(VALID_NAME, VALID_IS_DONE, null, VALID_TIME, VALID_PARTICIPANT_IDS);","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, EventDate.class.getSimpleName());","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"kanjitp"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e event.toModelType(participants));","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_invalidTime_throwsIllegalValueException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":76,"author":{"gitId":"XXJJXJ"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-09-18"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"                new JsonAdaptedEvent(VALID_NAME, VALID_IS_DONE, VALID_DATE, INVALID_TIME, VALID_PARTICIPANT_IDS);","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d EventTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-09-18"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e event.toModelType(participants));","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_nullTime_throwsIllegalValueException() {","lastModifiedDate":"2021-09-18"},{"lineNumber":84,"author":{"gitId":"XXJJXJ"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-09-18"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"                new JsonAdaptedEvent(VALID_NAME, VALID_IS_DONE, VALID_DATE, null, VALID_PARTICIPANT_IDS);","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"XXJJXJ"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, EventTime.class.getSimpleName());","lastModifiedDate":"2021-09-18"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, () -\u003e event.toModelType(participants));","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":89,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":71,"kanjitp":17,"lowkangn":1}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.ALEX;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.BERNICE;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.IRFAN;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.getTypicalAddressBook;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidParticipantAddressBook.json\"));","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"        assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"                readAddressBook(\"invalidAndValidParticipantAddressBook.json\"));","lastModifiedDate":"2021-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"        original.removeParticipant(BERNICE);","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"        original.removeParticipant(ALEX);","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"        original.removeParticipant(IRFAN);","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"kanjitp":10,"-":101}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.testutil.TypicalEvents;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"import seedu.address.testutil.TypicalParticipants;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalParticipantsAddressBook.json\");","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidParticipantAddressBook.json\");","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateParticipantAddressBook.json\");","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"    private static final Path TYPICAL_EVENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalEventsAddressBook.json\");","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"    private static final Path INVALID_EVENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidEventAddressBook.json\");","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    private static final Path DUPLICATE_EVENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateEventAddressBook.json\");","lastModifiedDate":"2021-09-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalParticipants.getTypicalAddressBook();","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PARTICIPANT,","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_typicalEventFile_success() throws Exception {","lastModifiedDate":"2021-09-18"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_EVENTS_FILE,","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalEvents.getTypicalAddressBook();","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2021-09-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_invalidEventFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_EVENT_FILE,","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"XXJJXJ"},"content":"    @Test","lastModifiedDate":"2021-09-18"},{"lineNumber":68,"author":{"gitId":"XXJJXJ"},"content":"    public void toModelType_duplicateEvents_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-09-18"},{"lineNumber":69,"author":{"gitId":"XXJJXJ"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_EVENT_FILE,","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"XXJJXJ"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-09-18"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_EVENT,","lastModifiedDate":"2021-09-18"},{"lineNumber":72,"author":{"gitId":"XXJJXJ"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"XXJJXJ":27,"kanjitp":6,"-":41}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.testutil.TypicalParticipants.getTypicalAddressBook;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kanjitp":1,"-":67}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"     * Adds a new {@code Participant} to the {@code AddressBook} that we are building.","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"    public AddressBookBuilder withParticipant(Participant participant) {","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"        addressBook.addParticipant(participant);","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kanjitp":4,"-":30}},{"path":"src/test/java/seedu/address/testutil/DefaultModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ntwbruce"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"ntwbruce"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"ntwbruce"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"ntwbruce"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"ntwbruce"},"content":"public class DefaultModelStub implements Model {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"ntwbruce"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"ntwbruce"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"ntwbruce"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"ntwbruce"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"    public void addParticipant(Participant participant) {","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"    public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"    public boolean hasParticipant(Participant participant) {","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"ntwbruce"},"content":"    public void deleteParticipant(Participant target) {","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"ntwbruce"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"ntwbruce"},"content":"    public void setParticipant(Participant target, Participant editedParticipant) {","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"ntwbruce"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"lowkangn"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"lowkangn"},"content":"    public Optional\u003cParticipant\u003e findParticipant(Predicate\u003cParticipant\u003e predicate) {","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"lowkangn"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"ntwbruce"},"content":"    public ObservableList\u003cParticipant\u003e getFilteredParticipantList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"ntwbruce"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"ntwbruce"},"content":"    public void updateFilteredParticipantList(Predicate\u003cParticipant\u003e predicate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"ntwbruce"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"ntwbruce"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"ntwbruce"},"content":"        throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"ntwbruce"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"ntwbruce"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"davelowqx"},"content":"    public void deleteEvent(Event target) {","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"ntwbruce"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"XXJJXJ"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"XXJJXJ"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"XXJJXJ"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"lowkangn"},"content":"    public void markEventAsDone(Event target) {","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"ntwbruce"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"ntwbruce"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"ntwbruce"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"ntwbruce"},"content":"    public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"ntwbruce"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"ntwbruce"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"ntwbruce"},"content":"    public void sortEvents() {","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"ntwbruce"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"ntwbruce"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"XXJJXJ":5,"davelowqx":1,"ntwbruce":117,"lowkangn":7}},{"path":"src/test/java/seedu/address/testutil/EditEventDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.logic.commands.EditEventCommand.EditEventDescriptor;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":" * This is an EditEventDescriptorBuilder that facilitates Junit testing of EditEventCommand.","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"public class EditEventDescriptorBuilder {","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"    private EditEventDescriptor descriptor;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":"     * This is the constructor for EditEventDescriptorBuilder.","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    public EditEventDescriptorBuilder() {","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"        this.descriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"     * Returns an {@code EditEventDescriptor} with fields containing {@code event}\u0027s details.","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"XXJJXJ"},"content":"    public EditEventDescriptorBuilder(Event event) {","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"        descriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"        descriptor.setEventName(event.getName());","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"        descriptor.setEventDate(event.getDate());","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"        descriptor.setEventTime(event.getTime());","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"     * Sets the {@code eventName} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"    public EditEventDescriptorBuilder withEventName(String eventName) {","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        descriptor.setEventName(new EventName(eventName));","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        return this;","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"XXJJXJ"},"content":"     * Sets the {@code eventDate} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"    public EditEventDescriptorBuilder withEventDate(String eventDate) {","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"        descriptor.setEventDate(new EventDate(eventDate));","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"        return this;","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"XXJJXJ"},"content":"     * Sets the {@code eventTime} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"    public EditEventDescriptorBuilder withEventTime(String eventTime) {","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"        descriptor.setEventTime(new EventTime(eventTime));","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"        return this;","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"     * Returns a EditEventDescriptor created using EditEventDescriptorBuilder.","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"     * @return an instance of EditEventDescriptor.","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"    public EditEventDescriptor build() {","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"        return descriptor;","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"XXJJXJ":64}},{"path":"src/test/java/seedu/address/testutil/EditParticipantDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.commands.EditCommand.EditParticipantDescriptor;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Address;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Email;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Name;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Phone;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"public class EditParticipantDescriptorBuilder {","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"    private EditParticipantDescriptor descriptor;","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"    public EditParticipantDescriptorBuilder() {","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"        descriptor \u003d new EditParticipantDescriptor();","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"    public EditParticipantDescriptorBuilder(EditParticipantDescriptor descriptor) {","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"        this.descriptor \u003d new EditParticipantDescriptor(descriptor);","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"     * Returns an {@code EditParticipantDescriptor} with fields containing {@code participant}\u0027s details","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"    public EditParticipantDescriptorBuilder(Participant participant) {","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"        descriptor \u003d new EditParticipantDescriptor();","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"        descriptor.setName(participant.getName());","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"        descriptor.setPhone(participant.getPhone());","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"        descriptor.setEmail(participant.getEmail());","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"        descriptor.setAddress(participant.getAddress());","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"        descriptor.setBirthDate(participant.getBirthDate());","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"        descriptor.setNextOfKins(participant.getNextOfKins());","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"     * Sets the {@code Name} of the {@code EditParticipantDescriptor} that we are building.","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"    public EditParticipantDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"kanjitp"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"     * Sets the {@code Phone} of the {@code EditParticipantDescriptor} that we are building.","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"    public EditParticipantDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"XXJJXJ"},"content":"     * Sets the {@code Email} of the {@code EditParticipantDescriptor} that we are building.","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"kanjitp"},"content":"    public EditParticipantDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"kanjitp"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"kanjitp"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"     * Sets the {@code Address} of the {@code EditParticipantDescriptor} that we are building.","lastModifiedDate":"2021-09-28"},{"lineNumber":61,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"kanjitp"},"content":"    public EditParticipantDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"kanjitp"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"kanjitp"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"kanjitp"},"content":"    public EditParticipantDescriptor build() {","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"kanjitp"},"content":"        return descriptor;","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"XXJJXJ":5,"kanjitp":61,"lowkangn":4}},{"path":"src/test/java/seedu/address/testutil/EventBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lowkangn"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"public class EventBuilder {","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"    public static final String DEFAULT_EVENT_NAME \u003d \"Sleep\";","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"    public static final String DEFAULT_EVENT_DATE \u003d \"2021-09-18\";","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"    public static final String DEFAULT_EVENT_TIME \u003d \"1000\";","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"    private ObservableList\u003cParticipant\u003e participants \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"lowkangn"},"content":"    private EventName eventName;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"    private EventDate eventDate;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"lowkangn"},"content":"    private EventTime eventTime;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"lowkangn"},"content":"     * Creates an {@code EventBuilder} with the default details.","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"    public EventBuilder() {","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"        this.eventName \u003d new EventName(DEFAULT_EVENT_NAME);","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"        this.eventDate \u003d new EventDate(DEFAULT_EVENT_DATE);","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"lowkangn"},"content":"        this.eventTime \u003d new EventTime(DEFAULT_EVENT_TIME);","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"XXJJXJ"},"content":"     * Initializes the EventBuilder with the data of {@code eventToCopy}.","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"XXJJXJ"},"content":"    public EventBuilder(Event eventToCopy) {","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"        eventName \u003d eventToCopy.getName();","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"        eventDate \u003d eventToCopy.getDate();","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"XXJJXJ"},"content":"        eventTime \u003d eventToCopy.getTime();","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"lowkangn"},"content":"     * Adds a Participant to the list of participants.","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"lowkangn"},"content":"     * @param participant to be added.","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"lowkangn"},"content":"    public void addParticipant(Participant participant) {","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"lowkangn"},"content":"        this.participants.add(participant);","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"lowkangn"},"content":"     * Returns a new instance of Event with the details set in {@code EventBuilder}.","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"lowkangn"},"content":"     * @return an Event.","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"lowkangn"},"content":"    public Event build() {","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"lowkangn"},"content":"        return new Event(this.eventName, this.eventDate, this.eventTime, false, this.participants);","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"     * Sets the {@code Name} of the {@code Event} that we are building.","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"ntwbruce"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"    public EventBuilder withEventName(String name) {","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"        this.eventName \u003d new EventName(name);","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"        return this;","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"ntwbruce"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"lowkangn"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"XXJJXJ":9,"ntwbruce":8,"lowkangn":48}},{"path":"src/test/java/seedu/address/testutil/ParticipantBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-09-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":3,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"lowkangn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Address;","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.BirthDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Email;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Name;","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.NextOfKin;","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Phone;","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-09-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParticipantBuilder {","lastModifiedDate":"2021-09-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":24,"author":{"gitId":"lowkangn"},"content":"    public static final String DEFAULT_NAME \u003d VALID_NAME_AMY;","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"lowkangn"},"content":"    public static final String DEFAULT_PHONE \u003d VALID_PHONE_AMY;","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"lowkangn"},"content":"    public static final String DEFAULT_EMAIL \u003d VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"lowkangn"},"content":"    public static final String DEFAULT_ADDRESS \u003d VALID_ADDRESS_AMY;","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final BirthDate DEFAULT_BIRTHDATE \u003d BirthDate.of(2000, 8, 4);","lastModifiedDate":"2021-09-11"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"    public static final NextOfKin DEFAULT_NEXT_OF_KIN \u003d new NextOfKin(new Name(\"Bebe Bee\"), new Phone(\"80232345\"),","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"kanjitp"},"content":"        new Tag(\"Spouse\"));","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2021-09-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2021-09-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2021-09-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2021-09-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private BirthDate birthDate;","lastModifiedDate":"2021-09-11"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"    private ObservableList\u003cNextOfKin\u003e nextOfKins;","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"     * Creates a {@code ParticipantBuilder} with the default details.","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ParticipantBuilder() {","lastModifiedDate":"2021-09-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-09-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2021-09-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2021-09-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2021-09-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        birthDate \u003d BirthDate.notSpecified();","lastModifiedDate":"2021-09-11"},{"lineNumber":48,"author":{"gitId":"kanjitp"},"content":"        nextOfKins \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Initializes the ParticipantBuilder with the data of {@code participantToCopy}.","lastModifiedDate":"2021-09-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public ParticipantBuilder(Participant participantToCopy) {","lastModifiedDate":"2021-09-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name \u003d participantToCopy.getName();","lastModifiedDate":"2021-09-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        phone \u003d participantToCopy.getPhone();","lastModifiedDate":"2021-09-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        email \u003d participantToCopy.getEmail();","lastModifiedDate":"2021-09-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        address \u003d participantToCopy.getAddress();","lastModifiedDate":"2021-09-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        birthDate \u003d participantToCopy.getBirthDate();","lastModifiedDate":"2021-09-11"},{"lineNumber":60,"author":{"gitId":"kanjitp"},"content":"        nextOfKins \u003d participantToCopy.getNextOfKins();","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Participant} that we are building.","lastModifiedDate":"2021-09-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ParticipantBuilder withName(String name) {","lastModifiedDate":"2021-09-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-09-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-09-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Participant} that we are building.","lastModifiedDate":"2021-09-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public ParticipantBuilder withAddress(String address) {","lastModifiedDate":"2021-09-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2021-09-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-09-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Participant} that we are building.","lastModifiedDate":"2021-09-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public ParticipantBuilder withPhone(String phone) {","lastModifiedDate":"2021-09-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2021-09-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-09-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"     * Sets the {@code Email} of the {@code Participant} that we are building.","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"kanjitp"},"content":"    public ParticipantBuilder withEmail(String email) {","lastModifiedDate":"2021-09-26"},{"lineNumber":91,"author":{"gitId":"kanjitp"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Sets the {@code birthDate} of the {@code Participant} that we are building.","lastModifiedDate":"2021-09-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public ParticipantBuilder withBirthDate(BirthDate birthDate) {","lastModifiedDate":"2021-09-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        this.birthDate \u003d birthDate;","lastModifiedDate":"2021-09-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-09-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Sets the {@code birthDate} of the {@code Participant} that we are building.","lastModifiedDate":"2021-09-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public ParticipantBuilder withBirthDate(int year, int month, int dayOfMonth) {","lastModifiedDate":"2021-09-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        this.birthDate \u003d BirthDate.of(year, month, dayOfMonth);","lastModifiedDate":"2021-09-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-09-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-09-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Sets the {@code nextOfKins} of the {@code Participant} that we are building.","lastModifiedDate":"2021-09-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-09-11"},{"lineNumber":114,"author":{"gitId":"kanjitp"},"content":"    public ParticipantBuilder withNextOfKins(NextOfKin... nextOfKins) {","lastModifiedDate":"2021-09-26"},{"lineNumber":115,"author":{"gitId":"kanjitp"},"content":"        this.nextOfKins \u003d FXCollections.observableArrayList(Arrays.stream(nextOfKins).collect(Collectors.toList()));","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-09-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":120,"author":{"gitId":"lowkangn"},"content":"     * Returns a new instance of Participant with the details set in {@code ParticipantBuilder}.","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"lowkangn"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"lowkangn"},"content":"     * @return a Participant.","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public Participant build() {","lastModifiedDate":"2021-09-11"},{"lineNumber":125,"author":{"gitId":"XXJJXJ"},"content":"        return new Participant(name, phone, email, address, birthDate, nextOfKins);","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-09-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-09-11"}],"authorContributionMap":{"XXJJXJ":2,"kanjitp":14,"-":95,"lowkangn":17}},{"path":"src/test/java/seedu/address/testutil/ParticipantUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"ntwbruce"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"public class ParticipantUtil {","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"     * Returns an add command string for adding the {@code participant}.","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"    public static String getAddCommand(Participant participant) {","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getParticipantDetails(participant);","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"     * Returns the part of command string for the given {@code participant}\u0027s details.","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"    public static String getParticipantDetails(Participant participant) {","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"ntwbruce"},"content":"        sb.append(PREFIX_NAME + participant.getFullName() + \" \");","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"ntwbruce"},"content":"        sb.append(PREFIX_PHONE + participant.getPhoneValue() + \" \");","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"ntwbruce"},"content":"        sb.append(PREFIX_EMAIL + participant.getEmailValue() + \" \");","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"ntwbruce"},"content":"        sb.append(PREFIX_ADDRESS + participant.getAddressValue() + \" \");","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"ntwbruce"},"content":"        sb.append(PREFIX_DATE + participant.getBirthDateString() + \" \");","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"        return sb.toString();","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"     * Returns the part of command string for the given {@code EditParticipantDescriptor}\u0027s details.","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"    public static String getEditParticipantDescriptorDetails(EditCommand.EditParticipantDescriptor descriptor) {","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.toString()).append(\" \"));","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.toString()).append(\" \"));","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.toString()).append(\" \"));","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.toString()).append(\" \"));","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"XXJJXJ"},"content":"        descriptor.getBirthDate().ifPresent(birthDate -\u003e sb.append(PREFIX_DATE).append(birthDate.toString()));","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"kanjitp"},"content":"        return sb.toString();","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"XXJJXJ":2,"kanjitp":35,"ntwbruce":10}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"XXJJXJ"},"content":"     * Returns the middle index of the participant in the {@code model}\u0027s participant list.","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"        return Index.fromOneBased(model.getFilteredParticipantList().size() / 2);","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"XXJJXJ"},"content":"     * Returns the last index of the participant in the {@code model}\u0027s participant list.","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"        return Index.fromOneBased(model.getFilteredParticipantList().size());","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"     * Returns the participant in the {@code model}\u0027s participant list at {@code index}.","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"kanjitp"},"content":"    public static Participant getParticipant(Model model, Index index) {","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"kanjitp"},"content":"        return model.getFilteredParticipantList().get(index.getZeroBased());","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"XXJJXJ":3,"kanjitp":5,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalEvents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"XXJJXJ"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-09-18"},{"lineNumber":2,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"XXJJXJ"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":4,"author":{"gitId":"XXJJXJ"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-18"},{"lineNumber":5,"author":{"gitId":"ntwbruce"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"XXJJXJ"},"content":"import java.util.List;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":8,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventDate;","lastModifiedDate":"2021-09-18"},{"lineNumber":11,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventName;","lastModifiedDate":"2021-09-18"},{"lineNumber":12,"author":{"gitId":"XXJJXJ"},"content":"import seedu.address.model.event.EventTime;","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"XXJJXJ"},"content":"/**","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"XXJJXJ"},"content":" * An utility class containing a list of {@code Event} objects to be used in tests.","lastModifiedDate":"2021-09-18"},{"lineNumber":16,"author":{"gitId":"XXJJXJ"},"content":" */","lastModifiedDate":"2021-09-18"},{"lineNumber":17,"author":{"gitId":"XXJJXJ"},"content":"public class TypicalEvents {","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"XXJJXJ"},"content":"    public static final Event SAMPLE_EVENT \u003d new Event(new EventName(\"Sleep\"), new EventDate(\"2021-09-18\"),","lastModifiedDate":"2021-09-19"},{"lineNumber":19,"author":{"gitId":"XXJJXJ"},"content":"            new EventTime(\"1000\"));","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"    public static final Event ANOTHER_EVENT \u003d new Event(new EventName(\"Sleep2\"), new EventDate(\"2021-09-18\"),","lastModifiedDate":"2021-09-19"},{"lineNumber":21,"author":{"gitId":"XXJJXJ"},"content":"            new EventTime(\"1001\"));","lastModifiedDate":"2021-09-19"},{"lineNumber":22,"author":{"gitId":"XXJJXJ"},"content":"    public static final Event SAMPLE_EVENT_2 \u003d new Event(new EventName(\"Random Event 1\"),","lastModifiedDate":"2021-09-23"},{"lineNumber":23,"author":{"gitId":"XXJJXJ"},"content":"            new EventDate(\"1-1-1\"), new EventTime(\"0001\"));","lastModifiedDate":"2021-09-23"},{"lineNumber":24,"author":{"gitId":"ntwbruce"},"content":"    public static final Event SAMPLE_EVENT_3 \u003d new Event(new EventName(\"Sleep\"), new EventDate(\"2021-09-18\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"ntwbruce"},"content":"            new EventTime(\"1002\"), false, Collections.singletonList(new ParticipantBuilder().build()));","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"XXJJXJ"},"content":"    public static final Event MARATHON_NO_TIME \u003d new Event(new EventName(\"24km Marathon\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"XXJJXJ"},"content":"            new EventDate(\"2021-10-5\"), new EventTime());","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"XXJJXJ"},"content":"    public static final Event MARATHON_HAS_TIME \u003d new Event(new EventName(\"24Km Marathon with Time\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"XXJJXJ"},"content":"            new EventDate(\"2021-10-5\"), new EventTime(\"0800\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"    public static final Event CODE_FOR_SANITY \u003d new Event(new EventName(\"Code For Sanity\"),","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"XXJJXJ"},"content":"            new EventDate(\"2021-8-10\"), new EventTime(\"0000\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"ntwbruce"},"content":"    public static final Event SAMPLE_EVENT_SPECIFIED_TIME_AND_COMPLETION \u003d new Event(new EventName(\"Sleep\"),","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"ntwbruce"},"content":"            new EventDate(\"2021-09-18\"), new EventTime(\"1002\"), true,","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"ntwbruce"},"content":"            Collections.singletonList(new ParticipantBuilder().build()));","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"ntwbruce"},"content":"    public static final Event SAMPLE_EVENT_SPECIFIED_TIME_AND_COMPLETION_COPY \u003d new Event(new EventName(\"Sleep\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"ntwbruce"},"content":"            new EventDate(\"2021-09-18\"), new EventTime(\"1002\"), true,","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"ntwbruce"},"content":"            Collections.singletonList(new ParticipantBuilder().build()));","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"ntwbruce"},"content":"    public static final Event SAMPLE_EVENT_DEFAULT_TIME_AND_COMPLETION \u003d new Event(new EventName(\"Sleep again\"),","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"ntwbruce"},"content":"            new EventDate(\"2021-09-18\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"ntwbruce"},"content":"    public static final Event SAMPLE_EVENT_COPY_DIFFERENT_NAME \u003d new Event(new EventName(\"Sleeps\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"ntwbruce"},"content":"            new EventDate(\"2021-09-18\"), new EventTime(\"1000\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"ntwbruce"},"content":"    public static final Event SAMPLE_EVENT_COPY_DIFFERENT_DATE \u003d new Event(new EventName(\"Sleep\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"ntwbruce"},"content":"            new EventDate(\"2021-09-19\"), new EventTime(\"1000\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"ntwbruce"},"content":"    public static final Event SAMPLE_EVENT_COPY_DIFFERENT_TIME \u003d new Event(new EventName(\"Sleep\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"ntwbruce"},"content":"            new EventDate(\"2021-09-18\"), new EventTime(\"1001\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"ntwbruce"},"content":"    public static final Event SAMPLE_EVENT_COPY_DIFFERENT_COMPLETION \u003d new Event(new EventName(\"Sleep\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"ntwbruce"},"content":"            new EventDate(\"2021-09-18\"), new EventTime(\"1000\"), true, new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"    public static final Event SAMPLE_EVENT_COPY_DIFFERENT_PARTICIPANTS \u003d new Event(new EventName(\"Sleep\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"            new EventDate(\"2021-09-18\"), new EventTime(\"1000\"), false,","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"ntwbruce"},"content":"            Collections.singletonList(new ParticipantBuilder().build()));","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"XXJJXJ"},"content":"    public static final Event SAMPLE_EVENT_COPY_NO_TIME \u003d new Event(new EventName(\"Slept\"),","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"            new EventDate(\"2021-09-18\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":54,"author":{"gitId":"XXJJXJ"},"content":"    private TypicalEvents() {}","lastModifiedDate":"2021-09-18"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":56,"author":{"gitId":"XXJJXJ"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":57,"author":{"gitId":"XXJJXJ"},"content":"     * Returns an {@code AddressBook} with all the typical events.","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"XXJJXJ"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":59,"author":{"gitId":"XXJJXJ"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2021-09-18"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-09-18"},{"lineNumber":61,"author":{"gitId":"XXJJXJ"},"content":"        for (Event event : getTypicalEvents()) {","lastModifiedDate":"2021-09-18"},{"lineNumber":62,"author":{"gitId":"XXJJXJ"},"content":"            ab.addEvent(event);","lastModifiedDate":"2021-09-18"},{"lineNumber":63,"author":{"gitId":"XXJJXJ"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":64,"author":{"gitId":"XXJJXJ"},"content":"        return ab;","lastModifiedDate":"2021-09-18"},{"lineNumber":65,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":67,"author":{"gitId":"lowkangn"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"lowkangn"},"content":"     * Returns an {@code AddressBook} with a copy of all the typical events.","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"lowkangn"},"content":"     * Used when events in the addressbook are mutated.","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"lowkangn"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"lowkangn"},"content":"    public static AddressBook getTypicalAddressBookCopy() {","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"lowkangn"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"lowkangn"},"content":"        for (Event event : getTypicalEvents()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"lowkangn"},"content":"            ab.addEvent(new EventBuilder(event).build());","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"lowkangn"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"lowkangn"},"content":"        return ab;","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"lowkangn"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"XXJJXJ"},"content":"    public static List\u003cEvent\u003e getTypicalEvents() {","lastModifiedDate":"2021-09-18"},{"lineNumber":80,"author":{"gitId":"ntwbruce"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(SAMPLE_EVENT, SAMPLE_EVENT_COPY_NO_TIME, SAMPLE_EVENT_COPY_DIFFERENT_NAME,","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"ntwbruce"},"content":"                ANOTHER_EVENT, SAMPLE_EVENT_2));","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"XXJJXJ"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"XXJJXJ"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"XXJJXJ":46,"ntwbruce":25,"lowkangn":12}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"    public static final Index INDEX_FIRST_PARTICIPANT \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"    public static final Index INDEX_SECOND_PARTICIPANT \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"    public static final Index INDEX_THIRD_PARTICIPANT \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"lowkangn"},"content":"    public static final Index INDEX_FIRST_EVENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"    public static final Index INDEX_SECOND_EVENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"kanjitp":3,"-":9,"lowkangn":3}},{"path":"src/test/java/seedu/address/testutil/TypicalNextOfKins.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Name;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.NextOfKin;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Phone;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kanjitp"},"content":"public class TypicalNextOfKins {","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kanjitp"},"content":"    public static final NextOfKin SARAH \u003d new NextOfKin(new Name(\"Sarah Starlet\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kanjitp"},"content":"            new Phone(\"08203212\"), new Tag(\"Spouse\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"    public static final NextOfKin JACK \u003d new NextOfKin(new Name(\"Jack Beanstalk\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kanjitp"},"content":"            new Phone(\"08203212\"), new Tag(\"Son\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"    public static final NextOfKin KAN \u003d new NextOfKin(new Name(\"Kan Doe\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"            new Phone(\"68009698\"), new Tag(\"Brother\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"    public static final NextOfKin KEN \u003d new NextOfKin(new Name(\"Ken Lee Tulibudibudouchoo\"),","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kanjitp"},"content":"            new Phone(\"2012017\"), new Tag(\"Unknown\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kanjitp":21}},{"path":"src/test/java/seedu/address/testutil/TypicalParticipants.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kanjitp"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"kanjitp"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"kanjitp"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"kanjitp"},"content":"import java.util.List;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Address;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.BirthDate;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Email;","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Name;","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.NextOfKin;","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.participant.Participant;","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"lowkangn"},"content":"import seedu.address.model.participant.Phone;","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"kanjitp"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"kanjitp"},"content":"public class TypicalParticipants {","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"kanjitp"},"content":"    public static final Participant ALEX \u003d new Participant(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"XXJJXJ"},"content":"            \"alexyeoh@example.com\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"), BirthDate.of(2000, 8, 2),","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"kanjitp"},"content":"            List.of(new NextOfKin(new Name(\"Janette Yeoh\"), new Phone(\"93822312\"), new Tag(\"Spouse\"))));","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"kanjitp"},"content":"    public static final Participant BERNICE \u003d new Participant(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"kanjitp"},"content":"            \"berniceyu\" + \"@example.com\"), new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"kanjitp"},"content":"            BirthDate.of(1970, 4, 2),","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"kanjitp"},"content":"            List.of(new NextOfKin(new Name(\"Bennett Yu\"), new Phone(\"83612412\"), new Tag(\"Parent\"))));","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"kanjitp"},"content":"    public static final Participant CHARLOTTE \u003d new Participant(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"),","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"kanjitp"},"content":"            new Email(\"charlotte\" + \"@example.com\"), new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"XXJJXJ"},"content":"            BirthDate.of(1982, 5, 13),","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"kanjitp"},"content":"            List.of(new NextOfKin(new Name(\"Daniel Pruvos\"), new Phone(\"83460328\"), new Tag(\"Brother\"))));","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"kanjitp"},"content":"    public static final Participant DAVID \u003d new Participant(new Name(\"David Li\"), new Phone(\"91031282\"),","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"kanjitp"},"content":"            new Email(\"lidavid@example.com\"), new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"XXJJXJ"},"content":"            BirthDate.of(1999, 2, 2),","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"kanjitp"},"content":"            List.of(new NextOfKin(new Name(\"Maria Li\"), new Phone(\"84459923\"), new Tag(\"Girlfriend\"))));","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"kanjitp"},"content":"    public static final Participant IRFAN \u003d new Participant(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"),","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"kanjitp"},"content":"            new Email(\"irfan@example.com\"), new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"XXJJXJ"},"content":"            BirthDate.of(2000, 5, 23),","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"kanjitp"},"content":"            List.of(new NextOfKin(new Name(\"Juliet Ibrahim\"), new Phone(\"89345342\"), new Tag(\"Grandparent\"))));","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"kanjitp"},"content":"    public static final Participant ROY \u003d new Participant(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"),","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"kanjitp"},"content":"            new Email(\"royb@example.com\"), new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"XXJJXJ"},"content":"            BirthDate.of(1999, 2, 8),","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"kanjitp"},"content":"            List.of(new NextOfKin(new Name(\"Rouse Balakrishnan\"), new Phone(\"93822312\"), new Tag(\"Brother\"))));","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"ntwbruce"},"content":"    public static final Participant ALEX_DIFFERENT_PHONE \u003d new Participant(new Name(\"Alex Yeoh\"), new Phone(\"87438808\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"ntwbruce"},"content":"            new Email(\"alexyeoh@example.com\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"XXJJXJ"},"content":"            BirthDate.of(2000, 8, 2),","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"ntwbruce"},"content":"            List.of(new NextOfKin(new Name(\"Janette Yeoh\"), new Phone(\"93822312\"), new Tag(\"Spouse\"))));","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"ntwbruce"},"content":"    public static final Participant ALEX_DIFFERENT_EMAIL \u003d new Participant(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"ntwbruce"},"content":"            new Email(\"alexyeoh2@example.com\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"XXJJXJ"},"content":"            BirthDate.of(2000, 8, 2),","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"ntwbruce"},"content":"            List.of(new NextOfKin(new Name(\"Janette Yeoh\"), new Phone(\"93822312\"), new Tag(\"Spouse\"))));","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"ntwbruce"},"content":"    public static final Participant ALEX_DIFFERENT_ADDRESS \u003d new Participant(new Name(\"Alex Yeoh\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"ntwbruce"},"content":"            new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"), new Address(\"Blk 30 Geylang Street 29, #06-42\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"XXJJXJ"},"content":"            BirthDate.of(2000, 8, 2),","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"ntwbruce"},"content":"            List.of(new NextOfKin(new Name(\"Janette Yeoh\"), new Phone(\"93822312\"), new Tag(\"Spouse\"))));","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"ntwbruce"},"content":"    public static final Participant ALEX_DIFFERENT_BIRTHDATE \u003d new Participant(new Name(\"Alex Yeoh\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"ntwbruce"},"content":"            new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"XXJJXJ"},"content":"            BirthDate.of(2000, 8, 3),","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"ntwbruce"},"content":"            List.of(new NextOfKin(new Name(\"Janette Yeoh\"), new Phone(\"93822312\"), new Tag(\"Spouse\"))));","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"ntwbruce"},"content":"    public static final Participant ALEX_DIFFERENT_NOK \u003d new Participant(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"ntwbruce"},"content":"            new Email(\"alexyeoh@example.com\"), new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"XXJJXJ"},"content":"            BirthDate.of(2000, 8, 2),","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"ntwbruce"},"content":"            List.of(new NextOfKin(new Name(\"Jill Yeoh\"), new Phone(\"93822313\"), new Tag(\"Sister\"))));","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"ntwbruce"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"kanjitp"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"kanjitp"},"content":"     * Returns an {@code AddressBook} with all the typical Participants.","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"kanjitp"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"kanjitp"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"kanjitp"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"kanjitp"},"content":"        for (Participant participant : getTypicalParticipants()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"kanjitp"},"content":"            ab.addParticipant(participant);","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"kanjitp"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"kanjitp"},"content":"        return ab;","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"kanjitp"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"kanjitp"},"content":"    public static List\u003cParticipant\u003e getTypicalParticipants() {","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"kanjitp"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALEX, BERNICE, CHARLOTTE, DAVID, IRFAN, ROY));","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"kanjitp"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"kanjitp"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"XXJJXJ":10,"kanjitp":52,"ntwbruce":21,"lowkangn":5}}]
