[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-W15-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-W15-4/tp/actions)","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"tanqiya"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-W15-4/tp/branch/master/graph/badge.svg?token\u003dO8QOII6T93)](https://codecov.io/gh/AY2122S1-CS2103T-W15-4/tp)","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Teletubbies is a desktop app for telemarketers and their supervisors to manage their customer lists.","lastModifiedDate":"2021-09-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"* The project is named `Teletubbies` to emulate a friendly assistant to telemarketers.","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"tanqiya"},"content":"* For the detailed documentation of this project, see the **[Teletubbies Product Website](https://ay2122s1-cs2103t-w15-4.github.io/tp/)**.","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"tanqiya":2,"gok99":4,"-":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"mainClassName \u003d \u0027teletubbies.Main\u0027","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"task installLocalGitHook(type: Copy){","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"    from new File(rootProject.rootDir, \u0027scripts/pre-push\u0027)","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"    into { new File(rootProject.rootDir, \u0027.git/hooks\u0027)}","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"    fileMode 0775","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"build.dependsOn installLocalGitHook","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":67,"author":{"gitId":"lhw-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"lhw-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"lhw-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-web\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"lhw-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"lhw-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"lhw-1"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-media\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":83,"author":{"gitId":"gok99"},"content":"    archiveName \u003d \u0027teletubbies.jar\u0027","lastModifiedDate":"2021-11-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"gok99"},"content":"run {","lastModifiedDate":"2021-10-18"},{"lineNumber":87,"author":{"gitId":"gok99"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"gok99":11,"-":72,"lhw-1":7}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"### Gokul Rajiv","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"\u003cimg src\u003d\"images/gok99.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"[[github]](https://github.com/gok99) [[portfolio]](team/gok99.md)","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* Role: Developer","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* Responsibilities: Code Quality, Integration","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"### Lee Hyung Woon","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"\u003cimg src\u003d\"images/lhw-1.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"[[github]](https://github.com/lhw-1) [[portfolio]](team/lhw-1.md)","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* Role: Developer","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"skythefire"},"content":"### Tan Ming Ann","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003cimg src\u003d\"images/skythefire.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"skythefire"},"content":"[[github]](https://github.com/skythefire) [[portfolio]](team/skythefire.md)","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* Responsibilities: Testing","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"### Tan Qiya","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003cimg src\u003d\"images/tanqiya.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"tanqiya"},"content":"[[github]](https://github.com/tanqiya) [[portfolio]](team/tanqiya.md)","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* Responsibilities: Deliverables, Deadlines, Scheduling, Tracking","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"### Vignesh Sankar Iyer","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003cimg src\u003d\"images/vigneshsankariyer1234567890.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"[[github]](https://github.com/vigneshsankariyer1234567890) [[portfolio]](team/vigneshsankariyer1234567890.md)","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* Responsibilities: Testing","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"vigneshsankariyer1234567890":15,"skythefire":2,"tanqiya":1,"gok99":3,"-":31,"lhw-1":1}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.\u003c","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. Here are the steps to set up CodeCov for a fork of this repository.","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Sign up with Codecov using your GitHub account [here](https://codecov.io/signup).","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Once you are inside Codecov web app, add your fork to CodeCov.","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Get the Markdown code for the Codecov badge provided in `Settings \u003e Badges` and update the `docs/index.md` of your repo with it so that the badge [![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/se-edu/addressbook-level3) in that page reflects the coverage of your project.","lastModifiedDate":"2020-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"gok99"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/teletubbies/MainApp.java).","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"gok99":1,"-":78}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"## **Setting up, getting started**","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"## **Introduction**","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"### **Purpose**","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"This document describes the architecture and system design of the Teletubbies desktop application","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"for Telemarketers and Telemarketer Supervisors.","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"### **Scope**","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"The document aims to comprehensively cover the software architecture and software design decisions for","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"the implementation of Teletubbies. It is intended to serve as a guide for the developers, the designers, and the testers","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"for the application.","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"The definitions for the emboldened terms can be found in the [_Glossary_](#glossary) Section.","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"### **Design Goals**","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"The developers work closely with telemarketers and telemarketer supervisors to better understand their needs, so that","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"the requirements of the product can be as clear-cut as possible.","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"#### _User-Centricity_","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"Teletubbies can be used by both telemarketers and supervisors, and chooses the appropriate features according to the","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"current user\u0027s **role**, so that the user can work effectively and efficiently to complete their tasks.","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"#### _Improved Workflow Efficiency_","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Teletubbies is optimised for **Command-Line Interface** (CLI) usage, which streamlines workflow","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"within the application by centralising the entering of commands in a single text input window.","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"#### _Seamless Data Integration_","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"skythefire"},"content":"Teletubbies allows telemarketers, and their supervisors to share and merge data seamlessly. Synchronization of customer","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"lhw-1"},"content":"data between telemarketers and their supervisors is often a necessary aspect of their job, and Teletubbies provides","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"lhw-1"},"content":"avenues to make this process easy and hassle-free.","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"#### _Data Safety and Recoverability_","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"skythefire"},"content":"With many contacts stored in a contact list, it is vital that the user’s current progress is saved ","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"frequently to assist in data recovery in the event of unexpected system failure. Hence, the contact list is saved ","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"after each command issued by the user.","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Additionally, in the event of human error, an undo command is available for users to revert to previous states","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"within the session itself.","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"#### _Scalability \u0026 Maintainability_","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"lhw-1"},"content":"Within a team of developers, it is important that the developers reduce dependencies within the project to increase","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"testability and extensibility.","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"lhw-1"},"content":"In addition, with requirements that constantly change, it is important to be able to easily modify features and","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"lhw-1"},"content":"functionalities that have already been written without disturbing other related components. Therefore, the main ","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"lhw-1"},"content":"components of the application such as the `Logic`, `UI`, `Model`, and `Storage` are separated into decoupled modules.","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"skythefire"},"content":"Along with the strict adherence to software design principles, such as **Single Responsibility** and","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"skythefire"},"content":"**Separation of Concerns**, the modularity of the software design allows future developers to add features to Teletubbies","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"skythefire"},"content":"without having to deal with tedious side effects.","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"### **Glossary**","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"**_Command-line Interface (CLI)_**: A user interface that allows users to interact with a system through text commands.","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"**_Graphical User Interface (GUI)_**: A user interface that allows users to interact with a system through graphical icons.","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"**_User stories_**: Simple descriptions of features told from the perspective of the user.","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"tanqiya"},"content":"**_Completion Status_**: A contact can be marked as either “complete”, \"ongoing\" or “incomplete”, indicating if the contact has been contacted.","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"**_Role_**: Users are assigned either the role of telemarketer or supervisor.","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"**_Single Responsibility Principle_**:  A software engineering principle that states that every module, class or","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"function in a computer program should be responsible for and encapsulate only a single part of","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"the program’s functionality.","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"**_Separation of Concerns Principle_**: A software engineering principle that states that programs should be separated","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"into distinct sections which address concerns, or sets of information that affects the code of a computer program.","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"skythefire"},"content":"* [_SE-EDU Remark Command tutorial_](https://nus-cs2103-ay2122s1.github.io/tp/tutorials/AddRemark.html)","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"## **System Overview**","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"lhw-1"},"content":"#### Main components of the architecture","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"lhw-1"},"content":"`Main` has two classes called [`Main`](https://github.com/AY2122S1-CS2103T-W15-4/tp/blob/master/src/main/java/teletubbies/Main.java) and [`MainApp`](https://github.com/AY2122S1-CS2103T-W15-4/tp/blob/master/src/main/java/teletubbies/MainApp.java). The `Main` component,","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"lhw-1"},"content":"* (At app launch) initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"lhw-1"},"content":"* (At shut down) shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"lhw-1"},"content":"#### How the architecture components interact with each other","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"skythefire"},"content":"The Sequence Diagram below outlines how the components interact with each other, in a scenario where the user issues the command `delete -p 87654321`.","lastModifiedDate":"2021-11-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"lhw-1"},"content":"**API** : [`Ui.java`](https://github.com/AY2122S1-CS2103T-W15-4/tp/blob/master/src/main/java/teletubbies/ui/Ui.java)","lastModifiedDate":"2021-10-22"},{"lineNumber":142,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"lhw-1"},"content":"Here\u0027s a (partial) class diagram of the `UI` component:","lastModifiedDate":"2021-10-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"lhw-1"},"content":"The UI consists of a `MainWindow` that is made up of parts such as `CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter`, etc. All these parts, including the `MainWindow` itself, inherit from the abstract `UiPart` class which captures the commonalities between the classes that represent parts of the visible GUI.","lastModifiedDate":"2021-10-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"lhw-1"},"content":"The `UI` component uses the JavaFX UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2122S1-CS2103T-W15-4/tp/blob/master/src/main/java/teletubbies/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2122S1-CS2103T-W15-4/tp/blob/master/src/main/resources/view/MainWindow.fxml).","lastModifiedDate":"2021-10-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":156,"author":{"gitId":"lhw-1"},"content":"* depends on some classes in the `Model` component, as it displays each `Person` object residing in the `Model`.","lastModifiedDate":"2021-10-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"skythefire"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S1-CS2103T-W15-4/tp/blob/master/src/main/java/teletubbies/logic/Logic.java)","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":167,"author":{"gitId":"gok99"},"content":"1. When `Logic` is called upon to execute a command, it uses the `InputParser` class to parse the user command.","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"gok99"},"content":"2. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2021-11-07"},{"lineNumber":169,"author":{"gitId":"gok99"},"content":"3. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"gok99"},"content":"4. The result of the command execution is encapsulated as a `CommandResult` object which is returned from `Logic` back to the `UI`.","lastModifiedDate":"2021-11-07"},{"lineNumber":171,"author":{"gitId":"gok99"},"content":"5. The `CommandResult` object also contains a `UiConsumer` object, which consumes `MainWindow` from `UI`, and encapsulates instructions for ","lastModifiedDate":"2021-11-07"},{"lineNumber":172,"author":{"gitId":"gok99"},"content":"the Command\u0027s UI effects (e.g. opening help menu, opening file select window).","lastModifiedDate":"2021-11-07"},{"lineNumber":173,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"skythefire"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete -i 1\")` API call.","lastModifiedDate":"2021-11-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"skythefire"},"content":"![Interactions Inside the Logic Component for the `delete -i 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"gok99"},"content":"In the diagram above, the creation of the `UiConsumer` object is represented. Since DeleteCommand does not have a UI effect, the consumer simply does nothing. For more details on how a UI effect is ","lastModifiedDate":"2021-11-07"},{"lineNumber":183,"author":{"gitId":"gok99"},"content":"executed, please see [Commands with UI effects](#commands-with-ui-effects). Subsequent sequence diagrams for commands with no UI effect might omit the `UiConsumer` portion of `Command Result`.","lastModifiedDate":"2021-11-07"},{"lineNumber":184,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":190,"author":{"gitId":"lhw-1"},"content":"1. When called upon to parse a user command, the `InputParser` class creates an `XYZCommandParser`. Here, `XYZ` is a placeholder for the specific command name, e.g. `AddCommandParser`.","lastModifiedDate":"2021-10-22"},{"lineNumber":191,"author":{"gitId":"lhw-1"},"content":"2. The newly created `XYZCommandParser` class utilizes the other classes shown above, such as `ParserUtil`, `CliSyntax`, etc. to parse the user command and create a `XYZCommand` object, e.g. `AddCommand`.","lastModifiedDate":"2021-10-22"},{"lineNumber":192,"author":{"gitId":"lhw-1"},"content":"3. The `InputParser` will then return the newly created `XYZCommand` object as a `Command` object.","lastModifiedDate":"2021-10-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":194,"author":{"gitId":"lhw-1"},"content":"All `XYZCommandParser` classes like `AddCommandParser` and `DeleteCommandParser` inherit from the `Parser` interface so that they can be treated similarly where possible, such as during testing.","lastModifiedDate":"2021-10-22"},{"lineNumber":195,"author":{"gitId":"lhw-1"},"content":"Similarly, all `XYZCommand` classes inherit from the `Command` class.","lastModifiedDate":"2021-10-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":199,"author":{"gitId":"skythefire"},"content":"**API** : [`Model.java`](https://github.com/AY2122S1-CS2103T-W15-4/tp/blob/master/src/main/java/teletubbies/model/Model.java)","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"lhw-1"},"content":"Here\u0027s a (partial) class diagram of the `Model` component:","lastModifiedDate":"2021-10-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":203,"author":{"gitId":"skythefire"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"700\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* stores the list of contacts and all previous lists (or address books) in`VersionedAddressBook`, which inherits from `AddressBook`.","lastModifiedDate":"2021-11-06"},{"lineNumber":209,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* stores a history of all commands that were input by the user using `CommandInputHistory`.","lastModifiedDate":"2021-11-06"},{"lineNumber":210,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g. results of a search query) as a separate _filtered_ list, exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e`.","lastModifiedDate":"2021-11-06"},{"lineNumber":211,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2021-11-06"},{"lineNumber":212,"author":{"gitId":"lhw-1"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components).","lastModifiedDate":"2021-10-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"skythefire"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S1-CS2103T-W15-4/tp/blob/master/src/main/java/teletubbies/storage/Storage.java)","lastModifiedDate":"2021-10-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"gok99"},"content":"Classes used by multiple components are in the `teletubbies.commons` package.","lastModifiedDate":"2021-10-20"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"gok99"},"content":"### Commands with UI effects","lastModifiedDate":"2021-11-07"},{"lineNumber":237,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":238,"author":{"gitId":"gok99"},"content":"Commands that require a UI effect will need to set up the `UiConsumer` functional interface that allows the commands to access the functionality","lastModifiedDate":"2021-11-07"},{"lineNumber":239,"author":{"gitId":"gok99"},"content":"of `MainWindow`. The following is an example of a constructor for `CommandResult` that includes this set-up:","lastModifiedDate":"2021-11-07"},{"lineNumber":240,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":241,"author":{"gitId":"gok99"},"content":"```java","lastModifiedDate":"2021-11-07"},{"lineNumber":242,"author":{"gitId":"gok99"},"content":"new CommandResult(MESSAGE, UiEffect.SHOW_HELP, new HelpUiConsumer());","lastModifiedDate":"2021-11-08"},{"lineNumber":243,"author":{"gitId":"gok99"},"content":"```","lastModifiedDate":"2021-11-07"},{"lineNumber":244,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":245,"author":{"gitId":"gok99"},"content":"The third argument of this method call (`new HelpUiConsumer()`), is a `UiConsumer` that uses the `handleHelp` method in `MainWindow`. More complicated effects","lastModifiedDate":"2021-11-07"},{"lineNumber":246,"author":{"gitId":"tanqiya"},"content":"can be constructed with the exposed functions in `MainWindow` (See [Import, Merge and Export Feature](#import-merge-and-export-features)). The `UiConsumer` can be implemented ","lastModifiedDate":"2021-11-08"},{"lineNumber":247,"author":{"gitId":"gok99"},"content":"either as a concrete class (like `HelpUiConsumer`) or as a lambda function.","lastModifiedDate":"2021-11-07"},{"lineNumber":248,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":249,"author":{"gitId":"gok99"},"content":"If the `UiEffect` type (the second constructor argument) does not exist for a new command that you want to add, this corresponding `UiEffect`","lastModifiedDate":"2021-11-07"},{"lineNumber":250,"author":{"gitId":"gok99"},"content":"type should be added into the `UiEffect` enum in `CommandResult`.","lastModifiedDate":"2021-11-07"},{"lineNumber":251,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":252,"author":{"gitId":"gok99"},"content":"On the other hand, if a command has no special UI response, the `UiEffect` type should be `NONE`.","lastModifiedDate":"2021-11-07"},{"lineNumber":253,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":254,"author":{"gitId":"gok99"},"content":"#### Implementation (`help` command)","lastModifiedDate":"2021-11-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":256,"author":{"gitId":"gok99"},"content":"This section describes the implementation of the `help` command. The implementation of other commands that make use of UI effects/responses (e.g. ","lastModifiedDate":"2021-11-07"},{"lineNumber":257,"author":{"gitId":"gok99"},"content":"file choosers, pop-up windows) will be similar.","lastModifiedDate":"2021-11-07"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":259,"author":{"gitId":"gok99"},"content":"![](images/HelpSequenceDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":261,"author":{"gitId":"gok99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `ImportCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-11-07"},{"lineNumber":262,"author":{"gitId":"gok99"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":263,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":264,"author":{"gitId":"gok99"},"content":"**Step 1.** The user enters the `help` command in the command box. ","lastModifiedDate":"2021-11-07"},{"lineNumber":265,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":266,"author":{"gitId":"gok99"},"content":"**Step 2.** A `CommandResult` object containing a `UiConsumer` is created and returned by the `HelpCommand`. The `UiConsumer` contains instructions for the UI effect of the help command.","lastModifiedDate":"2021-11-07"},{"lineNumber":267,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":268,"author":{"gitId":"gok99"},"content":"**Step 3.** `MainWindow` calls `CommandResult#executeUiEffect` of the returned `CommandResult` object, which in turn call the `UiConsumer`. ","lastModifiedDate":"2021-11-07"},{"lineNumber":269,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":270,"author":{"gitId":"gok99"},"content":"**Step 4.** The `UiConsumer` (which contains the implementation for the `help` command\u0027s) UI effect, calls `MainWindow#handleHelp` which invokes the help window pop-up.","lastModifiedDate":"2021-11-07"},{"lineNumber":271,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":272,"author":{"gitId":"gok99"},"content":"#### Design Considerations","lastModifiedDate":"2021-11-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":274,"author":{"gitId":"gok99"},"content":"* **Alternative 1 (current implementation):** Use `UiConsumer` to encapsulate UI effects","lastModifiedDate":"2021-11-07"},{"lineNumber":275,"author":{"gitId":"gok99"},"content":"    * Pros","lastModifiedDate":"2021-11-07"},{"lineNumber":276,"author":{"gitId":"gok99"},"content":"      * Allows UI effects to be open for extension and closed for modification. Adding additional UI effects incur minimal cost.","lastModifiedDate":"2021-11-07"},{"lineNumber":277,"author":{"gitId":"gok99"},"content":"      * UI effects can contain a combination of features exposed by `MainWindow` to create arbitrarily complex UI effects.","lastModifiedDate":"2021-11-07"},{"lineNumber":278,"author":{"gitId":"gok99"},"content":"    * Cons","lastModifiedDate":"2021-11-07"},{"lineNumber":279,"author":{"gitId":"gok99"},"content":"      * Creates significant coupling between `MainWindow` (UI) and `UiConsumer` (Logic).","lastModifiedDate":"2021-11-07"},{"lineNumber":280,"author":{"gitId":"gok99"},"content":"      ","lastModifiedDate":"2021-11-07"},{"lineNumber":281,"author":{"gitId":"gok99"},"content":"* **Alternative 2 (previous implementation):** Use boolean flags in `CommandResult` to signify instructions for UiEffects","lastModifiedDate":"2021-11-07"},{"lineNumber":282,"author":{"gitId":"gok99"},"content":"    * Pros","lastModifiedDate":"2021-11-07"},{"lineNumber":283,"author":{"gitId":"gok99"},"content":"        * Ease of implementation","lastModifiedDate":"2021-11-07"},{"lineNumber":284,"author":{"gitId":"gok99"},"content":"    * Cons","lastModifiedDate":"2021-11-07"},{"lineNumber":285,"author":{"gitId":"gok99"},"content":"        * If a new UI effect needs to be allowed, both `MainWindow` and `CommandResult` will need to be modified with further boolean flags and checks for whether a UI effect has been enabled. This would be in violation of the open-closed principle, since this is not closed to modification.","lastModifiedDate":"2021-11-07"},{"lineNumber":286,"author":{"gitId":"gok99"},"content":"        ","lastModifiedDate":"2021-11-07"},{"lineNumber":287,"author":{"gitId":"tanqiya"},"content":"### Import, Merge and Export Features","lastModifiedDate":"2021-11-06"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":289,"author":{"gitId":"lhw-1"},"content":"#### Implementation","lastModifiedDate":"2021-10-22"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":291,"author":{"gitId":"tanqiya"},"content":"The `import`, `merge` and `export` mechanisms are supported by all the main components, specifically in the following ways:","lastModifiedDate":"2021-11-06"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":293,"author":{"gitId":"tanqiya"},"content":"* The `Ui` component is accessed in `CommandResult` through the `UiConsumer`. This allows the user to interact with the JavaFX FileChooser to select files to be imported, merged or exported to.","lastModifiedDate":"2021-11-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":295,"author":{"gitId":"tanqiya"},"content":"* The execution of the `ImportCommand`, `MergeCommand` and `ExportCommand` is distinct from other commands executed by `Logic` because it is passed to the UI consumer in the `CommandResult` due to their reliance on the UI file chooser.","lastModifiedDate":"2021-11-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":297,"author":{"gitId":"tanqiya"},"content":"* For import, the `Model` component is accessed to set the new AddressBook of contacts. For merge, contacts are merged with the current AddressBook. On the other hand, export filters the AddressBook of the `Model` using the tags specified in the user command to retrieve contacts to be exported.","lastModifiedDate":"2021-11-06"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":299,"author":{"gitId":"lhw-1"},"content":"* Functions in `Storage` were used to write AddressBooks to JSON files as well as read and convert JSON files to AddressBook objects.","lastModifiedDate":"2021-10-22"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":301,"author":{"gitId":"tanqiya"},"content":"#### Import Implementation","lastModifiedDate":"2021-11-06"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":303,"author":{"gitId":"tanqiya"},"content":"The `ImportCommand` allows users to import contact files to the Teletubbies app. The following sequence diagram shows how the `import` operation works:","lastModifiedDate":"2021-11-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":305,"author":{"gitId":"tanqiya"},"content":"\u003cimg src\u003d\"images/ImportSequenceDiagram.png\" width\u003d\"750\" /\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":306,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":307,"author":{"gitId":"lhw-1"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `ImportCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-10-22"},{"lineNumber":308,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":310,"author":{"gitId":"tanqiya"},"content":"* After an `ImportCommand` is created, it will be executed by the `LogicManager`. During the execution, a new `CommandResult` is returned with the `ImportUiConsumer`.","lastModifiedDate":"2021-11-08"},{"lineNumber":311,"author":{"gitId":"tanqiya"},"content":"* `CommandResult#executeUiEffect` is called by the `MainWindow`. The `ImportUiConsumer` then calls `MainWindow#handleImport`, which opens the file chooser for the user to choose a file to import. ","lastModifiedDate":"2021-11-08"},{"lineNumber":312,"author":{"gitId":"tanqiya"},"content":"* When the file is selected, the `ImportUiConsumer` converts the JSON file to an AddressBook and calls `Model#setAddressBook`. The updated contact list is then displayed in the GUI.","lastModifiedDate":"2021-11-08"},{"lineNumber":313,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":314,"author":{"gitId":"tanqiya"},"content":"#### Merge Implementation","lastModifiedDate":"2021-11-06"},{"lineNumber":315,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":316,"author":{"gitId":"tanqiya"},"content":"Merge functions in a similar way to import. However, instead of replacing the previous AddressBook, the incoming AddressBook is merged with it.","lastModifiedDate":"2021-11-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":318,"author":{"gitId":"tanqiya"},"content":"Teletubbies provides commands for users to modify contacts by editing their particulars or tagging them. Since a Person can be entirely changed, each Person is issued a Universally Unique Identifier (UUID) to facilitate the merging process.","lastModifiedDate":"2021-11-08"},{"lineNumber":319,"author":{"gitId":"tanqiya"},"content":"* If there is a Person with a matching UUID in the AddressBook, the incoming Person would replace it. ","lastModifiedDate":"2021-11-08"},{"lineNumber":320,"author":{"gitId":"tanqiya"},"content":"* Else, the Person is new and would be added to the AddressBook.","lastModifiedDate":"2021-11-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":322,"author":{"gitId":"tanqiya"},"content":"The following sequence diagram shows how the `merge` operation works:","lastModifiedDate":"2021-11-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":324,"author":{"gitId":"tanqiya"},"content":"\u003cimg src\u003d\"images/MergeSequenceDiagram.png\" width\u003d\"750\" /\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":325,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":326,"author":{"gitId":"tanqiya"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `MergeCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-11-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":329,"author":{"gitId":"tanqiya"},"content":"#### Export Implementation","lastModifiedDate":"2021-11-06"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":331,"author":{"gitId":"tanqiya"},"content":"Export is distinct from other features as it comprises of 2 commands, as illustrated in this activity diagram:","lastModifiedDate":"2021-11-08"},{"lineNumber":332,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":333,"author":{"gitId":"tanqiya"},"content":"![ExportActivityDiagram](images/ExportActivityDiagram.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":334,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":335,"author":{"gitId":"tanqiya"},"content":"As seen in the activity diagram above,","lastModifiedDate":"2021-11-08"},{"lineNumber":336,"author":{"gitId":"tanqiya"},"content":"* The first command gives users a preview of the contacts to be exported","lastModifiedDate":"2021-11-08"},{"lineNumber":337,"author":{"gitId":"tanqiya"},"content":"* Second command is carried out by the user to confirm and execute the export","lastModifiedDate":"2021-11-08"},{"lineNumber":338,"author":{"gitId":"tanqiya"},"content":"* If the user types in another command instead of confirming the export, the pending export is cancelled and the new command is executed. ","lastModifiedDate":"2021-11-08"},{"lineNumber":339,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":340,"author":{"gitId":"tanqiya"},"content":"The following sequence diagram shows how the `export` operation works:","lastModifiedDate":"2021-11-08"},{"lineNumber":341,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":342,"author":{"gitId":"tanqiya"},"content":"\u003cimg src\u003d\"images/ExportSequenceDiagram.png\" width\u003d\"750\" /\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":343,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":344,"author":{"gitId":"tanqiya"},"content":"The first `export` command processes the AddressBook to filter contacts that contain the tags specified by the user. This is then stored in the `Model` until the export is confirmed and is displayed to the user too. ","lastModifiedDate":"2021-11-08"},{"lineNumber":345,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":346,"author":{"gitId":"tanqiya"},"content":"The interaction between `ExportCommand` and `Model` is illustrated in the sequence diagram below:","lastModifiedDate":"2021-11-08"},{"lineNumber":347,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":348,"author":{"gitId":"tanqiya"},"content":"\u003cimg src\u003d\"images/ModelUpdateExportListSequenceDiagram.png\" width\u003d\"750\" /\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":349,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":350,"author":{"gitId":"tanqiya"},"content":"The `ExportCommand` calls `Model#updateExportList`, invoking `ModelManager` to do the following:","lastModifiedDate":"2021-11-08"},{"lineNumber":351,"author":{"gitId":"tanqiya"},"content":"* Set the boolean `isAwaitingExportConfirmation` to true to manage the subsequent confirmation command.","lastModifiedDate":"2021-11-08"},{"lineNumber":352,"author":{"gitId":"tanqiya"},"content":"* Update the Model\u0027s `versionedAddressBook` with the `filteredPersonsList`. This displays the filtered contact list for users to view before confirming export.","lastModifiedDate":"2021-11-08"},{"lineNumber":353,"author":{"gitId":"tanqiya"},"content":"* Create a copy of the filtered address book and compares it with the previous address book. If they are different, `ModelManager` calls `VersionedAddressBook#commitCurrentStateAndSave`, which commits and pushes the state on the `HistoryManager`. This enables `ModelManager` to revert to the original address book after the next command is executed. ","lastModifiedDate":"2021-11-08"},{"lineNumber":354,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":355,"author":{"gitId":"tanqiya"},"content":"The following sequence diagram shows how the `ConfirmExport` operation works:","lastModifiedDate":"2021-11-08"},{"lineNumber":356,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":357,"author":{"gitId":"tanqiya"},"content":"\u003cimg src\u003d\"images/ConfirmExportSequenceDiagram.png\" width\u003d\"750\" /\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":358,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":359,"author":{"gitId":"tanqiya"},"content":"The execution of the `ConfirmExportCommmand` is similar to the `import` and `merge` commands in the use of `UiConsumer`. If `isAwaitingExportConfirmation` in the `Model` is true, the `ExportUiConsumer` retrieves the AddressBook to be exported from the `Model` as shown in the sequence diagram below:","lastModifiedDate":"2021-11-08"},{"lineNumber":360,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":361,"author":{"gitId":"tanqiya"},"content":"\u003cimg src\u003d\"images/ModelGetExportAddressBookSequenceDiagram.png\" width\u003d\"750\" /\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":362,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":363,"author":{"gitId":"tanqiya"},"content":"The `ExportUiConsumer` calls `Model#getExportAddressBook`, invoking `ModelManager` to do the following:","lastModifiedDate":"2021-11-08"},{"lineNumber":364,"author":{"gitId":"tanqiya"},"content":"* Creates a copy of the AddressBook called `toExport` containing contacts to be exported. This is subsequently returned to the `ExportUiConsumer` to be converted and exported as a JSON file.","lastModifiedDate":"2021-11-08"},{"lineNumber":365,"author":{"gitId":"tanqiya"},"content":"* If `isExportListModified` was set to true in the `ExportCommand`, ","lastModifiedDate":"2021-11-08"},{"lineNumber":366,"author":{"gitId":"tanqiya"},"content":"    * `versionedAddressBook` is undone.","lastModifiedDate":"2021-11-08"},{"lineNumber":367,"author":{"gitId":"tanqiya"},"content":"    * `VersionedAddressBook#commitWithoutSavingCurrentState()` is called, which clears the history after the `historyStack` pointer and resets the `HistoryManager` of the `versionedAddressBook`.","lastModifiedDate":"2021-11-08"},{"lineNumber":368,"author":{"gitId":"tanqiya"},"content":"* Resets export related booleans in `ModelManager`.","lastModifiedDate":"2021-11-08"},{"lineNumber":369,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":370,"author":{"gitId":"tanqiya"},"content":"During the execution of other Teletubbies commands, `Model#cancelPendingExport()` is called to undo the `VersionedAddresBook` if there is a pending export, before the actual execution of the command. The operation of `Model#cancelPendingExport()` is shown in the sequence diagram below:","lastModifiedDate":"2021-11-08"},{"lineNumber":371,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":372,"author":{"gitId":"tanqiya"},"content":"\u003cimg src\u003d\"images/ModelCancelPendingExportSequenceDiagram.png\" width\u003d\"750\" /\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":373,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":374,"author":{"gitId":"tanqiya"},"content":"The `VersionedAdressBook` and `HistoryManager` are reset in the same way as `Model#getExportAddressBook`, which was elaborated above. ","lastModifiedDate":"2021-11-08"},{"lineNumber":375,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":376,"author":{"gitId":"lhw-1"},"content":"#### Design Considerations","lastModifiedDate":"2021-10-22"},{"lineNumber":377,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":378,"author":{"gitId":"gok99"},"content":"**Aspect: How to allow commands to specify UI effects**","lastModifiedDate":"2021-11-07"},{"lineNumber":379,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":380,"author":{"gitId":"tanqiya"},"content":"* **Alternative 1 (current choice):** Import/Export/Merge command can be executed by CLI command or menu bar button.","lastModifiedDate":"2021-11-06"},{"lineNumber":381,"author":{"gitId":"lhw-1"},"content":"    * Pros: Users are given the flexibility of choosing either method to enter the command according to their preference.","lastModifiedDate":"2021-10-22"},{"lineNumber":382,"author":{"gitId":"lhw-1"},"content":"    * Cons: Contacts to be exported are unable to be filtered by tags in the menu bar button.","lastModifiedDate":"2021-10-22"},{"lineNumber":383,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":384,"author":{"gitId":"tanqiya"},"content":"* **Alternative 2:** Import, export and merge are buttons in the menu bar only.","lastModifiedDate":"2021-11-06"},{"lineNumber":385,"author":{"gitId":"lhw-1"},"content":"    * Pros: Similar to the layout of menu bars in Microsoft Office Applications, which might be familiar to users.","lastModifiedDate":"2021-10-22"},{"lineNumber":386,"author":{"gitId":"lhw-1"},"content":"    * Cons: Target users can type fast and might prefer typing in commands. Contacts to be exported are unable to be filtered by tags.","lastModifiedDate":"2021-10-22"},{"lineNumber":387,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":388,"author":{"gitId":"skythefire"},"content":"### Profile Feature","lastModifiedDate":"2021-11-06"},{"lineNumber":389,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":390,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"#### Implementation","lastModifiedDate":"2021-10-20"},{"lineNumber":391,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":392,"author":{"gitId":"lhw-1"},"content":"Setting the user\u0027s profile is facilitated through the `ProfileCommand` and the `ProfileCommandParser` class, which","lastModifiedDate":"2021-10-22"},{"lineNumber":393,"author":{"gitId":"lhw-1"},"content":"parses the user\u0027s input to create a new `UserProfile` object to be set in the current `Model` component.","lastModifiedDate":"2021-10-22"},{"lineNumber":394,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":395,"author":{"gitId":"lhw-1"},"content":"The following activity diagram summarizes what happens when a user executes a `profile` command:","lastModifiedDate":"2021-11-06"},{"lineNumber":396,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":397,"author":{"gitId":"lhw-1"},"content":"![ProfileActivityDiagram](images/ProfileActivityDiagram.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":398,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":399,"author":{"gitId":"lhw-1"},"content":"The following sequence diagram further illustrates how the `profile` command operation works:","lastModifiedDate":"2021-11-06"},{"lineNumber":400,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":401,"author":{"gitId":"lhw-1"},"content":"![ProfileSequenceDiagram](images/ProfileSequenceDiagram.png)","lastModifiedDate":"2021-10-22"},{"lineNumber":402,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":403,"author":{"gitId":"lhw-1"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `ProfileCommandParser` and `ProfileCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-10-22"},{"lineNumber":404,"author":{"gitId":"lhw-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":405,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":406,"author":{"gitId":"lhw-1"},"content":"#### Design Considerations","lastModifiedDate":"2021-10-22"},{"lineNumber":407,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":408,"author":{"gitId":"lhw-1"},"content":"**Aspect: Parameters of the `profile` command**","lastModifiedDate":"2021-10-22"},{"lineNumber":409,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":410,"author":{"gitId":"lhw-1"},"content":"* **Alternative 1 (current choice):** Profile is set with both name and role as mandatory fields.","lastModifiedDate":"2021-10-22"},{"lineNumber":411,"author":{"gitId":"lhw-1"},"content":"    * Pros: Ensures that both name and role are accounted for when changing the profile.","lastModifiedDate":"2021-10-22"},{"lineNumber":412,"author":{"gitId":"lhw-1"},"content":"    * Cons: Both fields must be entered for the user to set the profile, which can be tedious if it has to be done multiple times.","lastModifiedDate":"2021-10-22"},{"lineNumber":413,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":414,"author":{"gitId":"lhw-1"},"content":"* **Alternative 2:** Profile can be set with only the name, or both name and role.","lastModifiedDate":"2021-11-06"},{"lineNumber":415,"author":{"gitId":"lhw-1"},"content":"    * Pros: Allows users to change their name alone without having to enter role as well.","lastModifiedDate":"2021-10-22"},{"lineNumber":416,"author":{"gitId":"lhw-1"},"content":"    * Cons: The cost of implementation is not heavily outweighed by the explicit need for the feature, as there should be infrequent changes in the user\u0027s name.","lastModifiedDate":"2021-10-22"},{"lineNumber":417,"author":{"gitId":"lhw-1"},"content":"    ","lastModifiedDate":"2021-10-22"},{"lineNumber":418,"author":{"gitId":"lhw-1"},"content":"**Aspect: Number of times the user\u0027s profile can be set**","lastModifiedDate":"2021-11-06"},{"lineNumber":419,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":420,"author":{"gitId":"lhw-1"},"content":"* **Alternative 1 (current choice):** Profile can only be set once per user, excluding any undo.","lastModifiedDate":"2021-11-06"},{"lineNumber":421,"author":{"gitId":"lhw-1"},"content":"    * Pros: Ensures that users are unable to switch between telemarketer and supervisor functionalities. In the case where","lastModifiedDate":"2021-11-06"},{"lineNumber":422,"author":{"gitId":"lhw-1"},"content":"the user has misspelt their name, they can still use the undo command to revert back and re-enter the name for their profile.","lastModifiedDate":"2021-11-06"},{"lineNumber":423,"author":{"gitId":"lhw-1"},"content":"    * Cons: The user is unable to set their profile again in the case where their name or role has changed.","lastModifiedDate":"2021-11-06"},{"lineNumber":424,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":425,"author":{"gitId":"lhw-1"},"content":"* **Alternative 2:** No limits are placed on the number of times the user is able to set their profile.","lastModifiedDate":"2021-11-06"},{"lineNumber":426,"author":{"gitId":"lhw-1"},"content":"    * Pros: Allows users to change their name or role as needed, hassle-free.","lastModifiedDate":"2021-11-06"},{"lineNumber":427,"author":{"gitId":"lhw-1"},"content":"    * Cons: There is no explicit need for the feature, as there should be infrequent changes in the user\u0027s name and role.","lastModifiedDate":"2021-11-06"},{"lineNumber":428,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":429,"author":{"gitId":"lhw-1"},"content":"### Profile feature - Reset profile","lastModifiedDate":"2021-11-06"},{"lineNumber":430,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":431,"author":{"gitId":"lhw-1"},"content":"#### Implementation","lastModifiedDate":"2021-11-06"},{"lineNumber":432,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":433,"author":{"gitId":"lhw-1"},"content":"As stated above, users are only able to set their profile **once** using the `profile` command. ","lastModifiedDate":"2021-11-06"},{"lineNumber":434,"author":{"gitId":"lhw-1"},"content":"However, there may be times when there is a need for the users to change their name and/or role. In such circumstances,","lastModifiedDate":"2021-11-06"},{"lineNumber":435,"author":{"gitId":"lhw-1"},"content":"it is possible for the users to reset their profile by manually deleting `preferences.json`.","lastModifiedDate":"2021-11-06"},{"lineNumber":436,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":437,"author":{"gitId":"lhw-1"},"content":"The following activity diagram summarizes what happens when a user deletes `preferences.json`:","lastModifiedDate":"2021-11-06"},{"lineNumber":438,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":439,"author":{"gitId":"lhw-1"},"content":"![ProfileResetActivityDiagram](images/ProfileResetActivityDiagram.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":440,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":441,"author":{"gitId":"skythefire"},"content":"### Mark Contacts as Done Feature","lastModifiedDate":"2021-11-06"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"tanqiya"},"content":"#### Implementation","lastModifiedDate":"2021-10-20"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"lhw-1"},"content":"Marking contacts as done, or contacted, is assisted by `CompletionStatus`. It has a composition association with `Person`","lastModifiedDate":"2021-10-22"},{"lineNumber":446,"author":{"gitId":"lhw-1"},"content":"and holds a boolean value indicating that the person has been contacted by the telemarketer.","lastModifiedDate":"2021-10-22"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"lhw-1"},"content":"The following sequence diagram shows how the `done` operation works:","lastModifiedDate":"2021-10-22"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"lhw-1"},"content":"![DoneSequenceDiagram](images/DoneSequenceDiagram.png)","lastModifiedDate":"2021-10-22"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"skythefire"},"content":"### Delete Contacts Feature","lastModifiedDate":"2021-11-06"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"skythefire"},"content":"#### Implementation","lastModifiedDate":"2021-11-08"},{"lineNumber":455,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":456,"author":{"gitId":"skythefire"},"content":"Deletion of a contact is supported by the `DeleteCommand` and `DeleteCommandParser` classes. The `DeleteCommandParser`","lastModifiedDate":"2021-11-08"},{"lineNumber":457,"author":{"gitId":"skythefire"},"content":"parses the user\u0027s input and deletes the contact at the given index or with the given phone number.","lastModifiedDate":"2021-11-08"},{"lineNumber":458,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":459,"author":{"gitId":"skythefire"},"content":"The following sequence diagram shows how the `delete` operation works:","lastModifiedDate":"2021-11-08"},{"lineNumber":460,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":461,"author":{"gitId":"skythefire"},"content":"![DeleteSequenceDiagram1](images/DeleteSequenceDiagram1.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":462,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":463,"author":{"gitId":"skythefire"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-11-08"},{"lineNumber":464,"author":{"gitId":"skythefire"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"lhw-1"},"content":"The following activity diagram summarizes what happens when a user executes a delete command:","lastModifiedDate":"2021-10-22"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"lhw-1"},"content":"![DeleteActivityDiagram](images/DeleteActivityDiagram.png)","lastModifiedDate":"2021-10-22"},{"lineNumber":469,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":470,"author":{"gitId":"skythefire"},"content":"#### Design Considerations","lastModifiedDate":"2021-11-06"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"lhw-1"},"content":"**Aspect: Parameters of the `delete` command**","lastModifiedDate":"2021-10-22"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"lhw-1"},"content":"Since the telemarketer is responsible for talking to customers on the phone to sell products,","lastModifiedDate":"2021-10-22"},{"lineNumber":475,"author":{"gitId":"lhw-1"},"content":"it will be useful for them to interact with their contact lists through the customer\u0027s phone number.","lastModifiedDate":"2021-10-22"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"lhw-1"},"content":"* **Alternative 1 (current choice):** Delete using either index or phone number.","lastModifiedDate":"2021-10-22"},{"lineNumber":478,"author":{"gitId":"skythefire"},"content":"    * Pros: Flexibility in method of deletion, as users can specify whether they would like to reference a contact by","lastModifiedDate":"2021-11-08"},{"lineNumber":479,"author":{"gitId":"skythefire"},"content":"      index or phone number by using the `-i` or `-p` prefixes.","lastModifiedDate":"2021-11-08"},{"lineNumber":480,"author":{"gitId":"skythefire"},"content":"    * Cons: Slightly more complicated for user to delete a contact, as a longer command has to be typed.","lastModifiedDate":"2021-11-08"},{"lineNumber":481,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":482,"author":{"gitId":"lhw-1"},"content":"* **Alternative 2:** Delete via phone number only.","lastModifiedDate":"2021-10-22"},{"lineNumber":483,"author":{"gitId":"lhw-1"},"content":"    * Pros: Implementation is more straightforward, as there is only one type of input to be expected.","lastModifiedDate":"2021-10-22"},{"lineNumber":484,"author":{"gitId":"lhw-1"},"content":"    * Cons: Removes the convenience of deleting using a contact\u0027s index.","lastModifiedDate":"2021-10-22"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"gok99"},"content":"### Tag feature","lastModifiedDate":"2021-11-07"},{"lineNumber":487,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":488,"author":{"gitId":"gok99"},"content":"The following section will describe the implementation of the tag feature. The implementation for remove tag feature is ","lastModifiedDate":"2021-11-07"},{"lineNumber":489,"author":{"gitId":"gok99"},"content":"similar and hence won\u0027t be repeated in this section. ","lastModifiedDate":"2021-11-07"},{"lineNumber":490,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":491,"author":{"gitId":"gok99"},"content":"The `TagCommand` allows users to tag contacts. A tag has a mandatory name and an optional value (both are case-sensitive).","lastModifiedDate":"2021-11-08"},{"lineNumber":492,"author":{"gitId":"gok99"},"content":"It also requires a specification of indices of the contacts to tag. To allow batch tagging, this is done with a `Range`","lastModifiedDate":"2021-11-07"},{"lineNumber":493,"author":{"gitId":"gok99"},"content":"(found in `commons/core/index`). A `Range` encapsulates a set of indices. The `TagCommandParser` supports ranges of the ","lastModifiedDate":"2021-11-07"},{"lineNumber":494,"author":{"gitId":"gok99"},"content":"form `1,2,3` (Comma-separated) or `1-5` (Hyphen-separated). The parsing of range is handled by `ParserUtil#parseRange`.","lastModifiedDate":"2021-11-07"},{"lineNumber":495,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":496,"author":{"gitId":"gok99"},"content":"The sequence diagram below represents the creation of a `TagCommand` object by the `TagCommandParser`. Details related to ","lastModifiedDate":"2021-11-07"},{"lineNumber":497,"author":{"gitId":"gok99"},"content":"obtaining the tag\u0027s name, value and supervisor flag have been omitted from the diagram below.","lastModifiedDate":"2021-11-07"},{"lineNumber":498,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":499,"author":{"gitId":"gok99"},"content":"![](images/TagParserSequenceDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":500,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":501,"author":{"gitId":"gok99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `ProfileCommandParser` and `ProfileCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-11-07"},{"lineNumber":502,"author":{"gitId":"gok99"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":503,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":504,"author":{"gitId":"gok99"},"content":"After the creation of the `TagCommand`, it will be executed by `LogicManager`. Below is the sequence diagram for the execution ","lastModifiedDate":"2021-11-07"},{"lineNumber":505,"author":{"gitId":"gok99"},"content":"of the `TagCommand`.","lastModifiedDate":"2021-11-07"},{"lineNumber":506,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":507,"author":{"gitId":"gok99"},"content":"![](images/TagSequenceDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":508,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":509,"author":{"gitId":"gok99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `ProfileCommandParser` and `ProfileCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-11-07"},{"lineNumber":510,"author":{"gitId":"gok99"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":511,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":512,"author":{"gitId":"gok99"},"content":"**Step 1.** `LogicManager` executes the `TagCommand`.","lastModifiedDate":"2021-11-07"},{"lineNumber":513,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":514,"author":{"gitId":"gok99"},"content":"**Step 2.** `TagCommand` obtains the list of `Person`s corresponding to its range.","lastModifiedDate":"2021-11-07"},{"lineNumber":515,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":516,"author":{"gitId":"gok99"},"content":"**Step 3.** For each person in the obtained person list a new tag is generated by generateNewTag() and added to the person\u0027s list of tags (or used to replace the existing ","lastModifiedDate":"2021-11-07"},{"lineNumber":517,"author":{"gitId":"gok99"},"content":"tag if the person already has the tag). The new set of tags is used to instantiate the `editedPerson`. Details of adding the tag to the `editedPerson` has been ","lastModifiedDate":"2021-11-07"},{"lineNumber":518,"author":{"gitId":"gok99"},"content":"omitted for brevity.","lastModifiedDate":"2021-11-07"},{"lineNumber":519,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":520,"author":{"gitId":"gok99"},"content":"**Step 4.** The updated `editedPerson` is used to replace the original `person` with `setPerson`.","lastModifiedDate":"2021-11-07"},{"lineNumber":521,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":522,"author":{"gitId":"gok99"},"content":"#### Design Considerations","lastModifiedDate":"2021-11-07"},{"lineNumber":523,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":524,"author":{"gitId":"gok99"},"content":"Tags are used extensively in Teletubbies with a variety of purposes. Tags in Teletubbies are much more versatile than their","lastModifiedDate":"2021-11-07"},{"lineNumber":525,"author":{"gitId":"gok99"},"content":"implementation in AB-3. Tags now have both names and values, and can also be set to be only editable by supervisors. This","lastModifiedDate":"2021-11-07"},{"lineNumber":526,"author":{"gitId":"gok99"},"content":"allows for supervisors to create assignee tags for example, with name \u0027assignee\u0027 and value as the name of the assignee. ","lastModifiedDate":"2021-11-07"},{"lineNumber":527,"author":{"gitId":"gok99"},"content":"The tag can also be set to be modifiable only by supervisors, so that employees won\u0027t be able to tamper with the manpower ","lastModifiedDate":"2021-11-07"},{"lineNumber":528,"author":{"gitId":"gok99"},"content":"assignment. ","lastModifiedDate":"2021-11-07"},{"lineNumber":529,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":530,"author":{"gitId":"gok99"},"content":"The completion status of a contact is also internally represented as a tag, with name \u0027CompletionStatus\u0027 and value","lastModifiedDate":"2021-11-07"},{"lineNumber":531,"author":{"gitId":"gok99"},"content":"either \u0027INCOMPLETE\u0027, \u0027ONGOING\u0027 or \u0027COMPLETE\u0027. Since the `filter` and `export` commands make use of tags, this allows users to filter and","lastModifiedDate":"2021-11-07"},{"lineNumber":532,"author":{"gitId":"gok99"},"content":"export contacts by \u0027CompletionStatus\u0027, since CompletionStatus is also a tag after all. Supervisors can also export contacts corresponding","lastModifiedDate":"2021-11-07"},{"lineNumber":533,"author":{"gitId":"gok99"},"content":"to a particular assignee for contact dissemination, which is a critical feature for supervisors.","lastModifiedDate":"2021-11-07"},{"lineNumber":534,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":535,"author":{"gitId":"gok99"},"content":"**Aspect: How general (in terms of functionality) should tags be?**","lastModifiedDate":"2021-11-07"},{"lineNumber":536,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":537,"author":{"gitId":"gok99"},"content":"* **Alternative 1 (current choice):** Users are free to set tag name, value and accessibility","lastModifiedDate":"2021-11-07"},{"lineNumber":538,"author":{"gitId":"gok99"},"content":"    * Pros: ","lastModifiedDate":"2021-11-07"},{"lineNumber":539,"author":{"gitId":"gok99"},"content":"      * Users have more configurability options for tags, which opens up use-cases and ultimately makes tags more useful.","lastModifiedDate":"2021-11-07"},{"lineNumber":540,"author":{"gitId":"gok99"},"content":"      * Implementation for `filter` and `export` is simplified since only tags will be used to specify contacts for these commands.","lastModifiedDate":"2021-11-08"},{"lineNumber":541,"author":{"gitId":"gok99"},"content":"    * Cons: ","lastModifiedDate":"2021-11-07"},{"lineNumber":542,"author":{"gitId":"gok99"},"content":"      * Commands pertaining to adding and removing tags now get more complex and risk being counter-intuitive since there are more configuration options. ","lastModifiedDate":"2021-11-07"},{"lineNumber":543,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":544,"author":{"gitId":"gok99"},"content":"* **Alternative 2:** Tags only have a name attribute.","lastModifiedDate":"2021-11-07"},{"lineNumber":545,"author":{"gitId":"gok99"},"content":"    * Pros: ","lastModifiedDate":"2021-11-07"},{"lineNumber":546,"author":{"gitId":"gok99"},"content":"      * Ease of implementation (virtually identical to AB-3).","lastModifiedDate":"2021-11-07"},{"lineNumber":547,"author":{"gitId":"gok99"},"content":"      * Lesser configurability of tags and hence simpler and easier to use tag commands.","lastModifiedDate":"2021-11-07"},{"lineNumber":548,"author":{"gitId":"gok99"},"content":"    * Cons: ","lastModifiedDate":"2021-11-07"},{"lineNumber":549,"author":{"gitId":"gok99"},"content":"      * Separate functionality will need to be created for assignee and completion status, which will function very similarly to tags, but are not tags.","lastModifiedDate":"2021-11-07"},{"lineNumber":550,"author":{"gitId":"gok99"},"content":"      * `filter` and `export` commands will potentially be a lot more complex, since users can export by tags, completion status or assignee, and they can\u0027t be handled similarly.","lastModifiedDate":"2021-11-07"},{"lineNumber":551,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":552,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":553,"author":{"gitId":"gok99"},"content":"### Filter feature","lastModifiedDate":"2021-11-07"},{"lineNumber":554,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":555,"author":{"gitId":"gok99"},"content":"The following section will describe the implementation of the filter feature. The use of a `Predicate\u003cPerson\u003e` here to ","lastModifiedDate":"2021-11-07"},{"lineNumber":556,"author":{"gitId":"gok99"},"content":"filter the person list is similar to the implementation of the find feature. ","lastModifiedDate":"2021-11-07"},{"lineNumber":557,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":558,"author":{"gitId":"gok99"},"content":"The sequence diagram below represents the creation of a `FilterCommand` object by the `FilterCommandParser`.","lastModifiedDate":"2021-11-07"},{"lineNumber":559,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":560,"author":{"gitId":"gok99"},"content":"![](images/FilterParserSequenceDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":561,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":562,"author":{"gitId":"gok99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `ProfileCommandParser` and `ProfileCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-11-07"},{"lineNumber":563,"author":{"gitId":"gok99"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":564,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":565,"author":{"gitId":"gok99"},"content":"`PersonHasTagsPredicate` is a subclass of Predicate\u003cPerson\u003e. Below is the sequence diagram for the execution of the `FilterCommand`.","lastModifiedDate":"2021-11-07"},{"lineNumber":566,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":567,"author":{"gitId":"gok99"},"content":"![](images/FilterSequenceDiagram.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":568,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":569,"author":{"gitId":"gok99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `ProfileCommandParser` and `ProfileCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-11-07"},{"lineNumber":570,"author":{"gitId":"gok99"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":571,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":572,"author":{"gitId":"gok99"},"content":"The existing functionality of Java\u0027s `FilteredList` is leveraged for the implementation of the command. The execution of the","lastModifiedDate":"2021-11-07"},{"lineNumber":573,"author":{"gitId":"gok99"},"content":"`FindCommand` is near identical except to `FilterCommand` for the use of `NameContainsKeywordsPredicate` instead of","lastModifiedDate":"2021-11-07"},{"lineNumber":574,"author":{"gitId":"gok99"},"content":"`PersonHasTagsPredicate`.","lastModifiedDate":"2021-11-07"},{"lineNumber":575,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":576,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"### History tracking features","lastModifiedDate":"2021-11-06"},{"lineNumber":577,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":578,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"We saw a need for Teletubbies to track the history of the application as a core feature while we were devising our user stories. This would allow users to traverse back","lastModifiedDate":"2021-11-06"},{"lineNumber":579,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"and regain access to previous states, as well as access previous commands.","lastModifiedDate":"2021-11-06"},{"lineNumber":580,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":581,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"The features that required the tracking of history were the","lastModifiedDate":"2021-11-06"},{"lineNumber":582,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* `undo`/`redo` commands,","lastModifiedDate":"2021-11-06"},{"lineNumber":583,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* `history` command, and","lastModifiedDate":"2021-11-06"},{"lineNumber":584,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* Unix-style way of obtaining previous and next commands, using the **UP** and **DOWN**","lastModifiedDate":"2021-11-06"},{"lineNumber":585,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"arrow keys","lastModifiedDate":"2021-11-06"},{"lineNumber":586,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":587,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"The `HistoryManager` class was created to serve as an abstraction for devices that can store the history of any object. It\u0027s sole responsibility is to","lastModifiedDate":"2021-11-06"},{"lineNumber":588,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"manage the history of the type of object we wanted to track, including the current state and a list of previous states or previously undone states. It is a generic class, which","lastModifiedDate":"2021-11-06"},{"lineNumber":589,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"allows for efficient code re-usability.","lastModifiedDate":"2021-11-06"},{"lineNumber":590,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":591,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"`HistoryManager` uses a stack-like data structure, with a *Last-In, First-out* (LIFO) method of storing states.","lastModifiedDate":"2021-11-06"},{"lineNumber":592,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":593,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"`HistoryManager` contains an `ArrayList` called `historyStack` which serves as the stack-like data structure to store the states of the object in question, and a `stackPointer` which stores the","lastModifiedDate":"2021-11-06"},{"lineNumber":594,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"index of the current state in question.","lastModifiedDate":"2021-11-06"},{"lineNumber":595,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":596,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"When `HistoryManager` is first initialised, `historyStack` is empty while `stackPointer` does not point to any state, since there are none stored.","lastModifiedDate":"2021-11-06"},{"lineNumber":597,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":598,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"![HistoryManagerDiagram0](images/HistoryManagerDiagram0.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":599,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":600,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Then, new states of the object with type parameter `T` are added and stored in the `HistoryManager`, using `HistoryManager#commitAndPush(T item)`. This method causes the new item to be added to","lastModifiedDate":"2021-11-06"},{"lineNumber":601,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"`historyStack` and the `stackPointer` to be pointed to the new item.","lastModifiedDate":"2021-11-06"},{"lineNumber":602,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":603,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"![HistoryManagerDiagram1](images/HistoryManagerDiagram1.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":604,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":605,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** `HistoryManager#commitAndPush(T item)` returns a *new* `HistoryManager` object which has the new state pushed to the top of the","lastModifiedDate":"2021-11-06"},{"lineNumber":606,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"`historyStack`. This ensures the immutability of historyStack and guarantees that if anything is added, `stackPointer` will point to the latest version.","lastModifiedDate":"2021-11-06"},{"lineNumber":607,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":608,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":609,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"The `HistoryManager#undo()` and `HistoryManager#redo()` methods allow the pointer to be pushed up or down to previous states or previously undone states, by simply pointing to the object below the current state or above it.","lastModifiedDate":"2021-11-06"},{"lineNumber":610,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":611,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"For instance, this is how `HistoryManager` looks like after `HistoryManager#undo()` is called twice:","lastModifiedDate":"2021-11-06"},{"lineNumber":612,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":613,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"![HistoryManagerDiagram2](images/HistoryManagerDiagram2.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":614,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":615,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"And after `HistoryManager#redo()` is called once, it looks like this:","lastModifiedDate":"2021-11-06"},{"lineNumber":616,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":617,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"![HistoryManagerDiagram3](images/HistoryManagerDiagram3.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":618,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":619,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** `HistoryManager#undo()` and `HistoryManager#redo()` *do not* return new `HistoryManager` objects as the `historyStack` is not manipulated.","lastModifiedDate":"2021-11-06"},{"lineNumber":620,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":621,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":622,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Calling `HistoryManager#commitAndPush(T item)` here causes the states above the `stackPointer` to be removed and replaced by the new state, as indicated by item.","lastModifiedDate":"2021-11-06"},{"lineNumber":623,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Once again, a new `HistoryManager` is created, this time with the new state added and the state `v2` to be removed.","lastModifiedDate":"2021-11-06"},{"lineNumber":624,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":625,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"![HistoryManagerDiagram4](images/HistoryManagerDiagram4.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":626,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":627,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"`HistoryManager` also has a `HistoryManager#peek()` method which returns the current state that is pointed at by the `stackPointer`, as well as the","lastModifiedDate":"2021-11-06"},{"lineNumber":628,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"`HistoryManager#resetFullHistory()` method which simply resets the `stackPointer` to point to the top of the `historyStack`.","lastModifiedDate":"2021-11-06"},{"lineNumber":629,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":630,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"#### Design Considerations","lastModifiedDate":"2021-11-06"},{"lineNumber":631,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":632,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"**Aspect: How can the previous states be stored**","lastModifiedDate":"2021-11-06"},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":634,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* **Alternative 1 (current choice):** Use a single stack to record the history","lastModifiedDate":"2021-11-06"},{"lineNumber":635,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  * Pros: Easy to visualise","lastModifiedDate":"2021-11-06"},{"lineNumber":636,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  * Cons: Need to be careful while committing as both previous states and previously undone states exist on the same stack. Does not adhere closely to Single Responsibility Principle.","lastModifiedDate":"2021-11-06"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":638,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* **Alternative 2 (proposed):** Use a 2-stack method to record history, one which stores the states which can be undone and the other to store the states which can be redone.","lastModifiedDate":"2021-11-06"},{"lineNumber":639,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  * The `HistoryManager` would originally have 2 stacks: an undo stack and a redo stack. Before actions are undone, the redo stack would be empty while the new states would be added","lastModifiedDate":"2021-11-06"},{"lineNumber":640,"author":{"gitId":"skythefire"},"content":"directly to the top of redo stack. ","lastModifiedDate":"2021-11-08"},{"lineNumber":641,"author":{"gitId":"skythefire"},"content":"    ","lastModifiedDate":"2021-11-08"},{"lineNumber":642,"author":{"gitId":"skythefire"},"content":"![HistoryManagerAlternative0](images/HistoryManagerAlternativeDiagram0.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":643,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":644,"author":{"gitId":"skythefire"},"content":"  * Then, as `HistoryManager#undo()` or `HistoryManager#redo()` is called states would be popped from one stack and pushed to the other. ","lastModifiedDate":"2021-11-08"},{"lineNumber":645,"author":{"gitId":"skythefire"},"content":"    ","lastModifiedDate":"2021-11-08"},{"lineNumber":646,"author":{"gitId":"skythefire"},"content":"![HistoryManagerAlternative1](images/HistoryManagerAlternativeDiagram1.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":647,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":648,"author":{"gitId":"skythefire"},"content":"  * If we want to commit to `HistoryManager`, all we have to do is clear `redoStack` and push the new state to `undoStack`. ","lastModifiedDate":"2021-11-08"},{"lineNumber":649,"author":{"gitId":"skythefire"},"content":"    ","lastModifiedDate":"2021-11-08"},{"lineNumber":650,"author":{"gitId":"skythefire"},"content":"![HistoryManagerAlternative2](images/HistoryManagerAlternativeDiagram2.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":651,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":652,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  * Pros: Single responsibility principle, `undoStack` only manages states to be undone while `redoStack` only manages states to be redone.","lastModifiedDate":"2021-11-06"},{"lineNumber":653,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  * Cons: Difficult to visualise.","lastModifiedDate":"2021-11-06"},{"lineNumber":654,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":655,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":656,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"### Undo/Redo feature","lastModifiedDate":"2021-11-06"},{"lineNumber":657,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":658,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"The `undo` command allows the telemarketer or the supervisor to revert to previous states. This mechanism is supported by the `VersionedAddressBook`. `VersionedAddressBook` extends","lastModifiedDate":"2021-11-06"},{"lineNumber":659,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"`AddressBook`, but internally implements the `HistoryManager` class to store and track `ReadOnlyAddressBook`, the states of the address book.","lastModifiedDate":"2021-11-06"},{"lineNumber":660,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":661,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"It also implements the following methods:","lastModifiedDate":"2021-11-06"},{"lineNumber":662,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":663,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* `VersionedAddressBook#commitCurrentStateAndSave()` - This action adds a copy of the current state to `HistoryManager`","lastModifiedDate":"2021-11-06"},{"lineNumber":664,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* `VersionedAddressBook#commitWithoutSavingCurrentState()` - This action clears previously undone states stored by `HistoryManager`. This method will only be called","lastModifiedDate":"2021-11-06"},{"lineNumber":665,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* `VersionedAddressBook#undo()` - This action restores a previously stored state as stored in `HistoryManager`","lastModifiedDate":"2021-11-06"},{"lineNumber":666,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* `VersionedAddressBook#redo()` - This action restores a previously undone state as stored in `HistoryManager`","lastModifiedDate":"2021-11-06"},{"lineNumber":667,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":668,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"The `Model` interface also exposes methods such as `Model#undoAddressBook()`, `Model#redoAddressBook()` and `Model#commitAddressBook()` that allows the states to be changed.","lastModifiedDate":"2021-11-06"},{"lineNumber":669,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":670,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"An example of the usage scenario of `undo` is given below:","lastModifiedDate":"2021-11-06"},{"lineNumber":671,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":672,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Step 1. Teletubbies is launched for the first time by the user. `VersionedAddressBook` is first initialised with an initial address book state.","lastModifiedDate":"2021-11-06"},{"lineNumber":673,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":674,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"![UndoState0](images/UndoRedoState0.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":675,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":676,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Step 2. The user changes the current state of Teletubbies by executing a `done 1` command. The `done` command calls `Model#commitAddressBook()` which in turn causes","lastModifiedDate":"2021-11-06"},{"lineNumber":677,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"`VersionedAddressBook#commitCurrentStateAndSave()` to be called. This causes the newest state of Teletubbies (which is different from it\u0027s previous state) to be","lastModifiedDate":"2021-11-06"},{"lineNumber":678,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"saved.","lastModifiedDate":"2021-11-06"},{"lineNumber":679,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":680,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"![UndoState1](images/UndoRedoState1.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":681,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":682,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Step 3. The user changes the current state of Teletubbies by executing a `delete -i 1` command. The `delete` command calls `Model#commitAddressBook()` as before, causing","lastModifiedDate":"2021-11-06"},{"lineNumber":683,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"the state of Teletubbies to be changed.","lastModifiedDate":"2021-11-06"},{"lineNumber":684,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":685,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"![UndoState2](images/UndoRedoState2.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":686,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":687,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Step 4. The user decides to undo by executing `undo`. This causes `Model#undoAddressBook()` to be called, which causes `HistoryManager` to revert back to state `tb1`.","lastModifiedDate":"2021-11-06"},{"lineNumber":688,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":689,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"![UndoState3](images/UndoRedoState3.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":690,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":691,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the current state is the earliest","lastModifiedDate":"2021-11-06"},{"lineNumber":692,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"possible state, in this case tb0, Teletubbies will no longer be revertible, and the undo command will throw an exception. The undo command uses","lastModifiedDate":"2021-11-06"},{"lineNumber":693,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"`Model#canUndoAddressBook()` to confirm if this is the case.","lastModifiedDate":"2021-11-06"},{"lineNumber":694,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":695,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":696,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"The sequence diagram below illustrates the undo operation:","lastModifiedDate":"2021-11-06"},{"lineNumber":697,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":698,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":699,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":700,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"However, the `redo` command simply does the opposite and calls `Model#redoAddressBook()`, which causes the undone state to be reinstated.","lastModifiedDate":"2021-11-06"},{"lineNumber":701,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":702,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the current state is the latest","lastModifiedDate":"2021-11-06"},{"lineNumber":703,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"possible state, in this case tb2, Teletubbies will no longer be able to restore undone states, and the redo command will throw an exception. The undo command uses","lastModifiedDate":"2021-11-06"},{"lineNumber":704,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"`Model#canRedoAddressBook()` to confirm if this is the case.","lastModifiedDate":"2021-11-06"},{"lineNumber":705,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":706,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":707,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Step 5. The user decides to execute the command `find Alex`. However, `find` does not modify `VersionedAddressBook`. Commands that do not modify `VersionedAddressBook` do not call","lastModifiedDate":"2021-11-06"},{"lineNumber":708,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"`Model#commitAddressBook()` which allows the history of states to remain unchanged.","lastModifiedDate":"2021-11-06"},{"lineNumber":709,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":710,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"![UndoState4](images/UndoRedoState4.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":712,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Step 6. The `clear` command is then executed by the user. `Model#commitAddressBook()` is called by the command, which causes the states after the current state to no longer be stored.","lastModifiedDate":"2021-11-06"},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":714,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"![UndoState5](images/UndoRedoState5.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":715,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":716,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"#### Design Considerations","lastModifiedDate":"2021-11-06"},{"lineNumber":717,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":718,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"**Aspect: How `undo` and `redo` would be executed**","lastModifiedDate":"2021-11-06"},{"lineNumber":719,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":720,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* **Alternative 1 (current choice):** Just save the entire AddressBook state.","lastModifiedDate":"2021-11-06"},{"lineNumber":721,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  * Pros: Easier to implement, debug and trace together","lastModifiedDate":"2021-11-06"},{"lineNumber":722,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  * Cons: Very memory-intensive as multiple states and copies are stored.","lastModifiedDate":"2021-11-06"},{"lineNumber":723,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":724,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* **Alternative 2:** Only store the difference in the AddressBook states, much like GitHub\u0027s approach to version control. This means a separate data structure which stores the difference between states like a tree is needed.","lastModifiedDate":"2021-11-06"},{"lineNumber":725,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  * Pros: Much less memory-intensive since only differences between each version are saved","lastModifiedDate":"2021-11-06"},{"lineNumber":726,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  * Cons: Difficult to implement a tree-like data structure that can effectively track the changes within the given time period. Undo would simply be a traversal up the tree while redo would be traversing down. Cannot reuse `HistoryManager`","lastModifiedDate":"2021-11-06"},{"lineNumber":727,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":728,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"### History feature","lastModifiedDate":"2021-11-06"},{"lineNumber":729,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":730,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"The `history` command allows the user to view the previous commands that were given to Teletubbies. This mechanism is supported by `CommandInputHistory`, which internally implements `HistoryManager`","lastModifiedDate":"2021-11-06"},{"lineNumber":731,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"to store and track user inputs which are `String`s.","lastModifiedDate":"2021-11-06"},{"lineNumber":732,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":733,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"`CommandInputHistory` also implements the following methods:","lastModifiedDate":"2021-11-06"},{"lineNumber":734,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":735,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* `CommandInputHistory#getChronologicallyAscendingHistory()` - This method returns a List of Strings which are the commands keyed in by the user","lastModifiedDate":"2021-11-06"},{"lineNumber":736,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"in chronological order, i.e. the first element is the earliest command given by the user.","lastModifiedDate":"2021-11-06"},{"lineNumber":737,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* `CommandInputHistory#getChronologicallyDescendingHistory()` - This method returns a List of Strings which are the commands keyed in by the user","lastModifiedDate":"2021-11-06"},{"lineNumber":738,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"in chronologically descending order, i.e. the first element is the latest command given by the user.","lastModifiedDate":"2021-11-06"},{"lineNumber":739,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* `CommandInputHistory#addCommandInput(String input)` - This method calls `HistoryManager#resetFullHistory()` before calling `HistoryManager#commitAndPush()` to add a new String","lastModifiedDate":"2021-11-06"},{"lineNumber":740,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"to the `HistoryManager`. This is necessary as `CommandInputHistory` should keep track of all inputs without overwriting them.","lastModifiedDate":"2021-11-06"},{"lineNumber":741,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":742,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"The `Model` interface also exposes methods such as `Model#addCommandInput()`, `Model#getNextCommand()` and `Model#getPreviousCommand()` that allows access to the previous and next commands","lastModifiedDate":"2021-11-06"},{"lineNumber":743,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"as stored by the `HistoryManager` in `CommandInputHistory`.","lastModifiedDate":"2021-11-06"},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":745,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"The sequence diagram below shows the mechanism in storing the input given by the user.","lastModifiedDate":"2021-11-06"},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":747,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"![HistorySequenceDiagramToStoreCommands](images/HistorySequenceToStoreCommandsDiagram.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":748,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":749,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"This allows the command to be stored regardless of the outcome of the command, even if it is an invalid command.","lastModifiedDate":"2021-11-06"},{"lineNumber":750,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":751,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"The sequence diagram below shows the execution path which is taken by the `history` command.","lastModifiedDate":"2021-11-06"},{"lineNumber":752,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":753,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"![HistoryCommandSequenceDiagram](images/HistoryCommandSequenceDiagram.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":754,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":755,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"### Use of **UP** and **DOWN** to get previous or next commands","lastModifiedDate":"2021-11-06"},{"lineNumber":756,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":757,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"As we were inspired heavily by the elegance of Unix-like systems and their ability to cycle through previously input commands,","lastModifiedDate":"2021-11-06"},{"lineNumber":758,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"we decided to implement this as well. This feature is facilitated by the `Model` and `CommandHistoryInput`.","lastModifiedDate":"2021-11-06"},{"lineNumber":759,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":760,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"The UI component uses EventHandlers that detects if the **UP** or **DOWN** buttons are pressed by the user. Then, UI calls upon `Model#getPreviousCommand()`","lastModifiedDate":"2021-11-06"},{"lineNumber":761,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"or `Model#getNextCommand()` to get the previous or next command as stored by `CommandInputHistory`.","lastModifiedDate":"2021-11-06"},{"lineNumber":762,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":763,"author":{"gitId":"skythefire"},"content":"The activity diagram below show how the **UP** button key press is handled.","lastModifiedDate":"2021-11-08"},{"lineNumber":764,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":765,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"![UpButtonActivityDiagram](images/UpButtonActivityDiagram.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":766,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":767,"author":{"gitId":"skythefire"},"content":"The activity diagram below show how the **DOWN** button key press is handled.","lastModifiedDate":"2021-11-08"},{"lineNumber":768,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":769,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"![DownButtonActivityDiagram](images/DownButtonActivityDiagram.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":770,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":771,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"#### Design Considerations","lastModifiedDate":"2021-11-06"},{"lineNumber":772,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":773,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"**Aspect: The interaction between `UI` and `CommandInputHistory`**","lastModifiedDate":"2021-11-06"},{"lineNumber":774,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":775,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* **Alternative 1 (current choice):** Let `Model` house `CommandInputHistory`","lastModifiedDate":"2021-11-06"},{"lineNumber":776,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    * Pros: Minimal dependency between `Logic` and the components of `Model`","lastModifiedDate":"2021-11-06"},{"lineNumber":777,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    * Cons: Additional dependency between `UI` and `Model` created as `UI` needs to call `Model` methods","lastModifiedDate":"2021-11-06"},{"lineNumber":778,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":779,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* **Alternative 2:** Let `Logic` house `CommandInputHistory`","lastModifiedDate":"2021-11-06"},{"lineNumber":780,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    * Pros: Since `Logic` already interacts with `UI`, no additional coupling created between them.","lastModifiedDate":"2021-11-06"},{"lineNumber":781,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    * Cons: Requires passing of `CommandInputHistory` to `InputParser` in order to handle `history` commands. The parser should not","lastModifiedDate":"2021-11-06"},{"lineNumber":782,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  have to know about `CommandInputHistory`","lastModifiedDate":"2021-11-06"},{"lineNumber":783,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":784,"author":{"gitId":"skythefire"},"content":"### Auto completion feature","lastModifiedDate":"2021-11-08"},{"lineNumber":785,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":786,"author":{"gitId":"skythefire"},"content":"Since Teletubbies is designed to be mainly used through its CLI, we prioritised the convenience of our users in typing","lastModifiedDate":"2021-11-08"},{"lineNumber":787,"author":{"gitId":"skythefire"},"content":"out commands by implementing an auto completion feature.","lastModifiedDate":"2021-11-08"},{"lineNumber":788,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":789,"author":{"gitId":"skythefire"},"content":"The autocompletion mechanism is facilitated by the `CommandMap` class. The `CommandMap` contains a a `HashMap`","lastModifiedDate":"2021-11-08"},{"lineNumber":790,"author":{"gitId":"skythefire"},"content":"called `classMap` which stores the individual command words as keys and the `XYZCommand` classes as values. Within","lastModifiedDate":"2021-11-08"},{"lineNumber":791,"author":{"gitId":"skythefire"},"content":"each `XYZCommand` class, the recommended command fields for the command are stored in a `List` called `RECOMMENDED_FLAGS`.","lastModifiedDate":"2021-11-08"},{"lineNumber":792,"author":{"gitId":"skythefire"},"content":"This list is not stored if the command does not require command fields. Here, `XYZ` is a placeholder for the specific","lastModifiedDate":"2021-11-08"},{"lineNumber":793,"author":{"gitId":"skythefire"},"content":"command name, e.g. `AddCommand`.","lastModifiedDate":"2021-11-08"},{"lineNumber":794,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":795,"author":{"gitId":"skythefire"},"content":"The UI component uses EventHandlers that detects if the **TAB** button is pressed by the user. Then, UI calls","lastModifiedDate":"2021-11-08"},{"lineNumber":796,"author":{"gitId":"skythefire"},"content":"upon `CommandMap#getClass()` to retrieve the class that corresponds to the input command, which then prints out","lastModifiedDate":"2021-11-08"},{"lineNumber":797,"author":{"gitId":"skythefire"},"content":"the command fields specified within the `RECOMMENDED_FLAGS` list (or does not print out anything, in the case that no command fields","lastModifiedDate":"2021-11-08"},{"lineNumber":798,"author":{"gitId":"skythefire"},"content":"are required for the input command).","lastModifiedDate":"2021-11-08"},{"lineNumber":799,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":800,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":801,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":802,"author":{"gitId":"tanqiya"},"content":"## **Documentation, Logging, Testing, Configuration, Dev-ops**","lastModifiedDate":"2021-10-19"},{"lineNumber":803,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":804,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":805,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":806,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":807,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":808,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":809,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":810,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":811,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":812,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":813,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":814,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":815,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":816,"author":{"gitId":"tanqiya"},"content":"#### **Target User Profiles**","lastModifiedDate":"2021-10-22"},{"lineNumber":817,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":818,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":819,"author":{"gitId":"tanqiya"},"content":"David Wong","lastModifiedDate":"2021-10-19"},{"lineNumber":820,"author":{"gitId":"tanqiya"},"content":"* works as a **telemarketer** from home and makes internet calls on his computer","lastModifiedDate":"2021-10-19"},{"lineNumber":821,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* likes to import/export data quickly","lastModifiedDate":"2021-09-28"},{"lineNumber":822,"author":{"gitId":"tanqiya"},"content":"* wants to mark the contacts that he has already called and/or successfully marketed to","lastModifiedDate":"2021-10-19"},{"lineNumber":823,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* wants to keep track of his progress","lastModifiedDate":"2021-09-28"},{"lineNumber":824,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2021-09-28"},{"lineNumber":825,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2021-09-28"},{"lineNumber":826,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* can type fast","lastModifiedDate":"2021-09-28"},{"lineNumber":827,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2021-09-28"},{"lineNumber":828,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2021-09-28"},{"lineNumber":829,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":830,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":831,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":832,"author":{"gitId":"tanqiya"},"content":"Anne Goh","lastModifiedDate":"2021-10-19"},{"lineNumber":833,"author":{"gitId":"tanqiya"},"content":"* works as a **telemarketing supervisor** from home","lastModifiedDate":"2021-10-19"},{"lineNumber":834,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* needs to pass lists of contacts to her subordinates to contact","lastModifiedDate":"2021-09-28"},{"lineNumber":835,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* wants to monitor the performance of her subordinates","lastModifiedDate":"2021-09-28"},{"lineNumber":836,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":837,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":838,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":839,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":840,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":841,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":842,"author":{"gitId":"lhw-1"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":843,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":844,"author":{"gitId":"tanqiya"},"content":"#### **Value Proposition**","lastModifiedDate":"2021-10-22"},{"lineNumber":845,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":846,"author":{"gitId":"skythefire"},"content":"* Able to import / export data into an easy-to-view format, useful for those who are not experienced at working with data files such as JSON / CSV / etc.","lastModifiedDate":"2021-09-28"},{"lineNumber":847,"author":{"gitId":"skythefire"},"content":"* Easy to add/annotate details on users to keep track of user defined metrics","lastModifiedDate":"2021-09-28"},{"lineNumber":848,"author":{"gitId":"skythefire"},"content":"* Ability to get analytics about metrics for progress-tracking","lastModifiedDate":"2021-09-28"},{"lineNumber":849,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":850,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":851,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":852,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":853,"author":{"gitId":"tanqiya"},"content":"Priorities:","lastModifiedDate":"2021-10-19"},{"lineNumber":854,"author":{"gitId":"tanqiya"},"content":"* High (must have) - `* * *`","lastModifiedDate":"2021-10-19"},{"lineNumber":855,"author":{"gitId":"tanqiya"},"content":"* Medium (nice to have) - `* *`","lastModifiedDate":"2021-10-19"},{"lineNumber":856,"author":{"gitId":"tanqiya"},"content":"* Low (unlikely to have) - `*`","lastModifiedDate":"2021-10-19"},{"lineNumber":857,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":858,"author":{"gitId":"-"},"content":"| Priority | As a …​                              | I want to …​                                          | So that I can…​                                                                     |","lastModifiedDate":"2020-05-23"},{"lineNumber":859,"author":{"gitId":"gok99"},"content":"| -------- | --------------------------------------- | -------------------------------------------------------- | -------------------------------------------------------------------------------------- |","lastModifiedDate":"2021-11-08"},{"lineNumber":860,"author":{"gitId":"lhw-1"},"content":"| `* * *`  | Telemarketer                            | import the list of customers                             | easily view all the contacts I need to call                                            |","lastModifiedDate":"2021-09-28"},{"lineNumber":861,"author":{"gitId":"lhw-1"},"content":"| `* * *`  | Telemarketer                            | export the list of customers                             | send the list to my supervisor                                                         |","lastModifiedDate":"2021-09-28"},{"lineNumber":862,"author":{"gitId":"gok99"},"content":"| `* * *`  | Telemarketing Supervisor                | merge my employees\u0027 customer lists                       | easily view the contacts completion status of my subordinates                          |","lastModifiedDate":"2021-11-08"},{"lineNumber":863,"author":{"gitId":"lhw-1"},"content":"| `* * *`  | Telemarketing Supervisor                | export the list of customers                             | send the list to my subordinates for them to complete                                  |","lastModifiedDate":"2021-09-28"},{"lineNumber":864,"author":{"gitId":"lhw-1"},"content":"| `* * *`  | Telemarketer / Telemarketing Supervisor | save data from current session                           | save my current progress to continue during the next session                           |","lastModifiedDate":"2021-09-28"},{"lineNumber":865,"author":{"gitId":"lhw-1"},"content":"| `* * *`  | Telemarketer / Telemarketing Supervisor | load data from previous session                          | pick up where I left off from my previous session                                      |","lastModifiedDate":"2021-09-28"},{"lineNumber":866,"author":{"gitId":"lhw-1"},"content":"| `* * *`  | Telemarketer                            | indicate my name under \u0027profile\u0027                         | identify myself in progress reports for my supervisor                                  |","lastModifiedDate":"2021-10-12"},{"lineNumber":867,"author":{"gitId":"lhw-1"},"content":"| `* * *`  | Telemarketer / Telemarketing Supervisor | indicate my role under \u0027profile\u0027                         | get access to the functionalities that cater to my specific job                        |","lastModifiedDate":"2021-10-12"},{"lineNumber":868,"author":{"gitId":"lhw-1"},"content":"| `* * *`  | Telemarketer                            | mark a contact as completed                              | see that I have already called a contact successfully                                  |","lastModifiedDate":"2021-09-28"},{"lineNumber":869,"author":{"gitId":"gok99"},"content":"| `* * *`  | Telemarketer                            | click to copy the contact\u0027s phone number to my clipboard | easily transfer it to my calling app                                           |","lastModifiedDate":"2021-11-08"},{"lineNumber":870,"author":{"gitId":"gok99"},"content":"| `* * *`  | Telemarketer                            | add remarks to my contacts                               | store additional long-form information about specific contacts                         |","lastModifiedDate":"2021-11-08"},{"lineNumber":871,"author":{"gitId":"lhw-1"},"content":"| `* * *`  | Telemarketing Supervisor                | add a contact                                            | add contacts that need to be called by my subordinates                                 |","lastModifiedDate":"2021-09-28"},{"lineNumber":872,"author":{"gitId":"lhw-1"},"content":"| `* * *`  | Telemarketing Supervisor                | delete a contact                                         | remove contacts that no longer need to be tracked or have been added wrongly           |","lastModifiedDate":"2021-09-28"},{"lineNumber":873,"author":{"gitId":"gok99"},"content":"| `* * *`  | Telemarketer / Telemarketing Supervisor | view progress on the contacts in a simple chart          | so that I can easily get help whenever I need it without losing focus                  |","lastModifiedDate":"2021-11-08"},{"lineNumber":874,"author":{"gitId":"gok99"},"content":"| `* * *`  | Telemarketer / Telemarketing Supervisor | undo or redo previously made changes                     | revert any possible mistakes made                                                      |","lastModifiedDate":"2021-11-08"},{"lineNumber":875,"author":{"gitId":"gok99"},"content":"| `* * *`  | Telemarketer / Telemarketing Supervisor | tag contacts with additional information                 | get useful analytics on specific contacts and include useful information like assignee |","lastModifiedDate":"2021-11-08"},{"lineNumber":876,"author":{"gitId":"gok99"},"content":"| `* * *`  | Telemarketer / Telemarketing Supervisor | filter entries by tag                                    | focus my view of contacts                                                              |","lastModifiedDate":"2021-11-08"},{"lineNumber":877,"author":{"gitId":"gok99"},"content":"| `* *`    | Telemarketer / Telemarketing Supervisor | view the user guide from the app                         | easily get help whenever I need it without losing focus                                |","lastModifiedDate":"2021-11-08"},{"lineNumber":878,"author":{"gitId":"gok99"},"content":"| `* *`    | Telemarketer / Telemarketing Supervisor | use up-down arrows to access command history             | repeat previous commands without needed to type it out again                           |","lastModifiedDate":"2021-11-08"},{"lineNumber":879,"author":{"gitId":"gok99"},"content":"| `* *`    | Telemarketer / Telemarketing Supervisor | preview and confirm the contacts I\u0027m exporting           | reduce export mistakes                                                                 |","lastModifiedDate":"2021-11-08"},{"lineNumber":880,"author":{"gitId":"gok99"},"content":"| `*`      | Telemarketer / Telemarketing Supervisor | press tab to autofill recommended tags                   | quickly fill out flags without needing to check the user guide                         |","lastModifiedDate":"2021-11-08"},{"lineNumber":881,"author":{"gitId":"gok99"},"content":"| `*`      | Telemarketer / Telemarketing Supervisor | view my command history                                  | trace previously entered commands at a glance                                          |","lastModifiedDate":"2021-11-08"},{"lineNumber":882,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":883,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":884,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":885,"author":{"gitId":"lhw-1"},"content":"*{ More to be added as new features are introduced }*","lastModifiedDate":"2021-09-28"},{"lineNumber":886,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":887,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":888,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":889,"author":{"gitId":"lhw-1"},"content":"| Use Case ID  | Description                            |","lastModifiedDate":"2021-11-08"},{"lineNumber":890,"author":{"gitId":"lhw-1"},"content":"| -----------  | -------------------------------------- |","lastModifiedDate":"2021-11-08"},{"lineNumber":891,"author":{"gitId":"lhw-1"},"content":"| [UC01](#uc01-supervisor-adds-a-contact) |     Supervisor adds a contact                 |","lastModifiedDate":"2021-11-08"},{"lineNumber":892,"author":{"gitId":"lhw-1"},"content":"| [UC02](#uc02-supervisor-deletes-a-contact) |     Supervisor deletes a contact                      |","lastModifiedDate":"2021-11-08"},{"lineNumber":893,"author":{"gitId":"lhw-1"},"content":"| [UC03](#uc03-supervisor-tags-a-contact) |     Supervisor tags a contact                     |","lastModifiedDate":"2021-11-08"},{"lineNumber":894,"author":{"gitId":"lhw-1"},"content":"| [UC04](#uc04-telemarketer-sets-a-person-as-done) |      Telemarketer sets a person as done           |","lastModifiedDate":"2021-11-08"},{"lineNumber":895,"author":{"gitId":"lhw-1"},"content":"| [UC05](#uc05-telemarketer-adds-a-remark-to-a-person) |    Telemarketer adds a remark to a person |","lastModifiedDate":"2021-11-08"},{"lineNumber":896,"author":{"gitId":"lhw-1"},"content":"| [UC06](#uc06-telemarketer-imports-a-customer-list-from-supervisor) |    Telemarketer imports a customer list from supervisor          |","lastModifiedDate":"2021-11-08"},{"lineNumber":897,"author":{"gitId":"lhw-1"},"content":"| [UC07](#uc07-telemarketer-exports-a-customer-contact-file) |      Telemarketer exports a customer contact file                |","lastModifiedDate":"2021-11-08"},{"lineNumber":898,"author":{"gitId":"lhw-1"},"content":"| [UC08](#uc08-telemarketer-undoes-teletubbies) |     Telemarketer undoes Teletubbies   |","lastModifiedDate":"2021-11-08"},{"lineNumber":899,"author":{"gitId":"lhw-1"},"content":"| [UC09](#uc09-telemarketer-redoes-teletubbies) |       Telemarketer redoes Teletubbies           |","lastModifiedDate":"2021-11-08"},{"lineNumber":900,"author":{"gitId":"lhw-1"},"content":"| [UC10](#uc10-telemarketer-checks-command-history) |       Telemarketer checks Command History                   |","lastModifiedDate":"2021-11-08"},{"lineNumber":901,"author":{"gitId":"lhw-1"},"content":"| [UC11](#uc11-user-views-the-help-page) |     User views the help page                  |","lastModifiedDate":"2021-11-08"},{"lineNumber":902,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":903,"author":{"gitId":"skythefire"},"content":"For all use cases below, the **System** is the `Teletubbies` application, and the **Actor** is the user, unless specified otherwise.","lastModifiedDate":"2021-11-06"},{"lineNumber":904,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":905,"author":{"gitId":"lhw-1"},"content":"#### UC01: Supervisor adds a contact","lastModifiedDate":"2021-11-08"},{"lineNumber":906,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":907,"author":{"gitId":"lhw-1"},"content":"**MSS**","lastModifiedDate":"2021-11-08"},{"lineNumber":908,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":909,"author":{"gitId":"lhw-1"},"content":"1. User adds a contact.","lastModifiedDate":"2021-11-08"},{"lineNumber":910,"author":{"gitId":"lhw-1"},"content":"2. Teletubbies adds the contact to the contact list.","lastModifiedDate":"2021-11-08"},{"lineNumber":911,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":912,"author":{"gitId":"lhw-1"},"content":"   Use case ends.","lastModifiedDate":"2021-11-08"},{"lineNumber":913,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":914,"author":{"gitId":"lhw-1"},"content":"**Extensions**","lastModifiedDate":"2021-11-08"},{"lineNumber":915,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":916,"author":{"gitId":"lhw-1"},"content":"* 2a. Flags are missing for the command / Fields are invalid / Compulsory fields are empty.","lastModifiedDate":"2021-11-08"},{"lineNumber":917,"author":{"gitId":"lhw-1"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":918,"author":{"gitId":"lhw-1"},"content":"  * 2a1. Teletubbies shows an error message.","lastModifiedDate":"2021-11-08"},{"lineNumber":919,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":920,"author":{"gitId":"lhw-1"},"content":"    Use case ends.","lastModifiedDate":"2021-11-08"},{"lineNumber":921,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":922,"author":{"gitId":"lhw-1"},"content":"* 2b. There is an existing contact with the same phone number being added.","lastModifiedDate":"2021-11-08"},{"lineNumber":923,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":924,"author":{"gitId":"lhw-1"},"content":"  * 2b1. Teletubbies shows an error message.","lastModifiedDate":"2021-11-08"},{"lineNumber":925,"author":{"gitId":"lhw-1"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":926,"author":{"gitId":"lhw-1"},"content":"    Use case ends.","lastModifiedDate":"2021-11-08"},{"lineNumber":927,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":928,"author":{"gitId":"lhw-1"},"content":"*a. At any time, User chooses to undo [UC08](#uc08-telemarketer-undoes-teletubbies) or redo [UC09](#uc09-telemarketer-redoes-teletubbies).","lastModifiedDate":"2021-11-08"},{"lineNumber":929,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":930,"author":{"gitId":"lhw-1"},"content":"#### UC02: Supervisor deletes a contact","lastModifiedDate":"2021-11-08"},{"lineNumber":931,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":932,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":933,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":934,"author":{"gitId":"lhw-1"},"content":"1.  User requests to list contact.","lastModifiedDate":"2021-11-08"},{"lineNumber":935,"author":{"gitId":"lhw-1"},"content":"1.  Teletubbies shows a list of contacts.","lastModifiedDate":"2021-11-08"},{"lineNumber":936,"author":{"gitId":"lhw-1"},"content":"1.  User requests to delete a specific contact in the list.","lastModifiedDate":"2021-11-08"},{"lineNumber":937,"author":{"gitId":"lhw-1"},"content":"1.  Teletubbies deletes the contact.","lastModifiedDate":"2021-11-08"},{"lineNumber":938,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":939,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":940,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":941,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":942,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":943,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":944,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":945,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":946,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":947,"author":{"gitId":"lhw-1"},"content":"* 3a. The given index is invalid or the given phone number does not exist.","lastModifiedDate":"2021-11-08"},{"lineNumber":948,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":949,"author":{"gitId":"skythefire"},"content":"    * 3a1. Teletubbies shows an error message.","lastModifiedDate":"2021-10-21"},{"lineNumber":950,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":951,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":952,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":953,"author":{"gitId":"lhw-1"},"content":"*a. At any time, User chooses to undo [UC08](#uc08-telemarketer-undoes-teletubbies) or redo [UC09](#uc09-telemarketer-redoes-teletubbies).","lastModifiedDate":"2021-11-08"},{"lineNumber":954,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":955,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":956,"author":{"gitId":"lhw-1"},"content":"#### UC03: Supervisor tags a contact","lastModifiedDate":"2021-11-08"},{"lineNumber":957,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":958,"author":{"gitId":"lhw-1"},"content":"**MSS**","lastModifiedDate":"2021-11-08"},{"lineNumber":959,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":960,"author":{"gitId":"lhw-1"},"content":"1. User requests to list contact.","lastModifiedDate":"2021-11-08"},{"lineNumber":961,"author":{"gitId":"lhw-1"},"content":"2. Teletubbies shows a list of contacts.","lastModifiedDate":"2021-11-08"},{"lineNumber":962,"author":{"gitId":"lhw-1"},"content":"3. User requests to tag a specific contact with a name and value.","lastModifiedDate":"2021-11-08"},{"lineNumber":963,"author":{"gitId":"lhw-1"},"content":"4. Teletubbies tags the contact appropriately.","lastModifiedDate":"2021-11-08"},{"lineNumber":964,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":965,"author":{"gitId":"lhw-1"},"content":"    Use case ends.","lastModifiedDate":"2021-11-08"},{"lineNumber":966,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":967,"author":{"gitId":"lhw-1"},"content":"**Extensions**","lastModifiedDate":"2021-11-08"},{"lineNumber":968,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":969,"author":{"gitId":"lhw-1"},"content":"* 3a. Teletubbies detects an invalid user input in the tag command.","lastModifiedDate":"2021-11-08"},{"lineNumber":970,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":971,"author":{"gitId":"lhw-1"},"content":"  * 3a1. Teletubbies displays an error message.","lastModifiedDate":"2021-11-08"},{"lineNumber":972,"author":{"gitId":"lhw-1"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":973,"author":{"gitId":"lhw-1"},"content":"    Use case ends.","lastModifiedDate":"2021-11-08"},{"lineNumber":974,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":975,"author":{"gitId":"lhw-1"},"content":"*a. At any time, User chooses to undo [UC08](#uc08-telemarketer-undoes-teletubbies) or redo [UC09](#uc09-telemarketer-redoes-teletubbies).","lastModifiedDate":"2021-11-08"},{"lineNumber":976,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":977,"author":{"gitId":"lhw-1"},"content":"#### UC04: Telemarketer sets a person as done","lastModifiedDate":"2021-11-08"},{"lineNumber":978,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":979,"author":{"gitId":"lhw-1"},"content":"**MSS**","lastModifiedDate":"2021-11-08"},{"lineNumber":980,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":981,"author":{"gitId":"lhw-1"},"content":"1. User requests to mark a contact as done.","lastModifiedDate":"2021-11-08"},{"lineNumber":982,"author":{"gitId":"lhw-1"},"content":"2. Teletubbies sets the completed status of the contact as `COMPLETE`.","lastModifiedDate":"2021-11-08"},{"lineNumber":983,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":984,"author":{"gitId":"lhw-1"},"content":"    Use case ends.","lastModifiedDate":"2021-11-08"},{"lineNumber":985,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":986,"author":{"gitId":"lhw-1"},"content":"**Extensions**","lastModifiedDate":"2021-11-08"},{"lineNumber":987,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":988,"author":{"gitId":"lhw-1"},"content":"* 1a. The specified contact index is invalid.","lastModifiedDate":"2021-11-08"},{"lineNumber":989,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":990,"author":{"gitId":"lhw-1"},"content":"  * 1a1. Teletubbies shows an error message.","lastModifiedDate":"2021-11-08"},{"lineNumber":991,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":992,"author":{"gitId":"lhw-1"},"content":"    Use case resumes at step 1.","lastModifiedDate":"2021-11-08"},{"lineNumber":993,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":994,"author":{"gitId":"lhw-1"},"content":"*a. At any time, User chooses to undo [UC08](#uc08-telemarketer-undoes-teletubbies) or redo [UC09](#uc09-telemarketer-redoes-teletubbies).","lastModifiedDate":"2021-11-08"},{"lineNumber":995,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":996,"author":{"gitId":"lhw-1"},"content":"#### UC05: Telemarketer adds a remark to a person","lastModifiedDate":"2021-11-08"},{"lineNumber":997,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":998,"author":{"gitId":"lhw-1"},"content":"**MSS**","lastModifiedDate":"2021-11-08"},{"lineNumber":999,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1000,"author":{"gitId":"lhw-1"},"content":"1. User requests to add a remark to a contact.","lastModifiedDate":"2021-11-08"},{"lineNumber":1001,"author":{"gitId":"lhw-1"},"content":"2. Teletubbies adds the remark to the contact.","lastModifiedDate":"2021-11-08"},{"lineNumber":1002,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1003,"author":{"gitId":"lhw-1"},"content":"   Use case ends.","lastModifiedDate":"2021-11-08"},{"lineNumber":1004,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1005,"author":{"gitId":"lhw-1"},"content":"**Extensions**","lastModifiedDate":"2021-11-08"},{"lineNumber":1006,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1007,"author":{"gitId":"lhw-1"},"content":"* 1a. The specified contact index is invalid.","lastModifiedDate":"2021-11-08"},{"lineNumber":1008,"author":{"gitId":"lhw-1"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":1009,"author":{"gitId":"lhw-1"},"content":"  * 1a1. Teletubbies shows an error message.","lastModifiedDate":"2021-11-08"},{"lineNumber":1010,"author":{"gitId":"lhw-1"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":1011,"author":{"gitId":"lhw-1"},"content":"    Use case ends.","lastModifiedDate":"2021-11-08"},{"lineNumber":1012,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1013,"author":{"gitId":"lhw-1"},"content":"* 1b. The remark is over the 40 character limit.","lastModifiedDate":"2021-11-08"},{"lineNumber":1014,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1015,"author":{"gitId":"lhw-1"},"content":"  * 1b1. Teletubbies shows an error message.","lastModifiedDate":"2021-11-08"},{"lineNumber":1016,"author":{"gitId":"lhw-1"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":1017,"author":{"gitId":"lhw-1"},"content":"    Use case ends.","lastModifiedDate":"2021-11-08"},{"lineNumber":1018,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1019,"author":{"gitId":"lhw-1"},"content":"*a. At any time, User chooses the view help (UC11).","lastModifiedDate":"2021-11-08"},{"lineNumber":1020,"author":{"gitId":"lhw-1"},"content":"*b. At any time, User chooses to undo [UC08](#uc08-telemarketer-undoes-teletubbies) or redo [UC09](#uc09-telemarketer-redoes-teletubbies).","lastModifiedDate":"2021-11-08"},{"lineNumber":1021,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1022,"author":{"gitId":"lhw-1"},"content":"#### UC06: Telemarketer imports a customer list from supervisor","lastModifiedDate":"2021-11-08"},{"lineNumber":1023,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":1024,"author":{"gitId":"gok99"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":1025,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":1026,"author":{"gitId":"tanqiya"},"content":"1. User starts up the Teletubbies desktop application.","lastModifiedDate":"2021-10-19"},{"lineNumber":1027,"author":{"gitId":"tanqiya"},"content":"2. User selects and imports the JSON file containing the list of contacts for the shift from a file location.","lastModifiedDate":"2021-10-19"},{"lineNumber":1028,"author":{"gitId":"tanqiya"},"content":"3. Teletubbies displays the imported contacts.","lastModifiedDate":"2021-10-19"},{"lineNumber":1029,"author":{"gitId":"lhw-1"},"content":"4. User copies a customer’s contact number and makes the phone call.","lastModifiedDate":"2021-11-08"},{"lineNumber":1030,"author":{"gitId":"lhw-1"},"content":"5. User marks the customer as completed.","lastModifiedDate":"2021-11-08"},{"lineNumber":1031,"author":{"gitId":"tanqiya"},"content":"6. Teletubbies saves the file and displays that the call for the contact is completed.","lastModifiedDate":"2021-10-19"},{"lineNumber":1032,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":1033,"author":{"gitId":"gok99"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":1034,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":1035,"author":{"gitId":"gok99"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":1036,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":1037,"author":{"gitId":"tanqiya"},"content":"* 3a. Teletubbies does not detect a JSON file in the specified file path.","lastModifiedDate":"2021-10-19"},{"lineNumber":1038,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":1039,"author":{"gitId":"lhw-1"},"content":"    * 3a1. Teletubbies displays a message prompting the Telemarketer to try importing the JSON file again.","lastModifiedDate":"2021-11-08"},{"lineNumber":1040,"author":{"gitId":"lhw-1"},"content":"    * 3a2. Telemarketer imports a JSON file containing the customers’ details.","lastModifiedDate":"2021-11-08"},{"lineNumber":1041,"author":{"gitId":"gok99"},"content":"  ","lastModifiedDate":"2021-09-28"},{"lineNumber":1042,"author":{"gitId":"lhw-1"},"content":"      Steps 3a1 to 3a2 are repeated until a valid JSON file is selected.","lastModifiedDate":"2021-11-08"},{"lineNumber":1043,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":1044,"author":{"gitId":"lhw-1"},"content":"      Use case resumes from step 4.","lastModifiedDate":"2021-11-08"},{"lineNumber":1045,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":1046,"author":{"gitId":"tanqiya"},"content":"* 3b. Teletubbies detects that the JSON file selected is not in the correct format.","lastModifiedDate":"2021-10-19"},{"lineNumber":1047,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":1048,"author":{"gitId":"tanqiya"},"content":"    * 3b1. Teletubbies displays a message informing the Telemarketer that the file is not in the correct format.","lastModifiedDate":"2021-10-19"},{"lineNumber":1049,"author":{"gitId":"lhw-1"},"content":"    * 3b2. Telemarketer informs their Supervisor about the error.","lastModifiedDate":"2021-11-08"},{"lineNumber":1050,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":1051,"author":{"gitId":"tanqiya"},"content":"      Use case ends.","lastModifiedDate":"2021-10-19"},{"lineNumber":1052,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":1053,"author":{"gitId":"lhw-1"},"content":"* 5a. Teletubbies detects that the index used in the command is invalid.","lastModifiedDate":"2021-11-08"},{"lineNumber":1054,"author":{"gitId":"lhw-1"},"content":"    * 5a1. Teletubbies displays a message to inform Telemarketer about the input error.","lastModifiedDate":"2021-11-08"},{"lineNumber":1055,"author":{"gitId":"lhw-1"},"content":"    * 5a2. Telemarketer re-enters the command with a correct index number for the contact.","lastModifiedDate":"2021-11-08"},{"lineNumber":1056,"author":{"gitId":"gok99"},"content":"      ","lastModifiedDate":"2021-09-28"},{"lineNumber":1057,"author":{"gitId":"lhw-1"},"content":"      Steps 5a1 to 5a2 are repeated until a valid customer phone number is input.","lastModifiedDate":"2021-11-08"},{"lineNumber":1058,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":1059,"author":{"gitId":"gok99"},"content":"      Use case resumes from step 6.","lastModifiedDate":"2021-09-28"},{"lineNumber":1060,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":1061,"author":{"gitId":"lhw-1"},"content":"*a. At any time, User chooses to undo [UC08](#uc08-telemarketer-undoes-teletubbies) or redo [UC09](#uc09-telemarketer-redoes-teletubbies).","lastModifiedDate":"2021-11-08"},{"lineNumber":1062,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1063,"author":{"gitId":"lhw-1"},"content":"#### UC07: Telemarketer exports a customer contact file","lastModifiedDate":"2021-11-08"},{"lineNumber":1064,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1065,"author":{"gitId":"lhw-1"},"content":"**MSS**","lastModifiedDate":"2021-11-08"},{"lineNumber":1066,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1067,"author":{"gitId":"lhw-1"},"content":"1. User enters the `export` command.","lastModifiedDate":"2021-11-08"},{"lineNumber":1068,"author":{"gitId":"lhw-1"},"content":"2. Teletubbies requests for confirmation for export.","lastModifiedDate":"2021-11-08"},{"lineNumber":1069,"author":{"gitId":"lhw-1"},"content":"3. User confirms request to export.","lastModifiedDate":"2021-11-08"},{"lineNumber":1070,"author":{"gitId":"lhw-1"},"content":"4. Teletubbies opens the file chooser window.","lastModifiedDate":"2021-11-08"},{"lineNumber":1071,"author":{"gitId":"lhw-1"},"content":"5. User selects a directory to export to.","lastModifiedDate":"2021-11-08"},{"lineNumber":1072,"author":{"gitId":"lhw-1"},"content":"6. Teletubbies exports the customer contact list.","lastModifiedDate":"2021-11-08"},{"lineNumber":1073,"author":{"gitId":"lhw-1"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":1074,"author":{"gitId":"lhw-1"},"content":"   Use case ends.","lastModifiedDate":"2021-11-08"},{"lineNumber":1075,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1076,"author":{"gitId":"lhw-1"},"content":"**Extensions**","lastModifiedDate":"2021-11-08"},{"lineNumber":1077,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1078,"author":{"gitId":"lhw-1"},"content":"* 1a. User chooses to export contacts with a specific tag.","lastModifiedDate":"2021-11-08"},{"lineNumber":1079,"author":{"gitId":"lhw-1"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":1080,"author":{"gitId":"lhw-1"},"content":"  * 1a1. Teletubbies displays the contact list with the specified tags.","lastModifiedDate":"2021-11-08"},{"lineNumber":1081,"author":{"gitId":"lhw-1"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":1082,"author":{"gitId":"lhw-1"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2021-11-08"},{"lineNumber":1083,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1084,"author":{"gitId":"lhw-1"},"content":"* 3a. User enters an invalid command.","lastModifiedDate":"2021-11-08"},{"lineNumber":1085,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1086,"author":{"gitId":"lhw-1"},"content":"  * 3a1. Teletubbies cancels the request to export.","lastModifiedDate":"2021-11-08"},{"lineNumber":1087,"author":{"gitId":"lhw-1"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":1088,"author":{"gitId":"lhw-1"},"content":"    Use case ends.","lastModifiedDate":"2021-11-08"},{"lineNumber":1089,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1090,"author":{"gitId":"lhw-1"},"content":"*a. At any time, User chooses to undo [UC08](#uc08-telemarketer-undoes-teletubbies) or redo [UC09](#uc09-telemarketer-redoes-teletubbies).","lastModifiedDate":"2021-11-08"},{"lineNumber":1091,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1092,"author":{"gitId":"lhw-1"},"content":"#### UC08: Telemarketer undoes Teletubbies","lastModifiedDate":"2021-11-08"},{"lineNumber":1093,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1094,"author":{"gitId":"lhw-1"},"content":"**MSS**","lastModifiedDate":"2021-11-08"},{"lineNumber":1095,"author":{"gitId":"lhw-1"},"content":"1. User enters the `undo` command.","lastModifiedDate":"2021-11-08"},{"lineNumber":1096,"author":{"gitId":"lhw-1"},"content":"2. Teletubbies undoes to the previous state.","lastModifiedDate":"2021-11-08"},{"lineNumber":1097,"author":{"gitId":"lhw-1"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":1098,"author":{"gitId":"lhw-1"},"content":"   Use case ends.","lastModifiedDate":"2021-11-08"},{"lineNumber":1099,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1100,"author":{"gitId":"lhw-1"},"content":"**Extensions**","lastModifiedDate":"2021-11-08"},{"lineNumber":1101,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1102,"author":{"gitId":"lhw-1"},"content":"* 1a. Teletubbies is in its earliest possible state.","lastModifiedDate":"2021-11-08"},{"lineNumber":1103,"author":{"gitId":"lhw-1"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":1104,"author":{"gitId":"lhw-1"},"content":"  * 1a1. Teletubbies shows an error message:  “Teletubbies is currently at its earliest version and cannot be reverted.”.","lastModifiedDate":"2021-11-08"},{"lineNumber":1105,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1106,"author":{"gitId":"lhw-1"},"content":"*a. At any time, User chooses to undo [UC08](#uc08-telemarketer-undoes-teletubbies) or redo [UC09](#uc09-telemarketer-redoes-teletubbies).","lastModifiedDate":"2021-11-08"},{"lineNumber":1107,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1108,"author":{"gitId":"lhw-1"},"content":"#### UC09: Telemarketer redoes Teletubbies","lastModifiedDate":"2021-11-08"},{"lineNumber":1109,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1110,"author":{"gitId":"lhw-1"},"content":"**MSS**","lastModifiedDate":"2021-11-08"},{"lineNumber":1111,"author":{"gitId":"lhw-1"},"content":"1. User enters the `redo` command.","lastModifiedDate":"2021-11-08"},{"lineNumber":1112,"author":{"gitId":"lhw-1"},"content":"2. Teletubbies redoes to the previously undone state.","lastModifiedDate":"2021-11-08"},{"lineNumber":1113,"author":{"gitId":"lhw-1"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":1114,"author":{"gitId":"lhw-1"},"content":"   Use case ends.","lastModifiedDate":"2021-11-08"},{"lineNumber":1115,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1116,"author":{"gitId":"lhw-1"},"content":"**Extensions**","lastModifiedDate":"2021-11-08"},{"lineNumber":1117,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1118,"author":{"gitId":"lhw-1"},"content":"* 1a. Teletubbies is in its latest possible state.","lastModifiedDate":"2021-11-08"},{"lineNumber":1119,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1120,"author":{"gitId":"lhw-1"},"content":"  * 1a1. Teletubbies shows an error message:  “Teletubbies is currently at its latest version and cannot be redone.”.","lastModifiedDate":"2021-11-08"},{"lineNumber":1121,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1122,"author":{"gitId":"lhw-1"},"content":"*a. At any time, User chooses to undo [UC08](#uc08-telemarketer-undoes-teletubbies) or redo [UC09](#uc09-telemarketer-redoes-teletubbies).","lastModifiedDate":"2021-11-08"},{"lineNumber":1123,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1124,"author":{"gitId":"lhw-1"},"content":"#### UC10: Telemarketer checks Command History","lastModifiedDate":"2021-11-08"},{"lineNumber":1125,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1126,"author":{"gitId":"lhw-1"},"content":"**MSS**","lastModifiedDate":"2021-11-08"},{"lineNumber":1127,"author":{"gitId":"lhw-1"},"content":"1. User enters the `history` command.","lastModifiedDate":"2021-11-08"},{"lineNumber":1128,"author":{"gitId":"lhw-1"},"content":"2. Teletubbies shows the recently keyed-in commands in chronologically-reverse order, with the latest command at the top after history.","lastModifiedDate":"2021-11-08"},{"lineNumber":1129,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1130,"author":{"gitId":"lhw-1"},"content":"   Use case ends.","lastModifiedDate":"2021-11-08"},{"lineNumber":1131,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1132,"author":{"gitId":"lhw-1"},"content":"**Extensions**","lastModifiedDate":"2021-11-08"},{"lineNumber":1133,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1134,"author":{"gitId":"lhw-1"},"content":"*a. At any time, User chooses to undo [UC08](#uc08-telemarketer-undoes-teletubbies) or redo [UC09](#uc09-telemarketer-redoes-teletubbies).","lastModifiedDate":"2021-11-08"},{"lineNumber":1135,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1136,"author":{"gitId":"lhw-1"},"content":"#### UC11: User views the help page","lastModifiedDate":"2021-11-08"},{"lineNumber":1137,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1138,"author":{"gitId":"lhw-1"},"content":"**MSS**","lastModifiedDate":"2021-11-08"},{"lineNumber":1139,"author":{"gitId":"lhw-1"},"content":"1. User enters the help command.","lastModifiedDate":"2021-11-08"},{"lineNumber":1140,"author":{"gitId":"lhw-1"},"content":"2. Teletubbies displays the user guide in a web view.","lastModifiedDate":"2021-11-08"},{"lineNumber":1141,"author":{"gitId":"lhw-1"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":1142,"author":{"gitId":"lhw-1"},"content":"    Use case ends.","lastModifiedDate":"2021-11-08"},{"lineNumber":1143,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1144,"author":{"gitId":"lhw-1"},"content":"**Extensions**","lastModifiedDate":"2021-11-08"},{"lineNumber":1145,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1146,"author":{"gitId":"lhw-1"},"content":"*a. At any time, User chooses to undo [UC08](#uc08-telemarketer-undoes-teletubbies) or redo [UC09](#uc09-telemarketer-redoes-teletubbies).","lastModifiedDate":"2021-11-08"},{"lineNumber":1147,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":1148,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":1149,"author":{"gitId":"skythefire"},"content":"1. New telemarketers should be able to easily use the application. (**Quality requirement**)","lastModifiedDate":"2021-10-21"},{"lineNumber":1150,"author":{"gitId":"skythefire"},"content":"2. The application should save and load data fast, and startup should take a few seconds at the most. (**Performance requirement / Response time**)","lastModifiedDate":"2021-10-21"},{"lineNumber":1151,"author":{"gitId":"skythefire"},"content":"3. Data should be saved frequently and automatically to allow for easy recovery on possible crashes. (**Disaster recovery**)","lastModifiedDate":"2021-10-21"},{"lineNumber":1152,"author":{"gitId":"skythefire"},"content":"4. The product should work on all OS, and both 32-bit and 64-bit environments. (**Technical / Environment requirement**)","lastModifiedDate":"2021-10-21"},{"lineNumber":1153,"author":{"gitId":"skythefire"},"content":"5. The application should be able to efficiently (without a noticeable slowdown) handle standard operations (add, delete, search, etc) for up to 10,000 users. (**Data requirement**, ie. volatility)","lastModifiedDate":"2021-10-21"},{"lineNumber":1154,"author":{"gitId":"skythefire"},"content":"6. The product project is expected to adhere to a schedule that delivers a feature set every two weeks. (**Process requirements**)","lastModifiedDate":"2021-10-21"},{"lineNumber":1155,"author":{"gitId":"skythefire"},"content":"7. The product is not required to handle in-app sharing of data across users on different devices. (**Project scope**)","lastModifiedDate":"2021-10-21"},{"lineNumber":1156,"author":{"gitId":"skythefire"},"content":"8. The product should be available for potential testers to test the capabilities of the product / find any bugs or issues. (**Testability**)","lastModifiedDate":"2021-10-21"},{"lineNumber":1157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1158,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":1159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1160,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":1161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1162,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":1163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1164,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":1165,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":1166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1167,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1169,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":1170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1171,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":1172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1173,"author":{"gitId":"tanqiya"},"content":"1. Download the [jar file](https://github.com/AY2122S1-CS2103T-W15-4/tp/releases) and copy into an empty folder","lastModifiedDate":"2021-10-19"},{"lineNumber":1174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1175,"author":{"gitId":"-"},"content":"1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":1176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1177,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":1178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1179,"author":{"gitId":"-"},"content":"1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":1180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1181,"author":{"gitId":"-"},"content":"1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1182,"author":{"gitId":"-"},"content":"   Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":1183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1184,"author":{"gitId":"gok99"},"content":"### Managing contacts","lastModifiedDate":"2021-11-08"},{"lineNumber":1185,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1186,"author":{"gitId":"gok99"},"content":"#### Deleting a contact","lastModifiedDate":"2021-11-08"},{"lineNumber":1187,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1188,"author":{"gitId":"gok99"},"content":"1. Deleting a contact with the correct command format, **by referencing their index while all persons are being shown**","lastModifiedDate":"2021-11-08"},{"lineNumber":1189,"author":{"gitId":"gok99"},"content":"   1. Prerequisites: List all contacts using the `list` command. Multiple contacts in the list.","lastModifiedDate":"2021-11-08"},{"lineNumber":1190,"author":{"gitId":"gok99"},"content":"   2. Test case: `delete -i 1`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1191,"author":{"gitId":"gok99"},"content":"      * Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Pie chart will be updated to reflect the progress of the updated contact list.","lastModifiedDate":"2021-11-08"},{"lineNumber":1192,"author":{"gitId":"gok99"},"content":"   3. Test case: `delete -i 0`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1193,"author":{"gitId":"gok99"},"content":"      * Expected: No contact is deleted. Error details shown in the status message. Pie chart remains the same","lastModifiedDate":"2021-11-08"},{"lineNumber":1194,"author":{"gitId":"gok99"},"content":"   4. Other incorrect delete commands to try: `delete`, `delete -i x`, `...` (where `x` is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1195,"author":{"gitId":"gok99"},"content":"      * Expected: Similar to previous.","lastModifiedDate":"2021-11-08"},{"lineNumber":1196,"author":{"gitId":"gok99"},"content":"2. Deleting a contact with the correct command format, **by referencing their phone number** while all contacts are being shown","lastModifiedDate":"2021-11-08"},{"lineNumber":1197,"author":{"gitId":"gok99"},"content":"   1. Prerequisites: List all contacts using the list command, Multiple contacts in the list.","lastModifiedDate":"2021-11-08"},{"lineNumber":1198,"author":{"gitId":"gok99"},"content":"   2. Test case: `delete -p 87654321`","lastModifiedDate":"2021-11-08"},{"lineNumber":1199,"author":{"gitId":"gok99"},"content":"      * Expected: Assuming a contact with phone number 87654321 exists, that contact is deleted from the list. Details of the deleted contact shown in the status message. Pie chart will be updated to reflect the progress of the updated contact list.","lastModifiedDate":"2021-11-08"},{"lineNumber":1200,"author":{"gitId":"gok99"},"content":"   3. Test case: `delete -p 11111111`","lastModifiedDate":"2021-11-08"},{"lineNumber":1201,"author":{"gitId":"gok99"},"content":"      * Expected: Assuming a contact with phone number 11111111 does not exist, no contact is deleted. Pie chart remains the same.","lastModifiedDate":"2021-11-08"},{"lineNumber":1202,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1203,"author":{"gitId":"gok99"},"content":"#### Adding a contact","lastModifiedDate":"2021-11-08"},{"lineNumber":1204,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1205,"author":{"gitId":"gok99"},"content":"1. Adding a contact with the correct command format","lastModifiedDate":"2021-11-08"},{"lineNumber":1206,"author":{"gitId":"gok99"},"content":"    1. Prerequisites: None.","lastModifiedDate":"2021-11-08"},{"lineNumber":1207,"author":{"gitId":"gok99"},"content":"    2. Test case: `add -n John Doe -p 87654321`","lastModifiedDate":"2021-11-08"},{"lineNumber":1208,"author":{"gitId":"gok99"},"content":"       * Expected: A contact named “John Doe” with phone number 87654321 will be added into the contact list. The pie chart will be updated to reflect the progress of the updated contact list.","lastModifiedDate":"2021-11-08"},{"lineNumber":1209,"author":{"gitId":"gok99"},"content":"    3. Test case: `add -n Albert Saw -p 98765432 -e albertsaw@gmail.com -a Tampines Street 23, Block 777, #05-12`","lastModifiedDate":"2021-11-08"},{"lineNumber":1210,"author":{"gitId":"gok99"},"content":"       * Expected: A contact named “Albert Saw” with phone number 98765432, email address “albertsaw@gmail.com” and address “Tampines Street 23, Block 777, #05-12","lastModifiedDate":"2021-11-08"},{"lineNumber":1211,"author":{"gitId":"gok99"},"content":"       “ will be added into the contact list.","lastModifiedDate":"2021-11-08"},{"lineNumber":1212,"author":{"gitId":"gok99"},"content":"2. Adding a contact with an incorrect command format","lastModifiedDate":"2021-11-08"},{"lineNumber":1213,"author":{"gitId":"gok99"},"content":"    1. Prerequisites: None.","lastModifiedDate":"2021-11-08"},{"lineNumber":1214,"author":{"gitId":"gok99"},"content":"    1. Test case: `add -n John Doe -e johndoe@gmail.com`","lastModifiedDate":"2021-11-08"},{"lineNumber":1215,"author":{"gitId":"gok99"},"content":"       * Expected: No contact is added. Error details are shown in the status message.","lastModifiedDate":"2021-11-08"},{"lineNumber":1216,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1217,"author":{"gitId":"gok99"},"content":"#### Editing a contact","lastModifiedDate":"2021-11-08"},{"lineNumber":1218,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1219,"author":{"gitId":"gok99"},"content":"1. Editing a contact with the correct command format","lastModifiedDate":"2021-11-08"},{"lineNumber":1220,"author":{"gitId":"gok99"},"content":"    1. Prerequisites: List all contacts using the list command, Multiple contacts in the list","lastModifiedDate":"2021-11-08"},{"lineNumber":1221,"author":{"gitId":"gok99"},"content":"    1. Test case: `edit 1 -n Regina Phalange -p 999`","lastModifiedDate":"2021-11-08"},{"lineNumber":1222,"author":{"gitId":"gok99"},"content":"       * Expected: The first contact in the list has name set to “Regina Phalange” and phone\tnumber 999","lastModifiedDate":"2021-11-08"},{"lineNumber":1223,"author":{"gitId":"gok99"},"content":"1. Editing a contact with an incorrect command format (wrong email format)","lastModifiedDate":"2021-11-08"},{"lineNumber":1224,"author":{"gitId":"gok99"},"content":"    1. Prerequisites: List all contacts using the list command, Multiple contacts in the list","lastModifiedDate":"2021-11-08"},{"lineNumber":1225,"author":{"gitId":"gok99"},"content":"    1. Test case: `edit 1 -e help@`","lastModifiedDate":"2021-11-08"},{"lineNumber":1226,"author":{"gitId":"gok99"},"content":"       * Expected: Error message detailing correct expected email format","lastModifiedDate":"2021-11-08"},{"lineNumber":1227,"author":{"gitId":"gok99"},"content":"1. Editing a contact with an incorrect command format (wrong phone number format)","lastModifiedDate":"2021-11-08"},{"lineNumber":1228,"author":{"gitId":"gok99"},"content":"    1. Prerequisites: List all contacts using the list command, Multiple contacts in the list","lastModifiedDate":"2021-11-08"},{"lineNumber":1229,"author":{"gitId":"gok99"},"content":"    1. Test case: `edit 1 -p 99`","lastModifiedDate":"2021-11-08"},{"lineNumber":1230,"author":{"gitId":"gok99"},"content":"       * Expected: Error message explaining phone number should be at least 3 digits long","lastModifiedDate":"2021-11-08"},{"lineNumber":1231,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1232,"author":{"gitId":"gok99"},"content":"#### Adding a remark to a contact","lastModifiedDate":"2021-11-08"},{"lineNumber":1233,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1234,"author":{"gitId":"gok99"},"content":"1. Adding a remark to a contact with the correct command format (with `-r` flag)","lastModifiedDate":"2021-11-08"},{"lineNumber":1235,"author":{"gitId":"gok99"},"content":"    1. Prerequisites: List all contacts using the list command, Multiple contacts in the list","lastModifiedDate":"2021-11-08"},{"lineNumber":1236,"author":{"gitId":"gok99"},"content":"    2. Test case: `remark 1 -r Need to call back`","lastModifiedDate":"2021-11-08"},{"lineNumber":1237,"author":{"gitId":"gok99"},"content":"       * Expected:  A remark “Need to call back” is added to the first contact in the list.","lastModifiedDate":"2021-11-08"},{"lineNumber":1238,"author":{"gitId":"gok99"},"content":"    3. Test case: `remark 1 -r `","lastModifiedDate":"2021-11-08"},{"lineNumber":1239,"author":{"gitId":"gok99"},"content":"       * Expected: Assuming that the contact has an existing remark, the existing remark is removed from the contact.","lastModifiedDate":"2021-11-08"},{"lineNumber":1240,"author":{"gitId":"gok99"},"content":"2. Adding a remark to a contact with the correct command format (with no `-r` flag)","lastModifiedDate":"2021-11-08"},{"lineNumber":1241,"author":{"gitId":"gok99"},"content":"    1. Prerequisites: List all contacts using the list command, Multiple contacts in the list, contact at index 1 with remark: ‘Call back at 2pm’","lastModifiedDate":"2021-11-08"},{"lineNumber":1242,"author":{"gitId":"gok99"},"content":"    2. Test case: remark 1 ","lastModifiedDate":"2021-11-08"},{"lineNumber":1243,"author":{"gitId":"gok99"},"content":"       * Expected: A message is shown that the remark has been removed from the first person on the contact list.","lastModifiedDate":"2021-11-08"},{"lineNumber":1244,"author":{"gitId":"gok99"},"content":"    3. Test case: `remark 1 remark`","lastModifiedDate":"2021-11-08"},{"lineNumber":1245,"author":{"gitId":"gok99"},"content":"       * Expected: Error message about command format","lastModifiedDate":"2021-11-08"},{"lineNumber":1246,"author":{"gitId":"gok99"},"content":"3. Other incorrect remark commands to try: `remark `, `remark  -r x`, `...` (where `x` is larger than the list size or a negative number)\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":1247,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1248,"author":{"gitId":"gok99"},"content":"#### Tagging and removing tag from contact","lastModifiedDate":"2021-11-08"},{"lineNumber":1249,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1250,"author":{"gitId":"gok99"},"content":"1. Adding a tag to a range of contacts with the correct command format","lastModifiedDate":"2021-11-08"},{"lineNumber":1251,"author":{"gitId":"gok99"},"content":"    1. Prerequisites: List all contacts using the list command, At least 6 contacts in the list","lastModifiedDate":"2021-11-08"},{"lineNumber":1252,"author":{"gitId":"gok99"},"content":"    2. Test case: `tag 1-4 -n Assignee -v Ken`","lastModifiedDate":"2021-11-08"},{"lineNumber":1253,"author":{"gitId":"gok99"},"content":"       * Expected: A success message with the first 4 contacts in the list with the `Assignee: Ken` tag","lastModifiedDate":"2021-11-08"},{"lineNumber":1254,"author":{"gitId":"gok99"},"content":"    3. Other correct inputs to try:","lastModifiedDate":"2021-11-08"},{"lineNumber":1255,"author":{"gitId":"gok99"},"content":"       1. Comma separated indices (e.g. `tag 1,2,3,4 -n Assignee -v Ken`)","lastModifiedDate":"2021-11-08"},{"lineNumber":1256,"author":{"gitId":"gok99"},"content":"       2. Range with single value (e.g. `tag 1 -n Assignee -v Ken`)","lastModifiedDate":"2021-11-08"},{"lineNumber":1257,"author":{"gitId":"gok99"},"content":"       3. Name and no value (e.g. tag 1-4 -n IMPORTANT)","lastModifiedDate":"2021-11-08"},{"lineNumber":1258,"author":{"gitId":"gok99"},"content":"2. Adding a tag with incorrect command format (with value and no name)","lastModifiedDate":"2021-11-08"},{"lineNumber":1259,"author":{"gitId":"gok99"},"content":"    1. Prerequisites: List all contacts using the list command, Non-empty contact list","lastModifiedDate":"2021-11-08"},{"lineNumber":1260,"author":{"gitId":"gok99"},"content":"    1. Test case: `tag 1 -v TEST`","lastModifiedDate":"2021-11-08"},{"lineNumber":1261,"author":{"gitId":"gok99"},"content":"       * Expected: Error message about command format","lastModifiedDate":"2021-11-08"},{"lineNumber":1262,"author":{"gitId":"gok99"},"content":"3. Removing a tag from a range of contacts with correct command format (with name and value)","lastModifiedDate":"2021-11-08"},{"lineNumber":1263,"author":{"gitId":"gok99"},"content":"    1. Prerequisites: List all contacts using the list command, Contact list must be of length at least 6, and contacts at index 1, 3, and 5 with the tag `priority:IMPORTANT`","lastModifiedDate":"2021-11-08"},{"lineNumber":1264,"author":{"gitId":"gok99"},"content":"    1. Test case: `tagrm 1-6 -n priority -v IMPORTANT`","lastModifiedDate":"2021-11-08"},{"lineNumber":1265,"author":{"gitId":"gok99"},"content":"       * Expected: No contact from index 1 to 6 (inclusive) should have the `priority: IMPORTANT` tag","lastModifiedDate":"2021-11-08"},{"lineNumber":1266,"author":{"gitId":"gok99"},"content":"4. Removing a tag from a range of contacts with correct command format (with name and no value)","lastModifiedDate":"2021-11-08"},{"lineNumber":1267,"author":{"gitId":"gok99"},"content":"    1. Prerequisites: List all contacts using the list command, Contact list must be of length at least 6, with the contacts at index 1, 3, and 5 with the tag `priority:IMPORTANT`, and contact at index 2 with the tag `priority: LOW`","lastModifiedDate":"2021-11-08"},{"lineNumber":1268,"author":{"gitId":"gok99"},"content":"    1. Test case: `tagrm 1-6 -n priority`","lastModifiedDate":"2021-11-08"},{"lineNumber":1269,"author":{"gitId":"gok99"},"content":"       * Expected: No contact from index 1 to 6 (inclusive) should have a tag with the name `important`, including `priority: IMPORTANT` and `priority: LOW`.","lastModifiedDate":"2021-11-08"},{"lineNumber":1270,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1271,"author":{"gitId":"gok99"},"content":"### Setting Profile","lastModifiedDate":"2021-11-08"},{"lineNumber":1272,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1273,"author":{"gitId":"gok99"},"content":"1. Setting the user profile with the correct command format","lastModifiedDate":"2021-11-08"},{"lineNumber":1274,"author":{"gitId":"gok99"},"content":"    1. Prerequisites: None.","lastModifiedDate":"2021-11-08"},{"lineNumber":1275,"author":{"gitId":"gok99"},"content":"    1. Note: Between test cases for the `profile` command, set the field `isProfileSet` to false in the `preferences.json` file, which can be found in the same folder as `teletubbies.jar`.","lastModifiedDate":"2021-11-08"},{"lineNumber":1276,"author":{"gitId":"gok99"},"content":"    1. Test case: `profile -n John Doe -role Telemarketer`","lastModifiedDate":"2021-11-08"},{"lineNumber":1277,"author":{"gitId":"gok99"},"content":"       * Expected: A success message showing the user’s newly set name and role","lastModifiedDate":"2021-11-08"},{"lineNumber":1278,"author":{"gitId":"gok99"},"content":"    1. Test case: `profile -n John Boe -role Supervisor`","lastModifiedDate":"2021-11-08"},{"lineNumber":1279,"author":{"gitId":"gok99"},"content":"       * Expected: A success message showing the user’s newly set name and role","lastModifiedDate":"2021-11-08"},{"lineNumber":1280,"author":{"gitId":"gok99"},"content":"    1. Test case: `profile -n -role Telemarketer`","lastModifiedDate":"2021-11-08"},{"lineNumber":1281,"author":{"gitId":"gok99"},"content":"       * Expected: A success message showing the user’s newly set name (empty) and role","lastModifiedDate":"2021-11-08"},{"lineNumber":1282,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1283,"author":{"gitId":"gok99"},"content":"### Importing, Exporting and Merging contacts","lastModifiedDate":"2021-11-08"},{"lineNumber":1284,"author":{"gitId":"gok99"},"content":"1. If you have been using the app prior to this, exit the app and delete the contacts file `[JAR file location]/data/teletubbies.json`.","lastModifiedDate":"2021-11-08"},{"lineNumber":1285,"author":{"gitId":"gok99"},"content":"2. Launch the Teletubbies app by double-clicking the jar file.","lastModifiedDate":"2021-11-08"},{"lineNumber":1286,"author":{"gitId":"gok99"},"content":"3. Export contacts with a specified tag","lastModifiedDate":"2021-11-08"},{"lineNumber":1287,"author":{"gitId":"gok99"},"content":"   1. Prerequisites: Contacts list contains the sample data set.","lastModifiedDate":"2021-11-08"},{"lineNumber":1288,"author":{"gitId":"gok99"},"content":"   2. Test case: `export -t ProductB`","lastModifiedDate":"2021-11-08"},{"lineNumber":1289,"author":{"gitId":"gok99"},"content":"      * Expected: The contact list would contain contacts that have the tag “ProductB”. There would also be a message requesting user confirmation for export.","lastModifiedDate":"2021-11-08"},{"lineNumber":1290,"author":{"gitId":"gok99"},"content":"   3. Test case: `y` (continued)","lastModifiedDate":"2021-11-08"},{"lineNumber":1291,"author":{"gitId":"gok99"},"content":"      * Expected: File chooser window opens.","lastModifiedDate":"2021-11-08"},{"lineNumber":1292,"author":{"gitId":"gok99"},"content":"   4. Test case: Choose a file location and name file","lastModifiedDate":"2021-11-08"},{"lineNumber":1293,"author":{"gitId":"gok99"},"content":"      * Expected: A success message showing that the export was successful. Original contact list is displayed","lastModifiedDate":"2021-11-08"},{"lineNumber":1294,"author":{"gitId":"gok99"},"content":"4. Import contacts from a file","lastModifiedDate":"2021-11-08"},{"lineNumber":1295,"author":{"gitId":"gok99"},"content":"   1. Prerequisite: Completed the Export test case above or have a correctly formatted contact data file","lastModifiedDate":"2021-11-08"},{"lineNumber":1296,"author":{"gitId":"gok99"},"content":"   2. Test case: `import`","lastModifiedDate":"2021-11-08"},{"lineNumber":1297,"author":{"gitId":"gok99"},"content":"      * Expected: File chooser window opens.","lastModifiedDate":"2021-11-08"},{"lineNumber":1298,"author":{"gitId":"gok99"},"content":"   3. Test case: Choose the file to import","lastModifiedDate":"2021-11-08"},{"lineNumber":1299,"author":{"gitId":"gok99"},"content":"      * Expected: A success message showing that the import was successful. Contact list is updated with contacts from the imported file.","lastModifiedDate":"2021-11-08"},{"lineNumber":1300,"author":{"gitId":"gok99"},"content":"5. Merge contacts from a file","lastModifiedDate":"2021-11-08"},{"lineNumber":1301,"author":{"gitId":"gok99"},"content":"   1. Prerequisite: Contact list has a few contacts. Export a subset of the contacts and make changes to the JSON file (E.g. change their particulars) ensuring that the JSON formatting remains correct","lastModifiedDate":"2021-11-08"},{"lineNumber":1302,"author":{"gitId":"gok99"},"content":"   2. Test case: `merge`","lastModifiedDate":"2021-11-08"},{"lineNumber":1303,"author":{"gitId":"gok99"},"content":"      * Expected: File chooser window opens.","lastModifiedDate":"2021-11-08"},{"lineNumber":1304,"author":{"gitId":"gok99"},"content":"   3. Test case: Choose the file to merge","lastModifiedDate":"2021-11-08"},{"lineNumber":1305,"author":{"gitId":"gok99"},"content":"      * Expected: A success message showing that the merge was successful. Contacts that were originally in the list are updated with the changes made in the merged list. Contacts that were not in the merged list remain unchanged.","lastModifiedDate":"2021-11-08"},{"lineNumber":1306,"author":{"gitId":"gok99"},"content":"   4. Other incorrect commands to try: Closing the file selector window","lastModifiedDate":"2021-11-08"},{"lineNumber":1307,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1308,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1309,"author":{"gitId":"gok99"},"content":"### `undo` / `redo`","lastModifiedDate":"2021-11-08"},{"lineNumber":1310,"author":{"gitId":"gok99"},"content":"1. If you have been using the application before this, exit the app","lastModifiedDate":"2021-11-08"},{"lineNumber":1311,"author":{"gitId":"gok99"},"content":"2. Launch the application by double-clicking on the jar file.","lastModifiedDate":"2021-11-08"},{"lineNumber":1312,"author":{"gitId":"lhw-1"},"content":"    1. Prerequisites: None.","lastModifiedDate":"2021-11-08"},{"lineNumber":1313,"author":{"gitId":"lhw-1"},"content":"    2. Test case: `undo`","lastModifiedDate":"2021-11-08"},{"lineNumber":1314,"author":{"gitId":"gok99"},"content":"        * Expected: An error message which says “Teletubbies is currently at its earliest version and cannot be reverted.”","lastModifiedDate":"2021-11-08"},{"lineNumber":1315,"author":{"gitId":"lhw-1"},"content":"    3. Test case: Clear the Teletubbies application by pressing `clear` and type `undo`","lastModifiedDate":"2021-11-08"},{"lineNumber":1316,"author":{"gitId":"gok99"},"content":"       * Expected: The application reverts back to the state before the `clear` command was input.","lastModifiedDate":"2021-11-08"},{"lineNumber":1317,"author":{"gitId":"lhw-1"},"content":"    4. Test case: `undo`","lastModifiedDate":"2021-11-08"},{"lineNumber":1318,"author":{"gitId":"gok99"},"content":"        * Expected: An error message which says “Teletubbies is currently at its earliest version and cannot be reverted.”","lastModifiedDate":"2021-11-08"},{"lineNumber":1319,"author":{"gitId":"gok99"},"content":"    5. Test case: `redo`","lastModifiedDate":"2021-11-08"},{"lineNumber":1320,"author":{"gitId":"lhw-1"},"content":"        * Expected: The empty teletubbies application which was present after `clear`","lastModifiedDate":"2021-11-08"},{"lineNumber":1321,"author":{"gitId":"lhw-1"},"content":"    6. Test case: `redo`","lastModifiedDate":"2021-11-08"},{"lineNumber":1322,"author":{"gitId":"gok99"},"content":"        * Expected: An error message which says “Teletubbies is currently at its latest version and cannot be redone.”","lastModifiedDate":"2021-11-08"},{"lineNumber":1323,"author":{"gitId":"lhw-1"},"content":"    7. Test case: Enter 3 unique commands of either `add`, `delete`, `tag`, `done`, `remark` and take note of the order. These are some of the Contact Commands that you can type to modify contacts","lastModifiedDate":"2021-11-08"},{"lineNumber":1324,"author":{"gitId":"gok99"},"content":"   Key in `undo` 3 times, and after each `undo` is keyed in, verify that the state corresponds with the state from before.","lastModifiedDate":"2021-11-08"},{"lineNumber":1325,"author":{"gitId":"gok99"},"content":"        * Expected: All states are verified to be accurate","lastModifiedDate":"2021-11-08"},{"lineNumber":1326,"author":{"gitId":"lhw-1"},"content":"    8. Test case: Enter one command of either `add`, `delete`, `tag`, `done` or `remark` and ensure that a previous command was not keyed in.","lastModifiedDate":"2021-11-08"},{"lineNumber":1327,"author":{"gitId":"gok99"},"content":"   Key in `undo` twice. ","lastModifiedDate":"2021-11-08"},{"lineNumber":1328,"author":{"gitId":"gok99"},"content":"        * Expected: The first `undo` command would return a Teletubbies state which corresponds to the state it was in when it originally started. The second `undo` command should return an error message which says “Teletubbies is currently at it\u0027s earliest version and cannot be reverted.”","lastModifiedDate":"2021-11-08"},{"lineNumber":1329,"author":{"gitId":"lhw-1"},"content":"    9. Test case: Enter `redo` twice","lastModifiedDate":"2021-11-08"},{"lineNumber":1330,"author":{"gitId":"gok99"},"content":"        * Expected: The first `redo` command returns the Teletubbies state which was present after 7a was executed. The second `redo` command should return an error message which says “Teletubbies is currently at it\u0027s latest version and cannot be redone.”","lastModifiedDate":"2021-11-08"},{"lineNumber":1331,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1332,"author":{"gitId":"gok99"},"content":"### `history`","lastModifiedDate":"2021-11-08"},{"lineNumber":1333,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1334,"author":{"gitId":"gok99"},"content":"1. Prerequisite: Enter at least 5 commands after starting up the application and remember the order in which the commands were keyed in.","lastModifiedDate":"2021-11-08"},{"lineNumber":1335,"author":{"gitId":"gok99"},"content":"2. Test case: Key in `history`","lastModifiedDate":"2021-11-08"},{"lineNumber":1336,"author":{"gitId":"gok99"},"content":"   * Expected: a list of commands keyed in chronologically descending order, with history at the top.","lastModifiedDate":"2021-11-08"},{"lineNumber":1337,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1338,"author":{"gitId":"gok99"},"content":"### Key bindings ([UP], [DOWN] and [TAB])","lastModifiedDate":"2021-11-08"},{"lineNumber":1339,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1340,"author":{"gitId":"gok99"},"content":"1. [UP], and [DOWN] arrows keys to navigate command history","lastModifiedDate":"2021-11-08"},{"lineNumber":1341,"author":{"gitId":"gok99"},"content":"    1. Prerequisite: Enter at least 5 unique commands after starting up the application","lastModifiedDate":"2021-11-08"},{"lineNumber":1342,"author":{"gitId":"gok99"},"content":"    2. Test case: Pressing the [UP] and [DOWN] keys in some order, making sure to press [UP] more than 5 times, and [DOWN] more than 5 times in a row","lastModifiedDate":"2021-11-08"},{"lineNumber":1343,"author":{"gitId":"gok99"},"content":"       * Expected: The command box text should correspond with the appropriate commands in the command history (viewable with the `history` command). [UP] should show a previous command and [DOWN] should show a later command. If the first command is showing [UP] should not change the command box text. If the last command is showing, [DOWN] should not change the command box text.","lastModifiedDate":"2021-11-08"},{"lineNumber":1344,"author":{"gitId":"gok99"},"content":"1. [TAB] key to autocomplete command flags","lastModifiedDate":"2021-11-08"},{"lineNumber":1345,"author":{"gitId":"gok99"},"content":"    1. Test case: Type the command `add` (or another command) and press [TAB]","lastModifiedDate":"2021-11-08"},{"lineNumber":1346,"author":{"gitId":"gok99"},"content":"       * Expected: The command box text should show the command word, with the recommended flags. For add, it should show: `add -n -p -e -a`","lastModifiedDate":"2021-11-08"},{"lineNumber":1347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1348,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":1349,"author":{"gitId":"lhw-1"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-08"},{"lineNumber":1350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1351,"author":{"gitId":"lhw-1"},"content":"## **Appendix: Effort**","lastModifiedDate":"2021-11-08"},{"lineNumber":1352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1353,"author":{"gitId":"lhw-1"},"content":"Teletubbies started out as a brownfield project that extended from AB3, and aimed to evolve it into an optimized contact manager application for a specific target audience (i.e. Telemarketers and Telemarketing supervisors).","lastModifiedDate":"2021-11-08"},{"lineNumber":1354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1355,"author":{"gitId":"lhw-1"},"content":"Our team has put in a significant amount of effort during the development of Teletubbies. We currently have a total of over [10,000 lines of code contributed](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dW15-4\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17), and over 300 automated tests.","lastModifiedDate":"2021-11-08"},{"lineNumber":1356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1357,"author":{"gitId":"lhw-1"},"content":"Through the development period, we have made significant progress in terms of new features and enhancements. Listed below are the achievements of our brownfield project, and the challenges that we faced during development.","lastModifiedDate":"2021-11-08"},{"lineNumber":1358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1359,"author":{"gitId":"lhw-1"},"content":"### Project Achievements \u0026 Challenges","lastModifiedDate":"2021-11-08"},{"lineNumber":1360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1361,"author":{"gitId":"lhw-1"},"content":"1. **Enhancement of the CLI**","lastModifiedDate":"2021-11-08"},{"lineNumber":1362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1363,"author":{"gitId":"lhw-1"},"content":"As Teletubbies is a CLI-based application, we implemented various enhancements to the CLI, including:","lastModifiedDate":"2021-11-08"},{"lineNumber":1364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1365,"author":{"gitId":"lhw-1"},"content":"* Ability to view command history","lastModifiedDate":"2021-11-08"},{"lineNumber":1366,"author":{"gitId":"lhw-1"},"content":"* Ability to access previous / next commands in the command history through **up** and **down** arrows","lastModifiedDate":"2021-11-08"},{"lineNumber":1367,"author":{"gitId":"lhw-1"},"content":"* Ability to auto-complete commands","lastModifiedDate":"2021-11-08"},{"lineNumber":1368,"author":{"gitId":"lhw-1"},"content":"* Ability to `undo` and `redo` commands","lastModifiedDate":"2021-11-08"},{"lineNumber":1369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1370,"author":{"gitId":"lhw-1"},"content":"The functionality of these commands were highly influenced by UNIX CLI. While the implementation of the command history and auto-complete features were not as complex, they nevertheless posed a moderate amount of challenge as we had to implement them from scratch.","lastModifiedDate":"2021-11-08"},{"lineNumber":1371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1372,"author":{"gitId":"lhw-1"},"content":"Moreover, the implementations of `undo` and `redo` commands were more complex than we initially thought, as we wanted the undo and redo features to revert back any changes made to the application as a whole. Hence, we had to develop a way to store the state for the entire application and manage the different stored states over a single session, which took some time to even conceptualise (with discussions on various edge cases), and posed a significant challenge to implement.","lastModifiedDate":"2021-11-08"},{"lineNumber":1373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1374,"author":{"gitId":"lhw-1"},"content":"2. **Enhancement of the GUI**","lastModifiedDate":"2021-11-08"},{"lineNumber":1375,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1376,"author":{"gitId":"lhw-1"},"content":"While Teletubbies is a CLI-based application, it nevertheless uses a GUI for the users to interact with. Hence, we implemented various enhancements to the GUI as well:","lastModifiedDate":"2021-11-08"},{"lineNumber":1377,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1378,"author":{"gitId":"lhw-1"},"content":"* Overhaul of the GUI","lastModifiedDate":"2021-11-08"},{"lineNumber":1379,"author":{"gitId":"lhw-1"},"content":"* Ability to view progress of each contact as a progress bar","lastModifiedDate":"2021-11-08"},{"lineNumber":1380,"author":{"gitId":"lhw-1"},"content":"* Ability to view the aggregate progress of the entire contact list as a pie chart","lastModifiedDate":"2021-11-08"},{"lineNumber":1381,"author":{"gitId":"lhw-1"},"content":"* Ability to copy the phone number from a contact using a clipboard button","lastModifiedDate":"2021-11-08"},{"lineNumber":1382,"author":{"gitId":"lhw-1"},"content":"* Ability to view the User Guide in a web view directly from the application","lastModifiedDate":"2021-11-08"},{"lineNumber":1383,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1384,"author":{"gitId":"lhw-1"},"content":"The first GUI change that was made was the `help` feature. The original AB3 application simply had the help button show a copyable link to the User Guide, which was not very user-friendly. Hence, we decided to implement a web view of the User Guide within the application itself, as it seemed to be rather straightforward. However, this posed challenges not in terms of the actual implementation, but rather in terms of understanding the JavaFX mechanics, and as a result we spent some time on trying to resolve some JavaFX-related issues.","lastModifiedDate":"2021-11-08"},{"lineNumber":1385,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1386,"author":{"gitId":"lhw-1"},"content":"As an app that tracks progress of each contact within a list of contacts, we also decided that the ability to view individual contact progress and the total progress over the current contact list as part of the GUI would be crucial. Hence, we implemented a progress bar and a pie chart respectively, which again posed some level of challenge in terms of learning the JavaFX architecture and the syntax, but was not overly complex to implement. Finally, in order to seamlessly incorporate these features into our application, we had to overhaul the GUI layout in order to fit these features in.","lastModifiedDate":"2021-11-08"},{"lineNumber":1387,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1388,"author":{"gitId":"lhw-1"},"content":"3. **Implementation of Teletubbies-specific Features**","lastModifiedDate":"2021-11-08"},{"lineNumber":1389,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1390,"author":{"gitId":"lhw-1"},"content":"* Ability to `import` / `export` / `merge` contact lists in JSON format","lastModifiedDate":"2021-11-08"},{"lineNumber":1391,"author":{"gitId":"lhw-1"},"content":"* Ability to set user profile","lastModifiedDate":"2021-11-08"},{"lineNumber":1392,"author":{"gitId":"lhw-1"},"content":"* Reworked tagging system separate from the `add` and `edit` commands","lastModifiedDate":"2021-11-08"},{"lineNumber":1393,"author":{"gitId":"lhw-1"},"content":"* Ability to add remarks to contacts","lastModifiedDate":"2021-11-08"},{"lineNumber":1394,"author":{"gitId":"lhw-1"},"content":"* Ability to `filter` the list based on tags","lastModifiedDate":"2021-11-08"},{"lineNumber":1395,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1396,"author":{"gitId":"lhw-1"},"content":"The main challenge we faced when transforming AB3 into Teletubbies was the interaction of the contact list data with the application itself. Hence, we had to spend a considerable amount of time discussing the architecture and the implementation of the `import` / `export` features, and eventually, we decided to expand the `import` feature into two separate features: `import` and `merge`.","lastModifiedDate":"2021-11-08"},{"lineNumber":1397,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1398,"author":{"gitId":"lhw-1"},"content":"Apart from the interaction of the application with the data files, we also reworked the existing systems and added in features that were Teletubbies-specific, such as the newly reworked tagging system that uses the `tag` and `tagrm` commands instead of the `add` and `edit` commands, the ability to add remarks to contacts via the `remark` command, filtering based on tags, and the ability for the user to set a profile that would determine the functionalities that the user has access to. The implementation for all these features also took some considerable amount of discussion and collaboration in order to ensure that all the features worked together seamlessly.","lastModifiedDate":"2021-11-08"},{"lineNumber":1399,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1400,"author":{"gitId":"skythefire"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-06"},{"lineNumber":1401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1402,"author":{"gitId":"gok99"},"content":"## References ","lastModifiedDate":"2021-11-08"},{"lineNumber":1403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":1404,"author":{"gitId":"gok99"},"content":"The [Commands with UI effects](#commands-with-ui-effects) section was in part adapted from the Developer\u0027s Guide of","lastModifiedDate":"2021-11-08"},{"lineNumber":1405,"author":{"gitId":"gok99"},"content":"[CoLAB](https://ay2021s2-cs2103t-t11-2.github.io/tp/) from AY20/21 since their product had a feature involving very ","lastModifiedDate":"2021-11-08"},{"lineNumber":1406,"author":{"gitId":"gok99"},"content":"similar implementation considerations and diagrams.","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"vigneshsankariyer1234567890":231,"skythefire":90,"tanqiya":99,"gok99":337,"-":278,"lhw-1":371}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"   1. Run the `teletubbies.Main` and try a few commands.","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"gok99":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"   e.g. `teletubbies.commons.StringUtilTest`","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"   e.g. `teletubbies.storage.StorageManagerTest`","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"   e.g. `teletubbies.logic.LogicManagerTest`","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"gok99":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"## Product Overview","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"tanqiya"},"content":"*Teletubbies* is a **desktop app developed and designed for telemarketers and telemarketing supervisors to manage their","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"tanqiya"},"content":"customer contacts**. *Teletubbies* allows users to create a checklist based on a set of customer contact data, with additional","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"features such as tagging and viewing statistics to help improve their workflow. It is optimized for use via a","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast,","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"Teletubbies can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"tanqiya"},"content":"## Table of Contents","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"tanqiya"},"content":"## How to navigate through this User Guide","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"The purpose of this User Guide is to familiarize some of the features of Teletubbies and create a seamless user experience for you. Telemarketers and telemarketer supervisors (such as yourselves) can peruse through the User Guide and try out some of the features available!","lastModifiedDate":"2021-11-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"This User Guide for *Teletubbies* is written with chronological navigation in mind. Users can scroll through","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"the document to navigate from section to section. If you are new to *Teletubbies*, we recommend that you take this","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"tanqiya"},"content":"approach for an introduction to the features.","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"tanqiya"},"content":"For more experienced users who know what they are looking for and want to quickly jump to a specific section, you can move to your section of choice using the [Table of Contents](#table-of-contents), or from the [Command Summary](#command-summary) section if you are interested in learning about the usage of a specific command.","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"tanqiya"},"content":"Alternatively, you may use the Windows shortcut **Ctrl + F** or the Mac shortcut **Command + F** to find specific keywords.","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"skythefire"},"content":"### Glossary of definitions","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"skythefire"},"content":"**_Command-line Interface (CLI)_**: A user interface that allows users to interact with a system through text commands.","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"skythefire"},"content":"**_Graphical User Interface (GUI)_**: A user interface that allows users to interact with a system through graphical icons.","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"skythefire"},"content":"**_JavaScript Object Notation (JSON)_**: A text-based representation of structured data that is used to save contacts as files in *Teletubbies*.","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"lhw-1"},"content":"**_Parameter_**: Input to a command\u0027s field.","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"lhw-1"},"content":"### Glossary of icons and symbols","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"lhw-1"},"content":":information_source: : Additional information \u003cbr/\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"lhw-1"},"content":":bulb: : Tip \u003cbr/\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"lhw-1"},"content":":exclamation: : Important \u003cbr/\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"lhw-1"},"content":":x: : Error / Avoid \u003cbr/\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"lhw-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"skythefire"},"content":"**:information_source: Information block**\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"lhw-1"},"content":"* We use these blocks to enhance the readability of this guide!","lastModifiedDate":"2021-10-30"},{"lineNumber":55,"author":{"gitId":"lhw-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":56,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"lhw-1"},"content":"\u003e Quotes are used to explain examples for commands.","lastModifiedDate":"2021-10-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":61,"author":{"gitId":"gok99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"tanqiya"},"content":"1. Ensure you have Java `11` or above installed on your Computer. Please refer to [this article](https://www.codejava.net/java-se/download-and-install-java-11-openjdk-and-oracle-jdk)","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"lhw-1"},"content":"   for more information on how to install Java `11`.","lastModifiedDate":"2021-10-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"lhw-1"},"content":"2. Download the latest `teletubbies.jar` from [here](https://github.com/AY2122S1-CS2103T-W15-4/tp/releases).","lastModifiedDate":"2021-10-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"tanqiya"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your *Teletubbies* app.","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"skythefire"},"content":"4. Double-click the file to start the app. A GUI similar to below should appear in a few seconds. Note how the app contains some sample data.","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"lhw-1"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2021-10-30"},{"lineNumber":75,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":76,"author":{"gitId":"tanqiya"},"content":"5. Type the command in the command box and press Enter to execute it.","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"tanqiya"},"content":"\u003e E.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"lhw-1"},"content":"* `list`: Lists all contacts.","lastModifiedDate":"2021-10-30"},{"lineNumber":82,"author":{"gitId":"skythefire"},"content":"* `add -n John Doe -p 87654321`: Adds a contact named `John Doe` to *Teletubbies*, with the phone number 87654321.","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"lhw-1"},"content":"* `delete -i 3`: Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2021-10-30"},{"lineNumber":84,"author":{"gitId":"lhw-1"},"content":"* `done 3`: Marks the 3rd contact shown in the current list as done.","lastModifiedDate":"2021-10-30"},{"lineNumber":85,"author":{"gitId":"lhw-1"},"content":"* `clear`: Deletes all contacts.","lastModifiedDate":"2021-10-30"},{"lineNumber":86,"author":{"gitId":"lhw-1"},"content":"* `exit`: Exits the app.","lastModifiedDate":"2021-10-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"tanqiya"},"content":"6. Refer to the [Features](#features) section for details of each command.","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"gok99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":93,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":94,"author":{"gitId":"lhw-1"},"content":"## Command summary","lastModifiedDate":"2021-10-30"},{"lineNumber":95,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"tanqiya"},"content":"These are all the available commands in *Teletubbies*.","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":98,"author":{"gitId":"tanqiya"},"content":"To navigate to the section for each command, click on the hyperlinked commands in the left column.","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"lhw-1"},"content":"The sections outline the detailed usage and examples for each of the command.","lastModifiedDate":"2021-10-30"},{"lineNumber":100,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":101,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"We divided and categorised all of our features into these 4 categories in order to give you a bird’s eye view of some of the features available! You can peek into [System commands](#system-commands) to take a look at some of the system-level features available such as [help](#viewing-help-help) and [import](#importing-contacts-import). [Contact commands](#contact-commands) includes all the commands which allow you to modify the contacts in your contact list, while [List commands](#list-commands) includes commands to modify the list of contacts.","lastModifiedDate":"2021-11-11"},{"lineNumber":102,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":103,"author":{"gitId":"skythefire"},"content":"System commands | Format","lastModifiedDate":"2021-11-06"},{"lineNumber":104,"author":{"gitId":"lhw-1"},"content":"--------|------------------","lastModifiedDate":"2021-10-30"},{"lineNumber":105,"author":{"gitId":"skythefire"},"content":"**[help](#viewing-help-help)** | `help`","lastModifiedDate":"2021-11-08"},{"lineNumber":106,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"**[profile](#setting-your-profile-profile)** | `profile -n NAME -role ROLE`","lastModifiedDate":"2021-11-11"},{"lineNumber":107,"author":{"gitId":"skythefire"},"content":"**[import](#importing-contacts-import)** | `import`","lastModifiedDate":"2021-11-08"},{"lineNumber":108,"author":{"gitId":"skythefire"},"content":"**[merge](#merging-contacts-merge)** | `merge`","lastModifiedDate":"2021-11-08"},{"lineNumber":109,"author":{"gitId":"lhw-1"},"content":"**[export](#exporting-contacts-export)** | `export [-t TAGS]…​`","lastModifiedDate":"2021-10-30"},{"lineNumber":110,"author":{"gitId":"skythefire"},"content":"**[history](#listing-your-previous-commands-history)** | `history`","lastModifiedDate":"2021-11-08"},{"lineNumber":111,"author":{"gitId":"skythefire"},"content":"**[undo](#undoing-your-previous-commands-undo)** | `undo`","lastModifiedDate":"2021-11-08"},{"lineNumber":112,"author":{"gitId":"skythefire"},"content":"**[redo](#redoing-your-previous-commands-redo)** | `redo`","lastModifiedDate":"2021-11-08"},{"lineNumber":113,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"**[clear](#clearing-all-entries-clear)** | `clear`","lastModifiedDate":"2021-11-11"},{"lineNumber":114,"author":{"gitId":"skythefire"},"content":"**[exit](#exiting-the-program-exit)** | `exit`","lastModifiedDate":"2021-11-08"},{"lineNumber":115,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":116,"author":{"gitId":"skythefire"},"content":"Contact commands | Format","lastModifiedDate":"2021-11-06"},{"lineNumber":117,"author":{"gitId":"skythefire"},"content":"--------|------------------","lastModifiedDate":"2021-11-06"},{"lineNumber":118,"author":{"gitId":"lhw-1"},"content":"**[add](#adding-a-contact-add)** | `add -n NAME -p PHONE_NUMBER [-a ADDRESS] [-e EMAIL]`","lastModifiedDate":"2021-10-30"},{"lineNumber":119,"author":{"gitId":"skythefire"},"content":"**[delete](#deleting-a-contact-delete)** | `delete -p PHONE_NUMBER` or `delete -i INDEX`","lastModifiedDate":"2021-11-08"},{"lineNumber":120,"author":{"gitId":"skythefire"},"content":"**[edit](#editing-a-contact-edit)** | `edit INDEX [-n NAME] [-p PHONE] [-e EMAIL] [-a ADDRESS]`","lastModifiedDate":"2021-11-08"},{"lineNumber":121,"author":{"gitId":"lhw-1"},"content":"**[done](#marking-a-contact-as-completed-done)** | `done INDEX [STATUS]`","lastModifiedDate":"2021-10-30"},{"lineNumber":122,"author":{"gitId":"lhw-1"},"content":"**[tag](#tagging-contacts-tag)** | `tag INDEX -n TAGNAME [-v VALUE] [-s]`","lastModifiedDate":"2021-10-30"},{"lineNumber":123,"author":{"gitId":"lhw-1"},"content":"**[tagrm](#removing-tags-from-contacts-tagrm)** | `tagrm INDEX -n TAGNAME [-v VALUE]`","lastModifiedDate":"2021-10-30"},{"lineNumber":124,"author":{"gitId":"lhw-1"},"content":"**[tag \u003cbr\u003e(multiple contacts)](#tagging-and-removing-tags-from-multiple-contacts)** | `tag INDEX [,INDEX]…​ -n TAGNAME [-v VALUE] [-s]` \u003cbr\u003e `tag START-END -n TAGNAME [-v VALUE] [-s]`","lastModifiedDate":"2021-10-30"},{"lineNumber":125,"author":{"gitId":"lhw-1"},"content":"**[tagrm \u003cbr\u003e(multiple contacts)](#tagging-and-removing-tags-from-multiple-contacts)** | `tagrm INDEX [,INDEX]…​ -n TAGNAME [-v VALUE]` \u003cbr\u003e `tagrm START-END -n TAGNAME [-v VALUE]`","lastModifiedDate":"2021-10-30"},{"lineNumber":126,"author":{"gitId":"skythefire"},"content":"**[remark](#adding-a-remark-to-a-contact-remark)** | `remark INDEX -r REMARK`","lastModifiedDate":"2021-11-08"},{"lineNumber":127,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":128,"author":{"gitId":"skythefire"},"content":"List commands | Format","lastModifiedDate":"2021-11-06"},{"lineNumber":129,"author":{"gitId":"skythefire"},"content":"--------|------------------","lastModifiedDate":"2021-11-06"},{"lineNumber":130,"author":{"gitId":"skythefire"},"content":"**[list](#listing-all-contacts-list)** | `list`","lastModifiedDate":"2021-11-08"},{"lineNumber":131,"author":{"gitId":"lhw-1"},"content":"**[find](#locating-contacts-by-name-find)** | `find KEYWORD [KEYWORD]…​`","lastModifiedDate":"2021-10-30"},{"lineNumber":132,"author":{"gitId":"lhw-1"},"content":"**[filter](#filtering-contact-list-filter)** | `filter -t TAGNAME[:TAGVALUE] [-t TAGNAME[:TAGVALUE]]…​ `","lastModifiedDate":"2021-10-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"gok99"},"content":"  e.g. in `add -n NAME`, `NAME` is a parameter which can be used as `add -n John Doe`.","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"tanqiya"},"content":"  e.g. `-n NAME [-t TAG]` can be used as `-n John Doe -t friend` or as `-n John Doe`.","lastModifiedDate":"2021-11-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"tanqiya"},"content":"* Items with `…`​ after them can be used multiple times or left blank.\u003cbr\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":145,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  e.g. `[-t TAG]…​` can be used as ` ` (i.e. 0 times), `-t friend`, `-t friend -t family` etc.","lastModifiedDate":"2021-11-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"gok99"},"content":"  e.g. if the command specifies `-n NAME -p PHONE_NUMBER`, `-p PHONE_NUMBER -n NAME` is also acceptable.","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":151,"author":{"gitId":"gok99"},"content":"  e.g. if you specify `-p 12341234 -p 56785678`, only `-p 56785678` will be taken.","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":156,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"lhw-1"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-30"},{"lineNumber":159,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":160,"author":{"gitId":"lhw-1"},"content":"## Features","lastModifiedDate":"2021-10-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":162,"author":{"gitId":"tanqiya"},"content":"Features and corresponding commands have been categorised into:","lastModifiedDate":"2021-11-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":164,"author":{"gitId":"lhw-1"},"content":"1. [System commands](#system-commands)","lastModifiedDate":"2021-10-30"},{"lineNumber":165,"author":{"gitId":"lhw-1"},"content":"2. [Contact commands](#contact-commands)","lastModifiedDate":"2021-10-30"},{"lineNumber":166,"author":{"gitId":"lhw-1"},"content":"3. [List commands](#list-commands)","lastModifiedDate":"2021-10-30"},{"lineNumber":167,"author":{"gitId":"lhw-1"},"content":"4. [Other features](#other-features)","lastModifiedDate":"2021-10-30"},{"lineNumber":168,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":169,"author":{"gitId":"lhw-1"},"content":"### System commands","lastModifiedDate":"2021-10-30"},{"lineNumber":170,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":171,"author":{"gitId":"gok99"},"content":"These commands are related to the *Teletubbies* application as a whole. The commands available are:","lastModifiedDate":"2021-11-06"},{"lineNumber":172,"author":{"gitId":"skythefire"},"content":"* [`help`](#viewing-help-help)","lastModifiedDate":"2021-11-08"},{"lineNumber":173,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* [`profile`](#setting-your-profile-profile)","lastModifiedDate":"2021-11-11"},{"lineNumber":174,"author":{"gitId":"skythefire"},"content":"* [`import`](#importing-contacts-import)","lastModifiedDate":"2021-11-08"},{"lineNumber":175,"author":{"gitId":"skythefire"},"content":"* [`merge`](#merging-contacts-merge)","lastModifiedDate":"2021-11-08"},{"lineNumber":176,"author":{"gitId":"skythefire"},"content":"* [`export`](#exporting-contacts-export)","lastModifiedDate":"2021-10-31"},{"lineNumber":177,"author":{"gitId":"skythefire"},"content":"* [`history`](#listing-your-previous-commands-history)","lastModifiedDate":"2021-11-08"},{"lineNumber":178,"author":{"gitId":"skythefire"},"content":"* [`undo`](#undoing-your-previous-commands-undo)","lastModifiedDate":"2021-11-08"},{"lineNumber":179,"author":{"gitId":"skythefire"},"content":"* [`redo`](#redoing-your-previous-commands-redo)","lastModifiedDate":"2021-11-08"},{"lineNumber":180,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* [`clear`](#clearing-all-entries-clear)","lastModifiedDate":"2021-11-11"},{"lineNumber":181,"author":{"gitId":"skythefire"},"content":"* [`exit`](#exiting-the-program-exit)","lastModifiedDate":"2021-11-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"gok99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":184,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":185,"author":{"gitId":"lhw-1"},"content":"#### Viewing help: `help`","lastModifiedDate":"2021-10-30"},{"lineNumber":186,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":187,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Upon entering the `help` command, another window pops up with our comprehensive User Guide (as shown below) which you can read by scrolling up and down!","lastModifiedDate":"2021-11-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"lhw-1"},"content":"![helpPage](images/userGuide/helpPage.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"gok99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":194,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":195,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"#### Setting your profile: `profile`","lastModifiedDate":"2021-11-11"},{"lineNumber":196,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":197,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"The `profile` command will help you to set your user profile for *Teletubbies*.","lastModifiedDate":"2021-11-11"},{"lineNumber":198,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":199,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"In *Teletubbies*, your user profile consists of your **name** and **role**.","lastModifiedDate":"2021-11-11"},{"lineNumber":200,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":201,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Your **name** should be the name that you use in the workplace, so that","lastModifiedDate":"2021-11-11"},{"lineNumber":202,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"you can be identifiable by your co-workers and supervisors.","lastModifiedDate":"2021-11-11"},{"lineNumber":203,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":204,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Your **role** should be according to your job scope:","lastModifiedDate":"2021-11-11"},{"lineNumber":205,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":206,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* If your job is a telemarketing job, and you want to be able to view your customers","lastModifiedDate":"2021-11-11"},{"lineNumber":207,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  in an organised list and keep track of your progress, then your role is `Telemarketer`.","lastModifiedDate":"2021-11-11"},{"lineNumber":208,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* If your job involves keeping track of progress for telemarketers under you, then","lastModifiedDate":"2021-11-11"},{"lineNumber":209,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  your role is `Supervisor`.","lastModifiedDate":"2021-11-11"},{"lineNumber":210,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":211,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"The reason we specify your **role** is so that *Teletubbies* can better accommodate your needs","lastModifiedDate":"2021-11-11"},{"lineNumber":212,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"by providing you with the suitable features tailored to your needs.","lastModifiedDate":"2021-11-11"},{"lineNumber":213,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":214,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Once you set your profile up with the `profile` command, you should be good to go!","lastModifiedDate":"2021-11-11"},{"lineNumber":215,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":216,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Format: `profile -n NAME -role ROLE`","lastModifiedDate":"2021-11-11"},{"lineNumber":217,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":218,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Examples:","lastModifiedDate":"2021-11-11"},{"lineNumber":219,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* `profile -n David Wong -role Telemarketer`","lastModifiedDate":"2021-11-11"},{"lineNumber":220,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003e This command will set your name as \"David Wong\" and your role as \"Telemarketer\".","lastModifiedDate":"2021-11-11"},{"lineNumber":221,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* `profile -n Anne Goh -role Supervisor`","lastModifiedDate":"2021-11-11"},{"lineNumber":222,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003e This command will set your name as \"Anne Goh\" and your role as \"Supervisor\".","lastModifiedDate":"2021-11-11"},{"lineNumber":223,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* `profile -n -role Telemarketer`","lastModifiedDate":"2021-11-11"},{"lineNumber":224,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003e This command will set your role as \"Telemarketer\".","lastModifiedDate":"2021-11-11"},{"lineNumber":225,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":226,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":228,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"**:information_source: Note:**\u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":230,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Teletubbies provides the option for users to leave their names as empty, but it is highly recommended for you to set your name for identification purposes.","lastModifiedDate":"2021-11-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":232,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Additionally, the `profile` command can only be used to set up your user profile once. To modify your name or role, please follow the steps [here](#faq).","lastModifiedDate":"2021-11-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":236,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":237,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":238,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"**:exclamation: Important:**\u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":239,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":240,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"If you are opening Teletubbies for the first time, you should be sure to set your profile before doing any actions. ","lastModifiedDate":"2021-11-11"},{"lineNumber":241,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":242,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":243,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":244,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":245,"author":{"gitId":"lhw-1"},"content":"#### Importing contacts: `import`","lastModifiedDate":"2021-10-30"},{"lineNumber":246,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":247,"author":{"gitId":"tanqiya"},"content":"The `import` command will help you to import a set of customer contact data into the application.","lastModifiedDate":"2021-11-05"},{"lineNumber":248,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":249,"author":{"gitId":"lhw-1"},"content":"You can issue this command by either typing it into the CLI (`import`), or going to the menu bar at the top and","lastModifiedDate":"2021-10-30"},{"lineNumber":250,"author":{"gitId":"tanqiya"},"content":"selecting `File -\u003e Import`. Once the command is issued, *Teletubbies* will open a file selector window as shown below.","lastModifiedDate":"2021-11-05"},{"lineNumber":251,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":252,"author":{"gitId":"lhw-1"},"content":"The data to be imported must be a JSON file, with the file extension `.json`.","lastModifiedDate":"2021-10-30"},{"lineNumber":253,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":254,"author":{"gitId":"lhw-1"},"content":"![import_file](images/userGuide/importFile.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":255,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":256,"author":{"gitId":"lhw-1"},"content":"Format: `import`","lastModifiedDate":"2021-10-30"},{"lineNumber":257,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":258,"author":{"gitId":"tanqiya"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: Caution:","lastModifiedDate":"2021-11-05"},{"lineNumber":259,"author":{"gitId":"tanqiya"},"content":"If the format of the selected data file is invalid, Teletubbies will start with an empty contact list!","lastModifiedDate":"2021-11-05"},{"lineNumber":260,"author":{"gitId":"tanqiya"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":261,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":262,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":263,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":264,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: Caution:","lastModifiedDate":"2021-11-11"},{"lineNumber":265,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"`import` will cause all our current contacts to be wiped from Teletubbies! If you wish to keep ","lastModifiedDate":"2021-11-11"},{"lineNumber":266,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"your current contacts too, check out [merge](#merging-contacts-merge)!","lastModifiedDate":"2021-11-11"},{"lineNumber":267,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":268,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":269,"author":{"gitId":"gok99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":270,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":271,"author":{"gitId":"lhw-1"},"content":"#### Merging contacts: `merge`","lastModifiedDate":"2021-10-30"},{"lineNumber":272,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":273,"author":{"gitId":"tanqiya"},"content":"The `merge` command is a special kind of importing, and it will help you to merge a set of customer contact data","lastModifiedDate":"2021-11-05"},{"lineNumber":274,"author":{"gitId":"lhw-1"},"content":"with the current data inside the application.","lastModifiedDate":"2021-10-30"},{"lineNumber":275,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":276,"author":{"gitId":"lhw-1"},"content":"You can issue this command by either typing it into the CLI (`merge`), or going to the menu bar at the top and","lastModifiedDate":"2021-10-30"},{"lineNumber":277,"author":{"gitId":"tanqiya"},"content":"selecting `File -\u003e Merge`. Once the command is issued, *Teletubbies* will open a file selector window as shown below.","lastModifiedDate":"2021-11-05"},{"lineNumber":278,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":279,"author":{"gitId":"lhw-1"},"content":"The data to be imported and merged must be a JSON file, with the file extension `.json`.","lastModifiedDate":"2021-10-30"},{"lineNumber":280,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":281,"author":{"gitId":"tanqiya"},"content":"![merge_file](images/userGuide/mergeFile.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":282,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":283,"author":{"gitId":"lhw-1"},"content":"Format: `merge`","lastModifiedDate":"2021-10-30"},{"lineNumber":284,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":285,"author":{"gitId":"skythefire"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: Caution:","lastModifiedDate":"2021-11-06"},{"lineNumber":286,"author":{"gitId":"skythefire"},"content":"This command should only be used if you are sure that you want to combine the new data to be imported with","lastModifiedDate":"2021-11-06"},{"lineNumber":287,"author":{"gitId":"skythefire"},"content":"the current data in the application. The new data will overwrite the current data, so be careful!","lastModifiedDate":"2021-11-06"},{"lineNumber":288,"author":{"gitId":"skythefire"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":289,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":290,"author":{"gitId":"gok99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":291,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":292,"author":{"gitId":"lhw-1"},"content":"#### Exporting contacts: `export`","lastModifiedDate":"2021-10-30"},{"lineNumber":293,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":294,"author":{"gitId":"tanqiya"},"content":"The `export` command will help you to export the current set of customer contact data in the application.","lastModifiedDate":"2021-11-05"},{"lineNumber":295,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":296,"author":{"gitId":"lhw-1"},"content":"You can issue this command by either typing it into the CLI (`export`), or going to the menu bar at the top and","lastModifiedDate":"2021-10-30"},{"lineNumber":297,"author":{"gitId":"lhw-1"},"content":"selecting `File -\u003e Export`. Note that there is a crucial difference here:","lastModifiedDate":"2021-10-30"},{"lineNumber":298,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":299,"author":{"gitId":"lhw-1"},"content":"* If you choose to type it into the CLI (`export`), you will be able to specify which contacts you want","lastModifiedDate":"2021-10-30"},{"lineNumber":300,"author":{"gitId":"lhw-1"},"content":"  to export, based on the tags.","lastModifiedDate":"2021-10-30"},{"lineNumber":301,"author":{"gitId":"tanqiya"},"content":"* If you select `File -\u003e Export` through the GUI, *Teletubbies* will automatically export ALL contacts, regardless of","lastModifiedDate":"2021-11-05"},{"lineNumber":302,"author":{"gitId":"lhw-1"},"content":"  tags.","lastModifiedDate":"2021-10-30"},{"lineNumber":303,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":304,"author":{"gitId":"lhw-1"},"content":"Once the command is issued, it will ask you to confirm the export. Type `y` to confirm the export.","lastModifiedDate":"2021-10-30"},{"lineNumber":305,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":306,"author":{"gitId":"tanqiya"},"content":"If you decide to cancel the export, you can type in any other command. *Teletubbies* will automatically cancel the export","lastModifiedDate":"2021-11-05"},{"lineNumber":307,"author":{"gitId":"lhw-1"},"content":"for you as long as the next command received is NOT `y`.","lastModifiedDate":"2021-10-30"},{"lineNumber":308,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":309,"author":{"gitId":"tanqiya"},"content":"After export has been confirmed, *Teletubbies* will open a file selector window as shown below. Using","lastModifiedDate":"2021-11-05"},{"lineNumber":310,"author":{"gitId":"tanqiya"},"content":"the file selector, you can choose where the exported file will be saved and name the file.","lastModifiedDate":"2021-11-08"},{"lineNumber":311,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":312,"author":{"gitId":"tanqiya"},"content":"![export_file](images/userGuide/exportFile.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":313,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":314,"author":{"gitId":"lhw-1"},"content":"Format: `export [-t TAGS]…​`","lastModifiedDate":"2021-10-30"},{"lineNumber":315,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":316,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-30"},{"lineNumber":317,"author":{"gitId":"lhw-1"},"content":"* `export`","lastModifiedDate":"2021-10-30"},{"lineNumber":318,"author":{"gitId":"lhw-1"},"content":"\u003e This command will export all contacts.","lastModifiedDate":"2021-10-30"},{"lineNumber":319,"author":{"gitId":"lhw-1"},"content":"* `export -t friends`","lastModifiedDate":"2021-10-30"},{"lineNumber":320,"author":{"gitId":"lhw-1"},"content":"\u003e This command will export all contacts containing the \"friends\" tag.","lastModifiedDate":"2021-10-30"},{"lineNumber":321,"author":{"gitId":"lhw-1"},"content":"* `export -t friends -t family`","lastModifiedDate":"2021-10-30"},{"lineNumber":322,"author":{"gitId":"skythefire"},"content":"\u003e This command will export all contacts containing BOTH the \"friends\" tag, and the \"family\" tag.","lastModifiedDate":"2021-11-06"},{"lineNumber":323,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":324,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:bulb: Tip: You can use the filtered list displayed on Teletubbies to double-check if the contacts you want to export are accurate, saving you precious time with Teletubbies’ easy-to-read interface! ","lastModifiedDate":"2021-11-11"},{"lineNumber":325,"author":{"gitId":"tanqiya"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":327,"author":{"gitId":"gok99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":329,"author":{"gitId":"lhw-1"},"content":"#### Listing your previous commands: `history`","lastModifiedDate":"2021-10-30"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"skythefire"},"content":"The `history` command will help you to view all the commands that have been issued by you in the **current session**.","lastModifiedDate":"2021-11-06"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"skythefire"},"content":"The commands will be displayed in order from the most recently issued command to the earliest issued command.","lastModifiedDate":"2021-11-06"},{"lineNumber":334,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":335,"author":{"gitId":"skythefire"},"content":"Format: `history`","lastModifiedDate":"2021-11-06"},{"lineNumber":336,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":337,"author":{"gitId":"skythefire"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":338,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":339,"author":{"gitId":"skythefire"},"content":"**:information_source: Commands that will be displayed:**\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":340,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":341,"author":{"gitId":"skythefire"},"content":"The **current session** refers to the duration from the time you start up *Teletubbies* to the time","lastModifiedDate":"2021-11-06"},{"lineNumber":342,"author":{"gitId":"skythefire"},"content":"you close or exit *Teletubbies*. Once you close or exit *Teletubbies*, your session will end, and the command history will be","lastModifiedDate":"2021-11-06"},{"lineNumber":343,"author":{"gitId":"tanqiya"},"content":"reset. The next time you start up *Teletubbies*, you will not be able to access the command history from your","lastModifiedDate":"2021-11-05"},{"lineNumber":344,"author":{"gitId":"lhw-1"},"content":"previous session.","lastModifiedDate":"2021-10-30"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"skythefire"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":347,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":348,"author":{"gitId":"gok99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":349,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":350,"author":{"gitId":"lhw-1"},"content":"#### Undoing your previous commands: `undo`","lastModifiedDate":"2021-10-30"},{"lineNumber":351,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":352,"author":{"gitId":"lhw-1"},"content":"The `undo` command will help you to undo any changes you have made with your previous command.","lastModifiedDate":"2021-10-30"},{"lineNumber":353,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":354,"author":{"gitId":"lhw-1"},"content":"Suppose that you entered a command, but realised that you made a mistake! Well, you can simply issue the","lastModifiedDate":"2021-10-30"},{"lineNumber":355,"author":{"gitId":"lhw-1"},"content":"`undo` command to undo your mistake.","lastModifiedDate":"2021-10-30"},{"lineNumber":356,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":357,"author":{"gitId":"tanqiya"},"content":"If there are no commands that have previously been issued in the current session, *Teletubbies* will let you know.","lastModifiedDate":"2021-11-05"},{"lineNumber":358,"author":{"gitId":"lhw-1"},"content":"Otherwise, any changes you may have made with your previous command will be undone, so be careful when using this command!","lastModifiedDate":"2021-10-30"},{"lineNumber":359,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":360,"author":{"gitId":"lhw-1"},"content":"Format: `undo`","lastModifiedDate":"2021-10-30"},{"lineNumber":361,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":362,"author":{"gitId":"gok99"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":363,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":364,"author":{"gitId":"gok99"},"content":"**:information_source: Note:**\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":365,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":366,"author":{"gitId":"gok99"},"content":"The following commands cannot be undone since they don\u0027t affect contact information:","lastModifiedDate":"2021-11-08"},{"lineNumber":367,"author":{"gitId":"gok99"},"content":"* `export`","lastModifiedDate":"2021-11-08"},{"lineNumber":368,"author":{"gitId":"gok99"},"content":"* `filter`","lastModifiedDate":"2021-11-08"},{"lineNumber":369,"author":{"gitId":"gok99"},"content":"* `find`","lastModifiedDate":"2021-11-08"},{"lineNumber":370,"author":{"gitId":"gok99"},"content":"* `help`","lastModifiedDate":"2021-11-08"},{"lineNumber":371,"author":{"gitId":"gok99"},"content":"* `history`","lastModifiedDate":"2021-11-08"},{"lineNumber":372,"author":{"gitId":"gok99"},"content":"* `list`","lastModifiedDate":"2021-11-08"},{"lineNumber":373,"author":{"gitId":"gok99"},"content":"* `profile`","lastModifiedDate":"2021-11-08"},{"lineNumber":374,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":375,"author":{"gitId":"gok99"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":376,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":377,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":378,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":379,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"**:information_source: Retrieving previous versions:**\u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":380,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":381,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Like [`history`](#listing-your-previous-commands-history), you can only retrieve changes made within your **current session**. That is, once you close or exit Teletubbies and close your current session, you will not be able to retrieve the previous versions of Teletubbies.","lastModifiedDate":"2021-11-11"},{"lineNumber":382,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":383,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":384,"author":{"gitId":"lhw-1"},"content":"#### Redoing your previous commands: `redo`","lastModifiedDate":"2021-10-30"},{"lineNumber":385,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":386,"author":{"gitId":"lhw-1"},"content":"The `redo` command will help you to redo any `undo` command you have issued previously.","lastModifiedDate":"2021-10-30"},{"lineNumber":387,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":388,"author":{"gitId":"lhw-1"},"content":"Suppose that you through you made a mistake, so you issued an `undo` command, only to realise later that","lastModifiedDate":"2021-10-30"},{"lineNumber":389,"author":{"gitId":"lhw-1"},"content":"it was actually the correct command! Well, you can simply issue the `redo` command to \"undo\" your `undo`, or","lastModifiedDate":"2021-10-30"},{"lineNumber":390,"author":{"gitId":"lhw-1"},"content":"simply put, redo a command that you thought was a mistake.","lastModifiedDate":"2021-10-30"},{"lineNumber":391,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":392,"author":{"gitId":"tanqiya"},"content":"If there are no commands that have previously been issued in the current session, *Teletubbies* will let you know.","lastModifiedDate":"2021-11-05"},{"lineNumber":393,"author":{"gitId":"lhw-1"},"content":"Otherwise, any changes you may have made with your previous `undo` command will be undone, so be careful when using this command!","lastModifiedDate":"2021-10-30"},{"lineNumber":394,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":395,"author":{"gitId":"lhw-1"},"content":"Format: `redo`","lastModifiedDate":"2021-10-30"},{"lineNumber":396,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":397,"author":{"gitId":"gok99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":398,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":399,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"#### Clearing all entries: `clear`","lastModifiedDate":"2021-11-11"},{"lineNumber":400,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":401,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"The `clear` command will help you clear all contacts from the Teletubbies application.","lastModifiedDate":"2021-11-11"},{"lineNumber":402,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":403,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Format: `clear`","lastModifiedDate":"2021-11-11"},{"lineNumber":404,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":405,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: Caution:","lastModifiedDate":"2021-11-11"},{"lineNumber":406,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Do NOT issue this command unless you are absolutely sure that you want to clear the list.","lastModifiedDate":"2021-11-11"},{"lineNumber":407,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":408,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":409,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":410,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":411,"author":{"gitId":"lhw-1"},"content":"#### Exiting the program: `exit`","lastModifiedDate":"2021-10-30"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"tanqiya"},"content":"The `exit` command will help you gracefully exit *Teletubbies*.","lastModifiedDate":"2021-11-05"},{"lineNumber":414,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":415,"author":{"gitId":"lhw-1"},"content":"Format: `exit`","lastModifiedDate":"2021-10-30"},{"lineNumber":416,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":417,"author":{"gitId":"gok99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":418,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":419,"author":{"gitId":"lhw-1"},"content":"### Contact commands","lastModifiedDate":"2021-10-30"},{"lineNumber":420,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":421,"author":{"gitId":"tanqiya"},"content":"These commands are related to the contacts stored in *Teletubbies*. The commands available are:","lastModifiedDate":"2021-11-05"},{"lineNumber":422,"author":{"gitId":"skythefire"},"content":"* [`add`](#adding-a-contact-add)","lastModifiedDate":"2021-10-31"},{"lineNumber":423,"author":{"gitId":"skythefire"},"content":"* [`delete`](#deleting-a-contact-delete)","lastModifiedDate":"2021-11-08"},{"lineNumber":424,"author":{"gitId":"skythefire"},"content":"* [`edit`](#editing-a-contact-edit)","lastModifiedDate":"2021-11-08"},{"lineNumber":425,"author":{"gitId":"skythefire"},"content":"* [`done`](#marking-a-contact-as-completed-done)","lastModifiedDate":"2021-10-31"},{"lineNumber":426,"author":{"gitId":"skythefire"},"content":"* [`tag`](#tagging-contacts-tag)","lastModifiedDate":"2021-10-31"},{"lineNumber":427,"author":{"gitId":"skythefire"},"content":"* [`tagrm`](#removing-tags-from-contacts-tagrm)","lastModifiedDate":"2021-10-31"},{"lineNumber":428,"author":{"gitId":"skythefire"},"content":"* [`remark`](#adding-a-remark-to-a-contact-remark)","lastModifiedDate":"2021-11-08"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":431,"author":{"gitId":"lhw-1"},"content":"#### Finding the index","lastModifiedDate":"2021-10-30"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":433,"author":{"gitId":"tanqiya"},"content":"When dealing with contacts in *Teletubbies*, you will often have to use something called the **index**","lastModifiedDate":"2021-11-05"},{"lineNumber":434,"author":{"gitId":"lhw-1"},"content":"of the contact.","lastModifiedDate":"2021-10-30"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":436,"author":{"gitId":"skythefire"},"content":"To find out what the contact\u0027s index is, use the [List](#listing-all-contacts-list) feature to","lastModifiedDate":"2021-11-08"},{"lineNumber":437,"author":{"gitId":"lhw-1"},"content":"find what number the contact is associated with in the contact list.","lastModifiedDate":"2021-10-30"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":439,"author":{"gitId":"lhw-1"},"content":"The index","lastModifiedDate":"2021-10-30"},{"lineNumber":440,"author":{"gitId":"lhw-1"},"content":"will always be a positive integer, i.e. 1, 2, 3, 4, ...","lastModifiedDate":"2021-10-30"},{"lineNumber":441,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":442,"author":{"gitId":"lhw-1"},"content":"#### Copying phone numbers","lastModifiedDate":"2021-10-30"},{"lineNumber":443,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":444,"author":{"gitId":"lhw-1"},"content":"We understand that as telemarketers, you may be using a desktop application to call a customer instead of using","lastModifiedDate":"2021-10-30"},{"lineNumber":445,"author":{"gitId":"lhw-1"},"content":"your phone.","lastModifiedDate":"2021-10-30"},{"lineNumber":446,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":447,"author":{"gitId":"tanqiya"},"content":"Hence, *Teletubbies* tries to help out in this area as well! Next to the phone number in each contact, there is a small","lastModifiedDate":"2021-11-05"},{"lineNumber":448,"author":{"gitId":"lhw-1"},"content":"clipboard icon that looks like this: ![](images/icon_clipboard.png)","lastModifiedDate":"2021-10-30"},{"lineNumber":449,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":450,"author":{"gitId":"lhw-1"},"content":"When you click on the icon, it will copy the phone number to your clipboard, so that you can paste it onto","lastModifiedDate":"2021-10-30"},{"lineNumber":451,"author":{"gitId":"lhw-1"},"content":"your desktop calling app!","lastModifiedDate":"2021-10-30"},{"lineNumber":452,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":453,"author":{"gitId":"gok99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":454,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":455,"author":{"gitId":"lhw-1"},"content":"#### Adding a contact: `add`","lastModifiedDate":"2021-10-30"},{"lineNumber":456,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":457,"author":{"gitId":"tanqiya"},"content":"The `add` command will help you to add a customer\u0027s contact details into *Teletubbies*. Once added,","lastModifiedDate":"2021-11-05"},{"lineNumber":458,"author":{"gitId":"lhw-1"},"content":"you should be able to view their contact details on the contact list.","lastModifiedDate":"2021-10-30"},{"lineNumber":459,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":460,"author":{"gitId":"tanqiya"},"content":"Note that the customer\u0027s **name** and **phone number** are mandatory. Otherwise, *Teletubbies*","lastModifiedDate":"2021-11-05"},{"lineNumber":461,"author":{"gitId":"lhw-1"},"content":"(and you) will find it difficult to identify the customer!","lastModifiedDate":"2021-10-30"},{"lineNumber":462,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":463,"author":{"gitId":"lhw-1"},"content":"Other than the **name** and the **phone number**, you can also indicate **address** and","lastModifiedDate":"2021-10-30"},{"lineNumber":464,"author":{"gitId":"lhw-1"},"content":"**email address**. Both **address** and **email address** are optional.","lastModifiedDate":"2021-10-30"},{"lineNumber":465,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":466,"author":{"gitId":"lhw-1"},"content":"Format: `add -n NAME -p PHONE_NUMBER [-a ADDRESS] [-e EMAIL]`","lastModifiedDate":"2021-10-30"},{"lineNumber":467,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":468,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":469,"author":{"gitId":"lhw-1"},"content":"* `add -n Betsy Crowe -p 12345678`","lastModifiedDate":"2021-10-30"},{"lineNumber":470,"author":{"gitId":"lhw-1"},"content":"\u003e This command will add the contact details for \"Betsy Crowe\", with their phone number as \"12345678\".","lastModifiedDate":"2021-10-30"},{"lineNumber":471,"author":{"gitId":"lhw-1"},"content":"* `add -n John Doe -p 87654321 -a John Street, Block 123, #01-01`","lastModifiedDate":"2021-10-30"},{"lineNumber":472,"author":{"gitId":"lhw-1"},"content":"\u003e This command will add the contact details for \"John Doe\", with their phone number as \"87654321\". It will","lastModifiedDate":"2021-10-30"},{"lineNumber":473,"author":{"gitId":"skythefire"},"content":"\u003e also add their address as \"John Street, Block 123, #01-01\".","lastModifiedDate":"2021-11-06"},{"lineNumber":474,"author":{"gitId":"lhw-1"},"content":"* `add -n John Snoe -p 98765432 -a Wall Street, Block 234, #08-06 -e johns@example.com`","lastModifiedDate":"2021-10-30"},{"lineNumber":475,"author":{"gitId":"lhw-1"},"content":"\u003e This command will add the contact details for \"John Snoe\", with their phone number as \"98765432\". It will","lastModifiedDate":"2021-10-30"},{"lineNumber":476,"author":{"gitId":"skythefire"},"content":"\u003e also add their address as \"Wall Street, Block 234, #08-06\", and their email address as \"johns@example.com\".","lastModifiedDate":"2021-11-06"},{"lineNumber":477,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":478,"author":{"gitId":"gok99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":479,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":480,"author":{"gitId":"lhw-1"},"content":"#### Deleting a contact: `delete`","lastModifiedDate":"2021-10-30"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":482,"author":{"gitId":"tanqiya"},"content":"The `delete` command will help you to delete a customer\u0027s contact details from *Teletubbies*. Once","lastModifiedDate":"2021-11-05"},{"lineNumber":483,"author":{"gitId":"lhw-1"},"content":"the contact has been deleted, you should no longer see their contact details on the contact list.","lastModifiedDate":"2021-10-30"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":485,"author":{"gitId":"lhw-1"},"content":"You can choose to delete the contact using either the index, or the phone number. When deleting the contact using the phone number, make sure that the specified","lastModifiedDate":"2021-10-30"},{"lineNumber":486,"author":{"gitId":"lhw-1"},"content":"phone number is associated with a contact in the contact list.","lastModifiedDate":"2021-10-30"},{"lineNumber":487,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":488,"author":{"gitId":"skythefire"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":490,"author":{"gitId":"skythefire"},"content":"**:bulb: Deleting with a contact\u0027s index:**\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":492,"author":{"gitId":"lhw-1"},"content":"If you don\u0027t know what the index is, refer to [Finding the index](#finding-the-index).","lastModifiedDate":"2021-10-30"},{"lineNumber":493,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":494,"author":{"gitId":"skythefire"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":495,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":496,"author":{"gitId":"lhw-1"},"content":"Format: `delete -p PHONE_NUMBER` or `delete -i INDEX`","lastModifiedDate":"2021-10-30"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-24"},{"lineNumber":499,"author":{"gitId":"gok99"},"content":"* `delete -i 1`","lastModifiedDate":"2021-10-26"},{"lineNumber":500,"author":{"gitId":"lhw-1"},"content":"\u003e This command will delete the contact details for the contact with the index 1.","lastModifiedDate":"2021-10-30"},{"lineNumber":501,"author":{"gitId":"gok99"},"content":"* `delete -p 87654321`","lastModifiedDate":"2021-10-26"},{"lineNumber":502,"author":{"gitId":"lhw-1"},"content":"\u003e This command will delete the contact details for the contact with the phone number \"87654321\".","lastModifiedDate":"2021-10-30"},{"lineNumber":503,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":504,"author":{"gitId":"gok99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":505,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":506,"author":{"gitId":"lhw-1"},"content":"#### Editing a contact: `edit`","lastModifiedDate":"2021-10-30"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"tanqiya"},"content":"The `edit` command will help you to edit / update a customer\u0027s contact details in *Teletubbies*. Note that","lastModifiedDate":"2021-11-05"},{"lineNumber":509,"author":{"gitId":"tanqiya"},"content":"you can only edit the details for a contact that is already in *Teletubbies*\u0027 contact list.","lastModifiedDate":"2021-11-05"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"lhw-1"},"content":"You can choose which contact to edit by using the contact\u0027s index. If you don\u0027t know what the index is, refer to [Finding the index](#finding-the-index).","lastModifiedDate":"2021-10-30"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"lhw-1"},"content":"When editing the contact, you will be able to change four fields in total: the **name**,","lastModifiedDate":"2021-10-30"},{"lineNumber":514,"author":{"gitId":"lhw-1"},"content":"the **phone number**, the **address**, and the **email address** of the customer.","lastModifiedDate":"2021-10-30"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"lhw-1"},"content":"Each field is treated as","lastModifiedDate":"2021-10-30"},{"lineNumber":517,"author":{"gitId":"lhw-1"},"content":"separate, and all four fields are optional, meaning that you can choose to edit only one or two out of the four fields.","lastModifiedDate":"2021-10-30"},{"lineNumber":518,"author":{"gitId":"lhw-1"},"content":"However, at least one field should be provided (otherwise, you won\u0027t be editing anything).","lastModifiedDate":"2021-10-30"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"lhw-1"},"content":"Format: `edit INDEX [-n NAME] [-p PHONE] [-e EMAIL] [-a ADDRESS]`","lastModifiedDate":"2021-10-30"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"lhw-1"},"content":"* `edit 1 -n Betsy Crower`","lastModifiedDate":"2021-10-30"},{"lineNumber":524,"author":{"gitId":"lhw-1"},"content":"\u003e This command will edit the name of the first person in the list to be \"Betsy Crower\".","lastModifiedDate":"2021-10-30"},{"lineNumber":525,"author":{"gitId":"lhw-1"},"content":"* `edit 2 -p 91234567 -e johndoe@example.com`","lastModifiedDate":"2021-10-30"},{"lineNumber":526,"author":{"gitId":"lhw-1"},"content":"\u003e This command will edit the phone number of the second person in the list to be \"91234567\", and the email address to be \"johndoe@example.com\".","lastModifiedDate":"2021-10-30"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"gok99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":530,"author":{"gitId":"lhw-1"},"content":"#### Marking a contact as completed: `done`","lastModifiedDate":"2021-10-30"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":532,"author":{"gitId":"tanqiya"},"content":"The `done` command will help you to mark a contact\u0027s completion status in *Teletubbies*. Here, when we say \"completion status\",","lastModifiedDate":"2021-11-05"},{"lineNumber":533,"author":{"gitId":"lhw-1"},"content":"we will leave it up to your company to decide exactly what each of the levels of completion status mean.","lastModifiedDate":"2021-10-30"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":535,"author":{"gitId":"skythefire"},"content":"Regardless, *Teletubbies* provide three different levels of completion status: **Incomplete**, **Ongoing**, and **Complete**. Take note that","lastModifiedDate":"2021-11-06"},{"lineNumber":536,"author":{"gitId":"lhw-1"},"content":"a contact can only be marked with at most one out of the three. You can\u0027t have a contact be complete and ongoing at the same time!","lastModifiedDate":"2021-10-30"},{"lineNumber":537,"author":{"gitId":"lhw-1"},"content":"**The status is indicated in each of the contact details using a tag and a progress bar.**","lastModifiedDate":"2021-10-30"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":539,"author":{"gitId":"skythefire"},"content":"You can mark a contact with any of the three levels using the **index** of the contact. If you don\u0027t know what the index is, refer to [Finding the index](#finding-the-index).","lastModifiedDate":"2021-11-06"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":541,"author":{"gitId":"lhw-1"},"content":"You will also be able to see the total level of completion status for a list of customers using the \"Your Progress\" tab, which displays","lastModifiedDate":"2021-10-30"},{"lineNumber":542,"author":{"gitId":"lhw-1"},"content":"the information using a chart. Refer to [Progress Chart](#progress-chart) for more details.","lastModifiedDate":"2021-10-30"},{"lineNumber":543,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":544,"author":{"gitId":"lhw-1"},"content":"Format: `done INDEX [STATUS]`","lastModifiedDate":"2021-10-30"},{"lineNumber":545,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":546,"author":{"gitId":"skythefire"},"content":"Examples:","lastModifiedDate":"2021-10-26"},{"lineNumber":547,"author":{"gitId":"lhw-1"},"content":"* `done 1`","lastModifiedDate":"2021-10-30"},{"lineNumber":548,"author":{"gitId":"lhw-1"},"content":"\u003e This command will mark the first contact in the list as \"Complete\".","lastModifiedDate":"2021-10-30"},{"lineNumber":549,"author":{"gitId":"lhw-1"},"content":"* `done 2 -ong`","lastModifiedDate":"2021-10-30"},{"lineNumber":550,"author":{"gitId":"lhw-1"},"content":"\u003e This command will mark the second contact in the list as \"Ongoing\".","lastModifiedDate":"2021-10-30"},{"lineNumber":551,"author":{"gitId":"lhw-1"},"content":"* `done 3 -inc`","lastModifiedDate":"2021-10-30"},{"lineNumber":552,"author":{"gitId":"lhw-1"},"content":"\u003e This command will mark the third contact in the list as \"Incomplete\".","lastModifiedDate":"2021-10-30"},{"lineNumber":553,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":554,"author":{"gitId":"gok99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":555,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":556,"author":{"gitId":"lhw-1"},"content":"#### Tagging contacts: `tag`","lastModifiedDate":"2021-10-30"},{"lineNumber":557,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":558,"author":{"gitId":"tanqiya"},"content":"The `tag` command will help you to **tag** certain contacts with a tag of your choice. In *Teletubbies*,","lastModifiedDate":"2021-11-05"},{"lineNumber":559,"author":{"gitId":"lhw-1"},"content":"our tags are very flexible: They can be single words, or a category. So for example, you can tag a contact","lastModifiedDate":"2021-10-30"},{"lineNumber":560,"author":{"gitId":"lhw-1"},"content":"with \"friend\", or tag a contact with the category \"status: not answering\", etc. It\u0027s up to you!","lastModifiedDate":"2021-10-30"},{"lineNumber":561,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":562,"author":{"gitId":"skythefire"},"content":"Do note that there is a special category of tag, which is the **completion status**.","lastModifiedDate":"2021-11-06"},{"lineNumber":563,"author":{"gitId":"lhw-1"},"content":"This tag cannot be added, edited or removed by the `tag` command or the `tagrm` command, and is only changeable using","lastModifiedDate":"2021-10-30"},{"lineNumber":564,"author":{"gitId":"lhw-1"},"content":"the `done` command. Please refer to [Marking a contact as completed](#marking-a-contact-as-completed-done).","lastModifiedDate":"2021-10-30"},{"lineNumber":565,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":566,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"When tagging a contact, you can specify the **name** and **value** of the tag. The **name** is mandatory, but","lastModifiedDate":"2021-11-11"},{"lineNumber":567,"author":{"gitId":"lhw-1"},"content":"the **value** is optional. To specify which contact to be tagged, use the index of the contact.","lastModifiedDate":"2021-10-30"},{"lineNumber":568,"author":{"gitId":"lhw-1"},"content":"If you don\u0027t know what the index is, refer to [Finding the index](#finding-the-index).","lastModifiedDate":"2021-10-30"},{"lineNumber":569,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":570,"author":{"gitId":"gok99"},"content":"Take note that contacts cannot have tags with duplicate names. So, if you have a contact that is already tagged,","lastModifiedDate":"2021-11-06"},{"lineNumber":571,"author":{"gitId":"gok99"},"content":"and you decide to tag it again with the same **name** but different **value**, the new **value** will replace the old","lastModifiedDate":"2021-11-06"},{"lineNumber":572,"author":{"gitId":"skythefire"},"content":"one! For example, if a contact tagged with `Friend: good`, and is then tagged using another tag with the **name** \"Friend\"","lastModifiedDate":"2021-11-08"},{"lineNumber":573,"author":{"gitId":"skythefire"},"content":"and the **value** \"close\", the pre-existing tag will be updated from `Friend: good` to `Friend: close`.","lastModifiedDate":"2021-11-06"},{"lineNumber":574,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":575,"author":{"gitId":"lhw-1"},"content":"Finally, there is an additional parameter that is only available to supervisors. When you add a `-s` at the end","lastModifiedDate":"2021-10-30"},{"lineNumber":576,"author":{"gitId":"lhw-1"},"content":"of your tagging command, it will make sure that only supervisors are able to edit or remove that tag!","lastModifiedDate":"2021-10-30"},{"lineNumber":577,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":578,"author":{"gitId":"lhw-1"},"content":"Format:`tag INDEX -n TAGNAME [-v VALUE] [-s]`","lastModifiedDate":"2021-10-30"},{"lineNumber":579,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":580,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Examples:","lastModifiedDate":"2021-10-08"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":582,"author":{"gitId":"lhw-1"},"content":"* `tag 1 -n Friend`","lastModifiedDate":"2021-10-30"},{"lineNumber":583,"author":{"gitId":"lhw-1"},"content":"\u003e This command will tag the first contact in the list with the tag `Friend`.","lastModifiedDate":"2021-10-30"},{"lineNumber":584,"author":{"gitId":"lhw-1"},"content":"* `tag 2 -n Friend -v close`","lastModifiedDate":"2021-10-30"},{"lineNumber":585,"author":{"gitId":"lhw-1"},"content":"\u003e This command will tag the second contact in the list with the tag `Friend: close`.","lastModifiedDate":"2021-10-30"},{"lineNumber":586,"author":{"gitId":"lhw-1"},"content":"* `tag 4 -n Assignee -v Mel -s`","lastModifiedDate":"2021-10-30"},{"lineNumber":587,"author":{"gitId":"lhw-1"},"content":"\u003e This command will tag the fourth contact in the list with the tag `Assignee: Mel`. Because of the `-s`, this tag will only be editable / removable by","lastModifiedDate":"2021-10-30"},{"lineNumber":588,"author":{"gitId":"lhw-1"},"content":"\u003e users whose roles are set as \"Supervisor\" For more information on roles, refer to [Setting your profile](#setting-your-profile-profile).","lastModifiedDate":"2021-10-30"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":590,"author":{"gitId":"gok99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":592,"author":{"gitId":"lhw-1"},"content":"#### Removing tags from contacts: `tagrm`","lastModifiedDate":"2021-10-30"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"lhw-1"},"content":"The `tagrm` command will help you to **remove** a tag from a contact. Note that the tag to be removed","lastModifiedDate":"2021-10-30"},{"lineNumber":595,"author":{"gitId":"gok99"},"content":"must already be a tag on the contact, otherwise no tags will be removed!","lastModifiedDate":"2021-11-06"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"lhw-1"},"content":"When removing a tag from a contact, you can specify the **name** and **value** of the tag. Similar to the `tag` command,","lastModifiedDate":"2021-10-30"},{"lineNumber":598,"author":{"gitId":"skythefire"},"content":"the **name** is mandatory, but the **value** is optional. To specify which contact to be tagged, use the index of the","lastModifiedDate":"2021-11-06"},{"lineNumber":599,"author":{"gitId":"lhw-1"},"content":"contact. If you don\u0027t know what the index is, refer to [Finding the index](#finding-the-index).","lastModifiedDate":"2021-10-30"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"gok99"},"content":"Note that tag name and tag value are case-sensitive. So, a command specifying tag name \u0027assignee\u0027 and tag value \u0027john\u0027","lastModifiedDate":"2021-11-06"},{"lineNumber":602,"author":{"gitId":"gok99"},"content":"will not remove the tag `Assignee:John` or `Assignee:john`.","lastModifiedDate":"2021-11-06"},{"lineNumber":603,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":604,"author":{"gitId":"lhw-1"},"content":"Also, if the tag was created using the `-s` parameter, only supervisors will be able to remove the tag.","lastModifiedDate":"2021-10-30"},{"lineNumber":605,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":606,"author":{"gitId":"lhw-1"},"content":"Format:`tagrm INDEX -n TAGNAME [-v VALUE]`","lastModifiedDate":"2021-10-30"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":610,"author":{"gitId":"lhw-1"},"content":"* `tagrm 1 -n Friend`","lastModifiedDate":"2021-10-30"},{"lineNumber":611,"author":{"gitId":"lhw-1"},"content":"\u003e This command will remove the tag `Friend` from the first contact in the list.","lastModifiedDate":"2021-10-30"},{"lineNumber":612,"author":{"gitId":"lhw-1"},"content":"* `tagrm 2 -n Friend -v close`","lastModifiedDate":"2021-10-30"},{"lineNumber":613,"author":{"gitId":"lhw-1"},"content":"\u003e This command will remove the tag `Friend: close` from the second contact in the list.","lastModifiedDate":"2021-10-30"},{"lineNumber":614,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":615,"author":{"gitId":"gok99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":616,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":617,"author":{"gitId":"lhw-1"},"content":"#### Tagging and Removing tags from multiple contacts","lastModifiedDate":"2021-10-30"},{"lineNumber":618,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":619,"author":{"gitId":"lhw-1"},"content":"Sometimes, you may need to assign the same tag to more than just one contact, or remove the same tag from more than just one contact.","lastModifiedDate":"2021-10-30"},{"lineNumber":620,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":621,"author":{"gitId":"skythefire"},"content":"You can use the `tag` and the `tagrm` commands to do so! Just specify a **range of numbers** as the index rather than a single number.","lastModifiedDate":"2021-11-06"},{"lineNumber":622,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":623,"author":{"gitId":"lhw-1"},"content":"Format (`tag`): `tag INDEX [,INDEX]…​ -n TAGNAME [-v VALUE] [-s]`","lastModifiedDate":"2021-10-30"},{"lineNumber":624,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":625,"author":{"gitId":"lhw-1"},"content":"Format (`tagrm`): `tagrm INDEX [,INDEX]…​ -n TAGNAME [-v VALUE]`","lastModifiedDate":"2021-10-30"},{"lineNumber":626,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":627,"author":{"gitId":"lhw-1"},"content":"OR","lastModifiedDate":"2021-10-30"},{"lineNumber":628,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":629,"author":{"gitId":"lhw-1"},"content":"Format (`tag`):`tag START-END -n TAGNAME [-v VALUE] [-s]`","lastModifiedDate":"2021-10-30"},{"lineNumber":630,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":631,"author":{"gitId":"lhw-1"},"content":"Format (`tagrm`):`tagrm START-END -n TAGNAME [-v VALUE]`","lastModifiedDate":"2021-10-30"},{"lineNumber":632,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":633,"author":{"gitId":"lhw-1"},"content":"Examples (`tag`):","lastModifiedDate":"2021-10-30"},{"lineNumber":634,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":635,"author":{"gitId":"lhw-1"},"content":"* `tag 1,2,4 -n Friend -v close`","lastModifiedDate":"2021-10-30"},{"lineNumber":636,"author":{"gitId":"lhw-1"},"content":"\u003e This command will tag the first, second, and fourth contact in the list with the tag `Friend: close`.","lastModifiedDate":"2021-10-30"},{"lineNumber":637,"author":{"gitId":"lhw-1"},"content":"* `tag 1-5 -n Friend -v close`","lastModifiedDate":"2021-10-30"},{"lineNumber":638,"author":{"gitId":"lhw-1"},"content":"\u003e This command will tag the first five contacts in the list, with the tag `Friend: close`.","lastModifiedDate":"2021-10-30"},{"lineNumber":639,"author":{"gitId":"lhw-1"},"content":"* `tag 1-10 -n Assignee -v Mel -s`","lastModifiedDate":"2021-10-30"},{"lineNumber":640,"author":{"gitId":"lhw-1"},"content":"\u003e This command will tag the first ten contacts in the list with the tag `Assignee: Mel`. Because of the `-s`, this tag will only be editable / removable by","lastModifiedDate":"2021-10-30"},{"lineNumber":641,"author":{"gitId":"lhw-1"},"content":"\u003e users whose roles are set as \"Supervisor\" For more information on roles, refer to [Setting your profile](#setting-your-profile-profile).","lastModifiedDate":"2021-10-30"},{"lineNumber":642,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":643,"author":{"gitId":"lhw-1"},"content":"Examples (`tagrm`):","lastModifiedDate":"2021-10-30"},{"lineNumber":644,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":645,"author":{"gitId":"lhw-1"},"content":"* `tagrm 1,2,4 -n Friend`","lastModifiedDate":"2021-10-30"},{"lineNumber":646,"author":{"gitId":"lhw-1"},"content":"\u003e This command will remove the tag `Friend` from the first, second, and fourth contact in the list.","lastModifiedDate":"2021-10-30"},{"lineNumber":647,"author":{"gitId":"lhw-1"},"content":"* `tagrm 1-5 -n Friend `","lastModifiedDate":"2021-10-30"},{"lineNumber":648,"author":{"gitId":"lhw-1"},"content":"\u003e This command will remove the tag `Friend` from the first five contacts in the list.","lastModifiedDate":"2021-10-30"},{"lineNumber":649,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":650,"author":{"gitId":"gok99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":651,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":652,"author":{"gitId":"lhw-1"},"content":"#### Adding a remark to a contact: `remark`","lastModifiedDate":"2021-10-30"},{"lineNumber":653,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":654,"author":{"gitId":"lhw-1"},"content":"The `remark` command will help you to add a remark to a chosen contact in the list. Remarks are a more general version","lastModifiedDate":"2021-10-30"},{"lineNumber":655,"author":{"gitId":"skythefire"},"content":"of the tags - the feature is for you to add extra information to a contact that you cannot add using tags. Note that a","lastModifiedDate":"2021-11-08"},{"lineNumber":656,"author":{"gitId":"skythefire"},"content":"remark cannot be longer than 40 letters!","lastModifiedDate":"2021-11-08"},{"lineNumber":657,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":658,"author":{"gitId":"lhw-1"},"content":"To specify which contact to add a remark to, use the index of the contact. If you don\u0027t know what the index is,","lastModifiedDate":"2021-10-30"},{"lineNumber":659,"author":{"gitId":"lhw-1"},"content":"refer to [Finding the index](#finding-the-index).","lastModifiedDate":"2021-10-30"},{"lineNumber":660,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":661,"author":{"gitId":"lhw-1"},"content":"Format: `remark INDEX -r REMARK`","lastModifiedDate":"2021-10-30"},{"lineNumber":662,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":663,"author":{"gitId":"gok99"},"content":"Examples:","lastModifiedDate":"2021-10-26"},{"lineNumber":664,"author":{"gitId":"lhw-1"},"content":"* `remark 1 -r Not answering any calls`","lastModifiedDate":"2021-10-30"},{"lineNumber":665,"author":{"gitId":"lhw-1"},"content":"\u003e This command will add the remark `Not answering any calls` to the first contact in the list.","lastModifiedDate":"2021-10-30"},{"lineNumber":666,"author":{"gitId":"skythefire"},"content":"* `remark 1 -r `","lastModifiedDate":"2021-11-08"},{"lineNumber":667,"author":{"gitId":"skythefire"},"content":"\u003e This command will remove the existing remark from the first contact in the list.","lastModifiedDate":"2021-11-08"},{"lineNumber":668,"author":{"gitId":"skythefire"},"content":"* `remark 2 -r Not answering any calls`","lastModifiedDate":"2021-11-08"},{"lineNumber":669,"author":{"gitId":"skythefire"},"content":"* `remark 2 -r Need to call back for confirmation`","lastModifiedDate":"2021-11-08"},{"lineNumber":670,"author":{"gitId":"lhw-1"},"content":"\u003e The first command will add the remark `Not answering any calls` to the second contact in the list. The second command","lastModifiedDate":"2021-10-30"},{"lineNumber":671,"author":{"gitId":"lhw-1"},"content":"\u003e will then add the new remark `Need to call back for confirmation` to the second contact in the list, which will replace the","lastModifiedDate":"2021-10-30"},{"lineNumber":672,"author":{"gitId":"lhw-1"},"content":"\u003e old remark `Not answering any calls`.","lastModifiedDate":"2021-10-30"},{"lineNumber":673,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":674,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":675,"author":{"gitId":"skythefire"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":676,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":677,"author":{"gitId":"skythefire"},"content":"**:information_source: Only one remark allowed per contact**\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":678,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":679,"author":{"gitId":"skythefire"},"content":"A contact can only have a maximum of **one** remark. If a contact already has a remark, any new remark added","lastModifiedDate":"2021-11-06"},{"lineNumber":680,"author":{"gitId":"skythefire"},"content":"will replace the existing remark.","lastModifiedDate":"2021-11-06"},{"lineNumber":681,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":683,"author":{"gitId":"gok99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":684,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":685,"author":{"gitId":"lhw-1"},"content":"### List commands","lastModifiedDate":"2021-10-30"},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":687,"author":{"gitId":"tanqiya"},"content":"These commands are related to the contact list stored in *Teletubbies*. The commands available are:","lastModifiedDate":"2021-11-05"},{"lineNumber":688,"author":{"gitId":"skythefire"},"content":"* [`list`](#listing-all-contacts-list)","lastModifiedDate":"2021-11-08"},{"lineNumber":689,"author":{"gitId":"skythefire"},"content":"* [`find`](#locating-contacts-by-name-find)","lastModifiedDate":"2021-10-31"},{"lineNumber":690,"author":{"gitId":"skythefire"},"content":"* [`filter`](#filtering-contact-list-filter)","lastModifiedDate":"2021-10-31"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":693,"author":{"gitId":"lhw-1"},"content":"#### Listing all contacts: `list`","lastModifiedDate":"2021-10-30"},{"lineNumber":694,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":695,"author":{"gitId":"tanqiya"},"content":"The `list` command will help you to view the entire contact list currently in *Teletubbies*.","lastModifiedDate":"2021-11-05"},{"lineNumber":696,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":697,"author":{"gitId":"lhw-1"},"content":"By listing all contacts, you will be able to find the number associated with a specific contact that you want to interact with.","lastModifiedDate":"2021-10-30"},{"lineNumber":698,"author":{"gitId":"lhw-1"},"content":"This number is known as the `index` of the contact.","lastModifiedDate":"2021-10-30"},{"lineNumber":699,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":700,"author":{"gitId":"lhw-1"},"content":"Format: `list`","lastModifiedDate":"2021-10-30"},{"lineNumber":701,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":702,"author":{"gitId":"gok99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":703,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":704,"author":{"gitId":"lhw-1"},"content":"#### Locating contacts by name: `find`","lastModifiedDate":"2021-10-30"},{"lineNumber":705,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":706,"author":{"gitId":"lhw-1"},"content":"The `find` command will help you find the relevant contacts using the given keyword(s), and will change the contact list","lastModifiedDate":"2021-10-30"},{"lineNumber":707,"author":{"gitId":"lhw-1"},"content":"display to show only the contacts whose **names** contain the given keyword(s).","lastModifiedDate":"2021-10-30"},{"lineNumber":708,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":709,"author":{"gitId":"tanqiya"},"content":"When *Teletubbies* searches the contacts using the given keyword(s), it will only look at the **names**","lastModifiedDate":"2021-11-05"},{"lineNumber":710,"author":{"gitId":"skythefire"},"content":"of the contacts, not the **addresses** or the **email addresses**.","lastModifiedDate":"2021-11-06"},{"lineNumber":711,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":712,"author":{"gitId":"lhw-1"},"content":"The order of the keywords given does not matter, and any contact whose **name** contains any one of the","lastModifiedDate":"2021-10-30"},{"lineNumber":713,"author":{"gitId":"tanqiya"},"content":"keywords will be returned. However, *Teletubbies* will consider the keywords as full words, meaning that","lastModifiedDate":"2021-11-05"},{"lineNumber":714,"author":{"gitId":"lhw-1"},"content":"if a keyword `Han` is given, even if there is a contact with the name `Hans`, it will not be returned. It","lastModifiedDate":"2021-10-30"},{"lineNumber":715,"author":{"gitId":"lhw-1"},"content":"will only be returned if the keyword given is `Hans`.","lastModifiedDate":"2021-10-30"},{"lineNumber":716,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":717,"author":{"gitId":"lhw-1"},"content":"For instance, `find alex david` may return something like:","lastModifiedDate":"2021-10-30"},{"lineNumber":718,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":719,"author":{"gitId":"lhw-1"},"content":"![result for \u0027find alex david\u0027](images/userGuide/findAlexDavidResult.png)","lastModifiedDate":"2021-10-30"},{"lineNumber":720,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":721,"author":{"gitId":"lhw-1"},"content":"Format: `find KEYWORD [KEYWORD]…​`","lastModifiedDate":"2021-10-30"},{"lineNumber":722,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":723,"author":{"gitId":"gok99"},"content":"Examples:","lastModifiedDate":"2021-10-26"},{"lineNumber":724,"author":{"gitId":"lhw-1"},"content":"* `find John`","lastModifiedDate":"2021-10-30"},{"lineNumber":725,"author":{"gitId":"skythefire"},"content":"\u003e This command will return all contacts whose names contain \"John\", such as `John`, `john`, or `John Doe`. As mentioned below, it is case-insensitive.","lastModifiedDate":"2021-11-06"},{"lineNumber":726,"author":{"gitId":"lhw-1"},"content":"* `find alex david`","lastModifiedDate":"2021-10-30"},{"lineNumber":727,"author":{"gitId":"lhw-1"},"content":"\u003e This command will return all contacts whose names contain \"alex\" or \"david\" in no particular order, such as `Alex Yeoh`, `david li`, or `David alex`.","lastModifiedDate":"2021-10-30"},{"lineNumber":728,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":729,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":730,"author":{"gitId":"skythefire"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":731,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":732,"author":{"gitId":"skythefire"},"content":"**:information_source: Keywords are case-insensitive:**\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":733,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":734,"author":{"gitId":"skythefire"},"content":"The search process is case-insensitive, meaning that if a keyword `hans` is given, a contact with the name `Hans` may","lastModifiedDate":"2021-11-06"},{"lineNumber":735,"author":{"gitId":"skythefire"},"content":"be returned.","lastModifiedDate":"2021-11-06"},{"lineNumber":736,"author":{"gitId":"skythefire"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":737,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":738,"author":{"gitId":"gok99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":739,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":740,"author":{"gitId":"lhw-1"},"content":"#### Filtering contact list: `filter`","lastModifiedDate":"2021-10-30"},{"lineNumber":741,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":742,"author":{"gitId":"lhw-1"},"content":"The `filter` command will help you filter the current contact list using the given tag(s), and will change the contact list","lastModifiedDate":"2021-10-30"},{"lineNumber":743,"author":{"gitId":"lhw-1"},"content":"display to show only the contacts that are tagged with the given tag(s).","lastModifiedDate":"2021-10-30"},{"lineNumber":744,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":745,"author":{"gitId":"lhw-1"},"content":"When issuing the `filter` command, you should specify at least one **tag name**. Tag values are optional, but can help to further narrow","lastModifiedDate":"2021-10-30"},{"lineNumber":746,"author":{"gitId":"skythefire"},"content":"your filter if necessary.","lastModifiedDate":"2021-11-06"},{"lineNumber":747,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":748,"author":{"gitId":"skythefire"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":749,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":750,"author":{"gitId":"skythefire"},"content":"**:information_source: Tag name and tag value are case-sensitive:**\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":751,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":752,"author":{"gitId":"skythefire"},"content":"This means that the following tags are different:","lastModifiedDate":"2021-11-06"},{"lineNumber":753,"author":{"gitId":"gok99"},"content":"- `assignee: john`","lastModifiedDate":"2021-11-06"},{"lineNumber":754,"author":{"gitId":"gok99"},"content":"- `assignee: John`","lastModifiedDate":"2021-11-06"},{"lineNumber":755,"author":{"gitId":"gok99"},"content":"- `Assignee: John`","lastModifiedDate":"2021-11-06"},{"lineNumber":756,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":757,"author":{"gitId":"skythefire"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":758,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":759,"author":{"gitId":"lhw-1"},"content":"Format: `filter -t TAGNAME[:TAGVALUE] [-t TAGNAME[:TAGVALUE]]…​ `","lastModifiedDate":"2021-10-30"},{"lineNumber":760,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":761,"author":{"gitId":"lhw-1"},"content":"Examples:","lastModifiedDate":"2021-10-30"},{"lineNumber":762,"author":{"gitId":"lhw-1"},"content":"* `filter -t Friend`","lastModifiedDate":"2021-10-30"},{"lineNumber":763,"author":{"gitId":"gok99"},"content":"\u003e This command will filter the displayed list to only users who have the tag `Friend`, regardless of tag value. This","lastModifiedDate":"2021-11-06"},{"lineNumber":764,"author":{"gitId":"gok99"},"content":"\u003e means that persons with the tags `Friend: Close`, AND `Friend: VeryClose` will both be listed.","lastModifiedDate":"2021-11-06"},{"lineNumber":765,"author":{"gitId":"lhw-1"},"content":"* `filter -t Assignee:Ben`","lastModifiedDate":"2021-10-30"},{"lineNumber":766,"author":{"gitId":"gok99"},"content":"\u003e This command will filter the displayed list to only users who have the tag `Assignee: Ben`. Persons with the","lastModifiedDate":"2021-11-06"},{"lineNumber":767,"author":{"gitId":"gok99"},"content":"\u003e `Assignee: Sid` tag will NOT be listed.","lastModifiedDate":"2021-11-06"},{"lineNumber":768,"author":{"gitId":"lhw-1"},"content":"* `filter -t Friend -t Assignee:Ben`","lastModifiedDate":"2021-10-30"},{"lineNumber":769,"author":{"gitId":"lhw-1"},"content":"\u003e This command will filter the displayed list to only users who have the tag `Friend` AND `Assignee: Ben`. Contacts","lastModifiedDate":"2021-10-30"},{"lineNumber":770,"author":{"gitId":"gok99"},"content":"\u003e that have only one of the given tags will NOT be listed.","lastModifiedDate":"2021-11-06"},{"lineNumber":771,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":772,"author":{"gitId":"gok99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":773,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":774,"author":{"gitId":"lhw-1"},"content":"### Other features","lastModifiedDate":"2021-10-30"},{"lineNumber":775,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":776,"author":{"gitId":"lhw-1"},"content":"#### Progress Chart","lastModifiedDate":"2021-10-30"},{"lineNumber":777,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":778,"author":{"gitId":"lhw-1"},"content":"Since each contact has a completion status tied to it with the levels of completion status","lastModifiedDate":"2021-10-30"},{"lineNumber":779,"author":{"gitId":"lhw-1"},"content":"`Complete`, `Ongoing`, or `Incomplete`, Teletubbies will automatically collate the data and","lastModifiedDate":"2021-10-30"},{"lineNumber":780,"author":{"gitId":"lhw-1"},"content":"create a nice pie chart to display the aggregate completion status of the current list.","lastModifiedDate":"2021-10-30"},{"lineNumber":781,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":782,"author":{"gitId":"lhw-1"},"content":"Whenever the list that you are viewing changes (usually when issuing [list commands](#list-commands)),","lastModifiedDate":"2021-10-30"},{"lineNumber":783,"author":{"gitId":"lhw-1"},"content":"the chart will update automatically!","lastModifiedDate":"2021-10-30"},{"lineNumber":784,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":785,"author":{"gitId":"lhw-1"},"content":"#### Convenience features","lastModifiedDate":"2021-10-30"},{"lineNumber":786,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":787,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Sometimes, you may feel hard-pressed from typing these commands repeatedly. You can avoid this by trying out some","lastModifiedDate":"2021-11-08"},{"lineNumber":788,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"of our convenience features in Teletubbies. These include:","lastModifiedDate":"2021-11-08"},{"lineNumber":789,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* Pressing the **[UP]** arrow button on your keyboard to retrieve a previously keyed-in command,","lastModifiedDate":"2021-11-08"},{"lineNumber":790,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":791,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: Tip:","lastModifiedDate":"2021-11-11"},{"lineNumber":792,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"You can only access the previous commands up to the first command keyed in after starting Teletubbies. Once the earliest command is obtained, you will continue to see that command on the text input box.","lastModifiedDate":"2021-11-11"},{"lineNumber":793,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":794,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":795,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":796,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* Pressing the **[DOWN]** arrow button on your keyboard to retrieve the command after the current command,","lastModifiedDate":"2021-11-08"},{"lineNumber":797,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":798,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: Tip:","lastModifiedDate":"2021-11-11"},{"lineNumber":799,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Once the most recent command is obtained, you will continue to see that command on the text input box.","lastModifiedDate":"2021-11-11"},{"lineNumber":800,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":801,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":802,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* Pressing the **[TAB]** key after typing a command to automatically complete and suggest to you the required fields needed for the command word.","lastModifiedDate":"2021-11-08"},{"lineNumber":803,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":804,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: Tip:","lastModifiedDate":"2021-11-11"},{"lineNumber":805,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"For instance, pressing the **[TAB]** key after typing `add` produces `add -n -p -e -a` on the text input box.","lastModifiedDate":"2021-11-11"},{"lineNumber":806,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":807,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Here is an image of Teletubbies before pressing the **[TAB]** key: ![Before pressing Tab](images/tab/GUIImageBeforeTab.png)","lastModifiedDate":"2021-11-11"},{"lineNumber":808,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":809,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"And here is an image of Teletubbies after pressing the **[TAB]** key: ![After pressing Tab](images/tab/GUIImageAfterTab.png)","lastModifiedDate":"2021-11-11"},{"lineNumber":810,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":811,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"It is important to note that pressing the **TAB** key will only work if the given word is a command word. For example,","lastModifiedDate":"2021-11-11"},{"lineNumber":812,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"if you type `ad` and then press the **TAB** key, the given text will remain.","lastModifiedDate":"2021-11-11"},{"lineNumber":813,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":814,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":815,"author":{"gitId":"gok99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":816,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":817,"author":{"gitId":"lhw-1"},"content":"##### Saving the data","lastModifiedDate":"2021-10-30"},{"lineNumber":818,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":819,"author":{"gitId":"tanqiya"},"content":"*Teletubbies* automatically saves the data in the hard disk after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-11-05"},{"lineNumber":820,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":821,"author":{"gitId":"lhw-1"},"content":"For exporting the current data as a separate JSON file, refer to [Exporting contacts](#exporting-contacts-export).","lastModifiedDate":"2021-09-28"},{"lineNumber":822,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":823,"author":{"gitId":"lhw-1"},"content":"#### Loading the data","lastModifiedDate":"2021-10-30"},{"lineNumber":824,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":825,"author":{"gitId":"tanqiya"},"content":"*Teletubbies* will automatically load up the data from your previous session, allowing you to pick up right where you left off. There is no need to load manually.","lastModifiedDate":"2021-11-05"},{"lineNumber":826,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":827,"author":{"gitId":"skythefire"},"content":"For importing a contact list in the JSON file format into the application, refer to [Importing contacts](#importing-contacts-import).","lastModifiedDate":"2021-11-08"},{"lineNumber":828,"author":{"gitId":"skythefire"},"content":"For merging a contact list from your hard disk with the contact list on the application, refer to [Merging contact lists](#merging-contacts-merge)","lastModifiedDate":"2021-11-08"},{"lineNumber":829,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":830,"author":{"gitId":"lhw-1"},"content":"#### Editing the data","lastModifiedDate":"2021-10-30"},{"lineNumber":831,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":832,"author":{"gitId":"tanqiya"},"content":"*Teletubbies* will save the data as a JSON file `[JAR file location]/data/teletubbies.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-11-06"},{"lineNumber":833,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":834,"author":{"gitId":"tanqiya"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: Caution:","lastModifiedDate":"2021-10-22"},{"lineNumber":835,"author":{"gitId":"lhw-1"},"content":"If your changes to the data file makes its format invalid, Teletubbies will discard all data and start with an empty data file at the next run!","lastModifiedDate":"2021-09-28"},{"lineNumber":836,"author":{"gitId":"lhw-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":837,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":838,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":839,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":840,"author":{"gitId":"gok99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":841,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":842,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":843,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":844,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":845,"author":{"gitId":"tanqiya"},"content":"1. Install the *Teletubbies* app in the other computer.","lastModifiedDate":"2021-11-05"},{"lineNumber":846,"author":{"gitId":"tanqiya"},"content":"2. Use the [`export`](#exporting-contacts-export) command to export your contacts as a JSON file. Transfer the contacts file to the other computer.","lastModifiedDate":"2021-11-05"},{"lineNumber":847,"author":{"gitId":"skythefire"},"content":"3. On the other computer, launch the *Teletubbies* app and use the [`import`](#importing-contacts-import) command to import the contacts file that you transferred over.","lastModifiedDate":"2021-11-08"},{"lineNumber":848,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":849,"author":{"gitId":"gok99"},"content":"**Q** How do I change my role after setting it once?\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":850,"author":{"gitId":"gok99"},"content":"1. In the same folder as `teletubbies.jar`, look for the `preferences.json` file.","lastModifiedDate":"2021-11-06"},{"lineNumber":851,"author":{"gitId":"gok99"},"content":"2. In `preferences.json`, locate the `isProfileSet` field and set it to false as follows:","lastModifiedDate":"2021-11-08"},{"lineNumber":852,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":853,"author":{"gitId":"lhw-1"},"content":"  ```","lastModifiedDate":"2021-11-08"},{"lineNumber":854,"author":{"gitId":"gok99"},"content":"     {","lastModifiedDate":"2021-11-08"},{"lineNumber":855,"author":{"gitId":"gok99"},"content":"      ","lastModifiedDate":"2021-11-08"},{"lineNumber":856,"author":{"gitId":"gok99"},"content":"       ...","lastModifiedDate":"2021-11-08"},{"lineNumber":857,"author":{"gitId":"gok99"},"content":"      ","lastModifiedDate":"2021-11-08"},{"lineNumber":858,"author":{"gitId":"gok99"},"content":"       \"userProfile\" : {","lastModifiedDate":"2021-11-08"},{"lineNumber":859,"author":{"gitId":"gok99"},"content":"         \"name\" : \"\",","lastModifiedDate":"2021-11-08"},{"lineNumber":860,"author":{"gitId":"gok99"},"content":"         \"role\" : \"SUPERVISOR\"","lastModifiedDate":"2021-11-08"},{"lineNumber":861,"author":{"gitId":"gok99"},"content":"       },","lastModifiedDate":"2021-11-08"},{"lineNumber":862,"author":{"gitId":"gok99"},"content":"       \"isProfileSet\" : false, // set this field to false","lastModifiedDate":"2021-11-08"},{"lineNumber":863,"author":{"gitId":"gok99"},"content":"      ","lastModifiedDate":"2021-11-08"},{"lineNumber":864,"author":{"gitId":"gok99"},"content":"       ...","lastModifiedDate":"2021-11-08"},{"lineNumber":865,"author":{"gitId":"gok99"},"content":"              ","lastModifiedDate":"2021-11-08"},{"lineNumber":866,"author":{"gitId":"gok99"},"content":"     }","lastModifiedDate":"2021-11-08"},{"lineNumber":867,"author":{"gitId":"lhw-1"},"content":"   ```","lastModifiedDate":"2021-11-08"},{"lineNumber":868,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":869,"author":{"gitId":"gok99"},"content":"3. When you restart teletubbies, you should be able to modify your role with the [profile](#setting-your-profile-profile) command.","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"vigneshsankariyer1234567890":115,"skythefire":120,"tanqiya":62,"gok99":121,"-":135,"lhw-1":316}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"lhw-1"},"content":"    content: \"Teletubbies\";","lastModifiedDate":"2021-10-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"lhw-1":1}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"skythefire"},"content":"user -[USER_COLOR]\u003e ui : \"delete -p 87654321\"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"skythefire"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete -p 87654321\")","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"skythefire":2,"-":36}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"skythefire"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"skythefire"},"content":"Person *--\u003e \"1\" Phone","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"skythefire"},"content":"Person *--\u003e \"1\" Uuid","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"skythefire"},"content":"Person *--\u003e \"1\" CompletionStatus","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"skythefire"},"content":"Person *--\u003e \"0..1\" Email","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"skythefire"},"content":"Person *--\u003e \"0..1\" Address","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"skythefire"},"content":"Person *--\u003e \"0..1\" Remark","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"skythefire":7,"-":17}},{"path":"docs/diagrams/ConfirmExportSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tanqiya"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"tanqiya"},"content":"!include style.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"tanqiya"},"content":"box Ui UI_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"tanqiya"},"content":"participant \"m:MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"tanqiya"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"tanqiya"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"tanqiya"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"tanqiya"},"content":"participant \":InputParser\" as InputParser LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"tanqiya"},"content":"participant \"c:ConfirmExportCommand\" as ConfirmExportCommand LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"tanqiya"},"content":"participant \"uiEffect: ExportUiConsumer\" as UiConsumer LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"tanqiya"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"tanqiya"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"tanqiya"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"tanqiya"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"tanqiya"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"tanqiya"},"content":"[-\u003e MainWindow : executeCommand(\"y\")","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"tanqiya"},"content":"activate MainWindow","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"tanqiya"},"content":"MainWindow -\u003e LogicManager : execute(\"y\")","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"tanqiya"},"content":"activate LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"tanqiya"},"content":"LogicManager -\u003e InputParser : parseCommand(\"y\")","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"tanqiya"},"content":"activate InputParser","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"tanqiya"},"content":"create ConfirmExportCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"tanqiya"},"content":"InputParser -\u003e ConfirmExportCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"tanqiya"},"content":"activate ConfirmExportCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"tanqiya"},"content":"ConfirmExportCommand --\u003e InputParser","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"tanqiya"},"content":"deactivate ConfirmExportCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"tanqiya"},"content":"InputParser --\u003e LogicManager : c","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"tanqiya"},"content":"deactivate InputParser","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"tanqiya"},"content":"LogicManager -\u003e ConfirmExportCommand : execute()","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"tanqiya"},"content":"activate ConfirmExportCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"tanqiya"},"content":"ConfirmExportCommand -\u003e Model : isAwaitingExportConfirmation()","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"tanqiya"},"content":"activate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"tanqiya"},"content":"Model --\u003e ConfirmExportCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"tanqiya"},"content":"create UiConsumer","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"tanqiya"},"content":"ConfirmExportCommand -\u003e UiConsumer","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"tanqiya"},"content":"activate UiConsumer","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"tanqiya"},"content":"UiConsumer --\u003e ConfirmExportCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"tanqiya"},"content":"deactivate UiConsumer","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"tanqiya"},"content":"create CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"tanqiya"},"content":"ConfirmExportCommand -\u003e CommandResult : new CommandResult(.., uiEffect)","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"tanqiya"},"content":"activate CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"tanqiya"},"content":"CommandResult --\u003e ConfirmExportCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"tanqiya"},"content":"deactivate CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"tanqiya"},"content":"ConfirmExportCommand --\u003e LogicManager : result","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"tanqiya"},"content":"deactivate ConfirmExportCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"tanqiya"},"content":"ConfirmExportCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"tanqiya"},"content":"destroy ConfirmExportCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"tanqiya"},"content":"MainWindow\u003c--LogicManager : result","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"tanqiya"},"content":"deactivate LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"tanqiya"},"content":"MainWindow -\u003e CommandResult : executeUiEffect(this)","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"tanqiya"},"content":"activate CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"tanqiya"},"content":"CommandResult -\u003e UiConsumer : accept(m)","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"tanqiya"},"content":"activate UiConsumer","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"tanqiya"},"content":"UiConsumer -\u003e MainWindow : handleFileChooser()","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"tanqiya"},"content":"activate MainWindow","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"tanqiya"},"content":"MainWindow --\u003e UiConsumer :fileToSave","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"tanqiya"},"content":"deactivate MainWindow","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"tanqiya"},"content":"UiConsumer -\u003e Model : getExportAddressBook","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"tanqiya"},"content":"Model --\u003e UiConsumer","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"tanqiya"},"content":"deactivate Model","lastModifiedDate":"2021-11-08"},{"lineNumber":81,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"tanqiya"},"content":"UiConsumer -\u003e UiConsumer : saveAddressBookToPath()","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"tanqiya"},"content":"activate UiConsumer","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"tanqiya"},"content":"deactivate UiConsumer","lastModifiedDate":"2021-11-08"},{"lineNumber":85,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"tanqiya"},"content":"UiConsumer --\u003e CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":87,"author":{"gitId":"tanqiya"},"content":"deactivate UiConsumer","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"tanqiya"},"content":"CommandResult --\u003e MainWindow","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"tanqiya"},"content":"deactivate CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"tanqiya"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"tanqiya":93}},{"path":"docs/diagrams/DeleteActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"skythefire"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"skythefire"},"content":"skinparam ActivityBorderColor black","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"skythefire"},"content":"skinparam ArrowColor black","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"skythefire"},"content":"skinparam ActivityDiamondBorderColor black","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"skythefire"},"content":"skinparam activityDiamondBackgroundColor pink-mistyrose","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"skythefire"},"content":"skinparam activityBackgroundColor powderblue-lightcyan","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"skythefire"},"content":"skinparam TitleFontColor grey","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"skythefire"},"content":"title Activity: Delete a Contact","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"skythefire"},"content":"start","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"skythefire"},"content":":User executes a","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"skythefire"},"content":"Delete command;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"skythefire"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"skythefire"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"skythefire"},"content":"switch ()","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"skythefire"},"content":"case ( [valid index input] )","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"skythefire"},"content":"    :Contact at given index is","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"skythefire"},"content":"    deleted;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"skythefire"},"content":"case ( [valid phone \\n number input] )","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"skythefire"},"content":"    :Contact at given phone","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"skythefire"},"content":"    number is deleted;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"skythefire"},"content":"case ( [invalid delete \\n parameter input] )","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"skythefire"},"content":"    :Invalid delete command","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"skythefire"},"content":"    error message shown;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"skythefire"},"content":"    stop","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"skythefire"},"content":"endswitch","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"skythefire"},"content":":Teletubbies updates","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"skythefire"},"content":"and saves the user\u0027s","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"skythefire"},"content":"contact list;","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"skythefire"},"content":"stop","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"skythefire"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"skythefire":40}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"participant \":InputParser\" as InputParser LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"participant \":UiConsumer\" as UiConsumer LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"skythefire"},"content":"[-\u003e LogicManager : execute(\"delete -i 1\")","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"skythefire"},"content":"LogicManager -\u003e InputParser : parseCommand(\"delete -1 1\")","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"activate InputParser","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"InputParser -\u003e DeleteCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"DeleteCommandParser --\u003e InputParser","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"skythefire"},"content":"InputParser -\u003e DeleteCommandParser : parse(\"delete -i 1\")","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"DeleteCommandParser --\u003e InputParser : d","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"DeleteCommandParser -[hidden]-\u003e InputParser","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"gok99"},"content":"InputParser --\u003e LogicManager : d","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"gok99"},"content":"deactivate InputParser","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"skythefire"},"content":"DeleteCommand -\u003e Model : deletePerson","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"gok99"},"content":"create UiConsumer","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"gok99"},"content":"CommandResult --\u003e UiConsumer","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"gok99"},"content":"activate UiConsumer","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"gok99"},"content":"UiConsumer --\u003e CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"gok99"},"content":"deactivate UiConsumer","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"skythefire":5,"gok99":15,"-":57}},{"path":"docs/diagrams/DeleteSequenceDiagram1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"skythefire"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"skythefire"},"content":"!include style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"skythefire"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"skythefire"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"skythefire"},"content":"participant \":InputParser\" as InputParser LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"skythefire"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"skythefire"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"skythefire"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"skythefire"},"content":"end box","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"skythefire"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"skythefire"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"skythefire"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"skythefire"},"content":"participant \":UniquePersonList\" as UniquePersonList MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"skythefire"},"content":"end box","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"skythefire"},"content":"[-\u003e LogicManager : execute(\"delete -p 87654321\")","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"skythefire"},"content":"activate LogicManager","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"skythefire"},"content":"LogicManager -\u003e InputParser : parseCommand(\"delete -p 87654321\")","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"skythefire"},"content":"activate InputParser","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"skythefire"},"content":"create DeleteCommandParser","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"skythefire"},"content":"InputParser -\u003e DeleteCommandParser","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"skythefire"},"content":"activate DeleteCommandParser","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"skythefire"},"content":"DeleteCommandParser --\u003e InputParser","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"skythefire"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"skythefire"},"content":"InputParser -\u003e DeleteCommandParser : parse(\"-p 87654321\")","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"skythefire"},"content":"activate DeleteCommandParser","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"skythefire"},"content":"create DeleteCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"skythefire"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"skythefire"},"content":"activate DeleteCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"skythefire"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"skythefire"},"content":"deactivate DeleteCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"skythefire"},"content":"DeleteCommandParser --\u003e InputParser : d","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"skythefire"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"skythefire"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"skythefire"},"content":"DeleteCommandParser -[hidden]-\u003e InputParser","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"skythefire"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"skythefire"},"content":"InputParser --\u003e LogicManager : d","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"skythefire"},"content":"deactivate InputParser","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"skythefire"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"skythefire"},"content":"activate DeleteCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"skythefire"},"content":"DeleteCommand -\u003e Model : deletePerson(personToDelete)","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"skythefire"},"content":"activate Model","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"skythefire"},"content":"Model -\u003e AddressBook : removePerson(personToDelete)","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"skythefire"},"content":"activate AddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"skythefire"},"content":"AddressBook -\u003e UniquePersonList: remove(personToDelete)","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"skythefire"},"content":"activate UniquePersonList","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"skythefire"},"content":"UniquePersonList --\u003e AddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"skythefire"},"content":"deactivate UniquePersonList","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"skythefire"},"content":"AddressBook --\u003e Model","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"skythefire"},"content":"deactivate AddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"skythefire"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"skythefire"},"content":"deactivate Model","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"skythefire"},"content":"create CommandResult","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"skythefire"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"skythefire"},"content":"activate CommandResult","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"skythefire"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"skythefire"},"content":"deactivate CommandResult","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":79,"author":{"gitId":"skythefire"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2021-11-08"},{"lineNumber":80,"author":{"gitId":"skythefire"},"content":"deactivate DeleteCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":81,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":82,"author":{"gitId":"skythefire"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"skythefire"},"content":"deactivate LogicManager","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"skythefire"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"skythefire":84}},{"path":"docs/diagrams/DoneSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"!include style.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"tanqiya"},"content":"participant \":InputParser\" as InputParser LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \":DoneCommandParser\" as DoneCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \"d:DoneCommand\" as DoneCommand LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \"completionStatus:CompletionStatus\" as CompletionStatus MODEL_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \"editedPerson:Person\" as EditedPerson MODEL_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"[-\u003e LogicManager : execute(\"done 1\")","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"tanqiya"},"content":"LogicManager -\u003e InputParser : parseCommand(\"done 1\")","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"tanqiya"},"content":"activate InputParser","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"create DoneCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"tanqiya"},"content":"InputParser -\u003e DoneCommandParser","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate DoneCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"tanqiya"},"content":"DoneCommandParser --\u003e InputParser","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate DoneCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"tanqiya"},"content":"InputParser -\u003e DoneCommandParser : parse(\"1\")","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate DoneCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"create DoneCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"DoneCommandParser -\u003e DoneCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate DoneCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"create CompletionStatus","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"DoneCommand -\u003e CompletionStatus","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate CompletionStatus","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"CompletionStatus --\u003e DoneCommand : completionStatus","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate CompletionStatus","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"DoneCommand --\u003e DoneCommandParser : d","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate DoneCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"tanqiya"},"content":"DoneCommandParser --\u003e InputParser : d","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate DoneCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"tanqiya"},"content":"DoneCommandParser -[hidden]-\u003e InputParser","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"destroy DoneCommandParser","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"tanqiya"},"content":"InputParser --\u003e LogicManager : d","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"tanqiya"},"content":"deactivate InputParser","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"LogicManager -\u003e DoneCommand : execute()","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate DoneCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"DoneCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate Model","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Model --\u003e DoneCommand : lastShownList","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate Model","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"create EditedPerson","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"DoneCommand -\u003e EditedPerson","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate EditedPerson","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"EditedPerson --\u003e DoneCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate EditedPerson","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"DoneCommand -\u003e Model : setPerson(editedPerson)","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate Model","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Model --\u003e DoneCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate Model","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"create CommandResult","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"DoneCommand -\u003e CommandResult","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate CommandResult","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"CommandResult --\u003e DoneCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"DoneCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate DoneCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"vigneshsankariyer1234567890":81,"tanqiya":10}},{"path":"docs/diagrams/DownButtonActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"skinparam ActivityBorderColor black","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"skinparam ArrowColor black","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"skinparam ActivityDiamondBorderColor black","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"skinparam activityDiamondBackgroundColor pink-mistyrose","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"skinparam activityBackgroundColor powderblue-lightcyan","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"skinparam TitleFontColor grey","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"start","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":":User presses *DOWN* arrow button;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"switch ()","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"case ( [latest command already retrieved])","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    :Record in logger that there are no more future commands available;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"case ( [else])","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    :Set next command in CommandBox;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"endswitch","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"stop","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@enduml","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"vigneshsankariyer1234567890":28}},{"path":"docs/diagrams/ExportActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tanqiya"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"tanqiya"},"content":"skinparam ActivityBorderColor black","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"tanqiya"},"content":"skinparam ArrowColor black","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"tanqiya"},"content":"skinparam ActivityDiamondBorderColor black","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"tanqiya"},"content":"skinparam activityDiamondBackgroundColor pink-mistyrose","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"tanqiya"},"content":"skinparam activityBackgroundColor powderblue-lightcyan","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"tanqiya"},"content":"skinparam TitleFontColor grey","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"tanqiya"},"content":"title Activity: Export Contact List","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"tanqiya"},"content":"start","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"tanqiya"},"content":":User executes an Export command;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"tanqiya"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"tanqiya"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"tanqiya"},"content":"switch ()","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"tanqiya"},"content":"case ( [Export all contacts] )","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"tanqiya"},"content":"    :Entire contact list","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"tanqiya"},"content":"     is displayed;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"tanqiya"},"content":"case ( [Export contacts \\n with specified tag(s)] )","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"tanqiya"},"content":"    :Filtered contact list","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"tanqiya"},"content":"    is displayed;","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"tanqiya"},"content":"endswitch","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"tanqiya"},"content":":Await Export Confirmation","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"tanqiya"},"content":"command from user;","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"tanqiya"},"content":"switch ()","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"tanqiya"},"content":"case ( [User executes\\n another command] )","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"tanqiya"},"content":"    :Export is cancelled;","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"tanqiya"},"content":"stop","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"tanqiya"},"content":"case ( [User confirms export] )","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"tanqiya"},"content":"     :Open file selector window for user to","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"tanqiya"},"content":"      choose save location and name file;","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"tanqiya"},"content":"     switch ()","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"tanqiya"},"content":"     case( [File chooser is closed] )","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"tanqiya"},"content":"        :Export cancelled and \\nerror message shown;","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"tanqiya"},"content":"        stop","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"tanqiya"},"content":"     case( [User selects file location \\n and names export file])","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"tanqiya"},"content":"        :Teletubbies exports the contact list;","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"tanqiya"},"content":"        stop","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"tanqiya"},"content":"@enduml","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"tanqiya":51}},{"path":"docs/diagrams/ExportSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tanqiya"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"tanqiya"},"content":"!include style.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"tanqiya"},"content":"box Ui UI_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"tanqiya"},"content":"participant \"m:MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"tanqiya"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"tanqiya"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"tanqiya"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"tanqiya"},"content":"participant \":InputParser\" as InputParser LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"tanqiya"},"content":"participant \":ExportCommandParser\" as ExportCommandParser LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"tanqiya"},"content":"participant \"c:ExportCommand\" as ExportCommand LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"tanqiya"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"tanqiya"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"tanqiya"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"tanqiya"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"tanqiya"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"tanqiya"},"content":"[-\u003e MainWindow : executeCommand(\"export\")","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"tanqiya"},"content":"activate MainWindow","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"tanqiya"},"content":"MainWindow -\u003e LogicManager : execute(\"export\")","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"tanqiya"},"content":"activate LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"tanqiya"},"content":"LogicManager -\u003e InputParser : parseCommand(\"export\")","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"tanqiya"},"content":"activate InputParser","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"tanqiya"},"content":"create ExportCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"tanqiya"},"content":"InputParser -\u003e ExportCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"tanqiya"},"content":"activate ExportCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"tanqiya"},"content":"InputParser -\u003e ExportCommandParser : parse(\"export\")","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"tanqiya"},"content":"create ExportCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"tanqiya"},"content":"ExportCommandParser -\u003e ExportCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"tanqiya"},"content":"activate ExportCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"tanqiya"},"content":"ExportCommand --\u003e ExportCommandParser : c","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"tanqiya"},"content":"deactivate ExportCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"tanqiya"},"content":"ExportCommandParser --\u003e InputParser : c","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"tanqiya"},"content":"deactivate ExportCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"tanqiya"},"content":"InputParser --\u003e LogicManager : c","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"tanqiya"},"content":"deactivate InputParser","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"tanqiya"},"content":"LogicManager -\u003e ExportCommand : execute()","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"tanqiya"},"content":"activate ExportCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"tanqiya"},"content":"ExportCommand -\u003e Model : cancelPendingExport()","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"tanqiya"},"content":"activate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"tanqiya"},"content":"ExportCommand -\u003e Model : getFilteredPersonList()","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"tanqiya"},"content":"Model --\u003e ExportCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"tanqiya"},"content":"deactivate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"tanqiya"},"content":"ExportCommand -\u003e ExportCommand : filterPersonList(...)","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"tanqiya"},"content":"activate ExportCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"tanqiya"},"content":"deactivate ExportCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"tanqiya"},"content":"ExportCommand -\u003e Model : updateExportList(filteredPersonList)","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"tanqiya"},"content":"activate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"tanqiya"},"content":"deactivate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"tanqiya"},"content":"create CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"tanqiya"},"content":"ExportCommand -\u003e CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"tanqiya"},"content":"activate CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"tanqiya"},"content":"CommandResult --\u003e ExportCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"tanqiya"},"content":"deactivate CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"tanqiya"},"content":"ExportCommand --\u003e LogicManager : result","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"tanqiya"},"content":"deactivate ExportCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"tanqiya"},"content":"ExportCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"tanqiya"},"content":"destroy ExportCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"tanqiya"},"content":"deactivate CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"tanqiya"},"content":"LogicManager --\u003e MainWindow","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"tanqiya"},"content":"deactivate LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"tanqiya"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"tanqiya":80}},{"path":"docs/diagrams/FilterParserSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"!include style.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"participant \":FilterCommandParser\" as FilterCommandParser LOGIC_COLOR_T4","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR_T3","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"participant \"predicate:PersonHasTagsPredicate\" as Predicate LOGIC_COLOR_T3","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"participant \"command:FilterCommand\" as TagCommand LOGIC_COLOR_T2","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"[-\u003e FilterCommandParser : parse(arguments)","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"activate FilterCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"FilterCommandParser -\u003e ParserUtil : parseTagsWithValue(...)","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"activate ParserUtil","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"ParserUtil --\u003e FilterCommandParser : tags","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"deactivate ParserUtil","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"create Predicate","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"FilterCommandParser -\u003e Predicate : new PersonHasTagsPredicate(tags)","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"activate Predicate","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"Predicate --\u003e FilterCommandParser : predicate","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"deactivate Predicate","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"create TagCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"FilterCommandParser -\u003e TagCommand : new TagCommand(predicate)","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"activate TagCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"TagCommand --\u003e FilterCommandParser : command","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"deactivate TagCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"[\u003c-- FilterCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"deactivate FilterCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"FilterCommandParser -[hidden]-\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"destroy FilterCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"gok99":34}},{"path":"docs/diagrams/FilterSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"!include style.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"participant \":FilterCommand\" as FilterCommand LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"LogicManager -\u003e FilterCommand : execute(model)","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"activate FilterCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"FilterCommand -\u003e Model : updateFilteredPersonsList(predicate)","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"activate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"deactivate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"create CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"FilterCommand -\u003e CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"activate CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"CommandResult --\u003e FilterCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"deactivate CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"FilterCommand --\u003e LogicManager : result","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"deactivate FilterCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"FilterCommand -[hidden]-\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"destroy FilterCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"deactivate LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"gok99":37}},{"path":"docs/diagrams/HelpSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"!include style.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"skinparam defaultFontSize 24","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"Participant \"m:MainWindow\" as mainWindow UI_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR_T4","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"Participant \":HelpCommand\" as command LOGIC_COLOR_T3","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"Participant \"uiConsumer:HelpUiConsumer\" as HelpUiConsumer LOGIC_COLOR_T2","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"Participant \"result:CommandResult\" as commandResult LOGIC_COLOR_T2","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"-\u003e mainWindow","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"activate mainWindow UI_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"mainWindow -[UI_COLOR]\u003e logic : execute(\"help\")","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"activate logic LOGIC_COLOR_T4","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"logic -[LOGIC_COLOR_T4]\u003e command : command.execute(model)","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"activate command LOGIC_COLOR_T3","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"create HelpUiConsumer","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"command -[LOGIC_COLOR_T3]\u003e HelpUiConsumer","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"activate HelpUiConsumer LOGIC_COLOR_T2","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"HelpUiConsumer --[LOGIC_COLOR_T2]\u003e command","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"deactivate HelpUiConsumer","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"create commandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"command -[LOGIC_COLOR_T3]\u003e commandResult : new CommandResult(..., uiConsumer)","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"activate commandResult LOGIC_COLOR_T2","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"commandResult --[LOGIC_COLOR_T2]\u003e command","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"deactivate commandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"command -[LOGIC_COLOR_T3]-\u003e logic : result","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"deactivate command","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"command -[hidden]-\u003e logic","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"destroy command","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"logic --[LOGIC_COLOR_T4]\u003e mainWindow","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"deactivate logic","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"mainWindow -[UI_COLOR]\u003e commandResult : result.executeUiEffect(this)","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"gok99"},"content":"activate commandResult LOGIC_COLOR_T2","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"gok99"},"content":"commandResult -[UI_COLOR]\u003e HelpUiConsumer : uiConsumer.accept(m)","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"gok99"},"content":"activate HelpUiConsumer LOGIC_COLOR_T2","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"gok99"},"content":"HelpUiConsumer -[LOGIC_COLOR_T2]\u003e mainWindow : handleHelp()","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"gok99"},"content":"activate mainWindow UI_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"gok99"},"content":"mainWindow --[UI_COLOR]\u003e HelpUiConsumer","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"gok99"},"content":"deactivate mainWindow","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"gok99"},"content":"HelpUiConsumer --[LOGIC_COLOR_T2]\u003e commandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"gok99"},"content":"deactivate HelpUiConsumer","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"gok99"},"content":"commandResult --[LOGIC_COLOR_T2]\u003e mainWindow","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"gok99"},"content":"deactivate commandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"gok99"},"content":"[\u003c--mainWindow","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"gok99"},"content":"deactivate mainWindow","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"gok99"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"gok99":64}},{"path":"docs/diagrams/HistoryCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"!include style.puml","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \":InputParser\" as InputParser LOGIC_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \"c:HistoryCommand\" as HistoryCommand LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"end box","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \":CommandInputHistory\" as CommandInputHistory MODEL_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \":HistoryManager\" as HistoryManager MODEL_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"end box","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"[-\u003e LogicManager : execute(history)","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate LogicManager","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"LogicManager -\u003e Model : addCommandInput(history)","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate Model","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Model -\u003e CommandInputHistory : addCommandInput(history)","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate CommandInputHistory","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"CommandInputHistory -\u003e HistoryManager : resetFullHistory()","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate HistoryManager","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"HistoryManager --\u003e CommandInputHistory","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate HistoryManager","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"CommandInputHistory -\u003e HistoryManager : commitAndPush(history)","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate HistoryManager","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"HistoryManager --\u003e CommandInputHistory","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate HistoryManager","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"CommandInputHistory --\u003e Model","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate CommandInputHistory","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Model --\u003e LogicManager","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate Model","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"LogicManager -\u003e InputParser : parseCommand(history)","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate InputParser","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"create HistoryCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"InputParser -\u003e HistoryCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate HistoryCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"HistoryCommand --\u003e InputParser","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate HistoryCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"InputParser --\u003e LogicManager : c","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate InputParser","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"LogicManager -\u003e HistoryCommand : c.execute()","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate HistoryCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"HistoryCommand -\u003e Model : getChronologicallyDescendingHistory()","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate Model","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Model -\u003e CommandInputHistory : getChronologicallyDescendingHistory()","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate CommandInputHistory","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"CommandInputHistory -\u003e HistoryManager : resetFullHistory()","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate HistoryManager","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"HistoryManager --\u003e CommandInputHistory","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate HistoryManager","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"CommandInputHistory -\u003e HistoryManager : getHistoryList()","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate HistoryManager","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"HistoryManager --\u003e CommandInputHistory : historyList","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate HistoryManager","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"CommandInputHistory -\u003e CommandInputHistory : Collections.reverse(historyList)","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"CommandInputHistory --\u003e Model : historyList","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate CommandInputHistory","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Model --\u003e HistoryCommand: historyList","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate Model","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"HistoryCommand --\u003e LogicManager : result","lastModifiedDate":"2021-11-06"},{"lineNumber":82,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate HistoryCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"HistoryCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2021-11-06"},{"lineNumber":84,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"destroy HistoryCommand","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":86,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-11-06"},{"lineNumber":87,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate LogicManager","lastModifiedDate":"2021-11-06"},{"lineNumber":88,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@enduml","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"vigneshsankariyer1234567890":88}},{"path":"docs/diagrams/HistoryManagerAlternativeDiagram0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"!include style.puml","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"title 2-Stack solution to `HistoryManager`","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package undoStack {","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State1 as \"__v0:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State2 as \"__v1:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State3 as \"__v2:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State4 as \"__v3:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State5 as \"__v4:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State6 as \"__v5:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State1 -[hidden]up-\u003e State2","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State2 -[hidden]up-\u003e State3","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State3 -[hidden]up-\u003e State4","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State4 -[hidden]up-\u003e State5","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State5 -[hidden]up-\u003e State6","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package redoStack {","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@end","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"vigneshsankariyer1234567890":31}},{"path":"docs/diagrams/HistoryManagerAlternativeDiagram1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"!include style.puml","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"title 2-Stack solution to `HistoryManager`","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package undoStack {","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State1 as \"__v0:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State2 as \"__v1:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State3 as \"__v2:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State1 -[hidden]up-\u003e State2","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State2 -[hidden]up-\u003e State3","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package redoStack {","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     class State4 as \"__v3:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     class State5 as \"__v4:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     class State6 as \"__v5:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State5 -[hidden]up-\u003e State4","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State6 -[hidden]up-\u003e State5","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@end","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"vigneshsankariyer1234567890":26}},{"path":"docs/diagrams/HistoryManagerAlternativeDiagram2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"!include style.puml","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"title 2-Stack solution to `HistoryManager`","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package undoStack {","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State1 as \"__v0:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State2 as \"__v1:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State3 as \"__v2:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State4 as \"__v7:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State1 -[hidden]up-\u003e State2","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State2 -[hidden]up-\u003e State3","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State3 .up. State4","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"note right on link: new State __v7__ was added.","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package redoStack {","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"note bottom of redoStack: Previous states __v4__, __v5__ and __v6__ were purged as redoStack was cleared","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@end","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"vigneshsankariyer1234567890":26}},{"path":"docs/diagrams/HistoryManagerDiagram0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"!include style.puml","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"title Initial HistoryManager state","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package historyStack {","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027    class State1 as \"__v0:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027    class State2 as \"__v1:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027    class State3 as \"__v2:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027State1 -[hidden]up-\u003e State2","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027State2 -[hidden]up-\u003e State3","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027hide State1","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027hide State2","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027hide State3","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"class Pointer as \"stackPointer\" #FFFFFF","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027Pointer -up- State1","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@end","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"vigneshsankariyer1234567890":21}},{"path":"docs/diagrams/HistoryManagerDiagram1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"!include style.puml","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"title HistoryManager after pushing new states","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package historyStack {","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State1 as \"__v0:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State2 as \"__v1:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State3 as \"__v2:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State1 -[hidden]up-\u003e State2","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State2 -[hidden]up-\u003e State3","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027hide State1","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027hide State2","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027hide State3","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"class Pointer as \"stackPointer\" #FFFFFF","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Pointer -left-\u003e State3","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@end","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"vigneshsankariyer1234567890":21}},{"path":"docs/diagrams/HistoryManagerDiagram2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"!include style.puml","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"title HistoryManager after undoing twice","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package historyStack {","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State1 as \"__v0:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State2 as \"__v1:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State3 as \"__v2:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State1 -[hidden]up-\u003e State2","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State2 -[hidden]up-\u003e State3","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027hide State1","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027hide State2","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027hide State3","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"class Pointer as \"stackPointer\" #FFFFFF","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Pointer -left-\u003e State1","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@end","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"vigneshsankariyer1234567890":21}},{"path":"docs/diagrams/HistoryManagerDiagram3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"!include style.puml","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"title HistoryManager after redoing once","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package historyStack {","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State1 as \"__v0:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State2 as \"__v1:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State3 as \"__v2:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State1 -[hidden]up-\u003e State2","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State2 -[hidden]up-\u003e State3","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027hide State1","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027hide State2","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027hide State3","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"class Pointer as \"stackPointer\" #FFFFFF","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Pointer -left-\u003e State2","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@end","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"vigneshsankariyer1234567890":21}},{"path":"docs/diagrams/HistoryManagerDiagram4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"!include style.puml","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"title HistoryManager after pushing new state __v3__","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package historyStack {","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State1 as \"__v0:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State2 as \"__v1:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State3 as \"__v3:T__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State1 -[hidden]up-\u003e State2","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State2 -[hidden]up-\u003e State3","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027hide State1","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027hide State2","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027hide State3","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"class Pointer as \"stackPointer\" #FFFFFF","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Pointer -left-\u003e State3","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"note right on link: __v2__ removed","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@end","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"vigneshsankariyer1234567890":22}},{"path":"docs/diagrams/HistorySequenceToStoreCommandsDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"!include style.puml","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \":InputParser\" as InputParser LOGIC_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \"c:XYZCommand\" as Command LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"end box","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \":CommandInputHistory\" as CommandInputHistory MODEL_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \":HistoryManager\" as HistoryManager MODEL_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"end box","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"[-\u003e LogicManager : execute(someCommand)","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate LogicManager","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"LogicManager -\u003e Model : addCommandInput(someCommand)","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate Model","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Model -\u003e CommandInputHistory : addCommandInput(someCommand)","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate CommandInputHistory","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"CommandInputHistory -\u003e HistoryManager : resetFullHistory()","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate HistoryManager","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"HistoryManager --\u003e CommandInputHistory","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate HistoryManager","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"CommandInputHistory -\u003e HistoryManager : commitAndPush(someCommand)","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate HistoryManager","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"HistoryManager --\u003e CommandInputHistory","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate HistoryManager","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"CommandInputHistory --\u003e Model","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate CommandInputHistory","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Model --\u003e LogicManager","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate Model","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"LogicManager -\u003e InputParser : parseCommand(someCommand)","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate InputParser","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"create Command","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"InputParser -\u003e Command","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate Command","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"note right of Command: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Command --\u003e InputParser","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate Command","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"InputParser --\u003e LogicManager : c","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate InputParser","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"LogicManager -\u003e Command : c.execute()","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate Command","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Command --\u003e LogicManager : result","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate Command","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Command -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"destroy Command","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate LogicManager","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@enduml","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"vigneshsankariyer1234567890":68}},{"path":"docs/diagrams/ImportSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tanqiya"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"tanqiya"},"content":"!include style.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"box Ui UI_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"participant \"m:MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"tanqiya"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"tanqiya"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"participant \":InputParser\" as InputParser LOGIC_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"tanqiya"},"content":"participant \"c:ImportCommand\" as ImportCommand LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"participant \"uiEffect: ImportUiConsumer\" as UiConsumer LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"tanqiya"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"tanqiya"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"tanqiya"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"tanqiya"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"tanqiya"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"[-\u003e MainWindow : executeCommand(\"import\")","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"activate MainWindow","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"MainWindow -\u003e LogicManager : execute(\"import\")","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"tanqiya"},"content":"activate LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"LogicManager -\u003e InputParser : parseCommand(\"import\")","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"activate InputParser","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"tanqiya"},"content":"create ImportCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"InputParser -\u003e ImportCommand","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"tanqiya"},"content":"activate ImportCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"ImportCommand --\u003e InputParser","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"tanqiya"},"content":"deactivate ImportCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"InputParser --\u003e LogicManager : c","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"deactivate InputParser","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"tanqiya"},"content":"LogicManager -\u003e ImportCommand : execute()","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"tanqiya"},"content":"activate ImportCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"create UiConsumer","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"ImportCommand -\u003e UiConsumer","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"gok99"},"content":"activate UiConsumer","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"gok99"},"content":"UiConsumer --\u003e ImportCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"gok99"},"content":"deactivate UiConsumer","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"tanqiya"},"content":"create CommandResult","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"gok99"},"content":"ImportCommand -\u003e CommandResult : new CommandResult(.., uiEffect)","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"tanqiya"},"content":"activate CommandResult","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"gok99"},"content":"CommandResult --\u003e ImportCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"gok99"},"content":"deactivate CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"gok99"},"content":"ImportCommand --\u003e LogicManager : result","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"gok99"},"content":"deactivate ImportCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"gok99"},"content":"ImportCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"gok99"},"content":"destroy ImportCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"gok99"},"content":"MainWindow\u003c--LogicManager : result","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"gok99"},"content":"deactivate LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"gok99"},"content":"MainWindow -\u003e CommandResult : executeUiEffect(this)","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"gok99"},"content":"activate CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"gok99"},"content":"CommandResult -\u003e UiConsumer : accept(m)","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"gok99"},"content":"activate UiConsumer","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"gok99"},"content":"UiConsumer -\u003e MainWindow : handleFileChooser()","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"gok99"},"content":"activate MainWindow","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"gok99"},"content":"MainWindow --\u003e UiConsumer :fileToImport","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"gok99"},"content":"deactivate MainWindow","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"gok99"},"content":"UiConsumer -\u003e Model : setAddressBook()","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"tanqiya"},"content":"activate Model","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"tanqiya"},"content":"deactivate Model","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"gok99"},"content":"UiConsumer --\u003e CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"gok99"},"content":"deactivate UiConsumer","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"gok99"},"content":"CommandResult --\u003e MainWindow","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"tanqiya"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"gok99"},"content":"[\u003c-- MainWindow","lastModifiedDate":"2021-11-08"},{"lineNumber":86,"author":{"gitId":"gok99"},"content":"deactivate MainWindow","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"tanqiya"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"tanqiya":39,"gok99":49}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"Class InputParser","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"    package Command {","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"    Class XYZCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"    Class CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"    Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"    Interface UiConsumer\u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"package UI {","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"Class MainWindow","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"LogicManager .left.|\u003e Logic","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"LogicManager -right-\u003e\"1\" InputParser","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"InputParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"gok99"},"content":"CommandResult -left-\u003e\"1\" UiConsumer","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"gok99"},"content":"UiConsumer .down.\u003e MainWindow : consumes \u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"gok99":15,"-":39}},{"path":"docs/diagrams/MergeSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tanqiya"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"tanqiya"},"content":"!include style.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"tanqiya"},"content":"box Ui UI_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"tanqiya"},"content":"participant \"m:MainWindow\" as MainWindow UI_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"tanqiya"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"tanqiya"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"tanqiya"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"tanqiya"},"content":"participant \":InputParser\" as InputParser LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"tanqiya"},"content":"participant \"c:MergeCommand\" as MergeCommand LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"tanqiya"},"content":"participant \"uiEffect: MergeUiConsumer\" as UiConsumer LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"tanqiya"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"tanqiya"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"tanqiya"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"tanqiya"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"tanqiya"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"tanqiya"},"content":"[-\u003e MainWindow : executeCommand(\"merge\")","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"tanqiya"},"content":"activate MainWindow","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"tanqiya"},"content":"MainWindow -\u003e LogicManager : execute(\"merge\")","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"tanqiya"},"content":"activate LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"tanqiya"},"content":"LogicManager -\u003e InputParser : parseCommand(\"merge\")","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"tanqiya"},"content":"activate InputParser","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"tanqiya"},"content":"create MergeCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"tanqiya"},"content":"InputParser -\u003e MergeCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"tanqiya"},"content":"activate MergeCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"tanqiya"},"content":"MergeCommand --\u003e InputParser","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"tanqiya"},"content":"deactivate MergeCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"tanqiya"},"content":"InputParser --\u003e LogicManager : c","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"tanqiya"},"content":"deactivate InputParser","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"tanqiya"},"content":"LogicManager -\u003e MergeCommand : execute()","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"tanqiya"},"content":"activate MergeCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"tanqiya"},"content":"create UiConsumer","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"tanqiya"},"content":"MergeCommand -\u003e UiConsumer","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"tanqiya"},"content":"activate UiConsumer","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"tanqiya"},"content":"UiConsumer --\u003e MergeCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"tanqiya"},"content":"deactivate UiConsumer","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"tanqiya"},"content":"create CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"tanqiya"},"content":"MergeCommand -\u003e CommandResult : new CommandResult(.., uiEffect)","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"tanqiya"},"content":"activate CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"tanqiya"},"content":"CommandResult --\u003e MergeCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"tanqiya"},"content":"deactivate CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"tanqiya"},"content":"MergeCommand --\u003e LogicManager : result","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"tanqiya"},"content":"deactivate MergeCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"tanqiya"},"content":"MergeCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"tanqiya"},"content":"destroy MergeCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"tanqiya"},"content":"MainWindow\u003c--LogicManager : result","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"tanqiya"},"content":"deactivate LogicManager","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"tanqiya"},"content":"MainWindow -\u003e CommandResult : executeUiEffect(this)","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"tanqiya"},"content":"activate CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"tanqiya"},"content":"CommandResult -\u003e UiConsumer : accept(m)","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"tanqiya"},"content":"activate UiConsumer","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"tanqiya"},"content":"UiConsumer -\u003e MainWindow : handleFileChooser()","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"tanqiya"},"content":"activate MainWindow","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"tanqiya"},"content":"MainWindow --\u003e UiConsumer :fileToMerge","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"tanqiya"},"content":"deactivate MainWindow","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"tanqiya"},"content":"UiConsumer -\u003e Model : mergeAddressBook()","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"tanqiya"},"content":"activate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"tanqiya"},"content":"deactivate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"tanqiya"},"content":"UiConsumer --\u003e CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"tanqiya"},"content":"deactivate UiConsumer","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"tanqiya"},"content":"CommandResult --\u003e MainWindow","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"tanqiya"},"content":"deactivate CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"tanqiya"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"tanqiya":86}},{"path":"docs/diagrams/ModelCancelPendingExportSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"!include style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \":ModelManager\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \":VersionedAddressBook\" as VersionedAddressBook MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \":HistoryManager\" as HistoryManager MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"end box","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"[-\u003e Model : cancelPendingExport()","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate Model","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"alt isAwaitingExportConfirmation \u0026\u0026 isExportListModified","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    Model -\u003e Model : undoVersionedAddressBookAndCommit()","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    activate Model","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    Model -\u003e VersionedAddressBook : undo()","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    activate VersionedAddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    deactivate VersionedAddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    Model -\u003e VersionedAddressBook: commitWithoutSavingCurrentState()","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    activate VersionedAddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    VersionedAddressBook -\u003e HistoryManager: HistoryManager.clearedCopy(addressBookHistoryManager)","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    activate HistoryManager","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    deactivate HistoryManager","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    VersionedAddressBook -\u003e VersionedAddressBook: setAddressBookHistoryManager(addressBookHistoryManager)","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    activate VersionedAddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    deactivate VersionedAddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    deactivate VersionedAddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    deactivate Model","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Model -\u003e Model: resetExportConfirmation()","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate Model","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate Model","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Model -\u003e Model: resetExportListModified()","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate Model","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate Model","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"vigneshsankariyer1234567890":50}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface ReadOnlyAddressBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Interface ObservableList \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Class CommandInputHistory","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Class VersionedAddressBook","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Package Person {","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Class Remark","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Class Uuid","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Package Tag {","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Class Tag","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Class CompletionStatusTag","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Model .right.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Model .left.\u003e ObservableList","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"ModelManager *-down-\u003e \"1\" VersionedAddressBook","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"ModelManager *-right-\u003e \"1\" CommandInputHistory","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027ModelManager *-right-\u003e \"1\" CommandInputHistory","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"ModelManager -left-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"VersionedAddressBook -right-|\u003e AddressBook","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Person *--\u003e CompletionStatusTag","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Person \"1\" -- \"*\" Tag","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Person *--\u003e \"1\" Name","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Person *--\u003e \"1\" Phone","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Person *--\u003e \"1\" Email","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Person *--\u003e \"1\" Address","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Person *--\u003e \"1\" Uuid","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Person *--\u003e \"1\" Remark","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027Name -[hidden]right-\u003e Phone","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027Phone -[hidden]right-\u003e Address","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027Address -[hidden]right-\u003e Email","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027ModelManager -down-\u003e\"~* filtered\" Person","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"vigneshsankariyer1234567890":37,"-":38}},{"path":"docs/diagrams/ModelGetExportAddressBookSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"!include style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \":ModelManager\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \"versionedAddressBook:\\nVersionedAddressBook\" as VersionedAddressBook MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \"toExport:AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \":HistoryManager\" as HistoryManager MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"end box","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"[-\u003e Model : getExportAddressBook()","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate Model","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"create AddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Model -\u003e AddressBook: new AddressBook(versionedAddressBook)","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate AddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"AddressBook --\u003e Model","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate AddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"alt isExportListModified","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    Model -\u003e Model : undoVersionedAddressBookAndCommit()","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    activate Model","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    Model -\u003e VersionedAddressBook : undo()","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    activate VersionedAddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    deactivate VersionedAddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    Model -\u003e VersionedAddressBook: commitWithoutSavingCurrentState()","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    activate VersionedAddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    VersionedAddressBook -\u003e HistoryManager: HistoryManager.clearedCopy(addressBookHistoryManager)","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    activate HistoryManager","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    deactivate HistoryManager","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    VersionedAddressBook -\u003e VersionedAddressBook: setAddressBookHistoryManager(addressBookHistoryManager)","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    activate VersionedAddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    deactivate VersionedAddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    deactivate VersionedAddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    deactivate Model","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Model -\u003e Model: resetExportConfirmation()","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate Model","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate Model","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Model -\u003e Model: resetExportListModified()","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate Model","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate Model","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"[\u003c-- Model: toExport","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate Model","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"vigneshsankariyer1234567890":57}},{"path":"docs/diagrams/ModelUpdateExportListSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"!include style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \":ModelManager\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \"versionedAddressBook:\\nVersionedAddressBook\" as VersionedAddressBook MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \"copy:ReadOnlyAddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"end box","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"[-\u003e Model : updateExportList(filteredPersonList)","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate Model","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Model -\u003e Model: setAwaitingExportConfirmation(true)","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Model -\u003e VersionedAddressBook: setPersons(filteredPersonList)","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate VersionedAddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate VersionedAddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"create AddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Model -\u003e AddressBook: new AddressBook(versionedAddressBook)","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate AddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"AddressBook --\u003e Model","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate AddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Model -\u003e VersionedAddressBook: getMostRecentReadOnlyAddressBook()","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate VersionedAddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"VersionedAddressBook --\u003e Model: mostRecentState","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate VersionedAddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"alt !checkEqualityOfAddressBooks(copy, mostRecentState)","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    Model -\u003e VersionedAddressBook: commitCurrentStateAndSave()","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    activate VersionedAddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    deactivate VersionedAddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    Model -\u003e Model: setExportListModified(true)","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"end","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"destroy AddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate Model","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"vigneshsankariyer1234567890":42}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"Class InputParser","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"HiddenOutside ..\u003e InputParser","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"InputParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"InputParser ..\u003e Command : returns \u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"gok99":4,"-":34}},{"path":"docs/diagrams/ProfileActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"skinparam ActivityBorderColor black","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"skinparam ArrowColor black","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"skinparam ActivityDiamondBorderColor black","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"skinparam activityDiamondBackgroundColor pink-mistyrose","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"skinparam activityBackgroundColor powderblue-lightcyan","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"skinparam TitleFontColor grey","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"title Activity: Create a Profile","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"start","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":":User executes a","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"Profile command with","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"the correct syntax;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"switch ()","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"case ( [valid role input] )","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"    :Profile is set using the","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"    given name and role;","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"case ( [invalid role input] )","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"    :Invalid profile command","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"    error message shown;","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"    stop","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"endswitch","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":":Teletubbies saves the","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"user\u0027s name and role as","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"profile (cannot be changed","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"in future sessions);","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"stop","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"@enduml","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"lhw-1":39}},{"path":"docs/diagrams/ProfileResetActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"skinparam ActivityBorderColor black","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"skinparam ArrowColor black","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"skinparam ActivityDiamondBorderColor black","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"skinparam activityDiamondBackgroundColor pink-mistyrose","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"skinparam activityBackgroundColor powderblue-lightcyan","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"skinparam TitleFontColor grey","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"title Activity: Reset a Profile","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"start","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":":User executes a","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"Profile command with","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"the correct syntax;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"switch ()","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"case ( [need to change profile] )","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"    :User deletes the","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"    preferences.json;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"case ( [no need to change profile] )","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"    :User continues to use","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"    Teletubbies with the","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"    current profile;","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"    stop","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"endswitch","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":":User starts up a","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"new session of","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"Teletubbies;","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":":Teletubbies creates","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"a new preferences.json","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"with an empty name by","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"default, and a default","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"role of \"Telemarketer\";","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"lhw-1"},"content":":User executes a","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"lhw-1"},"content":"Profile command with","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"lhw-1"},"content":"the correct syntax;","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"lhw-1"},"content":"stop","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"lhw-1"},"content":"@enduml","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"lhw-1":47}},{"path":"docs/diagrams/ProfileSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"@startuml","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"!include style.puml","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"participant \":InputParser\" as InputParser LOGIC_COLOR","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"participant \":ProfileCommandParser\" as ProfileCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"participant \"p:ProfileCommand\" as ProfileCommand LOGIC_COLOR","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"end box","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"participant \"userProfile:UserProfile\" as UserProfile MODEL_COLOR","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"end box","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"skythefire"},"content":"[-\u003e LogicManager : execute(\"profile -n NAME \\n -role TELEMARKETER\")","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"activate LogicManager","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"skythefire"},"content":"LogicManager -\u003e InputParser : parseCommand(\"profile -n NAME \\n -role TELEMARKETER\")","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"activate InputParser","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"create ProfileCommandParser","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"InputParser -\u003e ProfileCommandParser","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"activate ProfileCommandParser","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"ProfileCommandParser --\u003e InputParser","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"deactivate ProfileCommandParser","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"skythefire"},"content":"InputParser -\u003e ProfileCommandParser : parse(\"-n NAME \\n -role TELEMARKETER\")","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"activate ProfileCommandParser","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"create ProfileCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"ProfileCommandParser -\u003e ProfileCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"activate ProfileCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"create UserProfile","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"ProfileCommand -\u003e UserProfile","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"activate UserProfile","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"lhw-1"},"content":"UserProfile --\u003e ProfileCommand : userProfile","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"lhw-1"},"content":"deactivate UserProfile","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"lhw-1"},"content":"ProfileCommand --\u003e ProfileCommandParser : p","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"lhw-1"},"content":"deactivate ProfileCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"lhw-1"},"content":"ProfileCommandParser --\u003e InputParser : p","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"lhw-1"},"content":"deactivate ProfileCommandParser","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"lhw-1"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"lhw-1"},"content":"ProfileCommandParser -[hidden]-\u003e InputParser","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"lhw-1"},"content":"destroy ProfileCommandParser","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"lhw-1"},"content":"InputParser --\u003e LogicManager : p","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"lhw-1"},"content":"deactivate InputParser","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"lhw-1"},"content":"LogicManager -\u003e ProfileCommand : execute()","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"lhw-1"},"content":"activate ProfileCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"lhw-1"},"content":"ProfileCommand --\u003e Model : setUserProfile(userProfile)","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"lhw-1"},"content":"activate Model","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"lhw-1"},"content":"Model --\u003e ProfileCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"lhw-1"},"content":"deactivate Model","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"lhw-1"},"content":"create CommandResult","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"lhw-1"},"content":"ProfileCommand -\u003e CommandResult","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"lhw-1"},"content":"activate CommandResult","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"lhw-1"},"content":"CommandResult --\u003e ProfileCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"lhw-1"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"lhw-1"},"content":"ProfileCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"lhw-1"},"content":"deactivate ProfileCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"lhw-1"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"lhw-1"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"lhw-1"},"content":"destroy ProfileCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"lhw-1"},"content":"@enduml","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"skythefire":3,"lhw-1":75}},{"path":"docs/diagrams/TagParserSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"!include style.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"participant \":TagCommandParser\" as TagCommandParser LOGIC_COLOR_T4","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR_T3","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"participant \":TagCommand\" as TagCommand LOGIC_COLOR_T2","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"[-\u003e TagCommandParser : parse(arguments)","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"activate TagCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"TagCommandParser -\u003e ParserUtil : parseRange()","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"activate ParserUtil","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"ParserUtil --\u003e TagCommandParser : range","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"deactivate ParserUtil","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"create TagCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"TagCommandParser -\u003e TagCommand : new TagCommand(range, tagName, tagValue, isSupervisorOnly)","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"activate TagCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"TagCommand --\u003e TagCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"deactivate TagCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"[\u003c-- TagCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"deactivate TagCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"TagCommandParser -[hidden]-\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"destroy TagCommandParser","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"gok99":28}},{"path":"docs/diagrams/TagSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"@startuml","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"!include style.puml","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"participant \":TagCommand\" as TagCommand LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"participant \"editedPerson:Person\" as Person MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"end box","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"LogicManager -\u003e TagCommand : execute(model)","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"activate TagCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"TagCommand -\u003e Model : getPersonsFromRange(range)","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"activate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"Model --\u003e TagCommand : persons","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"deactivate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"loop for every person in persons","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"    TagCommand -\u003e TagCommand : generateNewTag(...)","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"    activate TagCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"    TagCommand --\u003e TagCommand : newTag","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"    deactivate TagCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"    create Person","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"    TagCommand -\u003e Person","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"    activate Person","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"    Person --\u003e TagCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"    deactivate Person","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"    TagCommand -\u003e Model : setPerson(person, editedPerson)","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"    activate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"    deactivate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"end","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"create CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"TagCommand -\u003e CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"activate CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"CommandResult --\u003e TagCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"deactivate CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"gok99"},"content":"TagCommand --\u003e LogicManager : result","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"gok99"},"content":"deactivate TagCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"gok99"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"gok99"},"content":"TagCommand -[hidden]-\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"gok99"},"content":"destroy TagCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"gok99"},"content":"@enduml","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"gok99":52}},{"path":"docs/diagrams/UndoRedoState0.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title Initial state","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package History {","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State1 as \"__tb0:ReadOnlyAddressBook__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State2 as \"__ab1:ReadOnlyAddressBook__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State3 as \"__ab2:ReadOnlyAddressBook__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"hide State2","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"skythefire"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Pointer -up- State1","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"vigneshsankariyer1234567890":5,"skythefire":1,"-":14}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"title After command \"done 1\"","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package History \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State1 as \"__tb0:ReadOnlyAddressBook__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State2 as \"__tb1:ReadOnlyAddressBook__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State3 as \"__tb2:ReadOnlyAddressBook__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State1 -[hidden]right- State2","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State2 -[hidden]right- State3","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"skythefire"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Pointer -up- State2","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"vigneshsankariyer1234567890":8,"skythefire":1,"-":13}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"title After command \"delete -i 1\"","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package History \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State1 as \"__tb0:ReadOnlyAddressBook__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State2 as \"__tb1:ReadOnlyAddressBook__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State3 as \"__tb2:ReadOnlyAddressBook__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State1 -[hidden]right- State2","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State2 -[hidden]right- State3","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"skythefire"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Pointer -up- State3","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"vigneshsankariyer1234567890":8,"skythefire":1,"-":12}},{"path":"docs/diagrams/UndoRedoState3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"undo\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package History \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State1 as \"__tb0:ReadOnlyAddressBook__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State2 as \"__tb1:ReadOnlyAddressBook__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State3 as \"__tb2:ReadOnlyAddressBook__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State1 -[hidden]right- State2","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State2 -[hidden]right- State3","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"skythefire"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Pointer -up- State2","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"vigneshsankariyer1234567890":7,"skythefire":1,"-":13}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"title After command \"find Alex\"","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package History \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State1 as \"__tb0:ReadOnlyAddressBook__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State2 as \"__tb1:ReadOnlyAddressBook__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State3 as \"__tb2:ReadOnlyAddressBook__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State1 -[hidden]right- State2","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State2 -[hidden]right- State3","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"skythefire"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Pointer -up- State2","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"vigneshsankariyer1234567890":8,"skythefire":1,"-":12}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"title After command \"clear\"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package History \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State1 as \"__tb0:ReadOnlyAddressBook__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State2 as \"__tb1:ReadOnlyAddressBook__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    class State3 as \"__tb3:ReadOnlyAddressBook__\"","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State1 -[hidden]right- State2","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"State2 -[hidden]right- State3","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"skythefire"},"content":"class Pointer as \"Current State\" #FFFFFF","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Pointer -up- State3","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"note right on link: State tb2 removed and no longer stored.","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"vigneshsankariyer1234567890":8,"skythefire":1,"-":13}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"participant \":InputParser\" as InputParser LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"participant \":VersionedAddressBook\" as VersionedAddressBook MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"participant \":HistoryManager\" as HistoryManager MODEL_COLOR","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"LogicManager -\u003e InputParser : parseCommand(undo)","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"activate InputParser","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"InputParser -\u003e UndoCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"UndoCommand --\u003e InputParser","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"InputParser --\u003e LogicManager : u","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"deactivate InputParser","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"UndoCommand -\u003e Model : undoAddressBook()","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Model -\u003e VersionedAddressBook : undo()","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"activate VersionedAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"VersionedAddressBook -\u003e HistoryManager : undo()","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"activate HistoryManager","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"HistoryManager -\u003e HistoryManager : peek()","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"HistoryManager --\u003e VersionedAddressBook : undoneState","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"deactivate HistoryManager","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"VersionedAddressBook -\u003e VersionedAddressBook :resetData(undoneState)","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"VersionedAddressBook --\u003e Model :","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"deactivate VersionedAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"vigneshsankariyer1234567890":11,"gok99":7,"-":45}},{"path":"docs/diagrams/UpButtonActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@startuml","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"skinparam ActivityBorderColor black","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"skinparam ArrowColor black","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"skinparam ActivityDiamondBorderColor black","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"skinparam activityDiamondBackgroundColor pink-mistyrose","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"skinparam activityBackgroundColor powderblue-lightcyan","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"skinparam TitleFontColor grey","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"start","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":":User presses *UP* arrow button;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"switch ()","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"case ( [earliest command already retrieved])","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    :Record in logger that there are no more previous commands available;","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"case ( [else])","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    :Set previous command in CommandBox;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"endswitch","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"stop","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"@enduml","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"vigneshsankariyer1234567890":28}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"tanqiya"},"content":"!define STORAGE_COLOR_T1 #EDDC65","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"tanqiya"},"content":"!define LOOP_COLOR #DCDCDC","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"skinparam BackgroundColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"hide members","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"tanqiya":3,"-":74}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"Participant \":InputParser\" as abp LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"ecp -\u003e ec ++: index, editPersonDescriptor","lastModifiedDate":"2019-06-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"gok99":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"tanqiya"},"content":"title: Teletubbies","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-W15-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-W15-4/tp/actions)","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-W15-4/tp/branch/master/graph/badge.svg?token\u003dO8QOII6T93)](https://codecov.io/gh/AY2122S1-CS2103T-W15-4/tp)","lastModifiedDate":"2021-09-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"tanqiya"},"content":"Teletubbies is a desktop app for telemarketers and their supervisors to manage their customer lists.","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"tanqiya"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"tanqiya"},"content":"* If you are interested in using Teletubbies, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"tanqiya"},"content":"* If you are interested about developing Teletubbies, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"tanqiya":5,"gok99":1,"-":13}},{"path":"docs/team/gok99.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"---","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"layout: page","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"title: Gokul Rajiv\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"---","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"### Project: Teletubbies","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"Teletubbies is a desktop application developed and designed for telemarketers and telemarketing supervisors to help manage their customer contacts. Teletubbies allow users to create a checklist based on a set of customer contact data, with additional features such as tagging and viewing statistics to help improve their workflow.","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"* **Tag-related features**:","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"    * Improved tags with the addition of a tag value field and accessibility based on the user\u0027s role. (Pull request [\\#71](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/71), [\\#80](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/80))","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"      * Justification: It is likely that users would want to have tags with specific values (e.g `assignee: Jason`) or disallow their employees from editing these tags.","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"    * `tag` (for adding tags) and `tagrm` (for removing tags) that allows users to tag contacts in large batches with a range of indices. (Pull request [\\#80](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/80))","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"    * `filter` and `export` commands that allow users to specify contacts with their tags. (Pull request [\\#71](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/71), [\\#80](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/80), [\\#43](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/43))","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"      * Justification: Tags would be significantly more useful, if tagged users can easily be exported in batch. For example, a supervisor might want to export all contacts assigned to their employee Joanne.","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"* **Auto-complete feature**:","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"    * Users can press the [TAB] key after typing the name of a command to autofill recommended flags for the command. (Pull request [\\#87](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/87), [\\#167](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/167))","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"      * Justification: Typing out flags for a command can be cumbersome. Autofill speeds up this process and allows users to avoid looking up the help message.","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"* **GUI key bindings**:","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"    * Set-up key bindings for [UP], [DOWN] (for command history) and [TAB] (for autocomplete) keys, to trigger actions on key-presses. (Pull request [\\#84](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/84))","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"    ","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"    * Improved Tag feature (as mentioned above) ","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"    * Improved workflow for creating commands with UI effects, with the help of `UiConsumer` which encapsulates changes to the UI (like a window pop-up), and reduces the overhead for generating new UI effects. (Pull requests [\\#43](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/43), [\\#182](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/182))","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"    ","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dgok99\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dgok99\u0026tabRepo\u003dAY2122S1-CS2103T-W15-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"* **Project Management**:","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"    * Managed release `v1.2` on github","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"    * Implemented pre-push git hooks to run tests before code is pushed to github","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"* **Documentation**:","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"    * User Guide:","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"        * Added documentation for the features `tag`, `tagrm`, `export` and `filter`.","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        * Added instructions for resetting user role.","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"    * Developer Guide:","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"        * Added implementation details of `Logic` and the `UiConsumer`, `tag`, and `filter` feature.","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"* **Community**:","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"    * PRs reviewed (with non-trivial review comments): (examples: [1](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/42), [2](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/38), [3](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/39))","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"gok99"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](https://github.com/gok99/ped/issues/2), [2](https://github.com/gok99/ped/issues/1))","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"vigneshsankariyer1234567890":1,"gok99":44}},{"path":"docs/team/lhw-1.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"layout: page","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"title: Lee Hyung Woon\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"### Project: Teletubbies","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"Teletubbies is a desktop application developed and designed for telemarketers and telemarketing supervisors to help manage their customer contacts. Teletubbies allow users to create a checklist based on a set of customer contact data, with additional features such as tagging and viewing statistics to help improve their workflow.","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"* **New Feature** (v1.2): Added the ability to set a profile. (Pull Request [\\#42](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/42), Pull Request [\\#90](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/90))","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"  * What it does: allows the user to set a profile for Teletubbies, with the user\u0027s name and role (Telemarketer / Supervisor).","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"  * Justification: This feature enhances the product because the user can now access commands and functionalities that are catered to their roles.","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"* **New Feature** (v1.3): Added the ability to see the current progress on a pie chart. (Pull Request [\\#82](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/82))","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"  * What it does: allows the user to view the aggregated number of `COMPLETE`, `ONGOING`, and `INCOMPLETE` contacts via a colour-coded JavaFX pie chart.","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"  * Justification: This feature enhances the product significantly because the user can now handily keep track of their progress, especially for large contact lists.","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"* **New Feature** (v1.3): Added the ability to see the current role. (Pull Request [\\#88](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/88))","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"  * What it does: allows the user to view their current role on the menu bar.","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"  * Justification: This feature enhances the product because the user can now refer to their current role, and hence know what are the functionalities currently available to them.","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dlhw-1\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dlhw-1\u0026tabRepo\u003dAY2122S1-CS2103T-W15-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"* **Project management**:","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"  * Managed release `v1.3.1` (1 release) on GitHub","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"  * Added a comprehensive feature log to outline all the changes made from v1.2 to v1.3.1","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"  * (v1.3) Updated the Help feature from a window that shows a copiable link, to a full-fledged web view. (Pull Request [\\#55](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/55))","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"  * (v1.3) Updated the copy feature to a clipboard button that is more accessible to users, so that users can simply click on the button to copy the phone number to their clipboard. (Pull Request [\\#81](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/81))","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"  * (v1.3) Updated the GUI Layout to include the chart feature. (Pull Request [\\#89](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/89))","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"  * (v1.4) Fixed and updated the inconsistencies between the Result display texts and the User Guide, raised during the PE Dry-run. (Pull Request [\\#152](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/152))","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"  * (v1.4) Tweaked GUI according to issues raised during the PE Dry-run. (Pull Request [\\#155](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/155))","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"  * (v1.4) Tweaked GUI according to issues raised during the PE Dry-run, and updated the GUI Color Scheme. (Pull Request [\\#172](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/172), Pull Request [\\#188](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/188))","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"* **Documentation**:","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"  * User Guide:","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"    * Added documentation for the `save`, `load`, and `edit` features. (Pull Request [\\#24](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/24))","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"lhw-1"},"content":"    * Added documentation for the `profile` feature. (Pull Request [\\#42](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/42))","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"lhw-1"},"content":"    * Updated the User Guide in every section to enhance readability, consistency, and navigability. (Pull Request [\\#152](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/152))","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"lhw-1"},"content":"    * Tweaked the User Guide in the `profile` and `help` sections. (Pull Request [\\#190](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/190), Pull Request [\\#192](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/192))","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"lhw-1"},"content":"  * Developer Guide:","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"lhw-1"},"content":"    * Added user stories. (Pull Request [\\#25](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/25))","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"lhw-1"},"content":"    * Added implementation details for the `profile` feature. (Pull Request [\\#68](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/68))","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"lhw-1"},"content":"    * Updated the Developer Guide in various sections to enhance readability, consistency, and navigability. (Pull Request [\\#68](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/68))","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"lhw-1"},"content":"    * Updated implementation details and considerations for the `profile` feature. (Pull Request [\\#181](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/181))","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"lhw-1"},"content":"    * Added the Efforts section in the Developer Guide. (Pull Request [\\#201](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/201))","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"lhw-1"},"content":"* **Community**:","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"lhw-1"},"content":"  * PRs reviewed (with non-trivial review comments): [1](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/47), [2](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/69)","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"lhw-1"},"content":"  * Reported bugs and suggestions for other teams in the class: [1](https://github.com/lhw-1/ped/issues/5), [2](https://github.com/lhw-1/ped/issues/2)","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"skythefire":1,"lhw-1":52}},{"path":"docs/team/skythefire.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"skythefire"},"content":"---","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"skythefire"},"content":"layout: page","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"skythefire"},"content":"title: Tan Ming Ann\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"skythefire"},"content":"---","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"skythefire"},"content":"### Project: Teletubbies","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"skythefire"},"content":"Teletubbies is a desktop application developed and designed for telemarketers and telemarketing supervisors to help manage their customer contacts. Teletubbies allow users to create a checklist based on a set of customer contact data, with additional features such as tagging and viewing statistics to help improve their workflow.","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"skythefire"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"skythefire"},"content":"* **New Feature**: Added the ability to add remarks to a customer.","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"skythefire"},"content":"  * What it does: Allows the user to add a remark to a customer using the `remark` command","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"skythefire"},"content":"  * Justification: The existing `tag` command is not ideal for comments longer then 1-2 words. Telemarketers may need to write down notes for certain customers such as “Need to call back for confirmation”.","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"skythefire"},"content":"  * Credits: Reused from [SE-EDU Remark Command Tutorial](https://nus-cs2103-ay2122s1.github.io/tp/tutorials/AddRemark.html)","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"skythefire"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"skythefire"},"content":"  * Updated contacts such that only name and phone number are mandatory fields, to make the application more customized for telemarketing (Pull request [\\#44](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/44))","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"skythefire"},"content":"    * Justification: Telemarketers needs to contact customers via their phone number hence it is logical to make phone numbers a compulsory field.","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"skythefire"},"content":"  * Allow deletion of contacts by referencing their phone number (Pull request [\\#38](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/38))","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"skythefire"},"content":"    * Justification: Since the telemarketers utilise customers phone numbers frequently, it will be useful for them to interact with their contact lists with their phone numbers.","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"skythefire"},"content":"  * Disallow duplicate phone numbers in Teletubbies (Pull request [\\#72](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/72))","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"skythefire"},"content":"    * Justification: Phone numbers should be unique, in order to facilitate deletion of contacts via phone number.","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"skythefire"},"content":"  * Removed tag related features from `add` and `edit` commands, to allow tag handling to be done solely through the `tag` command (Pull request [\\#160](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/160))","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"skythefire"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dskythefire\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dskythefire\u0026tabRepo\u003dAY2122S1-CS2103T-W15-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"skythefire"},"content":"* **Documentation**:","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"skythefire"},"content":"  * User Guide:","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"skythefire"},"content":"    * Added documentation for the features `add`,`delete` and `remark`.","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"skythefire"},"content":"    * Did cosmetic tweaks to existing documentation of features.","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"skythefire"},"content":"  * Developer Guide:","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"skythefire"},"content":"    * Added implementation details and UML diagram of the `delete` feature.","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"skythefire"},"content":"    * Added implementation details of the autocomplete feature.","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"skythefire"},"content":"* **Community**:","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"skythefire"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](https://github.com/skythefire/ped/issues/1), [2](https://github.com/skythefire/ped/issues/4))","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"skythefire":36}},{"path":"docs/team/tanqiya.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tanqiya"},"content":"---","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"tanqiya"},"content":"layout: page","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"tanqiya"},"content":"title: Tan Qiya\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"tanqiya"},"content":"---","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"tanqiya"},"content":"### Project: Teletubbies","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"tanqiya"},"content":"Teletubbies is a desktop application developed and designed for telemarketers and telemarketing supervisors to help manage their customer contacts. Teletubbies allow users to create a checklist based on a set of customer contact data, with additional features such as tagging and viewing statistics to help improve their workflow.","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"tanqiya"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"tanqiya"},"content":"* **New Feature**: Added the command to **import** contact files.","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"tanqiya"},"content":"    * What it does: allows the user to import a JSON file containing contacts and replace the current contact list.","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"tanqiya"},"content":"    * Justification: This feature simplifies the process of switching between data files because users can use the command to conveniently import a new file from a specified file location rather than manually editing the app\u0027s save file.","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"tanqiya"},"content":"* **New Feature**: Added the command to **merge** contact files.","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"tanqiya"},"content":"    * What it does: allows the user to merge contacts from a JSON file with the current contact list.","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"tanqiya"},"content":"    * Added UUID to identify a contact across different lists and facilitate the process of merging if the contact\u0027s particulars have been edited.","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"tanqiya"},"content":"    * Justification: This feature improves contact management as users such as telemarketing supervisors can manage different contact lists and merge them to update their master list.","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"tanqiya"},"content":"* **New Feature**: Added an **export confirmation** command.","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"tanqiya"},"content":"    * Displays the list of contacts to be exported. Allows users to view and confirm if the correct contacts have been selected before the export is executed.","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"tanqiya"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dtanqiya\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dtanqiya\u0026tabRepo\u003dAY2122S1-CS2103T-W15-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026zFR\u003dfalse)","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"tanqiya"},"content":"* **Project management**:","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"tanqiya"},"content":"    * Managed releases `v1.3` and `v1.4` on GitHub","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"tanqiya"},"content":"* **Documentation**:","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"tanqiya"},"content":"    * User Guide:","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"tanqiya"},"content":"        * Added documentation for the features `import`.","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"tanqiya"},"content":"    * Developer Guide:","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"tanqiya"},"content":"        * Added implementation details of the `import`, `merge` and `export` features.","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"tanqiya"},"content":"        * Added UML diagrams for `merge` and `export`.","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"tanqiya"},"content":"* **Community**:","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"tanqiya"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](https://github.com/tanqiya/ped/issues/7), [2](https://github.com/tanqiya/ped/issues/5))","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"tanqiya":39}},{"path":"docs/team/vigneshsankariyer1234567890.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"layout: page","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"title: Vignesh Sankar Iyer\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"### Project: Teletubbies","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Teletubbies is a desktop application developed and designed for telemarketers and telemarketing supervisors to help manage their customer contacts. ","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Teletubbies allow users to create a checklist based on a set of customer contact data, with additional features such as tagging and viewing statistics to help improve their workflow.","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* **New Feature**: Added the ability to track and move between states of the application. ","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"(Pull request [\\#77](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/77), Pull request [\\#173](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/173))","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  * What it does: Allows the user to revert to a previous state using `undo` command or a previously undone state using `redo` command","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  * Justification: Users are unable to revert to original states if any mistakes were made. This will allow the user to better his/her workflow.","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* **New Feature**: Added the ability to track the commands previously keyed in by the user. (Pull request [\\#69](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/69))","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  * What it does: Allows the user to track and store previously input commands using `history` command.","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  * Justification: Users are unable to access previously input commands, which may be cumbersome to retype. This will allow the user to easily access previous commands.","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* **New Feature**: Added the ability to track the whether the contact has been completed or not with the `done` command. (Pull request [\\#37](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/37))","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  * What it does: Allows user to track if contact has been contacted before.","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  * Justification: Users are not able to track whether they have contacted the person previously, and require more effort to remember.","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dvigneshsankariyer1234567890\u0026tabRepo\u003dAY2122S1-CS2103T-W15-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* **Documentation**:","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  * User Guide:","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    * Added documentation for key bindings (convenience features).","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  * Developer Guide:","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    * Added implementation details of the `history`, `undo`, `redo` and GUI Bindings for **UP** and **DOWN** buttons.","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    * Added implementation details of the `Model` component.","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    * Added introduction to DG.","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"* **Community**:","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](https://github.com/vigneshsankariyer1234567890/ped/issues/3), [2](https://github.com/vigneshsankariyer1234567890/ped/issues/8))","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"  * PRs reviewed (with non-trivial review comments): (examples: [1](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/38), [2](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/71), [3](https://github.com/AY2122S1-CS2103T-W15-4/tp/pull/84))","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"vigneshsankariyer1234567890":38}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/teletubbies/logic/command` directory.","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"gok99"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `InputParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"gok99"},"content":"import static CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"gok99"},"content":"Create a `RemarkCommandParser` class in the `teletubbies.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"gok99"},"content":":information_source: Don’t forget to update `InputParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2021-10-20"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"gok99"},"content":"Create a new `Remark` in `teletubbies.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-10-18"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"gok99"},"content":"Simply add the following to [`teletubbies.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-10-18"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2021-08-01"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"gok99":9,"-":392}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"The `address` field in `Person` is actually an instance of the `teletubbies.model.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"gok99":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `teletubbies.logic.Logic`.","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"gok99"},"content":"A quick look at the `teletubbies.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"gok99"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `InputParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"gok99":3,"-":298}},{"path":"gradle/wrapper/gradle-wrapper.properties","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"distributionBase\u003dGRADLE_USER_HOME","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"distributionPath\u003dwrapper/dists","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"skythefire"},"content":"distributionUrl\u003dhttps\\://services.gradle.org/distributions/gradle-6.4.1-bin.zip","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"zipStoreBase\u003dGRADLE_USER_HOME","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"zipStorePath\u003dwrapper/dists","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"skythefire":1,"-":4}},{"path":"scripts/pre-push","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"#!/bin/sh","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"echo \"*****Running unit tests******\"","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"git stash -q --keep-index","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"./gradlew check","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"status\u003d$?","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"git stash pop -q","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"echo \"*****Done with unit tests******\"","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"exit $status","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"gok99":15}},{"path":"src/main/java/teletubbies/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.LogsCenter;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.util.FileUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"gok99":3,"-":61}},{"path":"src/main/java/teletubbies/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"gok99":1,"-":24}},{"path":"src/main/java/teletubbies/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Config;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.LogsCenter;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Version;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.util.ConfigUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.util.StringUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.Logic;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.LogicManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"import teletubbies.model.AddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ModelManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"import teletubbies.model.UserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"import teletubbies.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"import teletubbies.storage.AddressBookStorage;","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"import teletubbies.storage.JsonAddressBookStorage;","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"import teletubbies.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"import teletubbies.storage.Storage;","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"import teletubbies.storage.StorageManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"import teletubbies.storage.UserPrefsStorage;","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"import teletubbies.ui.Ui;","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"import teletubbies.ui.UiManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"gok99"},"content":"        ui \u003d new UiManager(logic, model);","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gok99":25,"-":158}},{"path":"src/main/java/teletubbies/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.commons.core;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gok99":1,"-":62}},{"path":"src/main/java/teletubbies/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.commons.core;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gok99":1,"-":78}},{"path":"src/main/java/teletubbies/commons/core/HistoryManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package teletubbies.commons.core;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.List;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.exceptions.EarliestVersionException;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.exceptions.EmptyHistoryManagerException;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.exceptions.LatestVersionException;","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * A stack-like data structure which will be used to store the history of states of any type T.","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * @param \u003cT\u003e The type of class which will be managed by HistoryManager.","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class HistoryManager\u003cT\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final ArrayList\u003cT\u003e historyStack;","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private int stackPointer;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Creates an empty HistoryManager.","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public HistoryManager() {","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.historyStack \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.stackPointer \u003d -1;","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Creates a HistoryManager with a predefined historical list of items.","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param history which refer to a predefined historical list of items.","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public HistoryManager(List\u003cT\u003e history) {","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.historyStack \u003d new ArrayList\u003c\u003e(history);","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.stackPointer \u003d historyStack.size() - 1;","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Checks if the HistoryManager can revert to an earlier version.","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public boolean isUndoable() {","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return stackPointer \u003e 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Checks if the HistoryManager can be redone to a later version.","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public boolean isRedoable() {","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return stackPointer \u003c historyStack.size() - 1;","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Checks if the HistoryManager is empty.","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return historyStack.isEmpty() || stackPointer \u003c 0;","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Returns a copy of the history of states in chronological order up to {@code stackPointer}.","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @return copy of history up to {@code stackPointer}.","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public List\u003cT\u003e historyList() {","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return new ArrayList\u003c\u003e(historyStack.subList(0, stackPointer + 1));","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Resets to the full history stored by {@code historyStack} by repointing {@code stackPointer} to the top of","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * {@code historyStack}.","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void resetFullHistory() {","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.stackPointer \u003d historyStack.size() - 1;","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Returns the current item in the stack that is referred to by {@code stackPointer}.","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @return the current item referred to by {@code stackPointer} or null if empty.","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public T peek() {","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (isEmpty()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return null;","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assert stackPointer \u003e\u003d 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assert stackPointer \u003c historyStack.size();","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return historyStack.get(stackPointer);","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private void push(T item) {","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (!isRedoable()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            historyStack.add(item);","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            historyStack.add(stackPointer + 1, item);","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        stackPointer++;","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private T pop() throws EmptyHistoryManagerException {","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (isEmpty()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new EmptyHistoryManagerException();","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":99,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        T top \u003d historyStack.get(stackPointer);","lastModifiedDate":"2021-10-22"},{"lineNumber":100,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        stackPointer--;","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return top;","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Undoes the state to a previous version as stored by HistoryManager","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @throws EarliestVersionException if HistoryManager is not undoable.","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void undo() throws EarliestVersionException {","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (!isUndoable()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new EarliestVersionException();","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        stackPointer--;","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Reverts the state to a later version as stored by HistoryManager","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @throws LatestVersionException if HistoryManager is not redoable.","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void redo() throws LatestVersionException {","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (!isRedoable()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new LatestVersionException();","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        stackPointer++;","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":126,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":127,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Commits the current history as stored by HistoryManager and pushes new state to the top of the {@code","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * historyStack}. This ensures the immutability of historyStack and guarantees that if anything is added,","lastModifiedDate":"2021-10-22"},{"lineNumber":129,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * stackPointer will point to the latest version, at the top of the {@code historyStack}.","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param item The new state to be stored.","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @return A new HistoryManager with an updated history.","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public HistoryManager\u003cT\u003e commitAndPush(T item) {","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        HistoryManager\u003cT\u003e copy \u003d commit();","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        copy.push(item);","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return copy;","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":139,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private HistoryManager\u003cT\u003e commit() {","lastModifiedDate":"2021-10-22"},{"lineNumber":140,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return HistoryManager.clearedCopy(this);","lastModifiedDate":"2021-10-22"},{"lineNumber":141,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":142,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":144,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Static method that clears the history after stackPointer.","lastModifiedDate":"2021-10-22"},{"lineNumber":145,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param original the original HistoryManager","lastModifiedDate":"2021-10-22"},{"lineNumber":146,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param \u003cU\u003e the type that is stored by HistoryManager","lastModifiedDate":"2021-10-22"},{"lineNumber":147,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @return A new HistoryManager that contains the history up to stackPointer.","lastModifiedDate":"2021-10-22"},{"lineNumber":148,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":149,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static \u003cU\u003e HistoryManager\u003cU\u003e clearedCopy(HistoryManager\u003cU\u003e original) {","lastModifiedDate":"2021-10-22"},{"lineNumber":150,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        List\u003cU\u003e sublist \u003d original.historyStack.subList(0, original.stackPointer + 1);","lastModifiedDate":"2021-10-22"},{"lineNumber":151,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return new HistoryManager\u003c\u003e(sublist);","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":153,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":154,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":155,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":156,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-23"},{"lineNumber":158,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":160,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":161,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-23"},{"lineNumber":162,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (!(other instanceof HistoryManager)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":163,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":164,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        HistoryManager\u003c?\u003e oth \u003d (HistoryManager\u003c?\u003e) other;","lastModifiedDate":"2021-10-23"},{"lineNumber":167,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":168,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (oth.stackPointer !\u003d this.stackPointer) {","lastModifiedDate":"2021-10-23"},{"lineNumber":169,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":170,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":171,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":172,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (oth.historyStack.size() !\u003d this.historyStack.size()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":173,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":174,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":175,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":176,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (int i \u003d 0; i \u003c this.historyStack.size(); i++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":177,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            Object a \u003d this.historyStack.get(i);","lastModifiedDate":"2021-10-23"},{"lineNumber":178,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            Object b \u003d oth.historyStack.get(i);","lastModifiedDate":"2021-10-23"},{"lineNumber":179,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            if (!a.equals(b)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":180,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":181,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":182,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":183,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":184,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":185,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":186,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"vigneshsankariyer1234567890":186}},{"path":"src/main/java/teletubbies/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.commons.core;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"    private static final String LOG_FILE \u003d \"teletubbies.log\";","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gok99":1,"-":110,"lhw-1":1}},{"path":"src/main/java/teletubbies/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.commons.core;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"    public static final String MESSAGE_INVALID_PERSON_RANGE \u003d \"The person range provided is invalid\";","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"skythefire"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_PHONE_NUMBER \u003d \"The phone number provided is invalid\";","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"skythefire"},"content":"    public static final String MESSAGE_INVALID_REMARK \u003d \"The person does not have a remark!\";","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"tanqiya"},"content":"    public static final String MESSAGE_NO_IMPORT_FILE \u003d \"No import file was selected. \\n%1$s\";","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"skythefire":2,"tanqiya":1,"gok99":2,"-":12}},{"path":"src/main/java/teletubbies/commons/core/Range.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.commons.core;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"public class Range {","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"    public static final String MESSAGE_ILLEGAL_RANGE \u003d \"Range contains values outside of the list!\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"        + \"Range values must be no greater than %d\";","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"    private final Set\u003cIndex\u003e values;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"     * Creates a new {@code Range} from a set of one-based indices.","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"    public Range(Set\u003cInteger\u003e values) {","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"        this.values \u003d values.stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"                .map(Index::fromOneBased)","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"                .collect(Collectors.toUnmodifiableSet());","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"    public Set\u003cIndex\u003e getRangeValues() {","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"        return values;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"                || (other instanceof Range // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"                \u0026\u0026 values.containsAll(((Range) other).values)","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"                \u0026\u0026 ((Range) other).values.containsAll(values)); // state check","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"gok99":36}},{"path":"src/main/java/teletubbies/commons/core/UserProfile.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.commons.core;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import java.io.Serializable;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"public class UserProfile {","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"    private String name;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"    private Role role;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"    public enum Role implements Serializable {","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"        TELEMARKETER,","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"        SUPERVISOR","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"     * Constructs a {@code UserProfile} with no name.","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"    public UserProfile() {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"        this.name \u003d \"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"        this.role \u003d Role.TELEMARKETER;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"     * Constructs a {@code UserProfile} with the specified name and role.","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"    public UserProfile(String name, Role userRole) {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"        this.role \u003d userRole;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"    public String getName() {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"        return name;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"    public Role getRole() {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"        return role;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"    public String getRoleString() {","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"        return role.toString();","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"lhw-1"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"lhw-1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"lhw-1"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"lhw-1"},"content":"            return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"lhw-1"},"content":"        if (!(other instanceof UserProfile)) { //this handles null as well.","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"lhw-1"},"content":"            return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"lhw-1"},"content":"        UserProfile o \u003d (UserProfile) other;","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"lhw-1"},"content":"        return name.equals(o.name)","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"lhw-1"},"content":"                \u0026\u0026 role.equals(o.role);","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"lhw-1"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"lhw-1"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"lhw-1"},"content":"        return Objects.hash(name);","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"lhw-1"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"lhw-1"},"content":"    public String toString() {","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"lhw-1"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"lhw-1"},"content":"        sb.append(\"Name: \").append(name).append(\"\\n\");","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"lhw-1"},"content":"        sb.append(\"Role: \").append(role).append(\"\\n\");","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"lhw-1"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"gok99":1,"lhw-1":69}},{"path":"src/main/java/teletubbies/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.commons.core;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gok99":1,"-":115}},{"path":"src/main/java/teletubbies/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.commons.core.index;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"gok99"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"gok99"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"gok99"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"gok99"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"gok99"},"content":"    public String toString() {","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"gok99"},"content":"        return Integer.toString(zeroBasedIndex);","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"gok99":11,"-":53}},{"path":"src/main/java/teletubbies/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.commons.exceptions;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gok99":1,"-":10}},{"path":"src/main/java/teletubbies/commons/exceptions/EarliestAddressBookVersionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package teletubbies.commons.exceptions;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class EarliestAddressBookVersionException extends EarliestVersionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private static final String EXCEPTION_MESSAGE \u003d \"Teletubbies is currently at it\u0027s earliest version and cannot be \"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            + \"reverted.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public EarliestAddressBookVersionException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        super(EXCEPTION_MESSAGE);","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"vigneshsankariyer1234567890":11}},{"path":"src/main/java/teletubbies/commons/exceptions/EarliestVersionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package teletubbies.commons.exceptions;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class EarliestVersionException extends Exception {","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private static final String EXCEPTION_MESSAGE \u003d \"History Manager is currently pointing to the\"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            + \"earliest version and cannot be undone.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public EarliestVersionException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        super(EXCEPTION_MESSAGE);","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    protected EarliestVersionException(String message) {","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        super(message);","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"vigneshsankariyer1234567890":15}},{"path":"src/main/java/teletubbies/commons/exceptions/EmptyHistoryManagerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package teletubbies.commons.exceptions;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class EmptyHistoryManagerException extends Exception {","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private static final String EXCEPTION_MESSAGE \u003d \"History Manager has no items and is empty.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public EmptyHistoryManagerException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        super(EXCEPTION_MESSAGE);","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"vigneshsankariyer1234567890":10}},{"path":"src/main/java/teletubbies/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.commons.exceptions;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"gok99":1,"-":20}},{"path":"src/main/java/teletubbies/commons/exceptions/LatestAddressBookVersionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package teletubbies.commons.exceptions;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class LatestAddressBookVersionException extends LatestVersionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private static final String EXCEPTION_MESSAGE \u003d \"Teletubbies is currently at it\u0027s latest version and cannot be \"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            + \"redone.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public LatestAddressBookVersionException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        super(EXCEPTION_MESSAGE);","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"vigneshsankariyer1234567890":11}},{"path":"src/main/java/teletubbies/commons/exceptions/LatestVersionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package teletubbies.commons.exceptions;","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class LatestVersionException extends Exception {","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private static final String EXCEPTION_MESSAGE \u003d \"History Manager is currently pointing \"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            + \"to the latest version and cannot be redone.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public LatestVersionException() {","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        super(EXCEPTION_MESSAGE);","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    protected LatestVersionException(String message) {","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        super(message);","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"vigneshsankariyer1234567890":15}},{"path":"src/main/java/teletubbies/commons/exceptions/UserRoleSetException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.commons.exceptions;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"public class UserRoleSetException extends Exception {","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"    private static final String EXCEPTION_MESSAGE \u003d \"User role and profile has already been set \"","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"            + \"and cannot be modified.\";","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"    public UserRoleSetException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"        super(EXCEPTION_MESSAGE);","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"gok99":10}},{"path":"src/main/java/teletubbies/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.commons.util;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import teletubbies.MainApp;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"gok99":2,"-":40}},{"path":"src/main/java/teletubbies/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.commons.util;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"gok99":1,"-":34}},{"path":"src/main/java/teletubbies/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.commons.util;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Config;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"gok99":3,"-":20}},{"path":"src/main/java/teletubbies/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.commons.util;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gok99":1,"-":82}},{"path":"src/main/java/teletubbies/commons/util/InvalidationListenerManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package teletubbies.commons.util;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.beans.InvalidationListener;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.beans.Observable;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * Manages list of {@link InvalidationListener}. This was reused from the implementation of Se-edu AB4, and can be","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * referenced from the InvalidationListenerManager in https://github.com/se-edu/addressbook-level4","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * (located in commons/util).","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class InvalidationListenerManager {","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    //@@author pyokagan and Zhiyuan-Amos","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    // Reused from InvalidationListenerManager.java located in","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    // /src/main/java/seedu/address/commons/util/InvalidationListenerManager.java","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    // in https://github.com/se-edu/addressbook-level4 with minor modifications","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final ArrayList\u003cInvalidationListener\u003e listeners \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Calls {@link InvalidationListener#invalidated(Observable)} for each listener in listeners.","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param observable The {@code Observable} to be invalidated by all listeners.","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void callListeners(Observable observable) {","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        ArrayList\u003cInvalidationListener\u003e copyOfListeners \u003d new ArrayList\u003c\u003e(listeners);","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (InvalidationListener listener: copyOfListeners) {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            listener.invalidated(observable);","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Adds {@code listener} to the list of listeners.","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * If the same listener is added more that once, then it will be notified more than once.","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void addListener(InvalidationListener listener) {","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        requireNonNull(listener);","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        listeners.add(listener);","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Removes {@code listener} from the list of listeners.","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * If the given listener was not previously added, then this method call is a no-op.","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * If the given listener was added more than once, then only the first occurrence in the list will be removed.","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void removeListener(InvalidationListener listener) {","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        requireNonNull(listener);","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        listeners.remove(listener);","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    //@@author pyokagan and Zhiyuan-Amos","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"vigneshsankariyer1234567890":54}},{"path":"src/main/java/teletubbies/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.commons.util;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.LogsCenter;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gok99":3,"-":140}},{"path":"src/main/java/teletubbies/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.commons.util;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"tanqiya"},"content":"     *   Ignores case, and a full word match is not required.","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"tanqiya"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d true","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"tanqiya"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"ABCD\") \u003d\u003d false","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"tanqiya"},"content":"        String preppedWord \u003d word.trim().toLowerCase();","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"tanqiya"},"content":"        String preppedSentence \u003d sentence.toLowerCase();","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"tanqiya"},"content":"                .anyMatch(wordInPreppedSentence -\u003e wordInPreppedSentence.contains(preppedWord));","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tanqiya":6,"gok99":2,"-":61}},{"path":"src/main/java/teletubbies/commons/util/ThrowingConsumer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.commons.util;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"@FunctionalInterface","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"public interface ThrowingConsumer\u003cT\u003e {","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"    void accept(T input) throws Exception;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"gok99":8}},{"path":"src/main/java/teletubbies/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.GuiSettings;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"import teletubbies.commons.core.UserProfile;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.CommandResult;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"     * @see Model#getAddressBook()","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"    /** Returns the current user profile stored in preferences.json. */","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"    UserProfile getUserProfile();","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"gok99":9,"-":42,"lhw-1":4}},{"path":"src/main/java/teletubbies/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.GuiSettings;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.LogsCenter;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"import teletubbies.commons.core.UserProfile;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.Command;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.CommandResult;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"import teletubbies.storage.Storage;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"    private final teletubbies.logic.parser.InputParser inputParser;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    //@@author pyokagan","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // Reused from","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // https://github.com/se-edu/addressbook-level4/blob/master/src/main/java/seedu/address/logic/LogicManager.java","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private boolean isModified;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    //@@author pyokagan","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        inputParser \u003d new teletubbies.logic.parser.InputParser();","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        //@@author pyokagan","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Adapted from","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // https://github.com/se-edu/addressbook-level4/blob/master/src/main/java/seedu/address/logic/LogicManager.java","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        model.addListener(observable -\u003e isModified \u003d true);","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        model.addCommandInput(commandText);","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Command command \u003d inputParser.parseCommand(commandText);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d command.execute(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (isModified \u0026\u0026 !model.isAwaitingExportConfirmation()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            logger.info(\"AddressBook was modified; saving to file.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            try {","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        isModified \u003d false;","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public UserProfile getUserProfile() {","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return model.getUserProfile();","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"vigneshsankariyer1234567890":1,"gok99":12,"-":86,"lhw-1":1}},{"path":"src/main/java/teletubbies/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.Prefix;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"    public static final List\u003cPrefix\u003e RECOMMENDED_FLAGS \u003d List.of(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"tanqiya"},"content":"            PREFIX_ADDRESS);","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"tanqiya"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the contact list. \"","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \" NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \" PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"skythefire"},"content":"            + \"[\" + PREFIX_EMAIL + \" EMAIL] \"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"skythefire"},"content":"            + \"[\" + PREFIX_ADDRESS + \" ADDRESS] \\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \" John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \" 98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \" johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"skythefire"},"content":"            + PREFIX_ADDRESS + \" 311, Clementi Ave 2, #02-25 \";","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"tanqiya"},"content":"    public static final String MESSAGE_DUPLICATE_PHONE_NUMBER \u003d \"This phone number already exists in the contact list\";","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":54,"author":{"gitId":"tanqiya"},"content":"        model.cancelPendingExport();","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"skythefire"},"content":"        if (model.hasPhoneNumber(toAdd)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"skythefire"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PHONE_NUMBER);","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"skythefire"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        model.commitAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"skythefire":7,"vigneshsankariyer1234567890":1,"tanqiya":4,"gok99":13,"-":46}},{"path":"src/main/java/teletubbies/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import teletubbies.model.AddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"skythefire"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Teletubbies has been cleared!\";","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        model.cancelPendingExport();","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        model.commitAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"skythefire":1,"vigneshsankariyer1234567890":2,"gok99":3,"-":19}},{"path":"src/main/java/teletubbies/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Messages;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Range;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.index.Index;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"     * Throws a command exception with given message strings","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"     * @param messages message strings to throw","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"     * @throws CommandException","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"    public void throwMessages(List\u003cString\u003e messages) throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"        if (!messages.isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"            throw new CommandException(String.join(\"\\n\", messages));","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"    public List\u003cPerson\u003e getPersonsFromRange(Model model, Range range) throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"            return model.getPersonsFromRange(range);","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"            throw new CommandException(ive.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"gok99"},"content":"    public Person getPersonFromIndex(Model model, Index index) throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"gok99"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"gok99"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"gok99"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"gok99"},"content":"        return lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"gok99":40,"-":17}},{"path":"src/main/java/teletubbies/logic/commands/CommandMap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":" * Map from command words to Command class to allow quick access","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":" * to the Command classes","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"public class CommandMap {","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"    private static final Map\u003cString, Class\u003c? extends Command\u003e\u003e classMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"    static {","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"        classMap.put(AddCommand.COMMAND_WORD, AddCommand.class);","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"        classMap.put(ClearCommand.COMMAND_WORD, ClearCommand.class);","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"        classMap.put(ConfirmExportCommand.COMMAND_WORD, ConfirmExportCommand.class);","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"        classMap.put(DeleteCommand.COMMAND_WORD, DeleteCommand.class);","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"        classMap.put(DoneCommand.COMMAND_WORD, DoneCommand.class);","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"        classMap.put(EditCommand.COMMAND_WORD, EditCommand.class);","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"        classMap.put(ExitCommand.COMMAND_WORD, ExitCommand.class);","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"        classMap.put(ExportCommand.COMMAND_WORD, ExportCommand.class);","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"        classMap.put(FilterCommand.COMMAND_WORD, FilterCommand.class);","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"        classMap.put(FindCommand.COMMAND_WORD, FindCommand.class);","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"        classMap.put(HelpCommand.COMMAND_WORD, HelpCommand.class);","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"        classMap.put(HistoryCommand.COMMAND_WORD, HistoryCommand.class);","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"        classMap.put(ImportCommand.COMMAND_WORD, ImportCommand.class);","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"        classMap.put(ListCommand.COMMAND_WORD, ListCommand.class);","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"        classMap.put(ProfileCommand.COMMAND_WORD, ProfileCommand.class);","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"        classMap.put(RemoveTagCommand.COMMAND_WORD, RemoveTagCommand.class);","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"        classMap.put(TagCommand.COMMAND_WORD, TagCommand.class);","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"        classMap.put(RemarkCommand.COMMAND_WORD, RemarkCommand.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"    public static Class\u003c? extends Command\u003e getClass(String commandWord) {","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"        return classMap.get(commandWord);","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"gok99":39}},{"path":"src/main/java/teletubbies/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.uieffects.UiConsumer;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.ui.MainWindow;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"     * UiEffects that commands can have on the UI","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"    public enum UiEffect {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"        SHOW_HELP, // Help information should be shown to the user.","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"        EXIT, // The application should exit.","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"        EXPORT, // The application should export data","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"        IMPORT, // The application should import data","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"tanqiya"},"content":"        MERGE, //The application should merge data","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"        NONE","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"    private final UiConsumer uiConsumer;","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"    private final UiEffect uiEffect;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"     * @param feedbackToUser String feedback to be displayed to user","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"     * @param uiEffect type of uiEffect from command","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"     * @param uiConsumer consumer of MainWindow for command to interact","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"     *                   with ui","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"    public CommandResult(String feedbackToUser, UiEffect uiEffect, UiConsumer uiConsumer) {","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"        this.uiEffect \u003d uiEffect;","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"        this.uiConsumer \u003d uiConsumer;","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"gok99"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"gok99"},"content":"    public CommandResult(String feedbackToUser, UiEffect uiEffect) {","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"gok99"},"content":"        this(feedbackToUser, uiEffect, mainWindow -\u003e {});","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"gok99"},"content":"        this(feedbackToUser, UiEffect.NONE);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"gok99"},"content":"     * Execute uiConsumer if result has a uiEffect","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"gok99"},"content":"     * @param mainWindow reference to app\u0027s ui window","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"gok99"},"content":"    public void executeUiEffect(MainWindow mainWindow) throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"gok99"},"content":"        if (!uiEffect.equals(UiEffect.NONE)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"tanqiya"},"content":"            try {","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"gok99"},"content":"                this.uiConsumer.accept(mainWindow);","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"tanqiya"},"content":"            } catch (DataConversionException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"tanqiya"},"content":"                throw new CommandException(ImportCommand.MESSAGE_INCORRECT_FORMAT);","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"tanqiya"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"gok99"},"content":"                \u0026\u0026 uiEffect.equals(otherCommandResult.uiEffect);","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"gok99"},"content":"        return Objects.hash(feedbackToUser, uiEffect);","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tanqiya":5,"gok99":44,"-":52}},{"path":"src/main/java/teletubbies/logic/commands/ConfirmExportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanqiya"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"tanqiya"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tanqiya"},"content":"import teletubbies.commons.core.LogsCenter;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tanqiya"},"content":"import teletubbies.commons.core.Messages;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tanqiya"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tanqiya"},"content":"import teletubbies.logic.commands.uieffects.ExportUiConsumer;","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"tanqiya"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"tanqiya"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"tanqiya"},"content":" * Exports selected persons to file in path specified by user after confirmation.","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"tanqiya"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"tanqiya"},"content":"public class ConfirmExportCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"tanqiya"},"content":"    public static final String COMMAND_WORD \u003d \"y\";","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"tanqiya"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Contacts exported successfully.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"tanqiya"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"tanqiya"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"tanqiya"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"tanqiya"},"content":"        if (!model.isAwaitingExportConfirmation()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"tanqiya"},"content":"            throw new CommandException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"tanqiya"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"tanqiya"},"content":"        return new CommandResult(MESSAGE_SUCCESS, CommandResult.UiEffect.EXPORT, new ExportUiConsumer(model));","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"tanqiya"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"tanqiya"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"tanqiya"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"tanqiya"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"tanqiya"},"content":"            return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"tanqiya"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"tanqiya"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"tanqiya"},"content":"        if (!(other instanceof ConfirmExportCommand)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"tanqiya"},"content":"            return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"tanqiya"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"tanqiya"},"content":"        return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"tanqiya"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"tanqiya":42}},{"path":"src/main/java/teletubbies/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Messages;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.Prefix;","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Phone;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"tanqiya"},"content":" * Deletes a person identified using it\u0027s displayed index from the contact list.","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"    public static final List\u003cPrefix\u003e RECOMMENDED_FLAGS \u003d List.of(PREFIX_INDEX);","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"tanqiya"},"content":"            + \": Deletes the person with the given phone number or the index used in the contact list.\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"            + PREFIX_PHONE + \" PHONE_NUMBER (must be a valid phone number) or \"","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"            + PREFIX_INDEX + \" INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"            + PREFIX_PHONE + \" 81234567, \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"            + PREFIX_INDEX + \" 1\";","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"skythefire"},"content":"    private final Phone targetPhone;","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"skythefire"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"skythefire"},"content":"    private final boolean isPhonePrefix;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"skythefire"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"skythefire"},"content":"     * @param targetPhone of the person in the person list to delete","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"skythefire"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"skythefire"},"content":"    public DeleteCommand(Phone targetPhone) {","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"skythefire"},"content":"        this.targetPhone \u003d targetPhone;","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"skythefire"},"content":"        this.targetIndex \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"skythefire"},"content":"        this.isPhonePrefix \u003d true;","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"skythefire"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"skythefire"},"content":"     * @param targetIndex of the person in the filtered person list to delete","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"skythefire"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"skythefire"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"skythefire"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"skythefire"},"content":"        this.targetPhone \u003d null;","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"skythefire"},"content":"        this.isPhonePrefix \u003d false;","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        model.cancelPendingExport();","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"skythefire"},"content":"        if (isPhonePrefix) {","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"skythefire"},"content":"            List\u003cPerson\u003e list \u003d model.getAddressBook().getPersonList();","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"skythefire"},"content":"            if (list.stream().noneMatch(p -\u003e p.getPhone().equals(targetPhone))) {","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"skythefire"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_PHONE_NUMBER);","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"skythefire"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"skythefire"},"content":"            Person personToDelete \u003d list.stream().filter(p -\u003e p.getPhone().equals(targetPhone))","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"skythefire"},"content":"                    .findFirst().get();","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            model.commitAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":77,"author":{"gitId":"skythefire"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"skythefire"},"content":"        assert targetIndex !\u003d null;","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"gok99"},"content":"        Person personToDelete \u003d getPersonFromIndex(model, targetIndex);","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"skythefire"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        model.commitAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"skythefire"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"skythefire"},"content":"                \u0026\u0026 (isPhonePrefix","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"skythefire"},"content":"                        ? targetPhone.equals(((DeleteCommand) other).targetPhone)","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"skythefire"},"content":"                        : targetIndex.equals(((DeleteCommand) other).targetIndex))); // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"skythefire":40,"vigneshsankariyer1234567890":3,"tanqiya":2,"gok99":12,"-":31,"lhw-1":7}},{"path":"src/main/java/teletubbies/logic/commands/DoneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"tanqiya"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.CliSyntax;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.CompletionStatusTag;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.CompletionStatusTag.CompletionStatus;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static final String COMMAND_WORD \u003d \"done\";","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks the completion status of the \"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"tanqiya"},"content":"            + \"person identified by the index number used in the current contact list.\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"            + \"Sets completed by default. Only one of \" + CliSyntax.PREFIX_ONGOING + \" or \"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"            + CliSyntax.PREFIX_INCOMPLETE + \" can be used.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + CliSyntax.PREFIX_ONGOING;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"tanqiya"},"content":"    public static final String MESSAGE_COMPLETED_SUCCESS \u003d \"Marked person as %1$s: %2$s\";","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final Index index;","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final CompletionStatus completionStatus;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"     * @param index of the person in the filtered person list to mark","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public DoneCommand(Index index) {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"        this(index, CompletionStatus.COMPLETE);","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"     * @param index of the person in the filtered person list to mark","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"    public DoneCommand(Index index, CompletionStatus completionStatus) {","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"        CollectionUtil.requireAllNonNull(index);","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"        this.completionStatus \u003d completionStatus;","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"tanqiya"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"tanqiya"},"content":"        model.cancelPendingExport();","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"gok99"},"content":"        Person personToEdit \u003d getPersonFromIndex(model, index);","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"skythefire"},"content":"        Person editedPerson \u003d new Person(personToEdit.getUuid(),","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"skythefire"},"content":"                personToEdit.getName(),","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"skythefire"},"content":"                personToEdit.getPhone(),","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"skythefire"},"content":"                personToEdit.getEmail(),","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"skythefire"},"content":"                personToEdit.getAddress(),","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"skythefire"},"content":"                new CompletionStatusTag(completionStatus),","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"skythefire"},"content":"                personToEdit.getRemark(),","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"skythefire"},"content":"                personToEdit.getTags());","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        model.commitAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Generates a command execution success message","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"tanqiya"},"content":"        return String.format(MESSAGE_COMPLETED_SUCCESS, completionStatus.toString().toLowerCase(), personToEdit);","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (!(other instanceof DoneCommand)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        DoneCommand e \u003d (DoneCommand) other;","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return index.equals(e.index) \u0026\u0026 (this.completionStatus.equals(e.completionStatus));","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"vigneshsankariyer1234567890":53,"skythefire":8,"tanqiya":6,"gok99":26}},{"path":"src/main/java/teletubbies/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import static teletubbies.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.Prefix;","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Address;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Email;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Name;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Phone;","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"skythefire"},"content":"import teletubbies.model.person.Remark;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"tanqiya"},"content":"import teletubbies.model.person.Uuid;","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.CompletionStatusTag;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.Tag;","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"    public static final List\u003cPrefix\u003e RECOMMENDED_FLAGS \u003d List.of(PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"            PREFIX_ADDRESS);","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"tanqiya"},"content":"            + \"by the index number used in the current contact list. \"","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \" NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \" PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \" EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"lhw-1"},"content":"            + \"[\" + PREFIX_ADDRESS + \" ADDRESS]\\n\"","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \" 91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \" johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"tanqiya"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited person: %1$s\";","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"tanqiya"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the contact list.\";","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"tanqiya"},"content":"    public static final String MESSAGE_DUPLICATE_PHONE_NUMBER \u003d \"This phone number already exists in the contact list\";","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"tanqiya"},"content":"        model.cancelPendingExport();","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"gok99"},"content":"        Person personToEdit \u003d getPersonFromIndex(model, index);","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"tanqiya"},"content":"        if (!personToEdit.isSameName(editedPerson) \u0026\u0026 model.hasName(editedPerson)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"skythefire"},"content":"        if (!personToEdit.isSamePhoneNumber(editedPerson) \u0026\u0026 model.hasPhoneNumber(editedPerson)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"skythefire"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PHONE_NUMBER);","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"skythefire"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        model.commitAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"tanqiya"},"content":"        Uuid uuid \u003d personToEdit.getUuid();","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":106,"author":{"gitId":"skythefire"},"content":"        Remark updatedRemark \u003d personToEdit.getRemark(); // edit command does not allow editing remarks","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"gok99"},"content":"        CompletionStatusTag completionStatusTag \u003d personToEdit.getCompletionStatus();","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"tanqiya"},"content":"        return new Person(uuid, updatedName, updatedPhone, updatedEmail, updatedAddress, completionStatusTag,","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"skythefire"},"content":"                updatedRemark, updatedTags);","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"skythefire":7,"vigneshsankariyer1234567890":2,"tanqiya":9,"gok99":23,"-":193,"lhw-1":1}},{"path":"src/main/java/teletubbies/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"tanqiya"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import teletubbies.ui.MainWindow;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"skythefire"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Teletubbies as requested ...\";","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"tanqiya"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"tanqiya"},"content":"        model.cancelPendingExport();","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, CommandResult.UiEffect.EXIT, MainWindow::handleExit);","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"skythefire":1,"tanqiya":4,"gok99":4,"-":15}},{"path":"src/main/java/teletubbies/logic/commands/ExportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.Prefix;","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.PersonHasTagsPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.Tag;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"tanqiya"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"tanqiya"},"content":" * Exports persons containing tags specified by user, pending user confirmation.","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"tanqiya"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"public class ExportCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"    public static final String COMMAND_WORD \u003d \"export\";","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"tanqiya"},"content":"    public static final String MESSAGE_REQUEST_CONFIRMATION \u003d \"\\nEnter y to confirm export.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"tanqiya"},"content":"            + \"Entering other commands would cancel the export.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"    public static final List\u003cPrefix\u003e RECOMMENDED_FLAGS \u003d List.of(PREFIX_TAG);","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"    private final Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"    public ExportCommand(Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"tanqiya"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"tanqiya"},"content":"        model.cancelPendingExport();","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"        ObservableList\u003cPerson\u003e personObservableList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"        List\u003cPerson\u003e filteredPersonList \u003d filterPersonList(personObservableList);","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"tanqiya"},"content":"        model.updateExportList(filteredPersonList);","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"tanqiya"},"content":"        String feedbackMessage \u003d (tags.isEmpty()","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"tanqiya"},"content":"                ? \"All contacts will be exported\"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"tanqiya"},"content":"                : filteredPersonList.size() + \" contacts listed below will be exported. \"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"tanqiya"},"content":"                + \"Exported tags: \" + tags)","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"tanqiya"},"content":"                + MESSAGE_REQUEST_CONFIRMATION;","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"tanqiya"},"content":"        return new CommandResult(feedbackMessage);","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"gok99"},"content":"     * Filters persons to those with specified tags","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"gok99"},"content":"     * @param personList person list to filter","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"tanqiya"},"content":"     * @return filtered list of persons","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"gok99"},"content":"    public List\u003cPerson\u003e filterPersonList(List\u003cPerson\u003e personList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"gok99"},"content":"        requireNonNull(tags);","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"gok99"},"content":"        return personList.stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"gok99"},"content":"                .filter(new PersonHasTagsPredicate(tags))","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"gok99"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"gok99"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"gok99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"gok99"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"gok99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"gok99"},"content":"            return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"gok99"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"gok99"},"content":"        if (!(other instanceof ExportCommand)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"gok99"},"content":"            return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"gok99"},"content":"        // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"gok99"},"content":"        ExportCommand c \u003d (ExportCommand) other;","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"gok99"},"content":"        return c.tags.containsAll(tags) \u0026\u0026 tags.containsAll(c.tags);","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tanqiya":17,"gok99":66}},{"path":"src/main/java/teletubbies/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Messages;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.Prefix;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.PersonHasTagsPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":" * Filters and lists all persons in person list whose who contain the specified tags.","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":" * Tag matching is case-sensitive.","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"    public static final List\u003cPrefix\u003e RECOMMENDED_FLAGS \u003d List.of(PREFIX_TAG);","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters person to only those with the specified \"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"            + \"tag names and values (case-sensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"            + \"Parameters: \" + PREFIX_TAG + \" TAGNAME[: TAGVALUE] [-t TAGNAME[: TAGVALUE]]...\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_TAG + \" CompletionStatus: COMPLETE\";","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"    private final PersonHasTagsPredicate predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"    public FilterCommand(PersonHasTagsPredicate predicate) {","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"        model.cancelPendingExport();","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"gok99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"gok99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"gok99"},"content":"                || (other instanceof FilterCommand // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"gok99"},"content":"                \u0026\u0026 predicate.equals(((FilterCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"gok99":50}},{"path":"src/main/java/teletubbies/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Messages;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"tanqiya"},"content":"        model.cancelPendingExport();","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"tanqiya":2,"gok99":4,"-":38}},{"path":"src/main/java/teletubbies/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"tanqiya"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.uieffects.HelpUiConsumer;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"tanqiya"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows user guide.\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"tanqiya"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"tanqiya"},"content":"        model.cancelPendingExport();","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, CommandResult.UiEffect.SHOW_HELP, new HelpUiConsumer());","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tanqiya":6,"gok99":4,"-":16}},{"path":"src/main/java/teletubbies/logic/commands/HistoryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * Command that returns the history in reverse order with the most recent at the top.","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class HistoryCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static final String COMMAND_WORD \u003d \"history\";","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Recent Commands:\\n%1$s\";","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static final String MESSAGE_NO_HISTORY \u003d \"You have not entered any commands yet.\";","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        model.cancelPendingExport();","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        List\u003cString\u003e history \u003d model.getChronologicallyDescendingHistory();","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (history.isEmpty()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return new CommandResult(MESSAGE_NO_HISTORY);","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, String.join(\"\\n\", history)));","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return obj instanceof HistoryCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"vigneshsankariyer1234567890":40}},{"path":"src/main/java/teletubbies/logic/commands/ImportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"tanqiya"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tanqiya"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.LogsCenter;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.uieffects.ImportUiConsumer;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * Imports new file of contacts specified by user and replaces address book.","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"tanqiya"},"content":"public class ImportCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"tanqiya"},"content":"    public static final String COMMAND_WORD \u003d \"import\";","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"tanqiya"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Imports contacts from selected file.\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"tanqiya"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"tanqiya"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Contacts imported successfully.\";","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"tanqiya"},"content":"    public static final String MESSAGE_FILE_NOT_FOUND \u003d \"Data file not found. Please try again.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"tanqiya"},"content":"    public static final String MESSAGE_INCORRECT_FORMAT \u003d \"Data file not in the correct format.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"tanqiya"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"tanqiya"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"tanqiya"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        model.cancelPendingExport();","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"        return new CommandResult(MESSAGE_SUCCESS, CommandResult.UiEffect.IMPORT, new ImportUiConsumer(model));","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"tanqiya"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"tanqiya"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"tanqiya"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"tanqiya"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"tanqiya"},"content":"            return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"tanqiya"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"tanqiya"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"tanqiya"},"content":"        if (!(other instanceof ImportCommand)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"tanqiya"},"content":"            return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"tanqiya"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"tanqiya"},"content":"        return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"tanqiya"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"vigneshsankariyer1234567890":6,"tanqiya":35,"gok99":6}},{"path":"src/main/java/teletubbies/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"tanqiya"},"content":"        model.cancelPendingExport();","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tanqiya":1,"gok99":3,"-":21}},{"path":"src/main/java/teletubbies/logic/commands/MergeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanqiya"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"tanqiya"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"tanqiya"},"content":"import teletubbies.commons.core.LogsCenter;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"tanqiya"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"tanqiya"},"content":"import teletubbies.logic.commands.uieffects.MergeUiConsumer;","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"tanqiya"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"tanqiya"},"content":"public class MergeCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"tanqiya"},"content":"    public static final String COMMAND_WORD \u003d \"merge\";","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"tanqiya"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Merges contacts from selected file with existing \"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"tanqiya"},"content":"            + \"contacts.\\nExample: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"tanqiya"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Contacts merged successfully.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"tanqiya"},"content":"    public static final String MESSAGE_FILE_NOT_FOUND \u003d \"Data file not found. Please try again.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"tanqiya"},"content":"    public static final String MESSAGE_INCORRECT_FORMAT \u003d \"Data file not in the correct format.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"tanqiya"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"tanqiya"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"tanqiya"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"tanqiya"},"content":"        return new CommandResult(MESSAGE_SUCCESS, CommandResult.UiEffect.MERGE, new MergeUiConsumer(model));","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"tanqiya"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"tanqiya"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"tanqiya"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"tanqiya"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"tanqiya"},"content":"            return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"tanqiya"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"tanqiya"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"tanqiya"},"content":"        if (!(other instanceof MergeCommand)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"tanqiya"},"content":"            return false;","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"tanqiya"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"tanqiya"},"content":"        return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"tanqiya"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"tanqiya":39}},{"path":"src/main/java/teletubbies/logic/commands/ProfileCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.UserProfile;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.UserRoleSetException;","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.Prefix;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"tanqiya"},"content":" * Sets the name and role of the Teletubbies user.","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"public class ProfileCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"    public static final String COMMAND_WORD \u003d \"profile\";","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"    public static final List\u003cPrefix\u003e RECOMMENDED_FLAGS \u003d List.of(PREFIX_NAME, PREFIX_ROLE);","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"tanqiya"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sets the name and role of the Teletubbies user.\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"            + PREFIX_NAME + \" NAME \"","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"            + PREFIX_ROLE + \" ROLE (must be either Telemarketer or Supervisor)\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"            + PREFIX_NAME + \" John Doe \"","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"            + PREFIX_ROLE + \" Telemarketer\";","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"tanqiya"},"content":"    public static final String MESSAGE_PROFILE_SUCCESS \u003d \"User profile set.\\n%1$s\";","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"    public static final String MESSAGE_INVALID_ROLE \u003d \"Please indicate either \\\"Telemarketer\\\" or \\\"Supervisor\\\"\"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"            + \" as your role.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"    private final UserProfile userProfile;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"     * Creates a ProfileCommand to add the specified {@code UserProfile}","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"lhw-1"},"content":"    public ProfileCommand(UserProfile userProfile) {","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"lhw-1"},"content":"        requireNonNull(userProfile);","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"lhw-1"},"content":"        this.userProfile \u003d userProfile;","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"lhw-1"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"lhw-1"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"lhw-1"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"tanqiya"},"content":"        model.cancelPendingExport();","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"gok99"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"lhw-1"},"content":"            model.setUserProfile(userProfile);","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"gok99"},"content":"        } catch (UserRoleSetException urse) {","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"gok99"},"content":"            throw new CommandException(urse.getMessage());","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"lhw-1"},"content":"        return new CommandResult(String.format(MESSAGE_PROFILE_SUCCESS, userProfile));","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"lhw-1"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"lhw-1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"lhw-1"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"gok99"},"content":"                || (other instanceof ProfileCommand // instanceof handles nulls","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"gok99"},"content":"                \u0026\u0026 userProfile.equals(((ProfileCommand) other).userProfile));","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tanqiya":4,"gok99":22,"lhw-1":39}},{"path":"src/main/java/teletubbies/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.exceptions.LatestVersionException;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * Reverts Teletubbies\u0027 {@code AddressBook} to next state.","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Teletubbies was successfully redone!\";","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"tanqiya"},"content":"    public static final String MESSAGE_FAILURE \u003d \"Teletubbies is currently at its latest version and cannot be \"","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            + \"redone.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        model.cancelPendingExport();","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (!model.canRedoAddressBook()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            model.redoAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } catch (LatestVersionException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"vigneshsankariyer1234567890":36,"tanqiya":1}},{"path":"src/main/java/teletubbies/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skythefire"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"skythefire"},"content":"import static teletubbies.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"skythefire"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"skythefire"},"content":"import static teletubbies.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"skythefire"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"skythefire"},"content":"import teletubbies.commons.core.Messages;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"skythefire"},"content":"import teletubbies.commons.core.index.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"skythefire"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.Prefix;","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"skythefire"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"skythefire"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"skythefire"},"content":"import teletubbies.model.person.Remark;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"skythefire"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"skythefire"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"skythefire"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"skythefire"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"skythefire"},"content":"    // @@author: j-lum","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"skythefire"},"content":"    // Reused from","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"skythefire"},"content":"    // https://github.com/se-edu/addressbook-level3/compare/tutorial-add-remark","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"skythefire"},"content":"    // with minor modifications","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"skythefire"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"    public static final List\u003cPrefix\u003e RECOMMENDED_FLAGS \u003d List.of(PREFIX_REMARK);","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"skythefire"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"tanqiya"},"content":"            + \"by the index number used in the current contact list. \"","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"skythefire"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"skythefire"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"skythefire"},"content":"            + PREFIX_REMARK + \" REMARK\\n\"","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"skythefire"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"skythefire"},"content":"            + PREFIX_REMARK + \" Need to call back.\";","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"skythefire"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"tanqiya"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to person: %1$s\";","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"tanqiya"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from person: %1$s\";","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"skythefire"},"content":"    private final Index index;","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"skythefire"},"content":"    private final Remark remark;","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"skythefire"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"skythefire"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"skythefire"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"skythefire"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"skythefire"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"skythefire"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"skythefire"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"skythefire"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"skythefire"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"skythefire"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"skythefire"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"skythefire"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"skythefire"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"skythefire"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"skythefire"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"skythefire"},"content":"        if (!personToEdit.getRemark().isPresent() \u0026\u0026 remark.value.isEmpty()) {","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"skythefire"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_REMARK);","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"skythefire"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"skythefire"},"content":"        Person editedPerson \u003d new Person(personToEdit.getUuid(),","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"skythefire"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"skythefire"},"content":"                personToEdit.getAddress(), personToEdit.getCompletionStatus(), remark, personToEdit.getTags());","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"skythefire"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"skythefire"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"gok99"},"content":"        model.commitAddressBook();","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"skythefire"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"skythefire"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"skythefire"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"skythefire"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"skythefire"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"skythefire"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"skythefire"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"skythefire"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"skythefire"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"skythefire"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"skythefire"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"skythefire"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"skythefire"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"skythefire"},"content":"            return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"skythefire"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"skythefire"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"skythefire"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"skythefire"},"content":"            return false;","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"skythefire"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"skythefire"},"content":"        // state check","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"skythefire"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"skythefire"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"skythefire"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"skythefire"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"skythefire":101,"tanqiya":3,"gok99":4}},{"path":"src/main/java/teletubbies/logic/commands/RemoveTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_VALUE;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Range;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.UserProfile.Role;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.Prefix;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.Tag;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.TagUtils;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"public class RemoveTagCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"    public static final String COMMAND_WORD \u003d \"tagrm\";","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"    public static final List\u003cPrefix\u003e RECOMMENDED_FLAGS \u003d List.of(PREFIX_NAME, PREFIX_VALUE);","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Removes tag from \"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"            + \"persons specified by the indices.\\n\"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"            + \"Parameters: RANGE (can be hyphen separated or comma separated integers), -n TAGNAME, \"","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"            + \"[-v TAGVALUE]\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1-10 \" + PREFIX_NAME + \" Assignee \"","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"            + \"[\" + PREFIX_VALUE + \" John Doe]\\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"            + \"Note: Tags listed are in the format TAGNAME[: TAGVALUE]\";","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"    public static final String MESSAGE_COMPLETED_SUCCESS \u003d \"Tag removed from %d entries\";","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"    public final Range range;","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"    public final String tagName;","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"     * Creates a TagCommand to remove the specified {@code Tag}","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"gok99"},"content":"     * @param range Range of","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"gok99"},"content":"     * @param tagName","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"gok99"},"content":"    public RemoveTagCommand(Range range, String tagName) {","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"gok99"},"content":"        CollectionUtil.requireAllNonNull(range);","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"gok99"},"content":"        CollectionUtil.requireAllNonNull(tagName);","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"gok99"},"content":"        this.range \u003d range;","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"gok99"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"gok99"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"gok99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"gok99"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"gok99"},"content":"        model.cancelPendingExport();","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"gok99"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"gok99"},"content":"            throw new CommandException(TagUtils.INVALID_TAG_NAME);","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"gok99"},"content":"        List\u003cString\u003e feedbackMessages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"gok99"},"content":"        List\u003cPerson\u003e rangePersons \u003d getPersonsFromRange(model, range);","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"gok99"},"content":"        Role userRole \u003d model.getUserRole();","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"gok99"},"content":"        int entryCount \u003d 0;","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"gok99"},"content":"        for (Person p: rangePersons) {","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"gok99"},"content":"            Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e(p.getTags());","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"gok99"},"content":"            Optional\u003cTag\u003e matchingTag \u003d TagUtils.findMatchingTag(tags, tagName);","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"gok99"},"content":"            Set\u003cTag\u003e newTags \u003d getRemovedTagSet(tags, matchingTag, userRole, feedbackMessages);","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"gok99"},"content":"            if (tags.size() \u003e newTags.size()) {","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"gok99"},"content":"                entryCount++;","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"gok99"},"content":"            }","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"tanqiya"},"content":"            Person editedPerson \u003d new Person(p.getUuid(), p.getName(), p.getPhone(), p.getEmail(),","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"skythefire"},"content":"                    p.getAddress(), p.getCompletionStatus(), p.getRemark(), newTags);","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"gok99"},"content":"            model.setPerson(p, editedPerson);","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"gok99"},"content":"        // Throw messages if present","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"gok99"},"content":"        throwMessages(feedbackMessages);","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"gok99"},"content":"        model.commitAddressBook();","lastModifiedDate":"2021-11-06"},{"lineNumber":86,"author":{"gitId":"gok99"},"content":"        return new CommandResult(String.format(MESSAGE_COMPLETED_SUCCESS, entryCount));","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"gok99"},"content":"     * Remove matchingTag from the tag set if matching tag exists","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"gok99"},"content":"     * and user role has permissions to modify the tag.","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"gok99"},"content":"     * Note: this function modifies the messages list","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"gok99"},"content":"     * @param tags tag set to remove from","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"gok99"},"content":"     * @param matchingTag tag to remove from the set","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"gok99"},"content":"     * @param userRole user role doing the deletion","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"gok99"},"content":"     * @param messages feedback messages","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"gok99"},"content":"     * @return new tag set without matchingTag","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"gok99"},"content":"    public Set\u003cTag\u003e getRemovedTagSet(Set\u003cTag\u003e tags, Optional\u003cTag\u003e matchingTag, Role userRole,","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"gok99"},"content":"                                     List\u003cString\u003e messages) {","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"gok99"},"content":"        if (matchingTag.isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"gok99"},"content":"            return tags;","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"gok99"},"content":"        Set\u003cTag\u003e newTags \u003d new HashSet\u003c\u003e(tags);","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"gok99"},"content":"        if (matchingTag.get().isEditableByRole(userRole)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"gok99"},"content":"            newTags.remove(matchingTag.get());","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"gok99"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"gok99"},"content":"            messages.add(","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"gok99"},"content":"                    TagUtils.noPermissionsMessage(matchingTag.get().tagName)","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"gok99"},"content":"            );","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"gok99"},"content":"        return newTags;","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"gok99"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"gok99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"gok99"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"gok99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"gok99"},"content":"            return true;","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"gok99"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"gok99"},"content":"        if (!(other instanceof RemoveTagCommand)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"gok99"},"content":"            return false;","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"gok99"},"content":"        // state check","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"gok99"},"content":"        RemoveTagCommand e \u003d (RemoveTagCommand) other;","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"gok99"},"content":"        return tagName.equals(e.tagName)","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"gok99"},"content":"                \u0026\u0026 (this.range.equals(e.range));","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"skythefire":1,"tanqiya":1,"gok99":132}},{"path":"src/main/java/teletubbies/logic/commands/TagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_VALUE;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Range;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.UserProfile.Role;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.CliSyntax;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.Prefix;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.Tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.TagUtils;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"public class TagCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"    public static final String COMMAND_WORD \u003d \"tag\";","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"    public static final List\u003cPrefix\u003e RECOMMENDED_FLAGS \u003d List.of(PREFIX_NAME, PREFIX_VALUE);","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds specified tag to the \"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"            + \"persons specified by the indices.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"            + \"Parameters: RANGE (can be hyphen separated or comma separated integers), -n NAME, \"","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"            + \"[-v VALUE], [-s]\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1-10 \" + CliSyntax.PREFIX_NAME + \" Assignee \"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"            + \"[\" + CliSyntax.PREFIX_VALUE + \" John Doe] \"","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"            + \"[\" + CliSyntax.PREFIX_SUPERVISOR_FLAG + \"]\";","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"    public static final String MESSAGE_COMPLETED_SUCCESS \u003d \"Tag added\";","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"    private final Range range;","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"    private final String tagName;","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"    private final String tagValue;","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"    private final boolean isSupervisorOnlyTag;","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"gok99"},"content":"     * Creates a TagCommand to add the specified {@code Tag}","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"gok99"},"content":"     * @param range Range object for persons to tag","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"gok99"},"content":"     * @param tagName Name of tag","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"gok99"},"content":"     * @param tagValue Value of tag","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"gok99"},"content":"     * @param isSupervisorOnlyTag Access level of tag","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"gok99"},"content":"    public TagCommand(Range range, String tagName, String tagValue, boolean isSupervisorOnlyTag) {","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"gok99"},"content":"        CollectionUtil.requireAllNonNull(range);","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"gok99"},"content":"        CollectionUtil.requireAllNonNull(tagName);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"gok99"},"content":"        this.range \u003d range;","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"gok99"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"gok99"},"content":"        this.tagValue \u003d tagValue;","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"gok99"},"content":"        this.isSupervisorOnlyTag \u003d isSupervisorOnlyTag;","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"gok99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"gok99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"gok99"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"gok99"},"content":"        model.cancelPendingExport();","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"gok99"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"gok99"},"content":"            throw new CommandException(TagUtils.INVALID_TAG_NAME);","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"gok99"},"content":"        List\u003cString\u003e feedbackMessages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"gok99"},"content":"        List\u003cPerson\u003e rangePersons \u003d getPersonsFromRange(model, range);","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"gok99"},"content":"        Role userRole \u003d model.getUserRole();","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"gok99"},"content":"        for (Person p: rangePersons) {","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"gok99"},"content":"            Set\u003cTag\u003e tags \u003d p.getTags();","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"gok99"},"content":"            Optional\u003cTag\u003e matchingTag \u003d TagUtils.findMatchingTag(tags, tagName);","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"gok99"},"content":"            Tag newTag \u003d generateNewTag(matchingTag, feedbackMessages, userRole);","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"gok99"},"content":"            Set\u003cTag\u003e newTags \u003d new HashSet\u003c\u003e(tags);","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"gok99"},"content":"            newTags.remove(newTag);","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"gok99"},"content":"            newTags.add(newTag);","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"tanqiya"},"content":"            Person editedPerson \u003d new Person(p.getUuid(), p.getName(), p.getPhone(), p.getEmail(),","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"skythefire"},"content":"                    p.getAddress(), p.getCompletionStatus(), p.getRemark(), newTags);","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"gok99"},"content":"            model.setPerson(p, editedPerson);","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"gok99"},"content":"        // Throw messages if present","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"gok99"},"content":"        throwMessages(feedbackMessages);","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":93,"author":{"gitId":"gok99"},"content":"        model.commitAddressBook();","lastModifiedDate":"2021-11-06"},{"lineNumber":94,"author":{"gitId":"gok99"},"content":"        return new CommandResult(MESSAGE_COMPLETED_SUCCESS);","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"gok99"},"content":"     * Generates a new tag based on matchingTag. Creates tag with","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"gok99"},"content":"     * given command\u0027s name and tag if matching tag is not present.","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"gok99"},"content":"     * If matching tag is present, copy the existing tag, and replace","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"gok99"},"content":"     * value/editable roles if they are specified by the command.","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"gok99"},"content":"     * @param matchingTag matching tag (possible empty)","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"gok99"},"content":"     * @param feedback feedback messages","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"gok99"},"content":"     * @param userRole user\u0027s role","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"gok99"},"content":"     * @return new generated tag","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"gok99"},"content":"    public Tag generateNewTag(Optional\u003cTag\u003e matchingTag, List\u003cString\u003e feedback, Role userRole) {","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"gok99"},"content":"        if (matchingTag.isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"gok99"},"content":"            // No matching tag, so we create a new one","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"gok99"},"content":"            return new Tag(tagName, tagValue, isSupervisorOnlyTag);","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"gok99"},"content":"        } else if (matchingTag.get().isEditableByRole(userRole)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"gok99"},"content":"            // Copy matching tag","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"gok99"},"content":"            String previousValue \u003d matchingTag.get().getTagValue();","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"gok99"},"content":"            Tag newTag \u003d new Tag(tagName, previousValue, isSupervisorOnlyTag);","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"gok99"},"content":"            if (tagValue !\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"gok99"},"content":"                newTag.setTagValue(tagValue);","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"gok99"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"gok99"},"content":"            return newTag;","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"gok99"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"gok99"},"content":"            feedback.add(","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"gok99"},"content":"                TagUtils.noPermissionsMessage(matchingTag.get().tagName)","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"gok99"},"content":"            );","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"gok99"},"content":"            return null;","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"gok99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"gok99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"gok99"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"gok99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"gok99"},"content":"            return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"gok99"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"gok99"},"content":"        if (!(other instanceof TagCommand)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"gok99"},"content":"            return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"gok99"},"content":"        // state check","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"gok99"},"content":"        TagCommand e \u003d (TagCommand) other;","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"gok99"},"content":"        return tagName.equals(e.tagName)","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"gok99"},"content":"                \u0026\u0026 tagValue.equals(e.tagValue)","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"gok99"},"content":"                \u0026\u0026 isSupervisorOnlyTag \u003d\u003d e.isSupervisorOnlyTag","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"gok99"},"content":"                \u0026\u0026 (this.range.equals(e.range));","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"skythefire":1,"tanqiya":1,"gok99":145}},{"path":"src/main/java/teletubbies/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.exceptions.EarliestVersionException;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * Reverts Teletubbies\u0027 {@code AddressBook} to previous state.","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Teletubbies was successfully undone!\";","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"tanqiya"},"content":"    public static final String MESSAGE_FAILURE \u003d \"Teletubbies is currently at its earliest version and cannot be \"","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"tanqiya"},"content":"            + \"reverted.\";","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        model.cancelPendingExport();","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (!model.canUndoAddressBook()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            model.undoAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } catch (EarliestVersionException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"vigneshsankariyer1234567890":35,"tanqiya":2}},{"path":"src/main/java/teletubbies/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands.exceptions;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"gok99":1,"-":16}},{"path":"src/main/java/teletubbies/logic/commands/uieffects/ExportUiConsumer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanqiya"},"content":"package teletubbies.logic.commands.uieffects;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"tanqiya"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"tanqiya"},"content":"import java.io.File;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"tanqiya"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"tanqiya"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"tanqiya"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"tanqiya"},"content":"import teletubbies.commons.core.LogsCenter;","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"tanqiya"},"content":"import teletubbies.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"tanqiya"},"content":"import teletubbies.commons.util.StringUtil;","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"tanqiya"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"tanqiya"},"content":"import teletubbies.model.AddressBook;","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"tanqiya"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"tanqiya"},"content":"import teletubbies.storage.JsonAddressBookStorage;","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"tanqiya"},"content":"import teletubbies.ui.MainWindow;","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"tanqiya"},"content":"public class ExportUiConsumer implements UiConsumer {","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"tanqiya"},"content":"    private Model model;","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"tanqiya"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"tanqiya"},"content":"    public ExportUiConsumer(Model model) {","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"tanqiya"},"content":"        this.model \u003d model;","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"tanqiya"},"content":"    @Override","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"tanqiya"},"content":"    public void accept(MainWindow window) throws CommandException, DataConversionException {","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"tanqiya"},"content":"        File fileToSave \u003d window.handleFileChooser(\"Export Contacts File\",","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"tanqiya"},"content":"                MainWindow.FileSelectType.SAVE);","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"tanqiya"},"content":"        requireNonNull(fileToSave);","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"tanqiya"},"content":"        String pathString \u003d includeDotJson(fileToSave.getPath());","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"tanqiya"},"content":"        AddressBook ab \u003d model.getExportAddressBook();","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"tanqiya"},"content":"        saveAddressBookToPath(ab, pathString);","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"tanqiya"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"tanqiya"},"content":"     * Saves given address book to given path","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"tanqiya"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"tanqiya"},"content":"     * @param ab AddressBook to save","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"tanqiya"},"content":"     * @param pathString Path string for saving","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"tanqiya"},"content":"     * @throws CommandException","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"tanqiya"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"tanqiya"},"content":"    public void saveAddressBookToPath(AddressBook ab, String pathString) throws CommandException {","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"tanqiya"},"content":"        try {","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"tanqiya"},"content":"            new JsonAddressBookStorage(Paths.get(pathString)).saveAddressBook(ab);","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"tanqiya"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"tanqiya"},"content":"            logger.warning(\"Failed to save contacts file : \" + StringUtil.getDetails(ioe));","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"tanqiya"},"content":"            throw new CommandException(ioe.getMessage());","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"tanqiya"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"tanqiya"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"tanqiya"},"content":"     * Add a \u0027.json\u0027 to the end of filename if","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"tanqiya"},"content":"     * not included already","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"tanqiya"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"tanqiya"},"content":"     * @param path path with or without .json","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"tanqiya"},"content":"     * @return path with .json","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"tanqiya"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"tanqiya"},"content":"    public String includeDotJson(String path) {","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"tanqiya"},"content":"        if (!path.endsWith(\".json\")) {","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"tanqiya"},"content":"            path +\u003d \".json\";","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"tanqiya"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"tanqiya"},"content":"        return path;","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"tanqiya"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"tanqiya":70}},{"path":"src/main/java/teletubbies/logic/commands/uieffects/HelpUiConsumer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands.uieffects;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import teletubbies.ui.MainWindow;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"public class HelpUiConsumer implements UiConsumer {","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"    @Override","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"    public void accept(MainWindow window) throws CommandException, DataConversionException {","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"        window.handleHelp();","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"gok99":13}},{"path":"src/main/java/teletubbies/logic/commands/uieffects/ImportUiConsumer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands.uieffects;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.ImportCommand.MESSAGE_FILE_NOT_FOUND;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.ImportCommand.MESSAGE_INCORRECT_FORMAT;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import java.io.File;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import java.util.Optional;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.LogsCenter;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"import teletubbies.storage.JsonAddressBookStorage;","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"import teletubbies.ui.MainWindow;","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"public class ImportUiConsumer implements UiConsumer {","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"    private Model model;","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"    public ImportUiConsumer(Model model) {","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"        this.model \u003d model;","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"    @Override","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"    public void accept(MainWindow window) throws CommandException, DataConversionException {","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"        try {","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"            File fileToImport \u003d window.handleFileChooser(\"Import Contacts File\",","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"                    MainWindow.FileSelectType.OPEN);","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"            requireNonNull(fileToImport);","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"            Path filePath \u003d fileToImport.toPath();","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"            Optional\u003cReadOnlyAddressBook\u003e addressBookOptional \u003d new JsonAddressBookStorage(filePath)","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"                    .readAddressBook();","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"            if (addressBookOptional.isEmpty()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"                throw new CommandException(MESSAGE_FILE_NOT_FOUND);","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"            }","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"            ReadOnlyAddressBook newContacts \u003d addressBookOptional.get();","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"gok99"},"content":"            model.setAddressBook(newContacts);","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"gok99"},"content":"            logger.info(\"Imported contacts from \" + filePath);","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"gok99"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"gok99"},"content":"            throw new CommandException(MESSAGE_INCORRECT_FORMAT);","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"gok99"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"gok99"},"content":"            throw new CommandException(MESSAGE_FILE_NOT_FOUND);","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"tanqiya":1,"gok99":53}},{"path":"src/main/java/teletubbies/logic/commands/uieffects/MergeUiConsumer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanqiya"},"content":"package teletubbies.logic.commands.uieffects;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"tanqiya"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"tanqiya"},"content":"import static teletubbies.logic.commands.MergeCommand.MESSAGE_FILE_NOT_FOUND;","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"tanqiya"},"content":"import static teletubbies.logic.commands.MergeCommand.MESSAGE_INCORRECT_FORMAT;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"tanqiya"},"content":"import java.io.File;","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"tanqiya"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"tanqiya"},"content":"import java.util.Optional;","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"tanqiya"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"tanqiya"},"content":"import teletubbies.commons.core.LogsCenter;","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"tanqiya"},"content":"import teletubbies.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"tanqiya"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"tanqiya"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"tanqiya"},"content":"import teletubbies.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"tanqiya"},"content":"import teletubbies.storage.JsonAddressBookStorage;","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"tanqiya"},"content":"import teletubbies.ui.MainWindow;","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"tanqiya"},"content":"public class MergeUiConsumer implements UiConsumer {","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"tanqiya"},"content":"    private Model model;","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"tanqiya"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"tanqiya"},"content":"    public MergeUiConsumer(Model model) {","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"tanqiya"},"content":"        this.model \u003d model;","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"tanqiya"},"content":"    @Override","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"tanqiya"},"content":"    public void accept(MainWindow window) throws CommandException, DataConversionException {","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"tanqiya"},"content":"        try {","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"tanqiya"},"content":"            File fileToImport \u003d window.handleFileChooser(\"Merge Contacts File\",","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"tanqiya"},"content":"                    MainWindow.FileSelectType.OPEN);","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"tanqiya"},"content":"            requireNonNull(fileToImport);","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"tanqiya"},"content":"            Path filePath \u003d fileToImport.toPath();","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"tanqiya"},"content":"            Optional\u003cReadOnlyAddressBook\u003e addressBookOptional \u003d new JsonAddressBookStorage(filePath)","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"tanqiya"},"content":"                    .readAddressBook();","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"tanqiya"},"content":"            if (addressBookOptional.isEmpty()) {","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"tanqiya"},"content":"                throw new CommandException(MESSAGE_FILE_NOT_FOUND);","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"tanqiya"},"content":"            }","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"tanqiya"},"content":"            ReadOnlyAddressBook addressBookToMerge \u003d addressBookOptional.get();","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"tanqiya"},"content":"            model.mergeAddressBook(addressBookToMerge);","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"            model.commitAddressBook();","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"tanqiya"},"content":"            logger.info(\"Merged contacts from \" + filePath);","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"tanqiya"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"tanqiya"},"content":"            throw new CommandException(MESSAGE_INCORRECT_FORMAT);","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"tanqiya"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"tanqiya"},"content":"            throw new CommandException(MESSAGE_FILE_NOT_FOUND);","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"tanqiya"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"tanqiya"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"tanqiya":52,"gok99":1}},{"path":"src/main/java/teletubbies/logic/commands/uieffects/UiConsumer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands.uieffects;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.util.ThrowingConsumer;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import teletubbies.ui.MainWindow;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"public interface UiConsumer extends ThrowingConsumer\u003cMainWindow\u003e {","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"    void accept(MainWindow input) throws CommandException, DataConversionException;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"gok99":12}},{"path":"src/main/java/teletubbies/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"skythefire"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"tanqiya"},"content":"import java.util.UUID;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Messages;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.AddCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Address;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Email;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Name;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Phone;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"skythefire"},"content":"import teletubbies.model.person.Remark;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"tanqiya"},"content":"import teletubbies.model.person.Uuid;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.CompletionStatusTag;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.Tag;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"                ArgumentTokenizer.tokenize(args, CliSyntax.PREFIX_NAME, CliSyntax.PREFIX_PHONE, CliSyntax.PREFIX_EMAIL,","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"tanqiya"},"content":"                        CliSyntax.PREFIX_ADDRESS, CliSyntax.PREFIX_UUID);","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"        if (!arePrefixesPresent(argMultimap, CliSyntax.PREFIX_NAME, CliSyntax.PREFIX_PHONE)","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(CliSyntax.PREFIX_NAME).get());","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(CliSyntax.PREFIX_PHONE).get());","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"        Email email \u003d ParserUtil.parseEmail(CliSyntax.DEFAULT_EMAIL);","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"gok99"},"content":"        if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_EMAIL)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"gok99"},"content":"            email \u003d ParserUtil.parseEmail(argMultimap.getValue(CliSyntax.PREFIX_EMAIL).get());","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"gok99"},"content":"        Address address \u003d ParserUtil.parseAddress(CliSyntax.DEFAULT_ADDRESS);","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"gok99"},"content":"        if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_ADDRESS)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"gok99"},"content":"            address \u003d ParserUtil.parseAddress(argMultimap.getValue(CliSyntax.PREFIX_ADDRESS).get());","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"skythefire"},"content":"        Remark remark \u003d new Remark(\"\");","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"skythefire"},"content":"        Set\u003cTag\u003e tagList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"tanqiya"},"content":"        String uuid \u003d UUID.randomUUID().toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"tanqiya"},"content":"        if (arePrefixesPresent(argMultimap, CliSyntax.PREFIX_UUID)) {","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"tanqiya"},"content":"            //Only used for testing AddCommandParser","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"tanqiya"},"content":"            uuid \u003d argMultimap.getValue(CliSyntax.PREFIX_UUID).get().trim();","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"tanqiya"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"skythefire"},"content":"        Person person \u003d new Person(new Uuid(uuid), name, phone, email, address,","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"skythefire"},"content":"                new CompletionStatusTag(), remark, tagList);","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"gok99"},"content":"        return new AddCommand(person);","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"gok99"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"gok99"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"gok99"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"gok99"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"skythefire":7,"tanqiya":8,"gok99":62}},{"path":"src/main/java/teletubbies/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"    private final Map\u003cPrefix, FlagValue\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"        FlagValue flagValue \u003d getAllValues(prefix);","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"        flagValue.add(argValue);","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"        flagValue.setPresent();","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"        argMultimap.put(prefix, flagValue);","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"        FlagValue value \u003d getAllValues(prefix);","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"        List\u003cString\u003e values \u003d value.getValues();","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"gok99"},"content":"    public FlagValue getAllValues(Prefix prefix) {","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"gok99"},"content":"            return new FlagValue(new ArrayList\u003c\u003e(), false, prefix);","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"gok99"},"content":"        return argMultimap.get(prefix);","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"gok99":12,"-":51}},{"path":"src/main/java/teletubbies/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"gok99"},"content":"        prefixPositions.sort(Comparator.comparingInt(PrefixPosition::getStartPosition));","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"gok99":3,"-":146}},{"path":"src/main/java/teletubbies/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"-n\");","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"-p\");","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"-e\");","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"-a\");","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"-t\");","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"    public static final Prefix PREFIX_ROLE \u003d new Prefix(\"-role\");","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"    public static final Prefix PREFIX_INDEX \u003d new Prefix(\"-i\");","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"skythefire"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"-r\");","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"    public static final Prefix PREFIX_ONGOING \u003d new Prefix(\"-ong\");","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"    public static final Prefix PREFIX_INCOMPLETE \u003d new Prefix(\"-inc\");","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"    public static final Prefix PREFIX_VALUE \u003d new Prefix(\"-v\");","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"    public static final Prefix PREFIX_SUPERVISOR_FLAG \u003d new Prefix(\"-s\");","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"tanqiya"},"content":"    public static final Prefix PREFIX_UUID \u003d new Prefix(\"-u\"); //Only used for testing AddCommandParser","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"skythefire"},"content":"    public static final String DEFAULT_EMAIL \u003d \"hello@tp.com\";","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"skythefire"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"NUS\";","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"skythefire"},"content":"    public static final String EMPTY_REMARK \u003d \"\";","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"skythefire":5,"tanqiya":1,"gok99":11,"-":9,"lhw-1":1}},{"path":"src/main/java/teletubbies/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static teletubbies.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"skythefire"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Messages;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Phone;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"    public static final String MESSAGE_INVALID_REFERENCE_METHOD \u003d \"A person can be referenced by either phone \"","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"            + \"number or index, but not both!\";","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"skythefire"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_PHONE, PREFIX_INDEX);","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"        if ((!arePrefixesPresent(argMultimap, PREFIX_PHONE) \u0026\u0026 !arePrefixesPresent(argMultimap, PREFIX_INDEX))","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"skythefire"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"skythefire"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"        if (arePrefixesPresent(argMultimap, PREFIX_PHONE) \u0026\u0026 arePrefixesPresent(argMultimap, PREFIX_INDEX)) {","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"            throw new ParseException(MESSAGE_INVALID_REFERENCE_METHOD);","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"gok99"},"content":"            if (arePrefixesPresent(argMultimap, PREFIX_PHONE)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"gok99"},"content":"                Phone phoneNumber \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"skythefire"},"content":"                return new DeleteCommand(phoneNumber);","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"skythefire"},"content":"            } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"gok99"},"content":"                Index index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"skythefire"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"skythefire"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"gok99"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"skythefire"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"skythefire"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"skythefire":16,"gok99":26,"-":20}},{"path":"src/main/java/teletubbies/logic/parser/DoneCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_INCOMPLETE;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_ONGOING;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Messages;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.DoneCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.CompletionStatusTag.CompletionStatus;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * Parses input arguments and creates a new {@code DoneCommand} object","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class DoneCommandParser implements Parser\u003cDoneCommand\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"    private static final String INVALID_FLAG \u003d \"You can only use one completion status flag\";","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code DoneCommand}","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * and returns a {@code DoneCommand} object for execution.","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public DoneCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"            ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_ONGOING, PREFIX_INCOMPLETE);","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"            Index index \u003d ParserUtil.parseIndex(argumentMultimap.getPreamble());","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"            boolean incomplete \u003d argumentMultimap.getAllValues(PREFIX_INCOMPLETE).isPresent();","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"            boolean ongoing \u003d argumentMultimap.getAllValues(PREFIX_ONGOING).isPresent();","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"            if (incomplete \u0026\u0026 ongoing) {","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"                throw new ParseException(INVALID_FLAG);","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"            CompletionStatus completionStatus \u003d incomplete","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"                    ? CompletionStatus.INCOMPLETE","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"                    : ongoing","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"                        ? CompletionStatus.ONGOING","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"                        : CompletionStatus.COMPLETE;","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"            return new DoneCommand(index, completionStatus);","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } catch (ParseException parseException) {","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"gok99"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DoneCommand.MESSAGE_USAGE), parseException","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            );","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"vigneshsankariyer1234567890":25,"gok99":26}},{"path":"src/main/java/teletubbies/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.EditCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.Tag;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"skythefire"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS);","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"        EditCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"skythefire":1,"gok99":11,"-":67}},{"path":"src/main/java/teletubbies/logic/parser/ExportCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.ExportCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":" * Parses input arguments and creates a new ExportCommand object","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"public class ExportCommandParser implements Parser\u003cExportCommand\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"     * Parses the given {@code String} of arguments in the context of the ExportCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"     * and returns a ExportCommand object for execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"    public ExportCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"                CliSyntax.PREFIX_TAG);","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"        Collection\u003cString\u003e tagValues \u003d argMultimap.getAllValues(CliSyntax.PREFIX_TAG).getValues();","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"        return new ExportCommand(ParserUtil.parseTagsWithValue(tagValues));","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"gok99":29}},{"path":"src/main/java/teletubbies/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Messages;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.PersonHasTagsPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.Tag;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":" * Parses input arguments and creates a new ExportCommand object","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"     * Parses the given {@code String} of arguments in the context of the ExportCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"     * and returns a ExportCommand object for execution.","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"                CliSyntax.PREFIX_TAG);","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"        Collection\u003cString\u003e tagValues \u003d argMultimap.getAllValues(CliSyntax.PREFIX_TAG).getValues();","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"        if (tagValues.size() \u003c\u003d 0) {","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"                    FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"        Set\u003cTag\u003e tagStrings \u003d ParserUtil.parseTagsWithValue(tagValues);","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"        return new FilterCommand(new PersonHasTagsPredicate(tagStrings));","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"gok99":41}},{"path":"src/main/java/teletubbies/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Messages;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.FindCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"gok99":6,"-":26}},{"path":"src/main/java/teletubbies/logic/parser/FlagValue.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"public class FlagValue {","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"    public final Prefix prefix;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"    private List\u003cString\u003e values;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"    private boolean isPresent;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"     * @param values list of values for the prefix flag","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"     * @param isPresent if prefix was used","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"     * @param prefix associated prefix","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"    public FlagValue(List\u003cString\u003e values, boolean isPresent, Prefix prefix) {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"        this.values \u003d values;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"        this.isPresent \u003d isPresent;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"     * Add a value associated with the prefix","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"     * @param value value to add","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"     * @return list of values after adding","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"    public List\u003cString\u003e add(String value) {","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"        values.add(value);","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"        return values;","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"    public void setPresent() {","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"        this.isPresent \u003d true;","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"    public List\u003cString\u003e getValues() {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"        return this.values;","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"    public boolean isPresent() {","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"        return this.isPresent;","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"gok99":45}},{"path":"src/main/java/teletubbies/logic/parser/InputParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Messages;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.AddCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.Command;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"tanqiya"},"content":"import teletubbies.logic.commands.ConfirmExportCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.DoneCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.EditCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.ExportCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.FindCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.logic.commands.HistoryCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.ImportCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.ListCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"tanqiya"},"content":"import teletubbies.logic.commands.MergeCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.ProfileCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.logic.commands.RedoCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"skythefire"},"content":"import teletubbies.logic.commands.RemarkCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.RemoveTagCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.TagCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.logic.commands.UndoCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"public class InputParser {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"gok99"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        case DoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return new DoneCommandParser().parse(arguments);","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":85,"author":{"gitId":"lhw-1"},"content":"        case ProfileCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"lhw-1"},"content":"            return new ProfileCommandParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"tanqiya"},"content":"        case ImportCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"tanqiya"},"content":"            return new ImportCommand();","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"tanqiya"},"content":"        case MergeCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"tanqiya"},"content":"            return new MergeCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"gok99"},"content":"        case ExportCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"gok99"},"content":"            return new ExportCommandParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"gok99"},"content":"        case TagCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"gok99"},"content":"            return new TagCommandParser().parse(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"gok99"},"content":"        case RemoveTagCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"gok99"},"content":"            return new RemoveTagCommandParser().parse(arguments);","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"gok99"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"gok99"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"tanqiya"},"content":"        case ConfirmExportCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"tanqiya"},"content":"            return new ConfirmExportCommand();","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        case HistoryCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return new HistoryCommand();","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"skythefire"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"skythefire"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return new UndoCommand();","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return new RedoCommand();","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":122,"author":{"gitId":"gok99"},"content":"            throw new ParseException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"vigneshsankariyer1234567890":15,"skythefire":4,"tanqiya":12,"gok99":33,"-":59,"lhw-1":3}},{"path":"src/main/java/teletubbies/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.Command;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"gok99":3,"-":13}},{"path":"src/main/java/teletubbies/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Range;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.util.StringUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Address;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Email;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Name;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Phone;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.Tag;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"    public static final String MESSAGE_RANGE_FORMAT \u003d \"Range must be in the format \u0027startIndex - endIndex\u0027\"","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"            + \" or \u0027index1, index2,..., indexN\u0027.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"    public static final String MESSAGE_INVALID_RANGE_FORMAT \u003d \"Range limits are in incorrect format!\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"            + MESSAGE_RANGE_FORMAT;","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"    public static final String MESSAGE_INVALID_RANGE_INTEGERS \u003d \"Range values must be positive integers!\\n\";","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"    public static final String MESSAGE_INVALID_RANGE_LIMITS \u003d \"Left range limit must be smaller than right limit!\\n\";","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"gok99"},"content":"     * Parses a range String into a {@code Range} and returns it.","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"gok99"},"content":"     * @param range range values separated by a \u0027-\u0027","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"gok99"},"content":"     * @return Range object","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"gok99"},"content":"     * @throws ParseException If range is not 2 values separated by","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"gok99"},"content":"     * a hyphen with the left value smaller than the right","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"gok99"},"content":"    public static Range parseRangeSeparatedByHyphen(String range) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"gok99"},"content":"        requireNonNull(range);","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"gok99"},"content":"        String[] rangeValues \u003d range.split(\"-\");","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"gok99"},"content":"        if (rangeValues.length !\u003d 2) {","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"gok99"},"content":"            throw new ParseException(MESSAGE_INVALID_RANGE_FORMAT);","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"gok99"},"content":"        String rangeValueLeft \u003d rangeValues[0].trim();","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"gok99"},"content":"        String rangeValueRight \u003d rangeValues[1].trim();","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"gok99"},"content":"        boolean areValuesIntegers \u003d StringUtil.isNonZeroUnsignedInteger(rangeValueLeft)","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"gok99"},"content":"                \u0026\u0026 StringUtil.isNonZeroUnsignedInteger(rangeValueRight);","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"gok99"},"content":"        if (!areValuesIntegers) {","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"gok99"},"content":"            throw new ParseException(MESSAGE_INVALID_RANGE_INTEGERS);","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"gok99"},"content":"        int start \u003d Integer.parseInt(rangeValueLeft);","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"gok99"},"content":"        int end \u003d Integer.parseInt(rangeValueRight);","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"gok99"},"content":"        if (start \u003e end) {","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"gok99"},"content":"            throw new ParseException(MESSAGE_INVALID_RANGE_LIMITS);","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"gok99"},"content":"        return new Range(IntStream.rangeClosed(start, end).boxed().collect(Collectors.toSet()));","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"gok99"},"content":"     * Parses a range (separated by commas) into a {@code Range} and returns it.","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"gok99"},"content":"     * @param range Index values separated by commas","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"gok99"},"content":"     * @return Range object","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"gok99"},"content":"     * @throws ParseException If range values are not integers","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"gok99"},"content":"    public static Range parseRangeSeparatedByCommas(String range) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"gok99"},"content":"        requireNonNull(range);","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"gok99"},"content":"        String[] rangeValues \u003d range.split(\",\");","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"gok99"},"content":"        Stream\u003cString\u003e trimmedValues \u003d Arrays.stream(rangeValues).map(String::trim);","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"gok99"},"content":"        if (!trimmedValues.allMatch(StringUtil::isNonZeroUnsignedInteger)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"gok99"},"content":"            throw new ParseException(MESSAGE_INVALID_RANGE_INTEGERS);","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"gok99"},"content":"        Set\u003cInteger\u003e rangeIntegers \u003d Arrays.stream(rangeValues).map(String::trim)","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"gok99"},"content":"                .map(Integer::parseInt).collect(Collectors.toSet());","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"gok99"},"content":"        return new Range(rangeIntegers);","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"gok99"},"content":"     * Parses a valid range representation to a {@code Range} and returns it.","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"gok99"},"content":"     * @param range range in a valid format","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"gok99"},"content":"     * @return Range object","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"gok99"},"content":"     * @throws ParseException if invalid range","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"gok99"},"content":"    public static Range parseRange(String range) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"gok99"},"content":"        return range.contains(\"-\")","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"gok99"},"content":"                ? ParserUtil.parseRangeSeparatedByHyphen(range)","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"gok99"},"content":"                : ParserUtil.parseRangeSeparatedByCommas(range);","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":199,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":200,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":201,"author":{"gitId":"gok99"},"content":"     * Parses a colon separated {@code String tag} with name and value","lastModifiedDate":"2021-10-26"},{"lineNumber":202,"author":{"gitId":"gok99"},"content":"     * into a {@code Tag}.","lastModifiedDate":"2021-10-26"},{"lineNumber":203,"author":{"gitId":"gok99"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-26"},{"lineNumber":204,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":205,"author":{"gitId":"gok99"},"content":"     * e.g. parseTagWithValue(\"Priority:HIGH\");","lastModifiedDate":"2021-10-26"},{"lineNumber":206,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":207,"author":{"gitId":"gok99"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2021-10-26"},{"lineNumber":208,"author":{"gitId":"gok99"},"content":"    */","lastModifiedDate":"2021-10-26"},{"lineNumber":209,"author":{"gitId":"gok99"},"content":"    public static Tag parseTagWithValue(String tag) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":210,"author":{"gitId":"gok99"},"content":"        requireNonNull(tag);","lastModifiedDate":"2021-10-26"},{"lineNumber":211,"author":{"gitId":"gok99"},"content":"        String[] nameValuePair \u003d tag.trim().split(\":\");","lastModifiedDate":"2021-10-26"},{"lineNumber":212,"author":{"gitId":"gok99"},"content":"        String name \u003d nameValuePair[0].trim();","lastModifiedDate":"2021-10-26"},{"lineNumber":213,"author":{"gitId":"gok99"},"content":"        String value \u003d nameValuePair.length \u003c 2","lastModifiedDate":"2021-10-26"},{"lineNumber":214,"author":{"gitId":"gok99"},"content":"                ? \"\"","lastModifiedDate":"2021-10-26"},{"lineNumber":215,"author":{"gitId":"gok99"},"content":"                : nameValuePair[1].trim();","lastModifiedDate":"2021-10-26"},{"lineNumber":216,"author":{"gitId":"gok99"},"content":"        if (!Tag.isAlphanumericTagName(name)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":217,"author":{"gitId":"gok99"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-26"},{"lineNumber":218,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":219,"author":{"gitId":"gok99"},"content":"        return new Tag(name, value, Tag.getRolesForEditAccess(false), true);","lastModifiedDate":"2021-10-28"},{"lineNumber":220,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":221,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":222,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":223,"author":{"gitId":"gok99"},"content":"     * Parses {@code Collection\u003cString\u003e tags} with name and value into","lastModifiedDate":"2021-10-26"},{"lineNumber":224,"author":{"gitId":"gok99"},"content":"     * a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2021-10-26"},{"lineNumber":225,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":226,"author":{"gitId":"gok99"},"content":"    public static Set\u003cTag\u003e parseTagsWithValue(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":227,"author":{"gitId":"gok99"},"content":"        requireNonNull(tags);","lastModifiedDate":"2021-10-26"},{"lineNumber":228,"author":{"gitId":"gok99"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":229,"author":{"gitId":"gok99"},"content":"        for (String v: tags) {","lastModifiedDate":"2021-10-26"},{"lineNumber":230,"author":{"gitId":"gok99"},"content":"            tagSet.add(parseTagWithValue(v));","lastModifiedDate":"2021-10-26"},{"lineNumber":231,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"gok99"},"content":"        return tagSet;","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":234,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"gok99":120,"-":115}},{"path":"src/main/java/teletubbies/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"gok99":1,"-":38}},{"path":"src/main/java/teletubbies/logic/parser/ProfileCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static teletubbies.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.UserProfile;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.ProfileCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":" * Parses input arguments and creates a new ProfileCommand object","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"public class ProfileCommandParser implements Parser\u003cProfileCommand\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code ProfileCommand}","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"     * and returns a {@code ProfileCommand} object for execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"    public ProfileCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_ROLE);","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ROLE)","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ProfileCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"            UserProfile userProfile \u003d getUserProfileFromArgs(argMultimap);","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"            return new ProfileCommand(userProfile);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"            throw e;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"lhw-1"},"content":"     * Returns a UserProfile object constructed using the name and the role parsed from the given","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"lhw-1"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"lhw-1"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"lhw-1"},"content":"     * @param argMultimap The Arguments passed into the parser as {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"lhw-1"},"content":"     * @return A UserProfile object corresponding to the name and the role passed into the parser.","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"lhw-1"},"content":"     * @throws ParseException if the user input does not conform to the expected format.","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"lhw-1"},"content":"    private UserProfile getUserProfileFromArgs(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"lhw-1"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"gok99"},"content":"            String name \u003d argMultimap.getValue(PREFIX_NAME).get();","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"gok99"},"content":"            String roleString \u003d argMultimap.getValue(PREFIX_ROLE).get();","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"lhw-1"},"content":"            String upperCaseRoleString \u003d roleString.toUpperCase();","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"lhw-1"},"content":"            UserProfile.Role role \u003d UserProfile.Role.valueOf(upperCaseRoleString);","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"lhw-1"},"content":"            return new UserProfile(name, role);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"lhw-1"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"lhw-1"},"content":"            throw new ParseException(ProfileCommand.MESSAGE_INVALID_ROLE);","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"lhw-1"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"lhw-1"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"lhw-1"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"lhw-1"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"gok99":13,"lhw-1":55}},{"path":"src/main/java/teletubbies/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skythefire"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"skythefire"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"skythefire"},"content":"import static teletubbies.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"skythefire"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"skythefire"},"content":"import teletubbies.commons.core.index.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"skythefire"},"content":"import teletubbies.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"skythefire"},"content":"import teletubbies.logic.commands.RemarkCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"skythefire"},"content":"import teletubbies.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"skythefire"},"content":"import teletubbies.model.person.Remark;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"skythefire"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"skythefire"},"content":" * Parses input arguments and creates a new {@code RemarkCommand} object","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"skythefire"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"skythefire"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"skythefire"},"content":"    public static final String MESSAGE_EXCEED_REMARK_CHARACTER_LIMIT \u003d \"There is a 40 character limit for a remark!\";","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"skythefire"},"content":"    // @@author: j-lum","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"skythefire"},"content":"    // Reused from","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"skythefire"},"content":"    // https://github.com/se-edu/addressbook-level3/compare/tutorial-add-remark","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"skythefire"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"skythefire"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"skythefire"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"skythefire"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"skythefire"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"skythefire"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"skythefire"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"skythefire"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_REMARK);","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"skythefire"},"content":"        Index index;","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"skythefire"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"skythefire"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"skythefire"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"skythefire"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"skythefire"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"skythefire"},"content":"        String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"skythefire"},"content":"        int numberOfCharacters \u003d remark.length();","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"skythefire"},"content":"        if (numberOfCharacters \u003e 40) {","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"skythefire"},"content":"            throw new ParseException(MESSAGE_EXCEED_REMARK_CHARACTER_LIMIT);","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"skythefire"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"skythefire"},"content":"        return new RemarkCommand(index, new Remark(remark));","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"skythefire"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"skythefire":49}},{"path":"src/main/java/teletubbies/logic/parser/RemoveTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Messages;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Range;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.RemoveTagCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":" * Parses input arguments and creates a new {@code TagRemoveCommand} object","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"public class RemoveTagCommandParser implements Parser\u003cRemoveTagCommand\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code TagRemoveCommand}","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"     * and returns a {@code TagRemoveCommand} object for execution.","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"    public RemoveTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"        String preambleString \u003d argumentMultimap.getPreamble();","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"        if (!arePrefixesPresent(argumentMultimap, PREFIX_NAME) || preambleString.isEmpty()) {","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"                    RemoveTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"        String tagName \u003d argumentMultimap.getValue(PREFIX_NAME).get();","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"        Range personRange \u003d ParserUtil.parseRange(preambleString);","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"        return new RemoveTagCommand(personRange, tagName);","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"gok99"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"gok99":48}},{"path":"src/main/java/teletubbies/logic/parser/TagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_SUPERVISOR_FLAG;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_VALUE;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Messages;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Range;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.TagCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":" * Parses input arguments and creates a new {@code TagCommand} object","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"public class TagCommandParser implements Parser\u003cTagCommand\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code TagCommand}","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"     * and returns a {@code TagCommand} object for execution.","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"    public TagCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"        ArgumentMultimap argumentMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NAME,","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"                PREFIX_VALUE, PREFIX_SUPERVISOR_FLAG);","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"        String preambleString \u003d argumentMultimap.getPreamble();","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"        if (!arePrefixesPresent(argumentMultimap, PREFIX_NAME) || preambleString.isEmpty()) {","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"                    TagCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"        String tagName \u003d argumentMultimap.getValue(PREFIX_NAME).get();","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"        String tagValue \u003d argumentMultimap.getValue(PREFIX_VALUE).orElse(\"\");","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"        boolean isSupervisorOnly \u003d argumentMultimap.getAllValues(PREFIX_SUPERVISOR_FLAG).isPresent();","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"        Range personRange \u003d ParserUtil.parseRange(preambleString);","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"        return new TagCommand(personRange, tagName, tagValue, isSupervisorOnly);","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"gok99"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"gok99"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"gok99"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"gok99"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"gok99":54}},{"path":"src/main/java/teletubbies/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser.exceptions;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"gok99":2,"-":15}},{"path":"src/main/java/teletubbies/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.beans.InvalidationListener;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.util.InvalidationListenerManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.UniquePersonList;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    //@@author pyokagan and Zhiyuan-Amos","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    // Reused from https://github.com/se-edu/addressbook-level4/commit/9582d6ac94fcbd939f243b054332e98974d6c738","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    // with minor modifications","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final InvalidationListenerManager invalidationListenerManager \u003d new InvalidationListenerManager();","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    //@@author pyokagan and Zhiyuan-Amos","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":55,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        indicateModified();","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"tanqiya"},"content":"     * Returns true if a person with the same name {@code person} exists in the address book.","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"tanqiya"},"content":"    public boolean hasName(Person person) {","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"skythefire"},"content":"        return persons.containsName(person);","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"skythefire"},"content":"    public boolean hasPhoneNumber(Person person) {","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"skythefire"},"content":"        return persons.containsPhoneNumber(person);","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":91,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        indicateModified();","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":103,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        indicateModified();","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":112,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        indicateModified();","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    //@@author pyokagan and Zhiyuan-Amos","lastModifiedDate":"2021-11-06"},{"lineNumber":116,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    // Reused from https://github.com/se-edu/addressbook-level4/commit/9582d6ac94fcbd939f243b054332e98974d6c738","lastModifiedDate":"2021-11-06"},{"lineNumber":117,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    // with minor modifications","lastModifiedDate":"2021-11-06"},{"lineNumber":118,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void addListener(InvalidationListener listener) {","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        invalidationListenerManager.addListener(listener);","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void removeListener(InvalidationListener listener) {","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        invalidationListenerManager.removeListener(listener);","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Notifies listeners that the address book has been modified.","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    protected void indicateModified() {","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        invalidationListenerManager.callListeners(this);","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    //@@author pyokagan and Zhiyuan-Amos","lastModifiedDate":"2021-11-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"tanqiya"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"tanqiya"},"content":"     * Replaces the given person {@code personToMerge} in the address book.","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"tanqiya"},"content":"     * @param personToMerge Person from file being merged.","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"tanqiya"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"tanqiya"},"content":"    public void mergePerson(Person personToMerge) {","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"tanqiya"},"content":"        persons.mergePerson(personToMerge);","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\\n\" + persons.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"vigneshsankariyer1234567890":33,"skythefire":5,"tanqiya":8,"gok99":3,"-":119}},{"path":"src/main/java/teletubbies/model/CommandInputHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package teletubbies.model;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.exceptions.EarliestVersionException;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.exceptions.LatestVersionException;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * A data structure to encapsulate the logic needed to store previous commands using HistoryManager.","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class CommandInputHistory {","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private HistoryManager\u003cString\u003e inputHistory;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public CommandInputHistory() {","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.inputHistory \u003d new HistoryManager\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Returns the full history of inputs given to CommandInputHistory.","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @return full list of inputs given to CommandInputHistory.","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public List\u003cString\u003e getChronologicallyAscendingHistory() {","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        inputHistory.resetFullHistory();","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return inputHistory.historyList();","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Returns the full history of inputs given to CommandInputHistory.","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @return full list of inputs given to CommandInputHistory.","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public List\u003cString\u003e getChronologicallyDescendingHistory() {","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        inputHistory.resetFullHistory();","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        List\u003cString\u003e result \u003d inputHistory.historyList();","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Collections.reverse(result);","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return result;","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Adds an input to the top if the {@code HistoryManager} stack.","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param input to add to the top of the HistoryManager stack.","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void addCommandInput(String input) {","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        requireNonNull(input);","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        inputHistory.resetFullHistory();","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        inputHistory \u003d inputHistory.commitAndPush(input);","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Resets {@code HistoryManager} to a previous version.","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @throws EarliestVersionException if pointing to the earliest version.","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void previous() throws EarliestVersionException {","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        inputHistory.undo();","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Resets {@code HistoryManager} to a later version.","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @throws LatestVersionException if pointing to the latest version.","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void next() throws LatestVersionException {","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        inputHistory.redo();","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Returns current version that {@code HistoryManager} currently has a reference to.","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public String peek() {","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return inputHistory.peek();","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Checks if inputHistory is pointing to the earliest command input.","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public boolean isEarliest() {","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return !inputHistory.isUndoable();","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Checks if inputHistory is pointing to the latest command input.","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public boolean isLatest() {","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return !inputHistory.isRedoable();","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return inputHistory.isEmpty();","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return true;","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (!(obj instanceof CommandInputHistory)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return false;","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        CommandInputHistory oth \u003d (CommandInputHistory) obj;","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return this.inputHistory.equals(oth.inputHistory);","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"vigneshsankariyer1234567890":108}},{"path":"src/main/java/teletubbies/model/HistoryManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package teletubbies.model;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.List;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.exceptions.EarliestVersionException;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.exceptions.EmptyHistoryManagerException;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.exceptions.LatestVersionException;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * A stack-like data structure which will be used to store the history of states of any type T.","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * @param \u003cT\u003e The type of class which will be managed by HistoryManager.","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class HistoryManager\u003cT\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final ArrayList\u003cT\u003e historyStack;","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private int stackPointer;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Creates an empty HistoryManager.","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public HistoryManager() {","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.historyStack \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.stackPointer \u003d -1;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Creates a HistoryManager with a predefined historical list of items.","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param history which refer to a predefined historical list of items.","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public HistoryManager(List\u003cT\u003e history) {","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.historyStack \u003d new ArrayList\u003c\u003e(history);","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.stackPointer \u003d historyStack.size() - 1;","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Checks if the HistoryManager can revert to an earlier version.","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public boolean isUndoable() {","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return stackPointer \u003e 0;","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Checks if the HistoryManager can be redone to a later version.","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public boolean isRedoable() {","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return stackPointer \u003c historyStack.size() - 1;","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Checks if the HistoryManager is empty.","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return historyStack.isEmpty() || stackPointer \u003c 0;","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Returns a copy of the history of states in chronological order up to {@code stackPointer}.","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @return copy of history up to {@code stackPointer}.","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public List\u003cT\u003e historyList() {","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return new ArrayList\u003c\u003e(historyStack.subList(0, stackPointer + 1));","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Resets to the full history stored by {@code historyStack} by repointing {@code stackPointer} to the top of","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * {@code historyStack}.","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void resetFullHistory() {","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.stackPointer \u003d historyStack.size() - 1;","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Returns the current item in the stack that is referred to by {@code stackPointer}.","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @return the current item referred to by {@code stackPointer} or null if empty.","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public T peek() {","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (isEmpty()) {","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return null;","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assert stackPointer \u003e\u003d 0;","lastModifiedDate":"2021-11-06"},{"lineNumber":82,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assert stackPointer \u003c historyStack.size();","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return historyStack.get(stackPointer);","lastModifiedDate":"2021-11-06"},{"lineNumber":84,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":86,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private void push(T item) {","lastModifiedDate":"2021-11-06"},{"lineNumber":87,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (!isRedoable()) {","lastModifiedDate":"2021-11-06"},{"lineNumber":88,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            historyStack.add(item);","lastModifiedDate":"2021-11-06"},{"lineNumber":89,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } else {","lastModifiedDate":"2021-11-06"},{"lineNumber":90,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            historyStack.add(stackPointer + 1, item);","lastModifiedDate":"2021-11-06"},{"lineNumber":91,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":92,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        stackPointer++;","lastModifiedDate":"2021-11-06"},{"lineNumber":93,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":94,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":95,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private T pop() throws EmptyHistoryManagerException {","lastModifiedDate":"2021-11-06"},{"lineNumber":96,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (isEmpty()) {","lastModifiedDate":"2021-11-06"},{"lineNumber":97,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new EmptyHistoryManagerException();","lastModifiedDate":"2021-11-06"},{"lineNumber":98,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":99,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        T top \u003d historyStack.get(stackPointer);","lastModifiedDate":"2021-11-06"},{"lineNumber":100,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        stackPointer--;","lastModifiedDate":"2021-11-06"},{"lineNumber":101,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return top;","lastModifiedDate":"2021-11-06"},{"lineNumber":102,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":103,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":104,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":105,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Undoes the state to a previous version as stored by HistoryManager","lastModifiedDate":"2021-11-06"},{"lineNumber":106,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @throws EarliestVersionException if HistoryManager is not undoable.","lastModifiedDate":"2021-11-06"},{"lineNumber":107,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":108,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void undo() throws EarliestVersionException {","lastModifiedDate":"2021-11-06"},{"lineNumber":109,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (!isUndoable()) {","lastModifiedDate":"2021-11-06"},{"lineNumber":110,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new EarliestVersionException();","lastModifiedDate":"2021-11-06"},{"lineNumber":111,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":112,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        stackPointer--;","lastModifiedDate":"2021-11-06"},{"lineNumber":113,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":114,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":115,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":116,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Reverts the state to a later version as stored by HistoryManager","lastModifiedDate":"2021-11-06"},{"lineNumber":117,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @throws LatestVersionException if HistoryManager is not redoable.","lastModifiedDate":"2021-11-06"},{"lineNumber":118,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":119,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void redo() throws LatestVersionException {","lastModifiedDate":"2021-11-06"},{"lineNumber":120,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (!isRedoable()) {","lastModifiedDate":"2021-11-06"},{"lineNumber":121,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new LatestVersionException();","lastModifiedDate":"2021-11-06"},{"lineNumber":122,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":123,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        stackPointer++;","lastModifiedDate":"2021-11-06"},{"lineNumber":124,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":125,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":126,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":127,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Commits the current history as stored by HistoryManager and pushes new state to the top of the {@code","lastModifiedDate":"2021-11-06"},{"lineNumber":128,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * historyStack}. This ensures the immutability of historyStack and guarantees that if anything is added,","lastModifiedDate":"2021-11-06"},{"lineNumber":129,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * stackPointer will point to the latest version, at the top of the {@code historyStack}.","lastModifiedDate":"2021-11-06"},{"lineNumber":130,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param item The new state to be stored.","lastModifiedDate":"2021-11-06"},{"lineNumber":131,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @return A new HistoryManager with an updated history.","lastModifiedDate":"2021-11-06"},{"lineNumber":132,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":133,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public HistoryManager\u003cT\u003e commitAndPush(T item) {","lastModifiedDate":"2021-11-06"},{"lineNumber":134,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        HistoryManager\u003cT\u003e copy \u003d commit();","lastModifiedDate":"2021-11-06"},{"lineNumber":135,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        copy.push(item);","lastModifiedDate":"2021-11-06"},{"lineNumber":136,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return copy;","lastModifiedDate":"2021-11-06"},{"lineNumber":137,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":138,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":139,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private HistoryManager\u003cT\u003e commit() {","lastModifiedDate":"2021-11-06"},{"lineNumber":140,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return HistoryManager.clearedCopy(this);","lastModifiedDate":"2021-11-06"},{"lineNumber":141,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":142,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":143,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":144,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Static method that clears the history after stackPointer.","lastModifiedDate":"2021-11-06"},{"lineNumber":145,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param original the original HistoryManager","lastModifiedDate":"2021-11-06"},{"lineNumber":146,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param \u003cU\u003e the type that is stored by HistoryManager","lastModifiedDate":"2021-11-06"},{"lineNumber":147,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @return A new HistoryManager that contains the history up to stackPointer.","lastModifiedDate":"2021-11-06"},{"lineNumber":148,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":149,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static \u003cU\u003e HistoryManager\u003cU\u003e clearedCopy(HistoryManager\u003cU\u003e original) {","lastModifiedDate":"2021-11-06"},{"lineNumber":150,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        List\u003cU\u003e sublist \u003d original.historyStack.subList(0, original.stackPointer + 1);","lastModifiedDate":"2021-11-06"},{"lineNumber":151,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return new HistoryManager\u003c\u003e(sublist);","lastModifiedDate":"2021-11-06"},{"lineNumber":152,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":153,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":154,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":155,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-11-06"},{"lineNumber":156,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // short circuit if same object","lastModifiedDate":"2021-11-06"},{"lineNumber":157,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-11-06"},{"lineNumber":158,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return true;","lastModifiedDate":"2021-11-06"},{"lineNumber":159,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":160,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":161,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-11-06"},{"lineNumber":162,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (!(other instanceof HistoryManager)) {","lastModifiedDate":"2021-11-06"},{"lineNumber":163,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return false;","lastModifiedDate":"2021-11-06"},{"lineNumber":164,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":165,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":166,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        HistoryManager\u003c?\u003e oth \u003d (HistoryManager\u003c?\u003e) other;","lastModifiedDate":"2021-11-06"},{"lineNumber":167,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":168,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (oth.stackPointer !\u003d this.stackPointer) {","lastModifiedDate":"2021-11-06"},{"lineNumber":169,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return false;","lastModifiedDate":"2021-11-06"},{"lineNumber":170,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":171,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":172,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (oth.historyStack.size() !\u003d this.historyStack.size()) {","lastModifiedDate":"2021-11-06"},{"lineNumber":173,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return false;","lastModifiedDate":"2021-11-06"},{"lineNumber":174,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":175,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":176,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (int i \u003d 0; i \u003c this.historyStack.size(); i++) {","lastModifiedDate":"2021-11-06"},{"lineNumber":177,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            Object a \u003d this.historyStack.get(i);","lastModifiedDate":"2021-11-06"},{"lineNumber":178,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            Object b \u003d oth.historyStack.get(i);","lastModifiedDate":"2021-11-06"},{"lineNumber":179,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            if (!a.equals(b)) {","lastModifiedDate":"2021-11-06"},{"lineNumber":180,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                return false;","lastModifiedDate":"2021-11-06"},{"lineNumber":181,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            }","lastModifiedDate":"2021-11-06"},{"lineNumber":182,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":183,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":184,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return true;","lastModifiedDate":"2021-11-06"},{"lineNumber":185,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":186,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"vigneshsankariyer1234567890":186}},{"path":"src/main/java/teletubbies/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.beans.InvalidationListener;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.GuiSettings;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Range;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.UserProfile;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.UserProfile.Role;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.exceptions.EarliestVersionException;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.exceptions.LatestVersionException;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.UserRoleSetException;","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"     * Replaces user profile data with the data in {@code userProfile}.","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"    void setUserProfile(UserProfile userProfile) throws UserRoleSetException;","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"lhw-1"},"content":"     * Returns the user profile.","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"lhw-1"},"content":"    UserProfile getUserProfile();","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"gok99"},"content":"     * Returns user\u0027s role","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"gok99"},"content":"    Role getUserRole();","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Adds a listener.","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    void addListener(InvalidationListener listener);","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"tanqiya"},"content":"     * Returns true if a person with the same name {@code person} exists in the address book.","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"tanqiya"},"content":"    boolean hasName(Person person);","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"skythefire"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"skythefire"},"content":"     * Returns true if a person with the same phone number as {@code person} exists in the address book.","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"skythefire"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"skythefire"},"content":"    boolean hasPhoneNumber(Person person);","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"gok99"},"content":"    /** Returns a list of persons from indices in a filtered person list */","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"gok99"},"content":"    List\u003cPerson\u003e getPersonsFromRange(Range range) throws IllegalValueException;","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"tanqiya"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"tanqiya"},"content":"     * Replaces the address book displayed to users with the list of persons to be exported.","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"tanqiya"},"content":"     * Original address book is stored as a copy until export is complete.","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"tanqiya"},"content":"     * @param filteredPersonList Filtered list of persons containing user-specified tags.","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"tanqiya"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"tanqiya"},"content":"    void updateExportList(List\u003cPerson\u003e filteredPersonList);","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"tanqiya"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"tanqiya"},"content":"     * Returns true if there is a pending export.","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"tanqiya"},"content":"     * @return state of export confirmation.","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"tanqiya"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"tanqiya"},"content":"    boolean isAwaitingExportConfirmation();","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"tanqiya"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"tanqiya"},"content":"     * Returns address book upon confirmation of export.","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"tanqiya"},"content":"     * @return Address book containing contacts to export.","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"tanqiya"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"tanqiya"},"content":"    AddressBook getExportAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"tanqiya"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"tanqiya"},"content":"     * Resets the address book if export is cancelled.","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"tanqiya"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"tanqiya"},"content":"    void cancelPendingExport();","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"tanqiya"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"tanqiya"},"content":"     * Merges incoming address book with the current address book.","lastModifiedDate":"2021-11-08"},{"lineNumber":151,"author":{"gitId":"tanqiya"},"content":"     * @param addressBook Incoming address book to merge","lastModifiedDate":"2021-11-08"},{"lineNumber":152,"author":{"gitId":"tanqiya"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"tanqiya"},"content":"    void mergeAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2021-11-08"},{"lineNumber":154,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":156,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Adds the recent text input to the history as stored by {@code CommandInputHistory}.","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @param textInput to be added to the {@code CommandInputHistory}","lastModifiedDate":"2021-10-23"},{"lineNumber":158,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    void addCommandInput(String textInput);","lastModifiedDate":"2021-10-23"},{"lineNumber":160,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":161,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":162,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Returns the full list of previous inputs entered by user in ascending order.","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @return list of previous inputs entered by user in ascending order.","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    List\u003cString\u003e getChronologicallyAscendingHistory();","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Returns the full list of previous inputs entered by user in descending order.","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @return list of previous inputs entered by user in descending order.","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    List\u003cString\u003e getChronologicallyDescendingHistory();","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"gok99"},"content":"     * Get the next command entered if it exists","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"gok99"},"content":"     * @return next command entered","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"gok99"},"content":"     * @throws LatestVersionException if already looking at the","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"gok99"},"content":"     * latest command","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"gok99"},"content":"    String getNextCommand() throws LatestVersionException;","lastModifiedDate":"2021-10-27"},{"lineNumber":181,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"gok99"},"content":"     * Get the previous command entered if it exists","lastModifiedDate":"2021-10-27"},{"lineNumber":184,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":185,"author":{"gitId":"gok99"},"content":"     * @return previous command entered","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"gok99"},"content":"     * @throws EarliestVersionException if already looking at","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"gok99"},"content":"     * the earliest command","lastModifiedDate":"2021-10-27"},{"lineNumber":188,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":189,"author":{"gitId":"gok99"},"content":"    String getPreviousCommand() throws EarliestVersionException;","lastModifiedDate":"2021-10-27"},{"lineNumber":190,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    //@@author yamidark","lastModifiedDate":"2021-11-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    //Reused from https://github.com/se-edu/addressbook-level4/blob/master/src/main/java/seedu/address/model/Model.java","lastModifiedDate":"2021-11-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    // with minor modifications","lastModifiedDate":"2021-11-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Returns true if the model has previous address book states to restore.","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    boolean canUndoAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Returns true if the model has undone address book states to restore.","lastModifiedDate":"2021-10-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    boolean canRedoAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * Restores the model\u0027s address book to its previous state.","lastModifiedDate":"2021-10-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    void undoAddressBook() throws EarliestVersionException;","lastModifiedDate":"2021-10-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * Restores the model\u0027s address book to its previously undone state.","lastModifiedDate":"2021-10-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    void redoAddressBook() throws LatestVersionException;","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     * Saves the current address book state for undo/redo.","lastModifiedDate":"2021-10-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    void commitAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    //@@author yamidark","lastModifiedDate":"2021-11-06"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":220,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"vigneshsankariyer1234567890":28,"skythefire":5,"tanqiya":32,"gok99":35,"-":111,"lhw-1":9}},{"path":"src/main/java/teletubbies/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.logging.Level;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.beans.InvalidationListener;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.GuiSettings;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.LogsCenter;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Range;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.UserProfile;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.UserProfile.Role;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.exceptions.EarliestVersionException;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.exceptions.LatestVersionException;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.UserRoleSetException;","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final VersionedAddressBook versionedAddressBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"tanqiya"},"content":"    private boolean isAwaitingExportConfirmation;","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private boolean isExportListModified;","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final CommandInputHistory inputHistory;","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"    private boolean firstUpArrowClicked \u003d false;","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"gok99"},"content":"        CollectionUtil.requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.versionedAddressBook \u003d new VersionedAddressBook(addressBook);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.versionedAddressBook.getPersonList());","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.inputHistory \u003d new CommandInputHistory();","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"lhw-1"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"gok99"},"content":"    public void setUserProfile(UserProfile userProfile) throws UserRoleSetException {","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"lhw-1"},"content":"        requireNonNull(userProfile);","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"lhw-1"},"content":"        this.userPrefs.setUserProfile(userProfile);","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"lhw-1"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"lhw-1"},"content":"    public UserProfile getUserProfile() {","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"lhw-1"},"content":"        return userPrefs.getUserProfile();","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"gok99"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"gok99"},"content":"    public Role getUserRole() {","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"gok99"},"content":"        return userPrefs.getUserRole();","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":103,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void addListener(InvalidationListener listener) {","lastModifiedDate":"2021-11-06"},{"lineNumber":104,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        versionedAddressBook.addListener(listener);","lastModifiedDate":"2021-11-06"},{"lineNumber":105,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":106,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.versionedAddressBook.resetData(addressBook);","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return versionedAddressBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"tanqiya"},"content":"    public boolean hasName(Person person) {","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"tanqiya"},"content":"        return versionedAddressBook.hasName(person);","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"skythefire"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"skythefire"},"content":"    public boolean hasPhoneNumber(Person person) {","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"skythefire"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return versionedAddressBook.hasPhoneNumber(person);","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":144,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        versionedAddressBook.removePerson(target);","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":149,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        versionedAddressBook.addPerson(person);","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":155,"author":{"gitId":"gok99"},"content":"        CollectionUtil.requireAllNonNull(target, editedPerson);","lastModifiedDate":"2021-10-17"},{"lineNumber":156,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        versionedAddressBook.setPerson(target, editedPerson);","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":159,"author":{"gitId":"tanqiya"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"tanqiya"},"content":"    public void mergeAddressBook(ReadOnlyAddressBook addressBookToMerge) {","lastModifiedDate":"2021-11-08"},{"lineNumber":161,"author":{"gitId":"tanqiya"},"content":"        AddressBook mergedAddressBook \u003d new VersionedAddressBook(this.versionedAddressBook","lastModifiedDate":"2021-11-08"},{"lineNumber":162,"author":{"gitId":"tanqiya"},"content":"                .getMostRecentReadOnlyAddressBook());","lastModifiedDate":"2021-11-08"},{"lineNumber":163,"author":{"gitId":"tanqiya"},"content":"        ObservableList\u003cPerson\u003e personsToMerge \u003d addressBookToMerge.getPersonList();","lastModifiedDate":"2021-11-08"},{"lineNumber":164,"author":{"gitId":"tanqiya"},"content":"        personsToMerge.stream().forEach(mergedAddressBook::mergePerson);","lastModifiedDate":"2021-11-08"},{"lineNumber":165,"author":{"gitId":"tanqiya"},"content":"        setAddressBook(mergedAddressBook);","lastModifiedDate":"2021-11-08"},{"lineNumber":166,"author":{"gitId":"tanqiya"},"content":"        versionedAddressBook.commitCurrentStateAndSave();","lastModifiedDate":"2021-11-08"},{"lineNumber":167,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"tanqiya"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"tanqiya"},"content":"    public void updateExportList(List\u003cPerson\u003e filteredPersonList) {","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // Since VersionedAddressBook stores all states, we can just store the new exportable list as a new state in","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // the VersionedAddressBook.","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        setAwaitingExportConfirmation(true);","lastModifiedDate":"2021-11-08"},{"lineNumber":174,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.versionedAddressBook.setPersons(filteredPersonList);","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        ReadOnlyAddressBook copy \u003d new AddressBook(versionedAddressBook);","lastModifiedDate":"2021-11-05"},{"lineNumber":176,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        ReadOnlyAddressBook mostRecentState \u003d versionedAddressBook.getMostRecentReadOnlyAddressBook();","lastModifiedDate":"2021-11-05"},{"lineNumber":177,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (!checkEqualityOfAddressBooks(copy, mostRecentState)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":178,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            this.versionedAddressBook.commitCurrentStateAndSave();","lastModifiedDate":"2021-11-05"},{"lineNumber":179,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            setExportListModified(true);","lastModifiedDate":"2021-11-08"},{"lineNumber":180,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":181,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":182,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":183,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private void setExportListModified(boolean b) {","lastModifiedDate":"2021-11-08"},{"lineNumber":184,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        isExportListModified \u003d b;","lastModifiedDate":"2021-11-08"},{"lineNumber":185,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":186,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":187,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private void setAwaitingExportConfirmation(boolean b) {","lastModifiedDate":"2021-11-08"},{"lineNumber":188,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        isAwaitingExportConfirmation \u003d b;","lastModifiedDate":"2021-11-08"},{"lineNumber":189,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":190,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":191,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private boolean checkEqualityOfAddressBooks(ReadOnlyAddressBook addressBook1, ReadOnlyAddressBook addressBook2) {","lastModifiedDate":"2021-11-05"},{"lineNumber":192,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return addressBook1.equals(addressBook2);","lastModifiedDate":"2021-11-05"},{"lineNumber":193,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":195,"author":{"gitId":"tanqiya"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"tanqiya"},"content":"    public boolean isAwaitingExportConfirmation() {","lastModifiedDate":"2021-10-25"},{"lineNumber":197,"author":{"gitId":"tanqiya"},"content":"        return isAwaitingExportConfirmation;","lastModifiedDate":"2021-10-24"},{"lineNumber":198,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":200,"author":{"gitId":"tanqiya"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":201,"author":{"gitId":"tanqiya"},"content":"    public AddressBook getExportAddressBook() {","lastModifiedDate":"2021-10-24"},{"lineNumber":202,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        AddressBook toExport \u003d new AddressBook(versionedAddressBook);","lastModifiedDate":"2021-10-26"},{"lineNumber":203,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (isExportListModified) {","lastModifiedDate":"2021-11-05"},{"lineNumber":204,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            undoVersionedAddressBookAndCommit();","lastModifiedDate":"2021-11-05"},{"lineNumber":205,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":206,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        resetExportConfirmation();","lastModifiedDate":"2021-11-05"},{"lineNumber":207,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        resetExportListModified();","lastModifiedDate":"2021-11-05"},{"lineNumber":208,"author":{"gitId":"tanqiya"},"content":"        return toExport;","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":210,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":211,"author":{"gitId":"tanqiya"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":212,"author":{"gitId":"tanqiya"},"content":"    public void cancelPendingExport() {","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (isAwaitingExportConfirmation \u0026\u0026 isExportListModified) {","lastModifiedDate":"2021-11-05"},{"lineNumber":214,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            undoVersionedAddressBookAndCommit();","lastModifiedDate":"2021-11-05"},{"lineNumber":215,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":216,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        resetExportConfirmation();","lastModifiedDate":"2021-11-05"},{"lineNumber":217,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        resetExportListModified();","lastModifiedDate":"2021-11-05"},{"lineNumber":218,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":219,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":220,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private void resetExportListModified() {","lastModifiedDate":"2021-11-05"},{"lineNumber":221,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        setExportListModified(false);","lastModifiedDate":"2021-11-08"},{"lineNumber":222,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":223,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":224,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private void resetExportConfirmation() {","lastModifiedDate":"2021-11-05"},{"lineNumber":225,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        setAwaitingExportConfirmation(false);","lastModifiedDate":"2021-11-08"},{"lineNumber":226,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":227,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":228,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private void undoVersionedAddressBookAndCommit() {","lastModifiedDate":"2021-11-05"},{"lineNumber":229,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":230,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            this.versionedAddressBook.undo();","lastModifiedDate":"2021-10-26"},{"lineNumber":231,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            this.versionedAddressBook.commitWithoutSavingCurrentState();","lastModifiedDate":"2021-11-05"},{"lineNumber":232,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } catch (EarliestVersionException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":233,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            // Undo will always work as VersionedAddressBook must store at least 2 states: the original AddressBook","lastModifiedDate":"2021-11-05"},{"lineNumber":234,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            // and the filtered addressBook.","lastModifiedDate":"2021-11-05"},{"lineNumber":235,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            logExportIssuesWithUndo(e);","lastModifiedDate":"2021-10-26"},{"lineNumber":236,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":237,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":239,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private void logExportIssuesWithUndo(EarliestVersionException e) {","lastModifiedDate":"2021-10-26"},{"lineNumber":240,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        logger.log(Level.SEVERE, e, () -\u003e \"VersionedAddressBook should be undoable at point of export and have at \"","lastModifiedDate":"2021-10-26"},{"lineNumber":241,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                + \"least 2 states stored.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":242,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":243,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":247,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":248,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":261,"author":{"gitId":"gok99"},"content":"    public List\u003cPerson\u003e getPersonsFromRange(Range range) throws IllegalValueException {","lastModifiedDate":"2021-10-24"},{"lineNumber":262,"author":{"gitId":"gok99"},"content":"        requireNonNull(range);","lastModifiedDate":"2021-10-24"},{"lineNumber":263,"author":{"gitId":"gok99"},"content":"        Set\u003cIndex\u003e rangeValues \u003d range.getRangeValues();","lastModifiedDate":"2021-10-26"},{"lineNumber":264,"author":{"gitId":"gok99"},"content":"        if (rangeValues.stream().anyMatch(i -\u003e i.getZeroBased() \u003e\u003d filteredPersons.size())) {","lastModifiedDate":"2021-10-24"},{"lineNumber":265,"author":{"gitId":"gok99"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-11-05"},{"lineNumber":266,"author":{"gitId":"gok99"},"content":"                    String.format(Range.MESSAGE_ILLEGAL_RANGE, filteredPersons.size())","lastModifiedDate":"2021-11-05"},{"lineNumber":267,"author":{"gitId":"gok99"},"content":"            );","lastModifiedDate":"2021-11-05"},{"lineNumber":268,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":269,"author":{"gitId":"gok99"},"content":"        return rangeValues.stream()","lastModifiedDate":"2021-10-24"},{"lineNumber":270,"author":{"gitId":"gok99"},"content":"                .map(i -\u003e filteredPersons.get(i.getZeroBased()))","lastModifiedDate":"2021-10-24"},{"lineNumber":271,"author":{"gitId":"gok99"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-10-24"},{"lineNumber":272,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":273,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":274,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":275,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Undo/Redo \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":278,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public boolean canUndoAddressBook() {","lastModifiedDate":"2021-10-24"},{"lineNumber":279,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return versionedAddressBook.canUndo();","lastModifiedDate":"2021-10-24"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":282,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":283,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public boolean canRedoAddressBook() {","lastModifiedDate":"2021-10-24"},{"lineNumber":284,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return versionedAddressBook.canRedo();","lastModifiedDate":"2021-10-24"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":287,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":288,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void undoAddressBook() throws EarliestVersionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":289,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        versionedAddressBook.undo();","lastModifiedDate":"2021-10-24"},{"lineNumber":290,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":291,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":292,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":293,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void redoAddressBook() throws LatestVersionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":294,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        versionedAddressBook.redo();","lastModifiedDate":"2021-10-24"},{"lineNumber":295,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":296,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":297,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":298,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void commitAddressBook() {","lastModifiedDate":"2021-10-24"},{"lineNumber":299,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        versionedAddressBook.commitCurrentStateAndSave();","lastModifiedDate":"2021-11-05"},{"lineNumber":300,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":301,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":302,"author":{"gitId":"tanqiya"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d InputHistory Accessors and Modifiers \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":303,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":304,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":305,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void addCommandInput(String textInput) {","lastModifiedDate":"2021-10-23"},{"lineNumber":306,"author":{"gitId":"gok99"},"content":"        firstUpArrowClicked \u003d false;","lastModifiedDate":"2021-10-27"},{"lineNumber":307,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        inputHistory.addCommandInput(textInput);","lastModifiedDate":"2021-10-23"},{"lineNumber":308,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":309,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":310,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":311,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public List\u003cString\u003e getChronologicallyAscendingHistory() {","lastModifiedDate":"2021-10-24"},{"lineNumber":312,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return inputHistory.getChronologicallyAscendingHistory();","lastModifiedDate":"2021-10-24"},{"lineNumber":313,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":314,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":315,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":316,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public List\u003cString\u003e getChronologicallyDescendingHistory() {","lastModifiedDate":"2021-10-24"},{"lineNumber":317,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return inputHistory.getChronologicallyDescendingHistory();","lastModifiedDate":"2021-10-24"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":320,"author":{"gitId":"gok99"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":321,"author":{"gitId":"gok99"},"content":"    public String getNextCommand() throws LatestVersionException {","lastModifiedDate":"2021-10-27"},{"lineNumber":322,"author":{"gitId":"gok99"},"content":"        inputHistory.next();","lastModifiedDate":"2021-10-27"},{"lineNumber":323,"author":{"gitId":"gok99"},"content":"        return inputHistory.peek();","lastModifiedDate":"2021-10-27"},{"lineNumber":324,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":325,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":326,"author":{"gitId":"gok99"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":327,"author":{"gitId":"gok99"},"content":"    public String getPreviousCommand() throws EarliestVersionException {","lastModifiedDate":"2021-10-27"},{"lineNumber":328,"author":{"gitId":"gok99"},"content":"        if (!firstUpArrowClicked) {","lastModifiedDate":"2021-10-27"},{"lineNumber":329,"author":{"gitId":"gok99"},"content":"            firstUpArrowClicked \u003d true;","lastModifiedDate":"2021-10-27"},{"lineNumber":330,"author":{"gitId":"gok99"},"content":"        } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":331,"author":{"gitId":"gok99"},"content":"            inputHistory.previous();","lastModifiedDate":"2021-10-27"},{"lineNumber":332,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":333,"author":{"gitId":"gok99"},"content":"        return inputHistory.peek();","lastModifiedDate":"2021-10-27"},{"lineNumber":334,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":335,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":336,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":337,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-24"},{"lineNumber":338,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":339,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-10-24"},{"lineNumber":340,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":341,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":342,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":343,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":344,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":345,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":346,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":347,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":348,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // state check","lastModifiedDate":"2021-10-24"},{"lineNumber":349,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2021-10-24"},{"lineNumber":350,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return versionedAddressBook.equals(other.versionedAddressBook)","lastModifiedDate":"2021-10-24"},{"lineNumber":351,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2021-10-24"},{"lineNumber":352,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2021-10-24"},{"lineNumber":353,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                \u0026\u0026 inputHistory.equals(other.inputHistory);","lastModifiedDate":"2021-10-24"},{"lineNumber":354,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":355,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"vigneshsankariyer1234567890":134,"skythefire":3,"tanqiya":32,"gok99":52,"-":124,"lhw-1":10}},{"path":"src/main/java/teletubbies/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.beans.Observable;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public interface ReadOnlyAddressBook extends Observable {","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"vigneshsankariyer1234567890":2,"gok99":2,"-":14}},{"path":"src/main/java/teletubbies/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.GuiSettings;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.UserProfile;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"    UserProfile getUserProfile();","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"    boolean isProfileSet();","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"gok99":5,"-":14,"lhw-1":2}},{"path":"src/main/java/teletubbies/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.GuiSettings;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.UserProfile;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.UserProfile.Role;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.UserRoleSetException;","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"    private UserProfile userProfile \u003d new UserProfile();","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"    private boolean isProfileSet \u003d false;","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"teletubbies.json\");","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"        // We bypass setUserProfile to bypass the side","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"        // effects on isProfileSet of using it","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"        this.isProfileSet \u003d newUserPrefs.isProfileSet();","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"gok99"},"content":"        this.userProfile \u003d newUserPrefs.getUserProfile();","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"lhw-1"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"lhw-1"},"content":"    public UserProfile getUserProfile() {","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"lhw-1"},"content":"        return userProfile;","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"gok99"},"content":"    @Override","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"gok99"},"content":"    public boolean isProfileSet() {","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"gok99"},"content":"        return this.isProfileSet;","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"gok99"},"content":"    public void setUserProfile(UserProfile userProfile) throws UserRoleSetException {","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"lhw-1"},"content":"        requireNonNull(userProfile);","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"gok99"},"content":"        if (this.isProfileSet) {","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"gok99"},"content":"            throw new UserRoleSetException();","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"gok99"},"content":"        this.isProfileSet \u003d true;","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"lhw-1"},"content":"        this.userProfile \u003d userProfile;","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":87,"author":{"gitId":"gok99"},"content":"    public Role getUserRole() {","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"gok99"},"content":"        return userProfile.getRole();","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":116,"author":{"gitId":"gok99"},"content":"        sb.append(\"\\nUser profile is set:\" + isProfileSet);","lastModifiedDate":"2021-11-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gok99":25,"-":83,"lhw-1":11}},{"path":"src/main/java/teletubbies/model/VersionedAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package teletubbies.model;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.exceptions.EarliestAddressBookVersionException;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.exceptions.EarliestVersionException;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.exceptions.LatestAddressBookVersionException;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.exceptions.LatestVersionException;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * A data structure to encapsulate the logic needed to store previous AddressBook states using HistoryManager.","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * Solution to undoing and redoing states adapted from","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * https://github.com/se-edu/addressbook-level4/blob/master/src/main/java/seedu/address/model/VersionedAddressBook.java","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class VersionedAddressBook extends AddressBook {","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private HistoryManager\u003cReadOnlyAddressBook\u003e addressBookHistoryManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Copies over initial state and initialises HistoryManager with initial state","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public VersionedAddressBook(ReadOnlyAddressBook initialState) {","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        super(initialState);","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        addressBookHistoryManager \u003d new HistoryManager\u003c\u003e(List.of(new AddressBook(initialState)));","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Factory method to produce a new VersionedAddressBook based on a list of address book states.","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    protected static VersionedAddressBook of(ReadOnlyAddressBook... addressBookStates)","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throws EmptyAddressBookStateListException {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (addressBookStates.length \u003d\u003d 0) {","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new EmptyAddressBookStateListException();","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        VersionedAddressBook result \u003d new VersionedAddressBook(addressBookStates[0]);","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (int i \u003d 1; i \u003c addressBookStates.length; i++) {","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            result.resetData(addressBookStates[i]);","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            result.commitCurrentStateAndSave();","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return result;","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Factory method to produce a new VersionedAddressBook based on a list of address book states.","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    protected static VersionedAddressBook of(List\u003cReadOnlyAddressBook\u003e addressBookStates)","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throws EmptyAddressBookStateListException {","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (addressBookStates.isEmpty()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new EmptyAddressBookStateListException();","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        VersionedAddressBook result \u003d new VersionedAddressBook(addressBookStates.get(0));","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (int i \u003d 1; i \u003c addressBookStates.size(); i++) {","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            result.resetData(addressBookStates.get(i));","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            result.commitCurrentStateAndSave();","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return result;","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Copies over state and persists state to {@code HistoryManager} using {@code HistoryManager#commitAndPush}.","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void commitCurrentStateAndSave() {","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        AddressBook copyOfAddressBook \u003d new AddressBook(this);","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        setAddressBookHistoryManager(addressBookHistoryManager.commitAndPush(copyOfAddressBook));","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        indicateModified();","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Clears the {@code HistoryManager} after pointer.","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void commitWithoutSavingCurrentState() {","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        setAddressBookHistoryManager(HistoryManager.clearedCopy(addressBookHistoryManager));","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        indicateModified();","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private void setAddressBookHistoryManager(HistoryManager\u003cReadOnlyAddressBook\u003e newHistoryManager) {","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.addressBookHistoryManager \u003d newHistoryManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Undoes state and resets AddressBook to {@code HistoryManager#peek}","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @throws EarliestVersionException if it is the earliest version","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void undo() throws EarliestVersionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (!canUndo()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new EarliestAddressBookVersionException();","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        addressBookHistoryManager.undo();","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        resetData(addressBookHistoryManager.peek());","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Redoes state and resets AddressBook to {@code HistoryManager#peek}","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @throws LatestVersionException if it is the latest version","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void redo() throws LatestVersionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (!canRedo()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new LatestAddressBookVersionException();","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        addressBookHistoryManager.redo();","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        resetData(addressBookHistoryManager.peek());","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Verifies that the state is undoable.","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public boolean canUndo() {","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return addressBookHistoryManager.isUndoable();","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Verifies that the state is redoable.","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public boolean canRedo() {","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return addressBookHistoryManager.isRedoable();","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    ReadOnlyAddressBook getMostRecentReadOnlyAddressBook() {","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return addressBookHistoryManager.peek();","lastModifiedDate":"2021-11-05"},{"lineNumber":119,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":121,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        if (!(obj instanceof VersionedAddressBook)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return false;","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        VersionedAddressBook other \u003d (VersionedAddressBook) obj;","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return super.equals(other)","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                \u0026\u0026 addressBookHistoryManager.equals(other.addressBookHistoryManager);","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * An exception that will be thrown if no states are provided in the given state list","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static class EmptyAddressBookStateListException extends Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        private static final String MESSAGE \u003d \"There must be at least one state in the given state list.\";","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public EmptyAddressBookStateListException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            super(MESSAGE);","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"vigneshsankariyer1234567890":147}},{"path":"src/main/java/teletubbies/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model.person;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.DEFAULT_ADDRESS;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.util.AppUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"        AppUtil.checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"skythefire"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"skythefire"},"content":"     * Returns if an address is present.","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"skythefire"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"skythefire"},"content":"    public boolean isPresent() {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"skythefire"},"content":"        return !value.equals(DEFAULT_ADDRESS);","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"skythefire":7,"gok99":4,"-":55}},{"path":"src/main/java/teletubbies/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model.person;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.DEFAULT_EMAIL;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.util.AppUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"gok99"},"content":"        AppUtil.checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"skythefire"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"skythefire"},"content":"     * Returns if an email is present.","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"skythefire"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"skythefire"},"content":"    public boolean isPresent() {","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"skythefire"},"content":"        return !value.equals(DEFAULT_EMAIL);","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"skythefire":7,"gok99":4,"-":69}},{"path":"src/main/java/teletubbies/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model.person;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.util.AppUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"        AppUtil.checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"gok99":4,"-":56}},{"path":"src/main/java/teletubbies/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model.person;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.util.StringUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"gok99":2,"-":29}},{"path":"src/main/java/teletubbies/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model.person;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.CompletionStatusTag;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.Tag;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"tanqiya"},"content":"    private final Uuid uuid;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"    private final CompletionStatusTag completionStatusTag;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"skythefire"},"content":"    private final Remark remark;","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"tanqiya"},"content":"    public Person(Uuid uuid, Name name, Phone phone, Email email, Address address,","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"skythefire"},"content":"                  CompletionStatusTag completionStatusTag,","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"skythefire"},"content":"                  Remark remark, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"        CollectionUtil.requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"tanqiya"},"content":"        this.uuid \u003d uuid;","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"skythefire"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"        this.completionStatusTag \u003d completionStatusTag;","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"tanqiya"},"content":"    public Uuid getUuid() {","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"tanqiya"},"content":"        return uuid;","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":68,"author":{"gitId":"skythefire"},"content":"    public Remark getRemark() {","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"skythefire"},"content":"        return remark;","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Returns an immutable CompletionStatus","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * @return CompletionStatus","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"gok99"},"content":"    public CompletionStatusTag getCompletionStatus() {","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"gok99"},"content":"        return completionStatusTag;","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"tanqiya"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"tanqiya"},"content":"     * Returns true if both persons have the same uuid.","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"tanqiya"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"tanqiya"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"tanqiya"},"content":"    public boolean isSameUuid(Person otherPerson) {","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"tanqiya"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"tanqiya"},"content":"            return true;","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"tanqiya"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"tanqiya"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"tanqiya"},"content":"                \u0026\u0026 otherPerson.getUuid().equals(getUuid());","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"gok99"},"content":"     * Returns an immutable tag set, which","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"gok99"},"content":"     * @return","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"gok99"},"content":"    public Set\u003cTag\u003e getAllTags() {","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"gok99"},"content":"        HashSet\u003cTag\u003e allTags \u003d new HashSet\u003c\u003e(Set.copyOf(tags));","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"gok99"},"content":"        allTags.add(completionStatusTag);","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"gok99"},"content":"        return Collections.unmodifiableSet(allTags);","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"tanqiya"},"content":"    public boolean isSameName(Person otherPerson) {","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"skythefire"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"tanqiya"},"content":"     * Returns true if both persons have the same phone number.","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"skythefire"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"skythefire"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"skythefire"},"content":"    public boolean isSamePhoneNumber(Person otherPerson) {","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"skythefire"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"skythefire"},"content":"            return true;","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"skythefire"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"skythefire"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"skythefire"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone());","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"tanqiya"},"content":"        return otherPerson.getUuid().equals(getUuid())","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"tanqiya"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName())","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":158,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                \u0026\u0026 otherPerson.getCompletionStatus().equals(getCompletionStatus())","lastModifiedDate":"2021-10-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":165,"author":{"gitId":"tanqiya"},"content":"        return Objects.hash(uuid, name, phone, email, address, tags);","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":173,"author":{"gitId":"skythefire"},"content":"                .append(getPhone());","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"skythefire"},"content":"        if (email.isPresent()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"skythefire"},"content":"            builder.append(\"; Email: \")","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"skythefire"},"content":"                    .append(getEmail());","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"skythefire"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"skythefire"},"content":"        if (address.isPresent()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"skythefire"},"content":"            builder.append(\"; Address: \")","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                    .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":183,"author":{"gitId":"skythefire"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"gok99"},"content":"        builder.append(\"; Completed: \")","lastModifiedDate":"2021-10-24"},{"lineNumber":185,"author":{"gitId":"skythefire"},"content":"               .append(getCompletionStatus());","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"skythefire"},"content":"        if (remark.isPresent()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"skythefire"},"content":"            builder.append(\"; Remark: \")","lastModifiedDate":"2021-10-28"},{"lineNumber":189,"author":{"gitId":"skythefire"},"content":"                   .append(getRemark());","lastModifiedDate":"2021-10-25"},{"lineNumber":190,"author":{"gitId":"skythefire"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":195,"author":{"gitId":"gok99"},"content":"            builder.append(tags.stream()","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"gok99"},"content":"                    .map(Tag::toString)","lastModifiedDate":"2021-10-24"},{"lineNumber":197,"author":{"gitId":"gok99"},"content":"                    .collect(Collectors.joining(\", \")));","lastModifiedDate":"2021-10-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"skythefire":36,"vigneshsankariyer1234567890":7,"tanqiya":25,"gok99":25,"-":109}},{"path":"src/main/java/teletubbies/model/person/PersonHasTagsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model.person;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.Tag;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"public class PersonHasTagsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"    private final Set\u003cTag\u003e tagSet;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"    public PersonHasTagsPredicate(Set\u003cTag\u003e tagSet) {","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"        this.tagSet \u003d tagSet;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"    public boolean test (Person person) {","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"        return tagSet.stream().allMatch(tp -\u003e // For all test tags","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"            person.getAllTags().stream().anyMatch(t -\u003e { // Person has tags","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"                if (tp.getTagValue().isEmpty()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"                    return t.equals(tp);","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"                } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"                    return t.equalsNameAndValue(tp);","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"                }","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"        ));","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"     * Number of tags that the person should","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"     * have","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"     * @return number of tags matched","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"    public int numberOfTags() {","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"        return tagSet.size();","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"                || (other instanceof PersonHasTagsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"                \u0026\u0026 tagSet.equals(((PersonHasTagsPredicate) other).tagSet)); // state check","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"gok99":45}},{"path":"src/main/java/teletubbies/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model.person;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.util.AppUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"        AppUtil.checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"gok99":4,"-":50}},{"path":"src/main/java/teletubbies/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"skythefire"},"content":"package teletubbies.model.person;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"skythefire"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"skythefire"},"content":"import static teletubbies.logic.parser.CliSyntax.EMPTY_REMARK;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"skythefire"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"skythefire"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"skythefire"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"skythefire"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"skythefire"},"content":"public class Remark {","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"skythefire"},"content":"    // @@author: j-lum","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"skythefire"},"content":"    // Reused from","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"skythefire"},"content":"    // https://github.com/se-edu/addressbook-level3/compare/tutorial-add-remark","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"skythefire"},"content":"    public final String value;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"skythefire"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"skythefire"},"content":"     * Constructs a {@code Remark}.","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"skythefire"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"skythefire"},"content":"     * @param remark A remark associated with a contact.","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"skythefire"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"skythefire"},"content":"    public Remark(String remark) {","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"skythefire"},"content":"        requireNonNull(remark);","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"skythefire"},"content":"        value \u003d remark;","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"skythefire"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"skythefire"},"content":"     * Returns if a remark is present.","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"skythefire"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"skythefire"},"content":"    public boolean isPresent() {","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"skythefire"},"content":"        return !this.value.equals(EMPTY_REMARK);","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"skythefire"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"skythefire"},"content":"    public String toString() {","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"skythefire"},"content":"        return value;","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"skythefire"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"skythefire"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"skythefire"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"skythefire"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"skythefire"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"skythefire"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"skythefire"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"skythefire"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"skythefire"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"skythefire":50}},{"path":"src/main/java/teletubbies/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model.person;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"tanqiya"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"tanqiya"},"content":" * @see Person#isSameName(Person)","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"tanqiya"},"content":"     * Returns true if the list contains an equivalent person with the same name as the given argument.","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"tanqiya"},"content":"    public boolean containsUuid(Person toCheck) {","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"tanqiya"},"content":"        return internalList.stream().anyMatch(toCheck::isSameUuid);","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"skythefire"},"content":"     * Returns true if the list contains an equivalent person with the same name as the given argument.","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"skythefire"},"content":"    public boolean containsName(Person toCheck) {","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"tanqiya"},"content":"        return internalList.stream().anyMatch(toCheck::isSameName);","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"skythefire"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"skythefire"},"content":"     * Returns true if the list contains an equivalent person with the same phone number as the given argument.","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"skythefire"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"skythefire"},"content":"    public boolean containsPhoneNumber(Person toCheck) {","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"skythefire"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"skythefire"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePhoneNumber);","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"tanqiya"},"content":"     * Phone numbers must also be unique.","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"tanqiya"},"content":"        if (containsUuid(toAdd) || containsPhoneNumber(toAdd)) {","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"gok99"},"content":"        CollectionUtil.requireAllNonNull(target, editedPerson);","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":82,"author":{"gitId":"tanqiya"},"content":"        if (!target.isSamePhoneNumber(editedPerson) \u0026\u0026 containsPhoneNumber(editedPerson)) {","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"gok99"},"content":"        CollectionUtil.requireAllNonNull(persons);","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"tanqiya"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"tanqiya"},"content":"     * If there is a person with the same Uuid in the list, replace the person with the person being merged.","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"tanqiya"},"content":"     * If the Uuid is not found in the list, add the new person.","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"tanqiya"},"content":"     * @param personToMerge","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"tanqiya"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"tanqiya"},"content":"    public void mergePerson(Person personToMerge) {","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"tanqiya"},"content":"        if (!containsUuid(personToMerge)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"tanqiya"},"content":"            add(personToMerge);","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"tanqiya"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"tanqiya"},"content":"            Person toReplace \u003d internalList.stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"tanqiya"},"content":"                    .filter(p -\u003e p.getUuid().equals(personToMerge.getUuid()))","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"tanqiya"},"content":"                    .collect(Collectors.toList()).get(0);","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"tanqiya"},"content":"            setPerson(toReplace, personToMerge);","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"tanqiya"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"tanqiya"},"content":"                if (persons.get(i).isSameUuid(persons.get(j))","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"tanqiya"},"content":"                    || persons.get(i).isSamePhoneNumber(persons.get(j))) {","lastModifiedDate":"2021-11-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"skythefire":8,"tanqiya":29,"gok99":6,"-":129}},{"path":"src/main/java/teletubbies/model/person/Uuid.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanqiya"},"content":"package teletubbies.model.person;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"tanqiya"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"tanqiya"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"tanqiya"},"content":" * Represents a Person\u0027s unique identifier in the address book.","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"tanqiya"},"content":" * Guarantees: immutable; unique","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"tanqiya"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"tanqiya"},"content":"public class Uuid {","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"tanqiya"},"content":"    public final String uuid;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"tanqiya"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"tanqiya"},"content":"     * Constructs a {@code Uuid}.","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"tanqiya"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"tanqiya"},"content":"     * @param uuid Person\u0027s Uuid.","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"tanqiya"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"tanqiya"},"content":"    public Uuid(String uuid) {","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"tanqiya"},"content":"        requireNonNull(uuid);","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"tanqiya"},"content":"        this.uuid \u003d uuid;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"tanqiya"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"tanqiya"},"content":"    public String toString() {","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"tanqiya"},"content":"        return uuid;","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"tanqiya"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"tanqiya"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"tanqiya"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"tanqiya"},"content":"                || (other instanceof teletubbies.model.person.Uuid // instanceof handles nulls","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"tanqiya"},"content":"                \u0026\u0026 uuid.equals(((teletubbies.model.person.Uuid) other).uuid)); // state check","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"tanqiya"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"tanqiya"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"tanqiya"},"content":"        return uuid.hashCode();","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"tanqiya"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"tanqiya":38}},{"path":"src/main/java/teletubbies/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model.person.exceptions;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"gok99":1,"-":10}},{"path":"src/main/java/teletubbies/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model.person.exceptions;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"gok99":1,"-":5}},{"path":"src/main/java/teletubbies/model/tag/CompletionStatusTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model.tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.UserProfile.Role;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":" * Represents a Person\u0027s completion status in the address book (to check if","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":" * the contact has been contacted).","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"public class CompletionStatusTag extends Tag {","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"    public enum CompletionStatus {","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"        INCOMPLETE, ONGOING, COMPLETE","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"    public final CompletionStatus status;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"     * Special tag for CompletionStatus","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"     * @param status completion status","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"    public CompletionStatusTag(CompletionStatus status) {","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"        super(\"CompletionStatus\", new Role[]{});","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"        this.status \u003d status;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"        this.setTagValue(status.toString());","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"     * Completion status with default INCOMPLETE status","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"    public CompletionStatusTag() {","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"        super(\"CompletionStatus\", new Role[]{});","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"        this.status \u003d CompletionStatus.INCOMPLETE;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"        this.setTagValue(this.status.toString());","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"    public String toString() {","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"        return String.valueOf(status);","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"gok99":44}},{"path":"src/main/java/teletubbies/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model.tag;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static java.util.Objects.isNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import java.util.function.Function;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.UserProfile.Role;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.util.AppUtil;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"    public static final String[] RESERVED_TAG_NAMES \u003d new String[] { \"CompletionStatus\" };","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"    public static final Function\u003cString, String\u003e RESERVED_NAME_CONSTRAINTS \u003d (name) -\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"        name + \" is a reserved tag name. Please choose another name\";","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"    public static final String ALPHANUMERIC_NAME_CONSTRAINTS \u003d \"Tag names should be alphanumeric\";","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tag names should be alphanumeric and cannot be reserved or empty\";","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"    public final Role[] editAccessRoles;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"    private String tagValue;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"     * Constructs a {@code Tag}","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"     * @param tagName A valid tag name","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"     * @param tagValue A tag value string","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"     * @param editRoles Roles that can edit the tag","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"    public Tag(String tagName, String tagValue, Role[] editRoles, boolean isTestTag) {","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"        AppUtil.checkArgument(isAlphanumericTagName(tagName), ALPHANUMERIC_NAME_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"        if (!isTestTag) {","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"            AppUtil.checkArgument(isNonReservedTagName(tagName), RESERVED_NAME_CONSTRAINTS.apply(tagName));","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"        this.tagValue \u003d tagValue;","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"        this.editAccessRoles \u003d editRoles;","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"gok99"},"content":"     * Constructs a {@code Tag} without name validation","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"gok99"},"content":"     * @param tagName A valid tag name","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"gok99"},"content":"     * @param editRoles","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"gok99"},"content":"    protected Tag(String tagName, Role[] editRoles) {","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"gok99"},"content":"        this(tagName, null, editRoles, true);","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"gok99"},"content":"     * Constructs a {@code Tag} based on whether tag is","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"gok99"},"content":"     * supervisor only","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"gok99"},"content":"     * @param tagName name of tag","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"gok99"},"content":"     * @param tagValue value of tag","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"gok99"},"content":"     * @param isSupervisorOnly true if tag is supervisor only","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"gok99"},"content":"    public Tag(String tagName, String tagValue, boolean isSupervisorOnly) {","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"gok99"},"content":"        this(tagName, tagValue, getRolesForEditAccess(isSupervisorOnly), false);","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"gok99"},"content":"     * Constructs a {@code Tag} with no tag value and accessible by","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"gok99"},"content":"     * all users.","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"gok99"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"gok99"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"gok99"},"content":"        this(tagName, \"\", Role.values(), false);","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"gok99"},"content":"        return isAlphanumericTagName(test) \u0026\u0026 isNonReservedTagName(test);","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"gok99"},"content":"     * Returns true if a given string is an alphanumeric tag name.","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"gok99"},"content":"    public static boolean isAlphanumericTagName(String test) {","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"gok99"},"content":"     * Returns true if a given string is a non-reserved tag name.","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"gok99"},"content":"    public static boolean isNonReservedTagName(String test) {","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"gok99"},"content":"        return !Arrays.asList(RESERVED_TAG_NAMES).contains(test);","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"gok99"},"content":"     * Get array of roles that can edit the tag, based on","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"gok99"},"content":"     * whether tag is supervisor only","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"gok99"},"content":"     * @param isSupervisorOnly true if tag is supervisor-only","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"gok99"},"content":"     * @return array of roles","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"gok99"},"content":"    public static Role[] getRolesForEditAccess(boolean isSupervisorOnly) {","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"gok99"},"content":"        if (isSupervisorOnly) {","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"gok99"},"content":"            return new Role[]{ Role.SUPERVISOR };","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"gok99"},"content":"        return new Role[]{ Role.SUPERVISOR, Role.TELEMARKETER };","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"gok99"},"content":"     * Checks if the given role can edit the tag","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":117,"author":{"gitId":"gok99"},"content":"     * @param role User\u0027s role","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"gok99"},"content":"     * @return whether tag can be edited by role","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"gok99"},"content":"    public boolean isEditableByRole(Role role) {","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"gok99"},"content":"        return Arrays.asList(editAccessRoles).contains(role);","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"gok99"},"content":"     * Set the value of the tag","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"gok99"},"content":"    public void setTagValue(String value) {","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"gok99"},"content":"        this.tagValue \u003d value;","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"gok99"},"content":"     * Get tag\u0027s value","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"gok99"},"content":"     * @return tag value","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"gok99"},"content":"    public String getTagValue() {","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"gok99"},"content":"        return this.tagValue;","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"gok99"},"content":"     * @param other","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"gok99"},"content":"     * @return","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"gok99"},"content":"    public boolean equalsNameAndValue(Object other) {","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"gok99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"gok99"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"gok99"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"gok99"},"content":"                \u0026\u0026 tagValue.equals(((Tag) other).tagValue));","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":157,"author":{"gitId":"gok99"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName));","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":169,"author":{"gitId":"gok99"},"content":"        boolean valueEmpty \u003d isNull(tagValue) || tagValue.equals(\"\");","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"gok99"},"content":"        return tagName + (valueEmpty ? \"\" : \": \" + tagValue);","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"gok99":129,"-":44}},{"path":"src/main/java/teletubbies/model/tag/TagUtils.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model.tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"public class TagUtils {","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"    public static final String INVALID_TAG_NAME \u003d \"Invalid tag name.\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"            + Tag.MESSAGE_CONSTRAINTS + \"\\nReserved tag name(s): \"","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"            + String.join(\", \", Tag.RESERVED_TAG_NAMES);","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"    public static String noPermissionsMessage(String tagName) {","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"        return \"You don\u0027t have permission to modify this tag - \" + tagName;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"     * Find tag in a set with given tagName","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"     * @param tagSet tag set to search in","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"     * @param tagName tag name to find","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"     * @return tag found (potentially empty)","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"    public static Optional\u003cTag\u003e findMatchingTag(Set\u003cTag\u003e tagSet, String tagName) {","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"        Tag tempTag \u003d new Tag(tagName);","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"        return tagSet.stream().filter(t -\u003e t.equals(tempTag)).findFirst();","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"gok99":27}},{"path":"src/main/java/teletubbies/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model.util;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"skythefire"},"content":"import static teletubbies.logic.parser.CliSyntax.EMPTY_REMARK;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.model.AddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Address;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Email;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Name;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Phone;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"skythefire"},"content":"import teletubbies.model.person.Remark;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"tanqiya"},"content":"import teletubbies.model.person.Uuid;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.CompletionStatusTag;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.Tag;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"skythefire"},"content":"    public static final Remark DEFAULT_REMARK \u003d new Remark(EMPTY_REMARK);","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"tanqiya"},"content":"            new Person(new Uuid(\"375004d8-5636-4084-977d-8d2b18a90e59\"), new Name(\"Alex Yeoh\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"tanqiya"},"content":"                new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"tanqiya"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new CompletionStatusTag(),","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"tanqiya"},"content":"                new Remark(\"Call back at 2pm\"), getTagSet(\"ProductA\")),","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"tanqiya"},"content":"            new Person(new Uuid(\"9cd01b04-7964-4d18-98a4-ab90c6520a19\"), new Name(\"Bernice Yu\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"tanqiya"},"content":"                new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"tanqiya"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"tanqiya"},"content":"                new CompletionStatusTag(CompletionStatusTag.CompletionStatus.COMPLETE),","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"tanqiya"},"content":"                new Remark(\"Successful sale, $500\"),","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"tanqiya"},"content":"                getTagSet(\"ProductA\")),","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"tanqiya"},"content":"            new Person(new Uuid(\"376fc044-f407-44a4-9abd-3035aedf27e3\"), new Name(\"Charlotte Oliveiro\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"tanqiya"},"content":"                new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"skythefire"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new CompletionStatusTag(), DEFAULT_REMARK,","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"tanqiya"},"content":"                getTagSet(\"ProductA\", \"ProductB\")),","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"tanqiya"},"content":"            new Person(new Uuid(\"89f38212-6066-466e-aa67-8391d4136a62\"), new Name(\"David Li\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"tanqiya"},"content":"                new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"tanqiya"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"tanqiya"},"content":"                new CompletionStatusTag(CompletionStatusTag.CompletionStatus.ONGOING), DEFAULT_REMARK,","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"tanqiya"},"content":"                getTagSet(\"ProductA\")),","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"tanqiya"},"content":"            new Person(new Uuid(\"5adca839-2825-49c2-82e2-78830d923aa4\"), new Name(\"Irfan Ibrahim\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"tanqiya"},"content":"                new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"skythefire"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new CompletionStatusTag(), DEFAULT_REMARK,","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"tanqiya"},"content":"                getTagSet(\"ProductB\")),","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"tanqiya"},"content":"            new Person(new Uuid(\"1e53b8d3-0303-4177-bb77-3ff9f010922f\"), new Name(\"Roy Balakrishnan\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"tanqiya"},"content":"                new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"skythefire"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new CompletionStatusTag(), DEFAULT_REMARK,","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"tanqiya"},"content":"                getTagSet(\"ProductA\"))","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"skythefire":9,"tanqiya":25,"gok99":10,"-":33}},{"path":"src/main/java/teletubbies/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.storage;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.model.AddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":" * Represents a storage for {@link AddressBook}.","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"gok99":5,"-":41}},{"path":"src/main/java/teletubbies/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.storage;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Address;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Email;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Name;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Phone;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"skythefire"},"content":"import teletubbies.model.person.Remark;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"tanqiya"},"content":"import teletubbies.model.person.Uuid;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.CompletionStatusTag;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.CompletionStatusTag.CompletionStatus;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.Tag;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"tanqiya"},"content":"    private final String uuid;","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"    private final String completionStat;","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"skythefire"},"content":"    private final String remark;","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"skythefire"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"uuid\") String uuid,","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"skythefire"},"content":"            @JsonProperty(\"name\") String name,","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"skythefire"},"content":"            @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"skythefire"},"content":"            @JsonProperty(\"email\") String email,","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"skythefire"},"content":"            @JsonProperty(\"address\") String address,","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"gok99"},"content":"            @JsonProperty(\"completionStatus\") String completionStat,","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"skythefire"},"content":"            @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"tanqiya"},"content":"        this.uuid \u003d uuid;","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        this.completionStat \u003d completionStat;","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"skythefire"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"tanqiya"},"content":"        uuid \u003d source.getUuid().uuid;","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"gok99"},"content":"        completionStat \u003d source.getCompletionStatus().status.toString();","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"skythefire"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"tanqiya"},"content":"        if (uuid \u003d\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"tanqiya"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"unique identifier\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"tanqiya"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"tanqiya"},"content":"        final Uuid modelUuid \u003d new Uuid(uuid);","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"skythefire"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"skythefire"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"skythefire"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"skythefire"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"gok99"},"content":"        CompletionStatus completionStatus;","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"gok99"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"gok99"},"content":"            completionStatus \u003d CompletionStatus.valueOf(completionStat);","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"gok99"},"content":"        } catch (IllegalArgumentException | NullPointerException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"gok99"},"content":"            completionStatus \u003d CompletionStatus.INCOMPLETE;","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"gok99"},"content":"        final CompletionStatusTag completionStatusTag \u003d new CompletionStatusTag(completionStatus);","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"skythefire"},"content":"        return new Person(modelUuid, modelName, modelPhone, modelEmail, modelAddress,","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"skythefire"},"content":"                completionStatusTag, modelRemark, modelTags);","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"skythefire":17,"vigneshsankariyer1234567890":2,"tanqiya":9,"gok99":20,"-":98}},{"path":"src/main/java/teletubbies/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.storage;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.UserProfile.Role;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.Tag;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"    private final String tagValue;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"    private final Role[] editAccessRoles;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}, {@code tagValue},","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"     * {@code deleteAccessRoles} and {@code editAccessRoles}","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"    public JsonAdaptedTag(@JsonProperty(\"tagName\") String tagName, @JsonProperty(\"tagValue\") String tagValue,","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"                          @JsonProperty(\"editAccessRoles\") Role[] editAccessRoles) {","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"        this.tagValue \u003d tagValue;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"        this.editAccessRoles \u003d editAccessRoles;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"        this.tagValue \u003d \"\";","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"        this.editAccessRoles \u003d new Role[]{};","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"gok99"},"content":"        tagValue \u003d source.getTagValue();","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"gok99"},"content":"        editAccessRoles \u003d source.editAccessRoles;","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"gok99"},"content":"        return new Tag(tagName, tagValue, editAccessRoles, false);","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"gok99":25,"-":37}},{"path":"src/main/java/teletubbies/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.storage;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.LogsCenter;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.util.FileUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.util.JsonUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"gok99":7,"-":73}},{"path":"src/main/java/teletubbies/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.storage;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.model.AddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"tanqiya"},"content":"public class JsonSerializableAddressBook {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"tanqiya"},"content":"            if (addressBook.hasName(person)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"tanqiya":2,"gok99":5,"-":53}},{"path":"src/main/java/teletubbies/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.storage;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.util.JsonUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.model.UserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"gok99":5,"-":42}},{"path":"src/main/java/teletubbies/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.storage;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.model.UserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"gok99":5,"-":27}},{"path":"src/main/java/teletubbies/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.storage;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.LogsCenter;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.model.UserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gok99":6,"-":73}},{"path":"src/main/java/teletubbies/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.storage;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.model.UserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"     * Saves the given {@link teletubbies.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"gok99":6,"-":30}},{"path":"src/main/java/teletubbies/ui/ChartDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"package teletubbies.ui;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"import javafx.scene.chart.PieChart;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"import teletubbies.model.tag.CompletionStatusTag;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"/**","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":" */","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"public class ChartDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"    private static final String FXML \u003d \"ChartDisplay.fxml\";","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"    private ObservableList\u003cPerson\u003e personList;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"    @FXML","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"    private PieChart chartDisplay;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"     * Creates a new ChartDisplay.","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"     * @param personList The list of Persons to be checked.","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"    public ChartDisplay(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"        super(FXML);","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"        requireNonNull(personList);","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"        this.personList \u003d personList;","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"        loadChart();","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"     * Loads the chart with the updated data.","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"    public void loadChart() {","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"lhw-1"},"content":"        int completePersonCount \u003d 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"lhw-1"},"content":"        int ongoingPersonCount \u003d 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"lhw-1"},"content":"        int incompletePersonCount \u003d 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"lhw-1"},"content":"        for (Person person : personList) {","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"lhw-1"},"content":"            // Gets the ENUM value","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"lhw-1"},"content":"            // TODO: Improve code quality","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"lhw-1"},"content":"            CompletionStatusTag completionStatusTag \u003d person.getCompletionStatus();","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"lhw-1"},"content":"            CompletionStatusTag.CompletionStatus status \u003d completionStatusTag.status;","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"lhw-1"},"content":"            // Increment relevant count accordingly","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"lhw-1"},"content":"            if (status \u003d\u003d CompletionStatusTag.CompletionStatus.COMPLETE) {","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"lhw-1"},"content":"                completePersonCount++;","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"lhw-1"},"content":"            } else if (status \u003d\u003d CompletionStatusTag.CompletionStatus.INCOMPLETE) {","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"lhw-1"},"content":"                incompletePersonCount++;","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"lhw-1"},"content":"            } else {","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"lhw-1"},"content":"                ongoingPersonCount++;","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"lhw-1"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"lhw-1"},"content":"        ObservableList\u003cPieChart.Data\u003e pieChartData \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"lhw-1"},"content":"                FXCollections.observableArrayList(","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"lhw-1"},"content":"                        new PieChart.Data(\"Complete\", completePersonCount),","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"lhw-1"},"content":"                        new PieChart.Data(\"Ongoing\", ongoingPersonCount),","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"lhw-1"},"content":"                        new PieChart.Data(\"Incomplete\", incompletePersonCount));","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"lhw-1"},"content":"        chartDisplay.setTitle(\"Your Progress\");","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"lhw-1"},"content":"        chartDisplay.setData(pieChartData);","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"lhw-1":72}},{"path":"src/main/java/teletubbies/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.ui;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.CommandResult;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"gok99"},"content":"         * @see teletubbies.logic.Logic#execute(String)","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"gok99"},"content":"     * Get command box text","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"gok99"},"content":"     * @return command box text","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"gok99"},"content":"    public String getText() {","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"gok99"},"content":"        return commandTextField.getText();","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"gok99"},"content":"     * Set the content of command box","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"gok99"},"content":"     * @param text text to set","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"gok99"},"content":"    public void setText(String text) {","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"gok99"},"content":"        this.commandTextField.setText(text);","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"gok99"},"content":"     * Set caret position of CommandBox","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":106,"author":{"gitId":"gok99"},"content":"     * @param position position of caret","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"gok99"},"content":"    public void setCaretPosition(int position) {","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"gok99"},"content":"        this.commandTextField.requestFocus();","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"gok99"},"content":"        this.commandTextField.positionCaret(position);","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":112,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"gok99":33,"-":80}},{"path":"src/main/java/teletubbies/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.ui;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"import javafx.scene.web.WebEngine;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"import javafx.scene.web.WebView;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.LogsCenter;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-w15-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"    private WebView webView;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"        WebEngine webEngine;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"        webEngine \u003d webView.getEngine();","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"        webEngine.load(USERGUIDE_URL);","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"gok99":3,"-":91,"lhw-1":6}},{"path":"src/main/java/teletubbies/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.ui;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"tanqiya"},"content":"import java.io.File;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":17,"author":{"gitId":"tanqiya"},"content":"import javafx.stage.FileChooser;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.GuiSettings;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.LogsCenter;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"import teletubbies.commons.core.UserProfile;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.EarliestVersionException;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.LatestVersionException;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.Logic;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.Command;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.CommandMap;","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.CommandResult;","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.ExportCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.ImportCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"tanqiya"},"content":"import teletubbies.logic.commands.MergeCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.Prefix;","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"gok99"},"content":"    private Model model;","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"lhw-1"},"content":"    private ChartDisplay chartDisplay;","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"gok99"},"content":"    private CommandBox commandBox;","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"lhw-1"},"content":"    private StackPane chartDisplayPlaceholder;","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"lhw-1"},"content":"    @FXML","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"lhw-1"},"content":"    private Label profileDisplay;","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":78,"author":{"gitId":"gok99"},"content":"    public MainWindow(Stage primaryStage, Logic logic, Model model) {","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"gok99"},"content":"        this.model \u003d model;","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"gok99"},"content":"        this.primaryStage.addEventHandler(KeyEvent.ANY, new EventHandler\u003cKeyEvent\u003e() {","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"gok99"},"content":"            @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"gok99"},"content":"            public void handle(KeyEvent event) {","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"gok99"},"content":"                switch (event.getCode()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"gok99"},"content":"                case UP:","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"gok99"},"content":"                    handleUpPress();","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"gok99"},"content":"                    commandBox.setCaretPosition(commandBox.getText().length());","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"gok99"},"content":"                    break;","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"gok99"},"content":"                case DOWN:","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"gok99"},"content":"                    handleDownPress();","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"gok99"},"content":"                    commandBox.setCaretPosition(commandBox.getText().length());","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"gok99"},"content":"                    break;","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"gok99"},"content":"                case TAB:","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"gok99"},"content":"                    handleTab();","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"gok99"},"content":"                    commandBox.setCaretPosition(commandBox.getText().length());","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"gok99"},"content":"                    break;","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"gok99"},"content":"                default: /**/","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"gok99"},"content":"                }","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"gok99"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"gok99"},"content":"        });","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"gok99"},"content":"    private void handleUpPress() {","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"gok99"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"gok99"},"content":"            commandBox.setText(model.getPreviousCommand());","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"gok99"},"content":"        } catch (EarliestVersionException eve) {","lastModifiedDate":"2021-10-27"},{"lineNumber":157,"author":{"gitId":"gok99"},"content":"            logger.info(\"Info: No previous command\");","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"gok99"},"content":"    private void handleDownPress() {","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"gok99"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"gok99"},"content":"            commandBox.setText(model.getNextCommand());","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"gok99"},"content":"        } catch (LatestVersionException lve) {","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"gok99"},"content":"            logger.info(\"Info: No next command\");","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"gok99"},"content":"    // REQUIRED_FIElDS must always be a List\u003cPrefix\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"gok99"},"content":"    @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"gok99"},"content":"    private void handleTab() {","lastModifiedDate":"2021-10-27"},{"lineNumber":172,"author":{"gitId":"gok99"},"content":"        String commandText \u003d commandBox.getText().trim();","lastModifiedDate":"2021-10-27"},{"lineNumber":173,"author":{"gitId":"gok99"},"content":"        // Solution adapted from: https://tinyurl.com/java-hotexamples-reference","lastModifiedDate":"2021-11-07"},{"lineNumber":174,"author":{"gitId":"gok99"},"content":"        Class\u003c? extends Command\u003e commandClass \u003d CommandMap.getClass(commandText);","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"gok99"},"content":"        if (commandClass \u003d\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"gok99"},"content":"            logger.info(\"No such command\");","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"gok99"},"content":"            return;","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"gok99"},"content":"        try {","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"gok99"},"content":"            List\u003cString\u003e requiredTags \u003d ((List\u003cPrefix\u003e) commandClass.getDeclaredField(\"RECOMMENDED_FLAGS\")","lastModifiedDate":"2021-11-07"},{"lineNumber":181,"author":{"gitId":"gok99"},"content":"                    .get(null))","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"gok99"},"content":"                    .stream().map(Prefix::toString).collect(Collectors.toList());","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"gok99"},"content":"            commandBox.setText(commandText + \" \" + String.join(\" \", requiredTags));","lastModifiedDate":"2021-10-27"},{"lineNumber":184,"author":{"gitId":"gok99"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":185,"author":{"gitId":"gok99"},"content":"            logger.info(\"No compulsory fields: \" + e.getMessage());","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":188,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":193,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"lhw-1"},"content":"        UserProfile userProfile \u003d logic.getUserProfile();","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"lhw-1"},"content":"        profileDisplay.setText(userProfile.getRoleString());","lastModifiedDate":"2021-10-27"},{"lineNumber":196,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":203,"author":{"gitId":"lhw-1"},"content":"        chartDisplay \u003d new ChartDisplay(logic.getFilteredPersonList());","lastModifiedDate":"2021-10-27"},{"lineNumber":204,"author":{"gitId":"lhw-1"},"content":"        chartDisplayPlaceholder.getChildren().add(chartDisplay.getRoot());","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":206,"author":{"gitId":"gok99"},"content":"        commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2021-10-27"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":239,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":240,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":242,"author":{"gitId":"gok99"},"content":"    public void handleExit() {","lastModifiedDate":"2021-10-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":250,"author":{"gitId":"tanqiya"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":251,"author":{"gitId":"gok99"},"content":"     * FileChooser selection type","lastModifiedDate":"2021-10-12"},{"lineNumber":252,"author":{"gitId":"gok99"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":253,"author":{"gitId":"gok99"},"content":"    public enum FileSelectType {","lastModifiedDate":"2021-10-12"},{"lineNumber":254,"author":{"gitId":"gok99"},"content":"        OPEN, SAVE","lastModifiedDate":"2021-10-12"},{"lineNumber":255,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":256,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":257,"author":{"gitId":"gok99"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":258,"author":{"gitId":"gok99"},"content":"     * Opens a FileChooser window of specified","lastModifiedDate":"2021-10-12"},{"lineNumber":259,"author":{"gitId":"gok99"},"content":"     * selection type","lastModifiedDate":"2021-10-12"},{"lineNumber":260,"author":{"gitId":"gok99"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":261,"author":{"gitId":"gok99"},"content":"     * @param windowTitle Title of FileChooser window","lastModifiedDate":"2021-10-12"},{"lineNumber":262,"author":{"gitId":"gok99"},"content":"     * @param selectType Type of selection for FileChooser","lastModifiedDate":"2021-10-12"},{"lineNumber":263,"author":{"gitId":"gok99"},"content":"     * @return chosen File","lastModifiedDate":"2021-10-12"},{"lineNumber":264,"author":{"gitId":"tanqiya"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":265,"author":{"gitId":"tanqiya"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":266,"author":{"gitId":"gok99"},"content":"    public File handleFileChooser(String windowTitle, FileSelectType selectType) {","lastModifiedDate":"2021-10-12"},{"lineNumber":267,"author":{"gitId":"tanqiya"},"content":"        FileChooser fileChooser \u003d new FileChooser();","lastModifiedDate":"2021-10-11"},{"lineNumber":268,"author":{"gitId":"gok99"},"content":"        fileChooser.setTitle(windowTitle);","lastModifiedDate":"2021-10-12"},{"lineNumber":269,"author":{"gitId":"gok99"},"content":"        fileChooser.getExtensionFilters()","lastModifiedDate":"2021-10-12"},{"lineNumber":270,"author":{"gitId":"gok99"},"content":"                .add(new FileChooser.ExtensionFilter(\"JSON Files\", \"*.json\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":271,"author":{"gitId":"gok99"},"content":"        switch(selectType) {","lastModifiedDate":"2021-10-12"},{"lineNumber":272,"author":{"gitId":"gok99"},"content":"        case OPEN:","lastModifiedDate":"2021-10-12"},{"lineNumber":273,"author":{"gitId":"gok99"},"content":"            return fileChooser.showOpenDialog(primaryStage);","lastModifiedDate":"2021-10-12"},{"lineNumber":274,"author":{"gitId":"gok99"},"content":"        case SAVE:","lastModifiedDate":"2021-10-12"},{"lineNumber":275,"author":{"gitId":"gok99"},"content":"            return fileChooser.showSaveDialog(primaryStage);","lastModifiedDate":"2021-10-12"},{"lineNumber":276,"author":{"gitId":"gok99"},"content":"        default:","lastModifiedDate":"2021-10-12"},{"lineNumber":277,"author":{"gitId":"gok99"},"content":"            return null;","lastModifiedDate":"2021-10-12"},{"lineNumber":278,"author":{"gitId":"tanqiya"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":279,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":280,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":281,"author":{"gitId":"tanqiya"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":282,"author":{"gitId":"gok99"},"content":"    private void handleImport() throws CommandException, ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":283,"author":{"gitId":"tanqiya"},"content":"        this.executeCommand(ImportCommand.COMMAND_WORD);","lastModifiedDate":"2021-10-12"},{"lineNumber":284,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":285,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":286,"author":{"gitId":"gok99"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":287,"author":{"gitId":"gok99"},"content":"    private void handleExport() throws CommandException, ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":288,"author":{"gitId":"gok99"},"content":"        this.executeCommand(ExportCommand.COMMAND_WORD);","lastModifiedDate":"2021-10-12"},{"lineNumber":289,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":290,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":291,"author":{"gitId":"tanqiya"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":292,"author":{"gitId":"tanqiya"},"content":"    private void handleMerge() throws CommandException, ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":293,"author":{"gitId":"tanqiya"},"content":"        this.executeCommand(MergeCommand.COMMAND_WORD);","lastModifiedDate":"2021-10-26"},{"lineNumber":294,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":295,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":301,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":302,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":303,"author":{"gitId":"gok99"},"content":"     * @see teletubbies.logic.Logic#execute(String)","lastModifiedDate":"2021-10-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":308,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":310,"author":{"gitId":"gok99"},"content":"            commandResult.executeUiEffect(this);","lastModifiedDate":"2021-10-12"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-12"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":313,"author":{"gitId":"lhw-1"},"content":"            chartDisplay.loadChart();","lastModifiedDate":"2021-10-27"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":315,"author":{"gitId":"lhw-1"},"content":"            UserProfile userProfile \u003d logic.getUserProfile();","lastModifiedDate":"2021-10-27"},{"lineNumber":316,"author":{"gitId":"lhw-1"},"content":"            profileDisplay.setText(userProfile.getRoleString());","lastModifiedDate":"2021-10-27"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":318,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":319,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":320,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":321,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":322,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"tanqiya":20,"gok99":112,"-":177,"lhw-1":16}},{"path":"src/main/java/teletubbies/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.ui;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import javafx.scene.control.ProgressBar;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"tanqiya"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"tanqiya"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.Tag;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private static final String COMPLETED_EMOJI \u003d new String(","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            new byte[]{(byte) 0xE2, (byte) 0x9C, (byte) 0x85}, StandardCharsets.UTF_8","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    );","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private static final String UNCOMPLETED_EMOJI \u003d new String(","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            new byte[]{(byte) 0xE2, (byte) 0x9D, (byte) 0x8C}, StandardCharsets.UTF_8","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    );","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"skythefire"},"content":"    private Label remark;","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"skythefire"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"gok99"},"content":"    private ProgressBar completionStatusTag;","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"skythefire"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"gok99"},"content":"    private Label completionStatusLabel;","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":63,"author":{"gitId":"lhw-1"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"lhw-1"},"content":"    private Button copyButton;","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"lhw-1"},"content":"        phone.setText(\"Phone Number: \" + person.getPhone().value);","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"skythefire"},"content":"        if (person.getAddress().isPresent()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"lhw-1"},"content":"            address.setText(\"Address: \" + person.getAddress().value);","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"skythefire"},"content":"        } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"skythefire"},"content":"            address.setManaged(false);","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"skythefire"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"skythefire"},"content":"        if (person.getEmail().isPresent()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"lhw-1"},"content":"            email.setText(\"Email: \" + person.getEmail().value);","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"skythefire"},"content":"        } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"skythefire"},"content":"            email.setManaged(false);","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"skythefire"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"skythefire"},"content":"        if (person.getRemark().isPresent()) {","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"skythefire"},"content":"            remark.setText(\"Remark: \" + person.getRemark().value);","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"skythefire"},"content":"        } else {","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"skythefire"},"content":"            remark.setManaged(false);","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"skythefire"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"lhw-1"},"content":"        completionStatusLabel.setText(person.getCompletionStatus().status.name());","lastModifiedDate":"2021-11-06"},{"lineNumber":95,"author":{"gitId":"gok99"},"content":"        switch (person.getCompletionStatus().status) {","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"gok99"},"content":"        case COMPLETE:","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"gok99"},"content":"            completionStatusTag.setProgress(1.0);","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"lhw-1"},"content":"            completionStatusLabel.setStyle(\"-fx-background-color: #237a1d;\");","lastModifiedDate":"2021-11-06"},{"lineNumber":99,"author":{"gitId":"gok99"},"content":"            break;","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"gok99"},"content":"        case ONGOING:","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"gok99"},"content":"            completionStatusTag.setProgress(0.5);","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"lhw-1"},"content":"            completionStatusLabel.setStyle(\"-fx-background-color: #e0872d;\");","lastModifiedDate":"2021-11-06"},{"lineNumber":103,"author":{"gitId":"gok99"},"content":"            break;","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"gok99"},"content":"        default:","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"gok99"},"content":"            completionStatusTag.setProgress(0.0);","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"lhw-1"},"content":"            completionStatusLabel.setStyle(\"-fx-background-color: #ec2626;\");","lastModifiedDate":"2021-11-06"},{"lineNumber":107,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"lhw-1"},"content":"        person.getTags().stream()","lastModifiedDate":"2021-11-06"},{"lineNumber":110,"author":{"gitId":"gok99"},"content":"                .sorted(Comparator.comparing(Tag::toString))","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"gok99"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.toString())));","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":114,"author":{"gitId":"tanqiya"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"tanqiya"},"content":"    private void copyToClipboard() {","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"tanqiya"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"tanqiya"},"content":"        final ClipboardContent content \u003d new ClipboardContent();","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"tanqiya"},"content":"        content.putString(person.getPhone().value);","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"tanqiya"},"content":"        clipboard.setContent(content);","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"vigneshsankariyer1234567890":10,"skythefire":20,"tanqiya":10,"gok99":19,"-":69,"lhw-1":11}},{"path":"src/main/java/teletubbies/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.ui;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.LogsCenter;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"gok99":3,"-":46}},{"path":"src/main/java/teletubbies/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.ui;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"gok99":1,"-":27}},{"path":"src/main/java/teletubbies/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.ui;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"gok99":1,"-":12}},{"path":"src/main/java/teletubbies/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.ui;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.MainApp;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.LogsCenter;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.util.StringUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.Logic;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"    private Model model;","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"    public UiManager(Logic logic, Model model) {","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"        this.model \u003d model;","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"gok99"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic, model);","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"gok99":10,"-":82}},{"path":"src/main/java/teletubbies/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.ui;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.MainApp;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"gok99":2,"-":86}},{"path":"src/main/resources/view/Chart.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"/*","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"   Find more details on JavaFX supported named colors at","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"   http://docs.oracle.com/javafx/2/api/javafx/scene/doc-files/cssref.html#t...","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"*/","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"/* Colors of JavaFX pie chart slices. */","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":".data0.chart-pie { -fx-pie-color: #36c42c; }","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":".data1.chart-pie { -fx-pie-color: #ffb23c; }","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":".data2.chart-pie { -fx-pie-color: #ec2626; }","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"/* Pie Chart background colors and strokes. */","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":".chart-title { -fx-text-fill: #fcfcfc !important; -fx-font-size: 1.6em; }","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":".chart-pie-label { -fx-fill: #cccccc; -fx-font-size: 1em; -fx-font-weight: bold; }","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":".chart-legend { -fx-background-color: derive(#26165c, 50%); }","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":".chart-legend-item { -fx-text-fill: #fcfcfc !important; }","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"lhw-1":17}},{"path":"src/main/resources/view/ChartDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lhw-1"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"\u003c?import javafx.scene.chart.PieChart?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" style\u003d\"-fx-padding: 20\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"           xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"    \u003cPieChart fx:id\u003d\"chartDisplay\" layoutX\u003d\"10\" layoutY\u003d\"110\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"lhw-1":10}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"    background-color: #291d75; /* Used in the default.html file */","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"    -fx-text-fill: #190b4d;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"lhw-1"},"content":"    -fx-control-inner-background: #26165c;","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"lhw-1"},"content":"    -fx-background-color: #26165c;","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"lhw-1"},"content":"    -fx-text-fill: #190b4d;","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"lhw-1"},"content":"    -fx-background-color: derive(#26165c, 20%);","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"lhw-1"},"content":"    -fx-border-color: transparent transparent transparent #291d75;","lastModifiedDate":"2021-11-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"lhw-1"},"content":"    -fx-background-color: derive(#26165c, 20%);","lastModifiedDate":"2021-11-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"lhw-1"},"content":"    -fx-background-color: derive(#26165c, 20%);","lastModifiedDate":"2021-11-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"lhw-1"},"content":"    -fx-padding: 5 5 5 0;","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"lhw-1"},"content":"    -fx-border-width: 1px 1px 1px 1px;","lastModifiedDate":"2021-11-06"},{"lineNumber":101,"author":{"gitId":"lhw-1"},"content":"    -fx-border-color: derive(#442a78, 30%);","lastModifiedDate":"2021-11-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"lhw-1"},"content":"    -fx-background-color: derive(#26165c, 30%);","lastModifiedDate":"2021-11-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"lhw-1"},"content":"    -fx-background-color: derive(#26165c, 50%);","lastModifiedDate":"2021-11-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"lhw-1"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-11-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"lhw-1"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-11-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"gok99"},"content":".cell_small_label_bold {","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"gok99"},"content":"    -fx-font-family: \"Open Sans SemiBold\";","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"gok99"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"lhw-1"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-11-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":135,"author":{"gitId":"lhw-1"},"content":"     -fx-background-color: derive(#26165c, 20%);","lastModifiedDate":"2021-11-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":139,"author":{"gitId":"lhw-1"},"content":"     -fx-background-color: derive(#4f37ad, 20%);","lastModifiedDate":"2021-11-06"},{"lineNumber":140,"author":{"gitId":"lhw-1"},"content":"     -fx-border-color: derive(#442a78, 30%);","lastModifiedDate":"2021-11-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"lhw-1"},"content":"    -fx-background-color: derive(#26165c, 30%);","lastModifiedDate":"2021-11-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"lhw-1"},"content":"    -fx-background-color: derive(#26165c, 30%) !important;","lastModifiedDate":"2021-11-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"lhw-1"},"content":"    -fx-background-color: derive(#26165c, 30%);","lastModifiedDate":"2021-11-06"},{"lineNumber":168,"author":{"gitId":"lhw-1"},"content":"    -fx-border-color: derive(#26165c, 25%);","lastModifiedDate":"2021-11-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"lhw-1"},"content":"    -fx-background-color: derive(#26165c, 30%);","lastModifiedDate":"2021-11-06"},{"lineNumber":178,"author":{"gitId":"lhw-1"},"content":"    -fx-border-color: derive(#26165c, 30%);","lastModifiedDate":"2021-11-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":183,"author":{"gitId":"lhw-1"},"content":"    -fx-background-color: derive(#26165c, 30%);","lastModifiedDate":"2021-11-06"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"lhw-1"},"content":"    -fx-background-color: derive(#26165c, 50%);","lastModifiedDate":"2021-11-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"lhw-1"},"content":"    -fx-background-color: #26165c;","lastModifiedDate":"2021-11-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"lhw-1"},"content":"    -fx-padding: 1 1 1 1;","lastModifiedDate":"2021-10-27"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"lhw-1"},"content":"    -fx-background-color: #26165c;","lastModifiedDate":"2021-11-06"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"lhw-1"},"content":"  -fx-text-fill: #26165c;","lastModifiedDate":"2021-11-06"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"lhw-1"},"content":"    -fx-background-color: #26165c;","lastModifiedDate":"2021-11-06"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"lhw-1"},"content":"    -fx-background-color: #26165c;","lastModifiedDate":"2021-11-06"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"lhw-1"},"content":"    -fx-background-color: #26165c;","lastModifiedDate":"2021-11-06"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"lhw-1"},"content":"    -fx-background-color: derive(#26165c, 25%);","lastModifiedDate":"2021-11-06"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":284,"author":{"gitId":"lhw-1"},"content":"    -fx-background-color: derive(#26165c, 20%);","lastModifiedDate":"2021-11-06"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":288,"author":{"gitId":"lhw-1"},"content":"    -fx-background-color: derive(#26165c, 50%);","lastModifiedDate":"2021-11-06"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":312,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":320,"author":{"gitId":"lhw-1"},"content":"    -fx-background-color: transparent #291d75 transparent #291d75;","lastModifiedDate":"2021-11-06"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"lhw-1"},"content":"    -fx-border-color: #291d75 #291d75 #ffffff #291d75;","lastModifiedDate":"2021-11-06"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":334,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"lhw-1"},"content":"    -fx-background-color: transparent, #291d75, transparent, #291d75;","lastModifiedDate":"2021-11-06"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"lhw-1"},"content":"    -fx-background-color: #2e133d;","lastModifiedDate":"2021-11-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"lhw-1"},"content":".tag_status {","lastModifiedDate":"2021-11-06"},{"lineNumber":353,"author":{"gitId":"lhw-1"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-11-06"},{"lineNumber":354,"author":{"gitId":"lhw-1"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-11-06"},{"lineNumber":355,"author":{"gitId":"lhw-1"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-11-06"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-11-06"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-11-06"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-11-06"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-11-06"},{"lineNumber":360,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"gok99":3,"-":311,"lhw-1":46}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"    -fx-background: #291d75;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"    -fx-border-color: #291d75;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":".separator .line {","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"    -fx-border-color: #8969b5;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"-":19,"lhw-1":7}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"\u003c?import javafx.scene.web.WebView?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"User Guide\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"                    \u003cWebView fx:id\u003d\"webView\" minHeight\u003d\"600.0\" minWidth\u003d\"800.0\" prefHeight\u003d\"600.0\" prefWidth\u003d\"800.0\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"-":32,"lhw-1":3}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"lhw-1"},"content":"         title\u003d\"Teletubbies\" minWidth\u003d\"780\" minHeight\u003d\"600\" maxWidth\u003d\"960\" maxHeight\u003d\"840\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"        \u003cURL value\u003d\"@Chart.css\"/\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":31,"author":{"gitId":"lhw-1"},"content":"        \u003cAnchorPane xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"menu-bar\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"          \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"tanqiya"},"content":"              \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleImport\" text\u003d\"Import\" /\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"              \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExport\" text\u003d\"Export\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"tanqiya"},"content":"              \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleMerge\" text\u003d\"Merge\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"              \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"              \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"lhw-1"},"content":"        \u003cLabel fx:id\u003d\"profileDisplay\" AnchorPane.rightAnchor\u003d\"20\" AnchorPane.topAnchor\u003d\"0\" AnchorPane.bottomAnchor\u003d\"0\"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"lhw-1"},"content":"               styleClass\u003d\"menu-role\"\u003e\u003c/Label\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"lhw-1"},"content":"        \u003c/AnchorPane\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":47,"author":{"gitId":"lhw-1"},"content":"        \u003cHBox HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"lhw-1"},"content":"          \u003cchildren\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"lhw-1"},"content":"            \u003cVBox VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"420\"","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"lhw-1"},"content":"                  maxWidth\u003d\"Infinity\"\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":52,"author":{"gitId":"lhw-1"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":54,"author":{"gitId":"lhw-1"},"content":"              \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" maxHeight\u003d\"Infinity\"/\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"lhw-1"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"lhw-1"},"content":"            \u003cVBox VBox.vgrow\u003d\"ALWAYS\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"360\" maxWidth\u003d\"Infinity\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"lhw-1"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"lhw-1"},"content":"                \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"lhw-1"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"lhw-1"},"content":"              \u003cStackPane fx:id\u003d\"chartDisplayPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" maxHeight\u003d\"Infinity\"/\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"lhw-1"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"lhw-1"},"content":"          \u003c/children\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"lhw-1"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"lhw-1"},"content":"                   maxHeight\u003d\"Infinity\"\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"tanqiya":2,"gok99":1,"-":52,"lhw-1":26}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"\u003c?import javafx.scene.control.ProgressBar?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"\u003c?import javafx.scene.control.Separator?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"      \u003cHBox style\u003d\"-fx-padding: 5 0 0 0\"\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"        \u003cLabel fx:id\u003d\"completionStatusLabel\" styleClass\u003d\"tag_status\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"      \u003cSeparator style\u003d\"-fx-padding: 10 0 0 0\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"      \u003cHBox style\u003d\"-fx-padding: 10 0 10 0\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"        \u003cLabel fx:id\u003d\"phone\" style\u003d\"-fx-padding: 5 10 5 0\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"lhw-1"},"content":"        \u003cButton fx:id\u003d\"copyButton\" onAction\u003d\"#copyToClipboard\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"lhw-1"},"content":"          \u003cgraphic\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"lhw-1"},"content":"            \u003cImageView\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"lhw-1"},"content":"              \u003cImage url\u003d\"/images/copy_icon.png\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"lhw-1"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"lhw-1"},"content":"          \u003c/graphic\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"lhw-1"},"content":"        \u003c/Button\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"lhw-1"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"lhw-1"},"content":"      \u003cSeparator style\u003d\"-fx-padding: 10 0 10 0\" /\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"lhw-1"},"content":"      \u003cHBox style\u003d\"-fx-padding: 5 0 10 0;\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"gok99"},"content":"        \u003cLabel styleClass\u003d\"cell_small_label_bold\" text\u003d\"Progress: \" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"gok99"},"content":"        \u003cProgressBar fx:id\u003d\"completionStatusTag\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"gok99"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"lhw-1"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"lhw-1"},"content":"      \u003cHBox style\u003d\"-fx-padding: 10 0 5 0;\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"lhw-1"},"content":"        \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label_bold\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"lhw-1"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gok99":4,"-":34,"lhw-1":24}},{"path":"src/test/java/teletubbies/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"gok99":1,"-":57}},{"path":"src/test/java/teletubbies/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.commons.core;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"gok99":1,"-":26}},{"path":"src/test/java/teletubbies/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.commons.core;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gok99":2,"-":133}},{"path":"src/test/java/teletubbies/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.commons.core.index;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"gok99":2,"-":58}},{"path":"src/test/java/teletubbies/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.commons.util;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"gok99":2,"-":34}},{"path":"src/test/java/teletubbies/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.commons.util;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"gok99":3,"-":105}},{"path":"src/test/java/teletubbies/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.commons.util;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Config;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"gok99":4,"-":112}},{"path":"src/test/java/teletubbies/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.commons.util;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gok99":2,"-":21}},{"path":"src/test/java/teletubbies/commons/util/InvalidationListenerManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package teletubbies.commons.util;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.beans.InvalidationListener;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.beans.property.SimpleObjectProperty;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class InvalidationListenerManagerTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private SimpleObjectProperty\u003cObject\u003e dummyObservable;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private InvalidationListenerManager invalidationListenerManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        dummyObservable \u003d new SimpleObjectProperty\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        invalidationListenerManager \u003d new InvalidationListenerManager();","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void addListenerOnce_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        final int[] counterContainer \u003d {0};","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        invalidationListenerManager.addListener(o -\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            assertEquals(dummyObservable, o);","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            counterContainer[0]++;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        });","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        invalidationListenerManager.callListeners(dummyObservable);","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(1, counterContainer[0]);","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void addListenerMoreThanOnce_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        final int[] counterContainer \u003d {0};","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        int countOfTimes \u003d 10;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        InvalidationListener invalidationListener \u003d observable -\u003e counterContainer[0]++;","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (int i \u003d 0; i \u003c countOfTimes; i++) {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            invalidationListenerManager.addListener(invalidationListener);","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        invalidationListenerManager.callListeners(dummyObservable);","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(countOfTimes, counterContainer[0]);","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void removeListenerOnce_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        final int[] counterContainer \u003d {0};","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        InvalidationListener invalidationListener \u003d observable -\u003e counterContainer[0]++;","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        invalidationListenerManager.addListener(invalidationListener);","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        invalidationListenerManager.callListeners(dummyObservable);","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(1, counterContainer[0]);","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        invalidationListenerManager.removeListener(invalidationListener);","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        invalidationListenerManager.callListeners(dummyObservable);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(1, counterContainer[0]);","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void addListenerMultipleTimesAndRemoveOnce_multipleCall() {","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        final int[] counterContainer \u003d {0};","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        InvalidationListener invalidationListener \u003d observable -\u003e counterContainer[0]++;","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        int countOfTimes \u003d 3;","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (int i \u003d 0; i \u003c countOfTimes; i++) {","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            invalidationListenerManager.addListener(invalidationListener);","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        invalidationListenerManager.removeListener(invalidationListener);","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        invalidationListenerManager.callListeners(dummyObservable);","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(countOfTimes - 1, counterContainer[0]);","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"vigneshsankariyer1234567890":68}},{"path":"src/test/java/teletubbies/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.commons.util;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.SerializableTestClass;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.TestUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gok99":3,"-":42}},{"path":"src/test/java/teletubbies/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.commons.util;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"tanqiya"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2021-11-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"tanqiya":1,"gok99":2,"-":140}},{"path":"src/test/java/teletubbies/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_PHONE_NUMBER;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import static teletubbies.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"tanqiya"},"content":"//import teletubbies.logic.commands.AddCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.CommandResult;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"tanqiya"},"content":"//import teletubbies.logic.commands.CommandTestUtil;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.ListCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ModelManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"tanqiya"},"content":"//import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"import teletubbies.storage.JsonAddressBookStorage;","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"import teletubbies.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"import teletubbies.storage.StorageManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.Assert;","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"tanqiya"},"content":"//import teletubbies.testutil.PersonBuilder;","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"tanqiya"},"content":"//import teletubbies.testutil.TypicalPersons;","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private static final String INVALID_COMMAND \u003d \"uicfhmowqewca\";","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"    private static final String DELETE_COMMAND_WITH_INVALID_PHONE \u003d \"delete -p 000\";","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"    private static final String DELETE_COMMAND_WITH_INVALID_INDEX \u003d \"delete -i 20\";","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private static final String VALID_COMMAND \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private Model trackedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        trackedModel.addCommandInput(INVALID_COMMAND);","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertParseException(INVALID_COMMAND, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"skythefire"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"skythefire"},"content":"    public void execute_commandPhoneExecutionError_throwsCommandException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        trackedModel.addCommandInput(DELETE_COMMAND_WITH_INVALID_PHONE);","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertCommandException(DELETE_COMMAND_WITH_INVALID_PHONE, MESSAGE_INVALID_PERSON_DISPLAYED_PHONE_NUMBER);","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        trackedModel.addCommandInput(DELETE_COMMAND_WITH_INVALID_INDEX);","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertCommandException(DELETE_COMMAND_WITH_INVALID_INDEX, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        trackedModel.addCommandInput(VALID_COMMAND);","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertCommandSuccess(VALID_COMMAND, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":79,"author":{"gitId":"tanqiya"},"content":"    /*@Test TODO: Fix Uuid issue","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"gok99"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + CommandTestUtil.NAME_DESC_AMY + CommandTestUtil.PHONE_DESC_AMY","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"gok99"},"content":"                + CommandTestUtil.EMAIL_DESC_AMY + CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"gok99"},"content":"        Person expectedPerson \u003d new PersonBuilder(TypicalPersons.AMY).withTags().build();","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Model expectedModel \u003d trackedModel;","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        expectedModel.addCommandInput(addCommand);","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"tanqiya"},"content":"    } */","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage, trackedModel);","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage, trackedModel);","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2021-10-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"vigneshsankariyer1234567890":16,"skythefire":2,"tanqiya":7,"gok99":22,"-":115}},{"path":"src/test/java/teletubbies/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"tanqiya"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_UUID_BOB;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ModelManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.model.UserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.PersonBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"tanqiya"},"content":"        Person validPerson \u003d new PersonBuilder().withUuid(VALID_UUID_BOB).build();","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"tanqiya"},"content":"        CommandTestUtil.assertCommandFailure(new AddCommand(personInList), model,","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"tanqiya"},"content":"                AddCommand.MESSAGE_DUPLICATE_PHONE_NUMBER);","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"vigneshsankariyer1234567890":2,"tanqiya":4,"gok99":8,"-":34}},{"path":"src/test/java/teletubbies/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"tanqiya"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.beans.InvalidationListener;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.GuiSettings;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Range;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.UserProfile;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.EarliestVersionException;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.LatestVersionException;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"import teletubbies.model.AddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.PersonBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"tanqiya"},"content":"    public void execute_duplicateName_successful() throws CommandException {","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"skythefire"},"content":"        Person alice \u003d new PersonBuilder().withPhone(\"88888888\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"skythefire"},"content":"        Person alice2 \u003d new PersonBuilder().withPhone(\"99999999\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"skythefire"},"content":"        AddCommand addCommand \u003d new AddCommand(alice);","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"tanqiya"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded(alice2);","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"tanqiya"},"content":"        CommandResult commandResult \u003d addCommand.execute(modelStub);","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"tanqiya"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, alice), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"tanqiya"},"content":"        assertEquals(Arrays.asList(alice2, alice), modelStub.personsAdded);","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":64,"author":{"gitId":"skythefire"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"skythefire"},"content":"    public void execute_duplicatePhoneNumber_throwsCommandException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"skythefire"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"skythefire"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"skythefire"},"content":"        AddCommand addCommand \u003d new AddCommand(alice);","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"skythefire"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(bob);","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"skythefire"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PHONE_NUMBER, () -\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"skythefire"},"content":"            addCommand.execute(modelStub));","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"lhw-1"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"lhw-1"},"content":"        public void setUserProfile(UserProfile userProfile) {","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"lhw-1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"lhw-1"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"lhw-1"},"content":"        public UserProfile getUserProfile() {","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"lhw-1"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"lhw-1"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"gok99"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"gok99"},"content":"        public UserProfile.Role getUserRole() {","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"gok99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":139,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public void addListener(InvalidationListener listener) {","lastModifiedDate":"2021-11-06"},{"lineNumber":140,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":141,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":142,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":169,"author":{"gitId":"tanqiya"},"content":"        public boolean hasName(Person person) {","lastModifiedDate":"2021-10-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":173,"author":{"gitId":"skythefire"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"skythefire"},"content":"        public boolean hasPhoneNumber(Person person) {","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"skythefire"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":176,"author":{"gitId":"skythefire"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"tanqiya"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"gok99"},"content":"        public List\u003cPerson\u003e getPersonsFromRange(Range range) throws IllegalValueException {","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"gok99"},"content":"            return null;","lastModifiedDate":"2021-10-24"},{"lineNumber":191,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":192,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"tanqiya"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"tanqiya"},"content":"        public void updateExportList(List\u003cPerson\u003e filteredPersonList) {","lastModifiedDate":"2021-10-24"},{"lineNumber":195,"author":{"gitId":"tanqiya"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"tanqiya"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":197,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":198,"author":{"gitId":"tanqiya"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"tanqiya"},"content":"        public boolean isAwaitingExportConfirmation() {","lastModifiedDate":"2021-10-25"},{"lineNumber":200,"author":{"gitId":"tanqiya"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":201,"author":{"gitId":"tanqiya"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":202,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":203,"author":{"gitId":"tanqiya"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":204,"author":{"gitId":"tanqiya"},"content":"        public AddressBook getExportAddressBook() {","lastModifiedDate":"2021-10-24"},{"lineNumber":205,"author":{"gitId":"tanqiya"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":206,"author":{"gitId":"tanqiya"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":207,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":208,"author":{"gitId":"tanqiya"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"tanqiya"},"content":"        public void cancelPendingExport() { }","lastModifiedDate":"2021-10-25"},{"lineNumber":210,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":219,"author":{"gitId":"tanqiya"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":220,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":221,"author":{"gitId":"tanqiya"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":222,"author":{"gitId":"tanqiya"},"content":"        public void mergeAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2021-11-08"},{"lineNumber":223,"author":{"gitId":"tanqiya"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":226,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":227,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public void addCommandInput(String textInput) {","lastModifiedDate":"2021-10-23"},{"lineNumber":228,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":229,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":230,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":231,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":232,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public List\u003cString\u003e getChronologicallyAscendingHistory() {","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":234,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":236,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public List\u003cString\u003e getChronologicallyDescendingHistory() {","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":239,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":240,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":241,"author":{"gitId":"gok99"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":242,"author":{"gitId":"gok99"},"content":"        public String getNextCommand() throws LatestVersionException {","lastModifiedDate":"2021-10-27"},{"lineNumber":243,"author":{"gitId":"gok99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":244,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":245,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":246,"author":{"gitId":"gok99"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":247,"author":{"gitId":"gok99"},"content":"        public String getPreviousCommand() throws EarliestVersionException {","lastModifiedDate":"2021-10-27"},{"lineNumber":248,"author":{"gitId":"gok99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":249,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":250,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":251,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":252,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public boolean canUndoAddressBook() {","lastModifiedDate":"2021-10-24"},{"lineNumber":253,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":254,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":255,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":256,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":257,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public boolean canRedoAddressBook() {","lastModifiedDate":"2021-10-24"},{"lineNumber":258,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":259,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":260,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":261,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":262,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public void undoAddressBook() {","lastModifiedDate":"2021-10-24"},{"lineNumber":263,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":264,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":265,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":266,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":267,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public void redoAddressBook() {","lastModifiedDate":"2021-10-24"},{"lineNumber":268,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":269,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":270,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":271,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":272,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public void commitAddressBook() {","lastModifiedDate":"2021-10-24"},{"lineNumber":273,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":274,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":279,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":284,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":288,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":289,"author":{"gitId":"tanqiya"},"content":"        public boolean hasName(Person person) {","lastModifiedDate":"2021-10-26"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":291,"author":{"gitId":"tanqiya"},"content":"            return this.person.isSameName(person);","lastModifiedDate":"2021-10-26"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":293,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":294,"author":{"gitId":"skythefire"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":295,"author":{"gitId":"skythefire"},"content":"        public boolean hasPhoneNumber(Person person) {","lastModifiedDate":"2021-10-24"},{"lineNumber":296,"author":{"gitId":"skythefire"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-10-24"},{"lineNumber":297,"author":{"gitId":"skythefire"},"content":"            return this.person.isSamePhoneNumber(person);","lastModifiedDate":"2021-10-24"},{"lineNumber":298,"author":{"gitId":"skythefire"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":303,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":307,"author":{"gitId":"tanqiya"},"content":"        ModelStubAcceptingPersonAdded(Person person) {","lastModifiedDate":"2021-11-05"},{"lineNumber":308,"author":{"gitId":"tanqiya"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-11-05"},{"lineNumber":309,"author":{"gitId":"tanqiya"},"content":"            personsAdded.add(person);","lastModifiedDate":"2021-11-05"},{"lineNumber":310,"author":{"gitId":"tanqiya"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":311,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":312,"author":{"gitId":"tanqiya"},"content":"        public ModelStubAcceptingPersonAdded() { }","lastModifiedDate":"2021-11-05"},{"lineNumber":313,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":314,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":315,"author":{"gitId":"tanqiya"},"content":"        public boolean hasName(Person person) {","lastModifiedDate":"2021-10-26"},{"lineNumber":316,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":317,"author":{"gitId":"tanqiya"},"content":"            return personsAdded.stream().anyMatch(person::isSameName);","lastModifiedDate":"2021-10-26"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":320,"author":{"gitId":"skythefire"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":321,"author":{"gitId":"skythefire"},"content":"        public boolean hasPhoneNumber(Person person) {","lastModifiedDate":"2021-10-24"},{"lineNumber":322,"author":{"gitId":"skythefire"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-10-24"},{"lineNumber":323,"author":{"gitId":"skythefire"},"content":"            return personsAdded.stream().anyMatch(person::isSamePhoneNumber);","lastModifiedDate":"2021-10-24"},{"lineNumber":324,"author":{"gitId":"skythefire"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":325,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":326,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":329,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":330,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":332,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":333,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public void commitAddressBook() {","lastModifiedDate":"2021-10-24"},{"lineNumber":334,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            // called by {@code AddCommand#execute()}","lastModifiedDate":"2021-10-24"},{"lineNumber":335,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":336,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":339,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"vigneshsankariyer1234567890":51,"skythefire":31,"tanqiya":43,"gok99":34,"-":174,"lhw-1":10}},{"path":"src/test/java/teletubbies/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.model.AddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ModelManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.model.UserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"vigneshsankariyer1234567890":2,"gok99":7,"-":25}},{"path":"src/test/java/teletubbies/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"        assertEquals(commandResult, new CommandResult(\"feedback\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"        assertEquals(commandResult, new CommandResult(\"feedback\", CommandResult.UiEffect.NONE));","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"        assertEquals(commandResult, commandResult);","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"        assertNotEquals(null, commandResult);","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"        assertNotEquals(commandResult, new CommandResult(\"different\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"        assertNotEquals(commandResult, new CommandResult(\"feedback\", CommandResult.UiEffect.SHOW_HELP));","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"        assertNotEquals(commandResult, new CommandResult(\"feedback\", CommandResult.UiEffect.EXIT));","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"gok99"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\",","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"gok99"},"content":"                CommandResult.UiEffect.SHOW_HELP).hashCode());","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"gok99"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\",","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"gok99"},"content":"                CommandResult.UiEffect.EXIT).hashCode());","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"gok99":12,"-":43}},{"path":"src/test/java/teletubbies/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"tanqiya"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_UUID;","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"import teletubbies.model.AddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"tanqiya"},"content":"    public static final String VALID_UUID_AMY \u003d \"376fc044-f444-44a4-9abd-3035aedf27e3\";","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"tanqiya"},"content":"    public static final String VALID_UUID_BOB \u003d \"376fc044-f477-44a4-9abd-3035aedf27e3\";","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"skythefire"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Like skiing.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"skythefire"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Favourite pastime: Eating\";","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"tanqiya"},"content":"    public static final String UUID_DESC_AMY \u003d \" \" + PREFIX_UUID + VALID_UUID_AMY;","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"tanqiya"},"content":"    public static final String UUID_DESC_BOB \u003d \" \" + PREFIX_UUID + VALID_UUID_BOB;","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static final List\u003cString\u003e VALID_COMMAND_HISTORY_INPUTS \u003d new ArrayList\u003c\u003e(Arrays.asList(\"\", \"h\", \"he\",","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            \"hel\", \"hell\", \"hello\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static final List\u003cString\u003e INVALID_COMMAND_HISTORY_INPUTS \u003d new ArrayList\u003c\u003e(Arrays.asList(null, \"h\", null,","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            \"hel\", \"hell\", \"hello\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"skythefire":2,"vigneshsankariyer1234567890":7,"tanqiya":5,"gok99":14,"-":113}},{"path":"src/test/java/teletubbies/logic/commands/ConfirmExportCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanqiya"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"tanqiya"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"tanqiya"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"tanqiya"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"tanqiya"},"content":"import static teletubbies.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"tanqiya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"tanqiya"},"content":"import teletubbies.commons.core.Messages;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"tanqiya"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"tanqiya"},"content":"import teletubbies.logic.commands.uieffects.ExportUiConsumer;","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"tanqiya"},"content":"import teletubbies.model.AddressBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"tanqiya"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"tanqiya"},"content":"import teletubbies.model.ModelManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"tanqiya"},"content":"import teletubbies.model.UserPrefs;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"tanqiya"},"content":"import teletubbies.testutil.TypicalPersons;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"tanqiya"},"content":"class ConfirmExportCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"tanqiya"},"content":"    private Model model \u003d new ModelManager(TypicalPersons.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"tanqiya"},"content":"    private ConfirmExportCommand confirmExportCommand \u003d new ConfirmExportCommand();","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"tanqiya"},"content":"    private ExportUiConsumer exportUiConsumer \u003d new ExportUiConsumer(model);","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"tanqiya"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"tanqiya"},"content":"    public void execute_noPendingExport_throwsException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"tanqiya"},"content":"        CommandTestUtil.assertCommandFailure(confirmExportCommand, model, Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"tanqiya"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"tanqiya"},"content":"    public void saveAddressBookToPath_emptyPath_throwsException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"tanqiya"},"content":"        AddressBook original \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"tanqiya"},"content":"        assertThrows(CommandException.class, () -\u003e exportUiConsumer.saveAddressBookToPath(original, \"\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"tanqiya"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"tanqiya"},"content":"    public void includeDotWithJson_addJson_true() {","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"tanqiya"},"content":"        String s \u003d \"hello\";","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"tanqiya"},"content":"        assertEquals(exportUiConsumer.includeDotJson(s), s + \".json\");","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"tanqiya"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"tanqiya"},"content":"    public void includeDotWithJson_addJson_false() {","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"tanqiya"},"content":"        String s \u003d \"hello.json\";","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"tanqiya"},"content":"        assertEquals(exportUiConsumer.includeDotJson(s), s);","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"tanqiya"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"tanqiya"},"content":"    public void equals() {","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"tanqiya"},"content":"        final ConfirmExportCommand confirmExportFirstCommand \u003d new ConfirmExportCommand();","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"tanqiya"},"content":"        final ConfirmExportCommand confirmExportSecondCommand \u003d new ConfirmExportCommand();","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"tanqiya"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"tanqiya"},"content":"        assertTrue(confirmExportFirstCommand.equals(confirmExportFirstCommand));","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"tanqiya"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"tanqiya"},"content":"        assertTrue(confirmExportFirstCommand.equals(confirmExportSecondCommand));","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"tanqiya"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"tanqiya"},"content":"        assertFalse(confirmExportFirstCommand.equals(1));","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"tanqiya"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"tanqiya"},"content":"        assertFalse(confirmExportFirstCommand.equals(null));","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"tanqiya"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"tanqiya":64}},{"path":"src/test/java/teletubbies/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Messages;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ModelManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"import teletubbies.model.UserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Phone;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"skythefire"},"content":"    public void execute_validPhoneNumberUnfilteredList_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"skythefire"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(personToDelete.getPhone());","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Model expectedModel \u003d getModelAndDeletePerson(personToDelete, model);","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"skythefire"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"skythefire"},"content":"    public void execute_invalidPhoneNumberUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"skythefire"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(new Phone(\"000\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"skythefire"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_PHONE_NUMBER);","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"skythefire"},"content":"    public void execute_validPhoneNumberFilteredList_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"skythefire"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(personToDelete.getPhone());","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Model expectedModel \u003d getModelAndDeletePerson(personToDelete, model);","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void executeUndoRedo_validIndexUnfiltered_success() throws Exception {","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Model expectedModel \u003d getModelAndDeletePerson(personToDelete, model);","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        deleteCommand.execute(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        expectedModel.undoAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        expectedModel.redoAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertCommandSuccess(new RedoCommand(), model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void executeUndoRedo_invalidIndexUnfiltered_failure() {","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertCommandFailure(new UndoCommand(), model, UndoCommand.MESSAGE_FAILURE);","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertCommandFailure(new RedoCommand(), model, RedoCommand.MESSAGE_FAILURE);","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void executeUndoRedo_samePersonDeleted() throws Exception {","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        showPersonAtIndex(model, INDEX_SECOND_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Model expectedModel \u003d getModelAndDeletePerson(personToDelete, model);","lastModifiedDate":"2021-11-08"},{"lineNumber":97,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":98,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        deleteCommand.execute(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        expectedModel.undoAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertNotEquals(personToDelete, model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()));","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":105,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        expectedModel.redoAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertCommandSuccess(new RedoCommand(), model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        //@@author: sijie123","lastModifiedDate":"2021-11-08"},{"lineNumber":112,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // Adapted from","lastModifiedDate":"2021-11-08"},{"lineNumber":113,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // https://github.com/se-edu/addressbook-level4/blob/master/src/test/java/seedu/address/logic","lastModifiedDate":"2021-11-08"},{"lineNumber":114,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // /commands/DeleteCommandTest.java","lastModifiedDate":"2021-11-08"},{"lineNumber":115,"author":{"gitId":"skythefire"},"content":"        Person firstPersonToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"skythefire"},"content":"        Person secondPersonToDelete \u003d model.getFilteredPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"skythefire"},"content":"        // delete by index","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"skythefire"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"skythefire"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"skythefire"},"content":"        // delete by phone number","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"skythefire"},"content":"        DeleteCommand deleteThirdCommand \u003d new DeleteCommand(firstPersonToDelete.getPhone());","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"skythefire"},"content":"        DeleteCommand deleteForthCommand \u003d new DeleteCommand(secondPersonToDelete.getPhone());","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"skythefire"},"content":"        // test cases for deleting via phone number","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"skythefire"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":142,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"skythefire"},"content":"        // test cases for deleting via index","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"skythefire"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"skythefire"},"content":"        assertTrue(deleteThirdCommand.equals(deleteThirdCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"skythefire"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"skythefire"},"content":"        DeleteCommand deleteThirdCommandCopy \u003d new DeleteCommand(firstPersonToDelete.getPhone());","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"skythefire"},"content":"        assertTrue(deleteThirdCommand.equals(deleteThirdCommandCopy));","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"skythefire"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"skythefire"},"content":"        assertFalse(deleteThirdCommand.equals(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"skythefire"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"skythefire"},"content":"        assertFalse(deleteThirdCommand.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"skythefire"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"skythefire"},"content":"        assertFalse(deleteThirdCommand.equals(deleteForthCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        //@@author: sijie123","lastModifiedDate":"2021-11-08"},{"lineNumber":160,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"skythefire"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"skythefire"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"skythefire"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"skythefire"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"skythefire"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Model expectedModel \u003d getModelAndDeletePerson(personToDelete, model);","lastModifiedDate":"2021-11-08"},{"lineNumber":170,"author":{"gitId":"skythefire"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"skythefire"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"skythefire"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"skythefire"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"skythefire"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"skythefire"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"skythefire"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"skythefire"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"skythefire"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"skythefire"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"skythefire"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"skythefire"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Model expectedModel \u003d getModelAndDeletePerson(personToDelete, model);","lastModifiedDate":"2021-11-08"},{"lineNumber":191,"author":{"gitId":"skythefire"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"skythefire"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"skythefire"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"skythefire"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"skythefire"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"skythefire"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"skythefire"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-12"},{"lineNumber":202,"author":{"gitId":"skythefire"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":203,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":204,"author":{"gitId":"skythefire"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-12"},{"lineNumber":205,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":206,"author":{"gitId":"skythefire"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":217,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":218,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":219,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Get a new Model and delete the person to delete.","lastModifiedDate":"2021-11-08"},{"lineNumber":220,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":221,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private Model getModelAndDeletePerson(Person personToDelete, Model model) {","lastModifiedDate":"2021-11-08"},{"lineNumber":222,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-11-08"},{"lineNumber":223,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2021-11-08"},{"lineNumber":224,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2021-11-08"},{"lineNumber":225,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return expectedModel;","lastModifiedDate":"2021-11-08"},{"lineNumber":226,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"vigneshsankariyer1234567890":63,"skythefire":85,"gok99":14,"-":65}},{"path":"src/test/java/teletubbies/logic/commands/DoneCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Messages;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.model.AddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ModelManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.model.UserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.CompletionStatusTag.CompletionStatus;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.PersonBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.TypicalIndexes;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.TypicalPersons;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * Contains integration tests (interaction with the Model) and unit tests for DoneCommand.","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class DoneCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"    private Model model \u003d new ModelManager(TypicalPersons.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void execute_completedUnfilteredList_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withCompletionStatus(CompletionStatus.COMPLETE).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"tanqiya"},"content":"        String expectedMessage \u003d String.format(DoneCommand.MESSAGE_COMPLETED_SUCCESS,","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"tanqiya"},"content":"                CompletionStatus.COMPLETE.toString().toLowerCase(), editedPerson);","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"        CommandTestUtil.assertCommandSuccess(doneCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"gok99"},"content":"        CommandTestUtil.showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"gok99"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"gok99"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"gok99"},"content":"                .withCompletionStatus(CompletionStatus.COMPLETE).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"gok99"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"tanqiya"},"content":"        String expectedMessage \u003d String.format(DoneCommand.MESSAGE_COMPLETED_SUCCESS,","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"tanqiya"},"content":"                CompletionStatus.COMPLETE.toString().toLowerCase(), editedPerson);","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"gok99"},"content":"        CommandTestUtil.assertCommandSuccess(doneCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        DoneCommand remarkCommand \u003d new DoneCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"gok99"},"content":"        CommandTestUtil.assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"gok99"},"content":"        CommandTestUtil.showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"gok99"},"content":"        Index outOfBoundIndex \u003d TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"gok99"},"content":"        CommandTestUtil.assertCommandFailure(doneCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void equals() {","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"gok99"},"content":"        final DoneCommand standardCommand \u003d new DoneCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"gok99"},"content":"        DoneCommand commandWithSameValues \u003d new DoneCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"gok99"},"content":"        assertFalse(standardCommand.equals(new DoneCommand(TypicalIndexes.INDEX_SECOND_PERSON)));","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"vigneshsankariyer1234567890":69,"tanqiya":4,"gok99":31}},{"path":"src/test/java/teletubbies/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Messages;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"import teletubbies.model.AddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ModelManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"import teletubbies.model.UserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.PersonBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"        // Set tags and remark since edit doesn\u0027t change tags and remarks","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"        Person editedPerson \u003d new PersonBuilder().withTags(\"friends\")","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"                .withRemark(\"She likes aardvarks.\").build();","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"gok99"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"gok99"},"content":"        CommandTestUtil.showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":99,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"skythefire"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).withPhone(\"99999999\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"gok99"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"gok99"},"content":"        CommandTestUtil.showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"gok99"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"skythefire"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"skythefire"},"content":"    public void execute_duplicatePhoneNumberUnfilteredList_failure() {","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"skythefire"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"skythefire"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).withName(\"Joseph\").build();","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"skythefire"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"skythefire"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PHONE_NUMBER);","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"skythefire"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"skythefire"},"content":"    public void execute_duplicatePhoneNumberFilteredList_failure() {","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"skythefire"},"content":"        CommandTestUtil.showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"skythefire"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"skythefire"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"skythefire"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-24"},{"lineNumber":141,"author":{"gitId":"skythefire"},"content":"                new EditPersonDescriptorBuilder(personInList).withName(\"Joseph\").build());","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"skythefire"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PHONE_NUMBER);","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"gok99"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":161,"author":{"gitId":"gok99"},"content":"        CommandTestUtil.showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-17"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":169,"author":{"gitId":"gok99"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":174,"author":{"gitId":"gok99"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, CommandTestUtil.DESC_AMY);","lastModifiedDate":"2021-10-17"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"gok99"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(CommandTestUtil.DESC_AMY);","lastModifiedDate":"2021-10-17"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":191,"author":{"gitId":"gok99"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, CommandTestUtil.DESC_AMY)));","lastModifiedDate":"2021-10-17"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":194,"author":{"gitId":"gok99"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, CommandTestUtil.DESC_BOB)));","lastModifiedDate":"2021-10-17"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"vigneshsankariyer1234567890":3,"skythefire":20,"gok99":34,"-":140}},{"path":"src/test/java/teletubbies/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"        assertFalse(DESC_AMY.equals(CommandTestUtil.DESC_BOB));","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(CommandTestUtil.VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(CommandTestUtil.VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"gok99"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(CommandTestUtil.VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"gok99"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(CommandTestUtil.VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"gok99":10,"-":43}},{"path":"src/test/java/teletubbies/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ModelManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT,","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"                CommandResult.UiEffect.EXIT);","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"gok99":7,"-":14}},{"path":"src/test/java/teletubbies/logic/commands/ExportCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ModelManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.model.UserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.Tag;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.TypicalPersons;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"public class ExportCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"    private Model model \u003d new ModelManager(TypicalPersons.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"    private final Optional\u003cString\u003e none \u003d Optional.empty();","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"    public void filteredAddress_noTags_equalsOriginal() {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"        // Set-up","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"        ExportCommand exportCommand \u003d new ExportCommand(tags);","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"        assertEquals(exportCommand.filterPersonList(model.getFilteredPersonList()),","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"                TypicalPersons.getTypicalPersons());","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"    public void filteredAddress_friendsTag_lengthEqualsThree() {","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"        // Set-up","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"        tags.add(new Tag(\"friends\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"        ExportCommand exportCommand \u003d new ExportCommand(tags);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"        assertEquals(exportCommand.filterPersonList(model.getFilteredPersonList()).size(), 3);","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"    public void filteredAddress_friendsAndOwesMoneyTag_lengthEqualsOne() {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"gok99"},"content":"        // Set-up","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"gok99"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"gok99"},"content":"        tags.add(new Tag(\"friends\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"gok99"},"content":"        tags.add(new Tag(\"owesMoney\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"gok99"},"content":"        ExportCommand exportCommand \u003d new ExportCommand(tags);","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"gok99"},"content":"        assertEquals(exportCommand.filterPersonList(model.getFilteredPersonList()).size(), 1);","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"gok99"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"gok99"},"content":"    public void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"gok99"},"content":"        final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"gok99"},"content":"        tags.add(new Tag(\"tag1\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"gok99"},"content":"        tags.add(new Tag(\"tag2\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"gok99"},"content":"        final ExportCommand standardCommand \u003d new ExportCommand(tags);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"gok99"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"gok99"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"gok99"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"gok99"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"gok99"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"gok99"},"content":"        assertEquals(standardCommand.equals(new ClearCommand()), false);","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"gok99"},"content":"        final Set\u003cTag\u003e testTags1 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"gok99"},"content":"        testTags1.add(new Tag(\"tag2\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"gok99"},"content":"        testTags1.add(new Tag(\"tag1\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"gok99"},"content":"        // same set -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"gok99"},"content":"        assertEquals(standardCommand.equals(new ExportCommand(testTags1)), true);","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"gok99"},"content":"        final Set\u003cTag\u003e testTags2 \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"gok99"},"content":"        testTags2.add(new Tag(\"tag3\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"gok99"},"content":"        testTags2.add(new Tag(\"tag4\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"gok99"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"gok99"},"content":"        assertEquals(standardCommand.equals(new ExportCommand(testTags2)), false);","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"gok99":85}},{"path":"src/test/java/teletubbies/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ModelManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.model.UserPrefs;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.PersonHasTagsPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.Tag;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.TypicalPersons;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"class FilterCommandTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"    void execute_multipleTags_success() {","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"        Model model \u003d new ModelManager(TypicalPersons.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"        FilterCommand command \u003d new FilterCommand(","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"            new PersonHasTagsPredicate(new HashSet\u003c\u003e(","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"                    List.of(new Tag(\"owesMoney\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"                            new Tag(\"friends\"))))","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"        );","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"        command.execute(model);","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"        assertEquals(model.getFilteredPersonList().size(), 1);","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"    void execute_singleTag_success() {","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"        Model model \u003d new ModelManager(TypicalPersons.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"        FilterCommand command \u003d new FilterCommand(","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"                new PersonHasTagsPredicate(new HashSet\u003c\u003e(","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"                        List.of(new Tag(\"friends\"))))","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"        );","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"        command.execute(model);","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"        assertEquals(model.getFilteredPersonList().size(), 3);","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"gok99":46}},{"path":"src/test/java/teletubbies/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import static teletubbies.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ModelManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"import teletubbies.model.UserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"gok99":11,"-":72}},{"path":"src/test/java/teletubbies/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ModelManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, CommandResult.UiEffect.SHOW_HELP);","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"gok99":6,"-":14}},{"path":"src/test/java/teletubbies/logic/commands/HistoryCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static teletubbies.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.model.ModelManager;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.model.UserPrefs;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * An integration test to assess if ModelManager can be fully integrated. Invalid inputs not added as they will fail","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * according to ModelManager tests.","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class HistoryCommandIntegrationTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final List\u003cString\u003e validCommandInputs \u003d CommandTestUtil.VALID_COMMAND_HISTORY_INPUTS;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private Model model;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void modelManagerIntegrationTest_validInputs_success() throws CommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (String s: validCommandInputs) {","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            model.addCommandInput(s);","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        HistoryCommand historyCommand \u003d new HistoryCommand();","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        CommandResult commandResult \u003d historyCommand.execute(model);","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        List\u003cString\u003e copyOfInputs \u003d new ArrayList\u003c\u003e(validCommandInputs);","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Collections.reverse(copyOfInputs);","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        String expectedResult \u003d String.format(HistoryCommand.MESSAGE_SUCCESS, String.join(\"\\n\", copyOfInputs));","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(expectedResult, commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"vigneshsankariyer1234567890":48}},{"path":"src/test/java/teletubbies/logic/commands/HistoryCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.beans.InvalidationListener;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.core.GuiSettings;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Range;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.core.UserProfile;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"tanqiya"},"content":"import teletubbies.model.AddressBook;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class HistoryCommandTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final List\u003cString\u003e validCommandInputs \u003d CommandTestUtil.VALID_COMMAND_HISTORY_INPUTS;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final List\u003cString\u003e invalidCommandInputs \u003d CommandTestUtil.INVALID_COMMAND_HISTORY_INPUTS;","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private Model model;","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        model \u003d new ModelStubWithWorkingCommandHistoryInputMethods();","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void addValidCommandsAndExecuteTest_success() throws CommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (String s: validCommandInputs) {","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            model.addCommandInput(s);","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        HistoryCommand historyCommand \u003d new HistoryCommand();","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        CommandResult commandResult \u003d historyCommand.execute(model);","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        List\u003cString\u003e copyOfInputs \u003d new ArrayList\u003c\u003e(validCommandInputs);","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Collections.reverse(copyOfInputs);","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        String expectedResult \u003d String.format(HistoryCommand.MESSAGE_SUCCESS, String.join(\"\\n\", copyOfInputs));","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(expectedResult, commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void addInvalidCommandsAndExecuteTest_success() throws CommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (String s: invalidCommandInputs) {","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            model.addCommandInput(s);","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        HistoryCommand historyCommand \u003d new HistoryCommand();","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        CommandResult commandResult \u003d historyCommand.execute(model);","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        List\u003cString\u003e copyOfInputs \u003d new ArrayList\u003c\u003e(invalidCommandInputs);","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Collections.reverse(copyOfInputs);","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        String expectedResult \u003d String.format(HistoryCommand.MESSAGE_SUCCESS, String.join(\"\\n\", copyOfInputs));","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(expectedResult, commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * A Model Stub that only implements {@code CommandHistoryInput} methods.","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private class ModelStubWithWorkingCommandHistoryInputMethods implements Model {","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        private final List\u003cString\u003e commandInputHistory \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public void setUserProfile(UserProfile userProfile) {","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public UserProfile getUserProfile() {","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"gok99"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"gok99"},"content":"        public UserProfile.Role getUserRole() {","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"gok99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-11-06"},{"lineNumber":111,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public void addListener(InvalidationListener listener) {","lastModifiedDate":"2021-11-06"},{"lineNumber":112,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":113,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":114,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":115,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"tanqiya"},"content":"        public boolean hasName(Person person) {","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"skythefire"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"skythefire"},"content":"        public boolean hasPhoneNumber(Person person) {","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"skythefire"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":146,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":151,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":154,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":155,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":156,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":158,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":160,"author":{"gitId":"gok99"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public List\u003cPerson\u003e getPersonsFromRange(Range range) {","lastModifiedDate":"2021-11-06"},{"lineNumber":162,"author":{"gitId":"gok99"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"tanqiya"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":166,"author":{"gitId":"tanqiya"},"content":"        public void updateExportList(List\u003cPerson\u003e filteredPersonList) {","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"tanqiya"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"tanqiya"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"tanqiya"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"tanqiya"},"content":"        public boolean isAwaitingExportConfirmation() {","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"tanqiya"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"tanqiya"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"tanqiya"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":176,"author":{"gitId":"tanqiya"},"content":"        public AddressBook getExportAddressBook() {","lastModifiedDate":"2021-10-25"},{"lineNumber":177,"author":{"gitId":"tanqiya"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":178,"author":{"gitId":"tanqiya"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"tanqiya"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"tanqiya"},"content":"        public void cancelPendingExport() {","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"tanqiya"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":186,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-23"},{"lineNumber":187,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":188,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":189,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":190,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":191,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-23"},{"lineNumber":192,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-23"},{"lineNumber":193,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":194,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":195,"author":{"gitId":"tanqiya"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"tanqiya"},"content":"        public void mergeAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2021-11-08"},{"lineNumber":197,"author":{"gitId":"tanqiya"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":198,"author":{"gitId":"tanqiya"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":199,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":201,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public void addCommandInput(String textInput) {","lastModifiedDate":"2021-10-23"},{"lineNumber":202,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            commandInputHistory.add(textInput);","lastModifiedDate":"2021-10-23"},{"lineNumber":203,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":204,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":205,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":206,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public List\u003cString\u003e getChronologicallyAscendingHistory() {","lastModifiedDate":"2021-10-24"},{"lineNumber":207,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return new ArrayList\u003c\u003e(commandInputHistory);","lastModifiedDate":"2021-10-23"},{"lineNumber":208,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":209,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":210,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":211,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public List\u003cString\u003e getChronologicallyDescendingHistory() {","lastModifiedDate":"2021-10-24"},{"lineNumber":212,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            List\u003cString\u003e result \u003d new ArrayList\u003c\u003e(commandInputHistory);","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            Collections.reverse(result);","lastModifiedDate":"2021-10-24"},{"lineNumber":214,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            return result;","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":216,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":217,"author":{"gitId":"gok99"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":218,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public String getNextCommand() {","lastModifiedDate":"2021-11-06"},{"lineNumber":219,"author":{"gitId":"gok99"},"content":"            // TODO","lastModifiedDate":"2021-10-27"},{"lineNumber":220,"author":{"gitId":"gok99"},"content":"            return \"\";","lastModifiedDate":"2021-10-27"},{"lineNumber":221,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":222,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":223,"author":{"gitId":"gok99"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":224,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public String getPreviousCommand() {","lastModifiedDate":"2021-11-06"},{"lineNumber":225,"author":{"gitId":"gok99"},"content":"            // TODO","lastModifiedDate":"2021-10-27"},{"lineNumber":226,"author":{"gitId":"gok99"},"content":"            return \"\";","lastModifiedDate":"2021-10-27"},{"lineNumber":227,"author":{"gitId":"gok99"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":228,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":229,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public boolean canUndoAddressBook() {","lastModifiedDate":"2021-10-24"},{"lineNumber":230,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":231,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":234,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public boolean canRedoAddressBook() {","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":236,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":239,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public void undoAddressBook() {","lastModifiedDate":"2021-10-24"},{"lineNumber":240,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":241,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":242,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":243,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":244,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public void redoAddressBook() {","lastModifiedDate":"2021-10-24"},{"lineNumber":245,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":246,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":247,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":248,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":249,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public void commitAddressBook() {","lastModifiedDate":"2021-10-24"},{"lineNumber":250,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":251,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":252,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":253,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"vigneshsankariyer1234567890":204,"skythefire":3,"tanqiya":26,"gok99":20}},{"path":"src/test/java/teletubbies/logic/commands/ImportCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"tanqiya"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"tanqiya"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"tanqiya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"tanqiya"},"content":"class ImportCommandTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"tanqiya"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"tanqiya"},"content":"    public void equals() {","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"tanqiya"},"content":"        final ImportCommand importFirstCommand \u003d new ImportCommand();","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tanqiya"},"content":"        final ImportCommand importSecondCommand \u003d new ImportCommand();","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"tanqiya"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"tanqiya"},"content":"        assertTrue(importFirstCommand.equals(importFirstCommand));","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"tanqiya"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"tanqiya"},"content":"        assertTrue(importFirstCommand.equals(importSecondCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"tanqiya"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"tanqiya"},"content":"        assertFalse(importFirstCommand.equals(1));","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"tanqiya"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"tanqiya"},"content":"        assertFalse(importFirstCommand.equals(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"tanqiya"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"tanqiya":25,"gok99":1}},{"path":"src/test/java/teletubbies/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ModelManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.model.UserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"gok99":8,"-":31}},{"path":"src/test/java/teletubbies/logic/commands/MergeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanqiya"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"tanqiya"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"tanqiya"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"tanqiya"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"tanqiya"},"content":"class MergeCommandTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"tanqiya"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"tanqiya"},"content":"    void execute() {","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"tanqiya"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"tanqiya"},"content":"    void equals() {","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"tanqiya"},"content":"        final MergeCommand mergeFirstCommand \u003d new MergeCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"tanqiya"},"content":"        final MergeCommand mergeSecondCommand \u003d new MergeCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"tanqiya"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"tanqiya"},"content":"        assertTrue(mergeFirstCommand.equals(mergeFirstCommand));","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"tanqiya"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"tanqiya"},"content":"        assertTrue(mergeFirstCommand.equals(mergeSecondCommand));","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"tanqiya"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"tanqiya"},"content":"        assertFalse(mergeFirstCommand.equals(1));","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"tanqiya"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"tanqiya"},"content":"        assertFalse(mergeFirstCommand.equals(null));","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"tanqiya"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"tanqiya":31}},{"path":"src/test/java/teletubbies/logic/commands/ModifiableAndUnmodifiableCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static teletubbies.model.VersionedAddressBookTest.makeVersionedAddressBook;","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static teletubbies.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static teletubbies.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static teletubbies.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.List;","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.Set;","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.exceptions.EarliestVersionException;","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.exceptions.LatestVersionException;","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.model.ModelManager;","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.model.UserPrefs;","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.model.VersionedAddressBook;","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.model.person.PersonHasTagsPredicate;","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.model.tag.Tag;","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.testutil.AddressBookBuilder;","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"/**","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * Some tests to confirm that unmodifiable commands are truly unmodifiable. Original intention","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * was to test the ConfirmExportCommand, but it proved difficult to build a suitable stub for MainWindow","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" * without relying on Logic and other components.","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":" */","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class ModifiableAndUnmodifiableCommandIntegrationTest {","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final ReadOnlyAddressBook addressBookWithAmyBobAndCarl \u003d","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            new AddressBookBuilder().withPerson(AMY).withPerson(BOB).withPerson(CARL).build();","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final List\u003cReadOnlyAddressBook\u003e fullStateList \u003d List.of(addressBookWithAmyBobAndCarl);","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void execute_filterCommand_doesNotModifyAddressBook() {","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        VersionedAddressBook book \u003d makeVersionAddressBook(fullStateList);","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertNotNull(book);","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Model model \u003d makeModel(book);","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        FilterCommand filterCommand \u003d new FilterCommand(new PersonHasTagsPredicate(Set.of()));","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        filterCommand.execute(model);","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Model expectedModel \u003d makeModel(book);","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        expectedModel.updateFilteredPersonList(new PersonHasTagsPredicate(Set.of()));","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(model, expectedModel);","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void execute_listCommand_doesNotModifyAddressBook() {","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        VersionedAddressBook book \u003d makeVersionAddressBook(fullStateList);","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertNotNull(book);","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Model model \u003d makeModel(book);","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        ListCommand listCommand \u003d new ListCommand();","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        listCommand.execute(model);","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Model expectedModel \u003d makeModel(book);","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(model, expectedModel);","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void execute_exportCommandAndCancel_doesNotModifyAddressBook() throws CommandException {","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        VersionedAddressBook book \u003d makeVersionAddressBook(fullStateList);","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertNotNull(book);","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Model model \u003d makeModel(book);","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Model expectedModel \u003d makeModel(book);","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        model.cancelPendingExport();","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(model, expectedModel);","lastModifiedDate":"2021-11-08"},{"lineNumber":79,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":80,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        ExportCommand exportCommand \u003d new ExportCommand(Set.of());","lastModifiedDate":"2021-11-08"},{"lineNumber":81,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        exportCommand.execute(model);","lastModifiedDate":"2021-11-08"},{"lineNumber":82,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        model.cancelPendingExport();","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":84,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(model, expectedModel);","lastModifiedDate":"2021-11-08"},{"lineNumber":85,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":86,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":88,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void execute_exportCommandWithTagAndCancel_doesNotModifyAddressBook() throws CommandException {","lastModifiedDate":"2021-11-08"},{"lineNumber":89,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        VersionedAddressBook book \u003d makeVersionAddressBook(fullStateList);","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertNotNull(book);","lastModifiedDate":"2021-11-08"},{"lineNumber":91,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Model model \u003d makeModel(book);","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Model expectedModel \u003d makeModel(book);","lastModifiedDate":"2021-11-08"},{"lineNumber":93,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":94,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        model.cancelPendingExport();","lastModifiedDate":"2021-11-08"},{"lineNumber":95,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(model, expectedModel);","lastModifiedDate":"2021-11-08"},{"lineNumber":96,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":97,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        ExportCommand exportCommand \u003d new ExportCommand(Set.of(new Tag(\"test\")));","lastModifiedDate":"2021-11-08"},{"lineNumber":98,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        exportCommand.execute(model);","lastModifiedDate":"2021-11-08"},{"lineNumber":99,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        model.cancelPendingExport();","lastModifiedDate":"2021-11-08"},{"lineNumber":100,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":101,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(model, expectedModel);","lastModifiedDate":"2021-11-08"},{"lineNumber":102,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":103,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":104,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":105,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void execute_findCommand_doesNotModifyAddressBook() {","lastModifiedDate":"2021-11-08"},{"lineNumber":106,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        VersionedAddressBook book \u003d makeVersionAddressBook(fullStateList);","lastModifiedDate":"2021-11-08"},{"lineNumber":107,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertNotNull(book);","lastModifiedDate":"2021-11-08"},{"lineNumber":108,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Model model \u003d makeModel(book);","lastModifiedDate":"2021-11-08"},{"lineNumber":109,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Model expectedModel \u003d makeModel(book);","lastModifiedDate":"2021-11-08"},{"lineNumber":110,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":111,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        FindCommand findCommand \u003d new FindCommand(new NameContainsKeywordsPredicate(List.of()));","lastModifiedDate":"2021-11-08"},{"lineNumber":112,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        findCommand.execute(model);","lastModifiedDate":"2021-11-08"},{"lineNumber":113,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":114,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        expectedModel.updateFilteredPersonList(new NameContainsKeywordsPredicate(List.of()));","lastModifiedDate":"2021-11-08"},{"lineNumber":115,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":116,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(model, expectedModel);","lastModifiedDate":"2021-11-08"},{"lineNumber":117,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":118,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":119,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":120,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void execute_clearCommand_modifiesAddressBook() throws CommandException {","lastModifiedDate":"2021-11-08"},{"lineNumber":121,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        VersionedAddressBook book \u003d makeVersionAddressBook(fullStateList);","lastModifiedDate":"2021-11-08"},{"lineNumber":122,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertNotNull(book);","lastModifiedDate":"2021-11-08"},{"lineNumber":123,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Model model \u003d makeModel(book);","lastModifiedDate":"2021-11-08"},{"lineNumber":124,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Model expectedModel \u003d makeModel(book);","lastModifiedDate":"2021-11-08"},{"lineNumber":125,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":126,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        ClearCommand clearCommand \u003d new ClearCommand();","lastModifiedDate":"2021-11-08"},{"lineNumber":127,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        clearCommand.execute(model);","lastModifiedDate":"2021-11-08"},{"lineNumber":128,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":129,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertNotEquals(model, expectedModel);","lastModifiedDate":"2021-11-08"},{"lineNumber":130,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":131,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        model.cancelPendingExport();","lastModifiedDate":"2021-11-08"},{"lineNumber":132,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":133,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertNotEquals(model, expectedModel);","lastModifiedDate":"2021-11-08"},{"lineNumber":134,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":135,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":136,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":137,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void execute_clearThenExportAndCancel_addsOneMoreState()","lastModifiedDate":"2021-11-08"},{"lineNumber":138,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throws EarliestVersionException, LatestVersionException, CommandException {","lastModifiedDate":"2021-11-08"},{"lineNumber":139,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        VersionedAddressBook book \u003d makeVersionAddressBook(fullStateList);","lastModifiedDate":"2021-11-08"},{"lineNumber":140,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertNotNull(book);","lastModifiedDate":"2021-11-08"},{"lineNumber":141,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Model model \u003d makeModel(book);","lastModifiedDate":"2021-11-08"},{"lineNumber":142,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":143,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        ClearCommand clearCommand \u003d new ClearCommand();","lastModifiedDate":"2021-11-08"},{"lineNumber":144,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        clearCommand.execute(model);","lastModifiedDate":"2021-11-08"},{"lineNumber":145,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":146,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        int undoCount \u003d 0;","lastModifiedDate":"2021-11-08"},{"lineNumber":147,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        while (model.canUndoAddressBook()) {","lastModifiedDate":"2021-11-08"},{"lineNumber":148,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            model.undoAddressBook();","lastModifiedDate":"2021-11-08"},{"lineNumber":149,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            undoCount++;","lastModifiedDate":"2021-11-08"},{"lineNumber":150,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":151,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":152,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(undoCount, fullStateList.size());","lastModifiedDate":"2021-11-08"},{"lineNumber":153,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":154,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        while (model.canRedoAddressBook()) {","lastModifiedDate":"2021-11-08"},{"lineNumber":155,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            model.redoAddressBook();","lastModifiedDate":"2021-11-08"},{"lineNumber":156,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":157,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":158,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        ExportCommand exportCommand \u003d new ExportCommand(Set.of(new Tag(\"friends\")));","lastModifiedDate":"2021-11-08"},{"lineNumber":159,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        exportCommand.execute(model);","lastModifiedDate":"2021-11-08"},{"lineNumber":160,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        model.cancelPendingExport();","lastModifiedDate":"2021-11-08"},{"lineNumber":161,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":162,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        int undoAgainCount \u003d 0;","lastModifiedDate":"2021-11-08"},{"lineNumber":163,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":164,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        while (model.canUndoAddressBook()) {","lastModifiedDate":"2021-11-08"},{"lineNumber":165,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            model.undoAddressBook();","lastModifiedDate":"2021-11-08"},{"lineNumber":166,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            undoAgainCount++;","lastModifiedDate":"2021-11-08"},{"lineNumber":167,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":168,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":169,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(undoAgainCount, undoCount);","lastModifiedDate":"2021-11-08"},{"lineNumber":170,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":171,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":172,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private VersionedAddressBook makeVersionAddressBook(List\u003cReadOnlyAddressBook\u003e addressBooks) {","lastModifiedDate":"2021-11-08"},{"lineNumber":173,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertFalse(addressBooks.isEmpty());","lastModifiedDate":"2021-11-08"},{"lineNumber":174,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        VersionedAddressBook book \u003d null;","lastModifiedDate":"2021-11-08"},{"lineNumber":175,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        try {","lastModifiedDate":"2021-11-08"},{"lineNumber":176,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            book \u003d makeVersionedAddressBook(addressBooks);","lastModifiedDate":"2021-11-08"},{"lineNumber":177,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        } catch (VersionedAddressBook.EmptyAddressBookStateListException ignored) {","lastModifiedDate":"2021-11-08"},{"lineNumber":178,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError();","lastModifiedDate":"2021-11-08"},{"lineNumber":179,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":180,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return book;","lastModifiedDate":"2021-11-08"},{"lineNumber":181,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":182,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":183,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private Model makeModel(VersionedAddressBook versionedAddressBook) {","lastModifiedDate":"2021-11-08"},{"lineNumber":184,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return new ModelManager(versionedAddressBook, new UserPrefs());","lastModifiedDate":"2021-11-08"},{"lineNumber":185,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":186,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":187,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"vigneshsankariyer1234567890":187}},{"path":"src/test/java/teletubbies/logic/commands/ProfileCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"lhw-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.UserProfile;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.UserRoleSetException;","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ModelManager;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.model.UserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.TypicalPersons;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"class ProfileCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"    private Model model \u003d new ModelManager(TypicalPersons.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"    public void execute_validTelemarketerRole_success() throws UserRoleSetException {","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"        UserProfile userProfile \u003d new UserProfile(\"Telemarketer Name\", UserProfile.Role.TELEMARKETER);","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"        ProfileCommand profileCommand \u003d new ProfileCommand(userProfile);","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"        String expectedMessage \u003d String.format(ProfileCommand.MESSAGE_PROFILE_SUCCESS, userProfile);","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"        Model expectedModel \u003d new ModelManager(TypicalPersons.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"        userPrefs.setUserProfile(userProfile);","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"        expectedModel.setUserPrefs(userPrefs);","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"        CommandTestUtil.assertCommandSuccess(profileCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"    public void execute_validSupervisorRole_success() throws UserRoleSetException {","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"lhw-1"},"content":"        UserProfile userProfile \u003d new UserProfile(\"Supervisor Name\", UserProfile.Role.SUPERVISOR);","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"lhw-1"},"content":"        ProfileCommand profileCommand \u003d new ProfileCommand(userProfile);","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"        String expectedMessage \u003d String.format(ProfileCommand.MESSAGE_PROFILE_SUCCESS, userProfile);","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"        Model expectedModel \u003d new ModelManager(TypicalPersons.getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"lhw-1"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"lhw-1"},"content":"        userPrefs.setUserProfile(userProfile);","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"lhw-1"},"content":"        expectedModel.setUserPrefs(userPrefs);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"gok99"},"content":"        CommandTestUtil.assertCommandSuccess(profileCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"lhw-1"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"lhw-1"},"content":"    public void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"lhw-1"},"content":"        final UserProfile userProfile \u003d new UserProfile(\"Name\", UserProfile.Role.TELEMARKETER);","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"lhw-1"},"content":"        final ProfileCommand standardCommand \u003d new ProfileCommand(userProfile);","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"lhw-1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"lhw-1"},"content":"        ProfileCommand commandWithSameValues \u003d new ProfileCommand(userProfile);","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"lhw-1"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"lhw-1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"lhw-1"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"lhw-1"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"lhw-1"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"lhw-1"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"lhw-1"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"lhw-1"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"lhw-1"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"lhw-1"},"content":"                new ProfileCommand(new UserProfile(\"DiffName\", UserProfile.Role.TELEMARKETER))));","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"lhw-1"},"content":"        // different role -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"lhw-1"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"lhw-1"},"content":"                new ProfileCommand(new UserProfile(\"Name\", UserProfile.Role.SUPERVISOR))));","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"gok99":14,"lhw-1":61}},{"path":"src/test/java/teletubbies/logic/commands/RedoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static teletubbies.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static teletubbies.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static teletubbies.logic.commands.UndoCommandTest.deleteFirstPerson;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static teletubbies.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.exceptions.EarliestVersionException;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.exceptions.LatestVersionException;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.model.ModelManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.model.UserPrefs;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class RedoCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final int numberOfDeletes \u003d 5;","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void setUp() throws EarliestVersionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (int i \u003d 0; i \u003c numberOfDeletes; i++) {","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            deleteFirstPerson(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            deleteFirstPerson(expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (int i \u003d 0; i \u003c numberOfDeletes; i++) {","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            model.undoAddressBook();","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            expectedModel.undoAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void execute() throws LatestVersionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (int i \u003d 0; i \u003c numberOfDeletes; i++) {","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            expectedModel.redoAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            assertCommandSuccess(new RedoCommand(), model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertCommandFailure(new RedoCommand(), model, RedoCommand.MESSAGE_FAILURE);","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"vigneshsankariyer1234567890":45}},{"path":"src/test/java/teletubbies/logic/commands/RemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"skythefire"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"skythefire"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"skythefire"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"skythefire"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"skythefire"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"skythefire"},"content":"import static teletubbies.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"skythefire"},"content":"import static teletubbies.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"skythefire"},"content":"import static teletubbies.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"skythefire"},"content":"import static teletubbies.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"skythefire"},"content":"import static teletubbies.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"skythefire"},"content":"import static teletubbies.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"skythefire"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"skythefire"},"content":"import teletubbies.commons.core.Messages;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"skythefire"},"content":"import teletubbies.commons.core.index.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"skythefire"},"content":"import teletubbies.model.AddressBook;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"skythefire"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"skythefire"},"content":"import teletubbies.model.ModelManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"skythefire"},"content":"import teletubbies.model.UserPrefs;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"skythefire"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"skythefire"},"content":"import teletubbies.model.person.Remark;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"skythefire"},"content":"import teletubbies.testutil.PersonBuilder;","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"skythefire"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"skythefire"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RemarkCommand.","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"skythefire"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"skythefire"},"content":"public class RemarkCommandTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"skythefire"},"content":"    // @@author: j-lum","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"skythefire"},"content":"    // Reused from","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"skythefire"},"content":"    // https://github.com/se-edu/addressbook-level3/compare/tutorial-add-remark","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"skythefire"},"content":"    private static final String REMARK_STUB \u003d \"Some remark\";","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"skythefire"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"skythefire"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"skythefire"},"content":"    public void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"skythefire"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"skythefire"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(REMARK_STUB).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"skythefire"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"skythefire"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"skythefire"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"skythefire"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"gok99"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"skythefire"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"skythefire"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"skythefire"},"content":"    public void execute_deleteRemarkUnfilteredList_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"skythefire"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"skythefire"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(\"\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"skythefire"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"skythefire"},"content":"                new Remark(editedPerson.getRemark().toString()));","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"skythefire"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"skythefire"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"skythefire"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"gok99"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"skythefire"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"skythefire"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"skythefire"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"skythefire"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"skythefire"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"skythefire"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"skythefire"},"content":"                .withRemark(REMARK_STUB).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"skythefire"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"skythefire"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"skythefire"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"skythefire"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"gok99"},"content":"        expectedModel.commitAddressBook();","lastModifiedDate":"2021-11-06"},{"lineNumber":86,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"skythefire"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"skythefire"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"skythefire"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"skythefire"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"skythefire"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"skythefire"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"skythefire"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"skythefire"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"skythefire"},"content":"     * but smaller than size of address book","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"skythefire"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"skythefire"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"skythefire"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"skythefire"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"skythefire"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"skythefire"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"skythefire"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"skythefire"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"skythefire"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"skythefire"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"skythefire"},"content":"    public void equals() {","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"skythefire"},"content":"        final RemarkCommand standardCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"skythefire"},"content":"                new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"skythefire"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"skythefire"},"content":"        RemarkCommand commandWithSameValues \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"skythefire"},"content":"                new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"skythefire"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"skythefire"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"skythefire"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"skythefire"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"skythefire"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"skythefire"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"skythefire"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"skythefire"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"skythefire"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"skythefire"},"content":"                new Remark(VALID_REMARK_AMY))));","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"skythefire"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"skythefire"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"skythefire"},"content":"                new Remark(VALID_REMARK_BOB))));","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"skythefire"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"skythefire":137,"gok99":3}},{"path":"src/test/java/teletubbies/logic/commands/RemoveTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Range;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.UserProfile;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.UserRoleSetException;","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ModelManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"import teletubbies.model.UserPrefs;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.Tag;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.TagUtils;","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.TypicalPersons;","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"class RemoveTagCommandTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"    private UserProfile supervisorProfile \u003d new UserProfile(\"John\", UserProfile.Role.SUPERVISOR);","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"    private UserProfile telemarketerProfile \u003d new UserProfile(\"John\", UserProfile.Role.TELEMARKETER);","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"    void execute_supervisor_success() throws CommandException, UserRoleSetException {","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"        userPrefs.setUserProfile(supervisorProfile);","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"        Model model \u003d new ModelManager(TypicalPersons.getTypicalAddressBook(), userPrefs);","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"        RemoveTagCommand command \u003d new RemoveTagCommand(","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"                new Range(new HashSet\u003c\u003e(List.of(1, 2, 3, 4, 5, 6, 7))),","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"                \"owesMoney\"","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"        );","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"        command.execute(model);","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"        Set\u003cTag\u003e newTags \u003d new HashSet\u003c\u003e(BENSON.getTags());","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"        newTags.remove(new Tag(\"owesMoney\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"gok99"},"content":"        Person correctBenson \u003d new Person(BENSON.getUuid(), BENSON.getName(), BENSON.getPhone(), BENSON.getEmail(),","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"skythefire"},"content":"                BENSON.getAddress(), BENSON.getCompletionStatus(), BENSON.getRemark(), newTags);","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"gok99"},"content":"        Person newBenson \u003d model.getFilteredPersonList().get(1);","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"gok99"},"content":"        assertEquals(newBenson, correctBenson);","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"gok99"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"gok99"},"content":"    void execute_telemarketer_failure() throws CommandException, UserRoleSetException {","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"gok99"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"gok99"},"content":"        userPrefs.setUserProfile(telemarketerProfile);","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"gok99"},"content":"        Model model \u003d new ModelManager(TypicalPersons.getTypicalAddressBook(), userPrefs);","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"gok99"},"content":"        Person editedPerson \u003d new Person(ALICE.getUuid(), ALICE.getName(), ALICE.getPhone(),","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"gok99"},"content":"                ALICE.getEmail(), ALICE.getAddress(), ALICE.getCompletionStatus(), ALICE.getRemark(),","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"gok99"},"content":"                new HashSet\u003c\u003e(List.of(new Tag(\"friends\", \"\", true))));","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"gok99"},"content":"        model.setPerson(ALICE, editedPerson);","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"gok99"},"content":"        RemoveTagCommand command \u003d new RemoveTagCommand(","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"gok99"},"content":"                new Range(new HashSet\u003c\u003e(List.of(1))),","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"gok99"},"content":"                \"friends\"","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"gok99"},"content":"        );","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"gok99"},"content":"        assertCommandFailure(command, model, TagUtils.noPermissionsMessage(\"friends\"));","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"skythefire":1,"gok99":71}},{"path":"src/test/java/teletubbies/logic/commands/TagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Range;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"tanqiya"},"content":"import teletubbies.commons.exceptions.UserRoleSetException;","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ModelManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"import teletubbies.model.UserPrefs;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.Tag;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.TypicalPersons;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"class TagCommandTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"    private UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"tanqiya"},"content":"    void execute_supervisor_success() throws CommandException, UserRoleSetException {","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"        Model model \u003d new ModelManager(TypicalPersons.getTypicalAddressBook(), userPrefs);","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"        TagCommand command \u003d new TagCommand(","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"                new Range(new HashSet\u003c\u003e(List.of(2))),","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"                \"important\",","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"                \"\",","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"                false","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"        );","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"        command.execute(model);","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"        Set\u003cTag\u003e newTags \u003d new HashSet\u003c\u003e(BENSON.getTags());","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"        newTags.add(new Tag(\"important\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"        Person correctBenson \u003d new Person(BENSON.getUuid(), BENSON.getName(), BENSON.getPhone(), BENSON.getEmail(),","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"skythefire"},"content":"                BENSON.getAddress(), BENSON.getCompletionStatus(), BENSON.getRemark(), newTags);","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"        Person newBenson \u003d model.getFilteredPersonList().get(1);","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"gok99"},"content":"        assertEquals(newBenson, correctBenson);","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"skythefire":1,"tanqiya":2,"gok99":46}},{"path":"src/test/java/teletubbies/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package teletubbies.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static teletubbies.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static teletubbies.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static teletubbies.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.exceptions.EarliestVersionException;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.model.ModelManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.model.UserPrefs;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class UndoCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final int numberOfDeletes \u003d 5;","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (int i \u003d 0; i \u003c numberOfDeletes; i++) {","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            deleteFirstPerson(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            deleteFirstPerson(expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void execute() throws EarliestVersionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (int i \u003d 0; i \u003c numberOfDeletes; i++) {","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            expectedModel.undoAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            assertCommandSuccess(new UndoCommand(), model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertCommandFailure(new UndoCommand(), model, UndoCommand.MESSAGE_FAILURE);","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static void deleteFirstPerson(Model model) {","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(0);","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        model.deletePerson(firstPerson);","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        model.commitAddressBook();","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"vigneshsankariyer1234567890":46}},{"path":"src/test/java/teletubbies/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static teletubbies.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"tanqiya"},"content":"import static teletubbies.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"tanqiya"},"content":"import static teletubbies.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"tanqiya"},"content":"import static teletubbies.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"tanqiya"},"content":"import static teletubbies.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"tanqiya"},"content":"import static teletubbies.logic.commands.CommandTestUtil.UUID_DESC_AMY;","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"tanqiya"},"content":"import static teletubbies.logic.commands.CommandTestUtil.UUID_DESC_BOB;","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"tanqiya"},"content":"import static teletubbies.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"tanqiya"},"content":"import static teletubbies.testutil.TypicalPersons.NO_ADDRESS_AMY;","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"tanqiya"},"content":"import static teletubbies.testutil.TypicalPersons.NO_EMAIL_AMY;","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"tanqiya"},"content":"import static teletubbies.testutil.TypicalPersons.NO_TAGS_AMY;","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"tanqiya"},"content":"import static teletubbies.testutil.TypicalPersons.NO_TAGS_BOB;","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.AddCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Address;","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Email;","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Name;","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"tanqiya"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Phone;","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"tanqiya"},"content":"import teletubbies.testutil.PersonBuilder;","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"tanqiya"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"tanqiya"},"content":"        Person expectedPerson \u003d new PersonBuilder(NO_TAGS_BOB).build();","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"gok99"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"tanqiya"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"tanqiya"},"content":"                + ADDRESS_DESC_BOB + UUID_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"gok99"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"gok99"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"tanqiya"},"content":"                + ADDRESS_DESC_BOB + UUID_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"gok99"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"gok99"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"tanqiya"},"content":"                + ADDRESS_DESC_BOB + UUID_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"gok99"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"gok99"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"tanqiya"},"content":"                + ADDRESS_DESC_BOB + UUID_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"gok99"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"gok99"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"tanqiya"},"content":"                + ADDRESS_DESC_BOB + UUID_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"tanqiya"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"gok99"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"gok99"},"content":"        // zero tags","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"tanqiya"},"content":"        Person expectedPerson \u003d new PersonBuilder(NO_TAGS_AMY).build();","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"tanqiya"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"tanqiya"},"content":"                + UUID_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2021-11-08"},{"lineNumber":74,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"gok99"},"content":"        // missing address","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"tanqiya"},"content":"        Person expectedPerson1 \u003d new PersonBuilder(NO_ADDRESS_AMY).build();","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"tanqiya"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + UUID_DESC_AMY,","lastModifiedDate":"2021-11-08"},{"lineNumber":78,"author":{"gitId":"gok99"},"content":"                new AddCommand(expectedPerson1));","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"gok99"},"content":"        // missing email","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"tanqiya"},"content":"        Person expectedPerson2 \u003d new PersonBuilder(NO_EMAIL_AMY).build();","lastModifiedDate":"2021-11-08"},{"lineNumber":82,"author":{"gitId":"tanqiya"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + ADDRESS_DESC_AMY + UUID_DESC_AMY,","lastModifiedDate":"2021-11-08"},{"lineNumber":83,"author":{"gitId":"gok99"},"content":"                new AddCommand(expectedPerson2));","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":85,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"gok99"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"gok99"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"gok99"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"gok99"},"content":"        // missing name prefix","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"gok99"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"gok99"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"gok99"},"content":"        // missing phone prefix","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"gok99"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"gok99"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"gok99"},"content":"        // missing name","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"gok99"},"content":"        assertParseFailure(parser, PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"gok99"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"gok99"},"content":"        // missing phone","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"gok99"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"gok99"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"gok99"},"content":"        // all prefixes missing","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"gok99"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"gok99"},"content":"                expectedMessage);","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"gok99"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"gok99"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"gok99"},"content":"        // invalid name","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"skythefire"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-10-31"},{"lineNumber":115,"author":{"gitId":"skythefire"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-31"},{"lineNumber":116,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"gok99"},"content":"        // invalid phone","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"skythefire"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-10-31"},{"lineNumber":119,"author":{"gitId":"skythefire"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-31"},{"lineNumber":120,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"gok99"},"content":"        // invalid email","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"skythefire"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-10-31"},{"lineNumber":123,"author":{"gitId":"skythefire"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-31"},{"lineNumber":124,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"gok99"},"content":"        // invalid address","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"skythefire"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2021-10-31"},{"lineNumber":127,"author":{"gitId":"skythefire"},"content":"                Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-31"},{"lineNumber":128,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":129,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":130,"author":{"gitId":"gok99"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2021-10-17"},{"lineNumber":131,"author":{"gitId":"gok99"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"gok99"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"gok99"},"content":"        // non-empty preamble","lastModifiedDate":"2021-10-17"},{"lineNumber":135,"author":{"gitId":"gok99"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"skythefire"},"content":"                + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-10-31"},{"lineNumber":137,"author":{"gitId":"gok99"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"skythefire":9,"tanqiya":31,"gok99":99}},{"path":"src/test/java/teletubbies/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).getValues().size());","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"gok99"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).getValues().get(i));","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"gok99":3,"-":147}},{"path":"src/test/java/teletubbies/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.Command;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"gok99":3,"-":35}},{"path":"src/test/java/teletubbies/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static teletubbies.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Phone;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"skythefire"},"content":"    public void parse_validPhoneArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"        assertParseSuccess(parser, \" -p87654321\", new DeleteCommand(new Phone(\"87654321\")));","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"skythefire"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"skythefire"},"content":"    public void parse_validIndexArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"        assertParseSuccess(parser, \" -i1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"skythefire":5,"gok99":9,"-":24}},{"path":"src/test/java/teletubbies/logic/parser/DoneCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.DoneCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.TypicalIndexes;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"public class DoneCommandParserTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"    private DoneCommandParser parser \u003d new DoneCommandParser();","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"        String userInput \u003d String.valueOf(TypicalIndexes.INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"        DoneCommand expectedCommand \u003d new DoneCommand(TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"gok99":17}},{"path":"src/test/java/teletubbies/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static teletubbies.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.EditCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Address;","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Email;","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Name;","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Phone;","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"skythefire"},"content":"        assertParseFailure(parser, \"1 -i string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"skythefire"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"skythefire"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY;","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"skythefire"},"content":"                .build();","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2021-10-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2021-10-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-10-17"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-17"},{"lineNumber":150,"author":{"gitId":"skythefire"},"content":"                + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-31"},{"lineNumber":151,"author":{"gitId":"skythefire"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-17"},{"lineNumber":154,"author":{"gitId":"skythefire"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2021-10-17"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2021-10-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2021-10-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-17"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-17"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"skythefire":7,"gok99":34,"-":136}},{"path":"src/test/java/teletubbies/logic/parser/ExportCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"class ExportCommandParserTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"    private final ExportCommandParser parser \u003d new ExportCommandParser();","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"    void parse_emptyArg_doesNotThrowException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"        assertDoesNotThrow(() -\u003e parser.parse(\"\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"    void parse_validArgs_returnsExportCommand() throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"        Assertions.assertEquals(parser.parse(\" -t 1  -t 2 -t 3\"), parser.parse(\" -t 1 -t 2   -t3\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"    void parse_jumbledArg_equal() throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"        Assertions.assertEquals(parser.parse(\" -t 1 -t 2 -t 3\"), parser.parse(\" -t 3 -t 2 -t 1\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"    void parse_differentArgs_notEqual() throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"        Assertions.assertNotEquals(parser.parse(\" -t 1 -t 1 -t 1\"), parser.parse(\"-t 13\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"gok99":34}},{"path":"src/test/java/teletubbies/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.Command;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.FilterCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.PersonHasTagsPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.Tag;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"class FilterCommandParserTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"    void parse_singleTag_success() throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"                new Tag(\"friends\")","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"        ));","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"        PersonHasTagsPredicate predicate \u003d new PersonHasTagsPredicate(tags);","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"        FilterCommand expectedCommand \u003d new FilterCommand(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"        String userInput \u003d \" -t friends\";","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"        assertEquals(new FilterCommandParser().parse(userInput), expectedCommand);","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"    void parse_multipleTag_success() throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e(List.of(","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"                new Tag(\"friends\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"                new Tag(\"owesMoney\")","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"        ));","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"        PersonHasTagsPredicate predicate \u003d new PersonHasTagsPredicate(tags);","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"        FilterCommand expectedCommand \u003d new FilterCommand(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"        String userInput \u003d \" -t friends -t owesMoney\";","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"        assertEquals(new FilterCommandParser().parse(userInput), expectedCommand);","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"gok99"},"content":"    void parse_reservedTagName_success() {","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"gok99"},"content":"        FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"gok99"},"content":"        String userInput \u003d \" -t CompletionStatus\";","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"gok99"},"content":"        Command correctCommand \u003d new FilterCommand(","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"gok99"},"content":"                new PersonHasTagsPredicate(Set.of(new Tag(","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"gok99"},"content":"                    \"CompletionStatus\", \"\", Tag.getRolesForEditAccess(false),","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"gok99"},"content":"                        true","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"gok99"},"content":"                )))","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"gok99"},"content":"        );","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"gok99"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, correctCommand);","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"gok99":59}},{"path":"src/test/java/teletubbies/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static teletubbies.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.FindCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"gok99":6,"-":28}},{"path":"src/test/java/teletubbies/logic/parser/InputParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"tanqiya"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import static teletubbies.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import static teletubbies.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"skythefire"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.UserProfile;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.AddCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"tanqiya"},"content":"import teletubbies.logic.commands.ConfirmExportCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.DoneCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.EditCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.ExportCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.FindCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.logic.commands.HistoryCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.ImportCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.ListCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"tanqiya"},"content":"import teletubbies.logic.commands.MergeCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.ProfileCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"skythefire"},"content":"import teletubbies.logic.commands.RemarkCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Phone;","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"skythefire"},"content":"import teletubbies.model.person.Remark;","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.PersonBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.PersonUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"gok99"},"content":"public class InputParserTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"gok99"},"content":"    private final InputParser parser \u003d new InputParser();","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"tanqiya"},"content":"        assertNotEquals(new AddCommand(person), command); //No longer equal because of UUID generation","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"skythefire"},"content":"    public void parseCommand_deleteWithPhone() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"gok99"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + \"-p 87654321\");","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"skythefire"},"content":"        assertEquals(new DeleteCommand(new Phone(\"87654321\")), command);","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"skythefire"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"skythefire"},"content":"    public void parseCommand_deleteWithIndex() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"skythefire"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"gok99"},"content":"                DeleteCommand.COMMAND_WORD + \" -i\" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"skythefire"},"content":"    // @@author: j-lum","lastModifiedDate":"2021-11-08"},{"lineNumber":100,"author":{"gitId":"skythefire"},"content":"    // Reused from","lastModifiedDate":"2021-11-08"},{"lineNumber":101,"author":{"gitId":"skythefire"},"content":"    // https://github.com/se-edu/addressbook-level3/compare/tutorial-add-remark","lastModifiedDate":"2021-11-08"},{"lineNumber":102,"author":{"gitId":"skythefire"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"skythefire"},"content":"    public void parseCommand_remark() throws Exception {","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"skythefire"},"content":"        final Remark remark \u003d new Remark(\"Some remark.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"skythefire"},"content":"        RemarkCommand command \u003d (RemarkCommand) parser.parseCommand(RemarkCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"skythefire"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_REMARK + remark.value);","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"skythefire"},"content":"        assertEquals(new RemarkCommand(INDEX_FIRST_PERSON, remark), command);","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"tanqiya"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"tanqiya"},"content":"    public void parseCommand_import() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"tanqiya"},"content":"        assertTrue(parser.parseCommand(ImportCommand.COMMAND_WORD) instanceof ImportCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"tanqiya"},"content":"        assertTrue(parser.parseCommand(ImportCommand.COMMAND_WORD + \" 3\") instanceof ImportCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"gok99"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"gok99"},"content":"    public void parseCommand_export() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"gok99"},"content":"        assertTrue(parser.parseCommand(ExportCommand.COMMAND_WORD) instanceof ExportCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"gok99"},"content":"        assertTrue(parser.parseCommand(ExportCommand.COMMAND_WORD + \" \\t hi\") instanceof ExportCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"gok99"},"content":"        assertTrue(parser.parseCommand(ExportCommand.COMMAND_WORD + \" ignore\") instanceof ExportCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"tanqiya"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"tanqiya"},"content":"    public void parseCommand_confirmExport() throws Exception {","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"tanqiya"},"content":"        assertTrue(parser.parseCommand(ConfirmExportCommand.COMMAND_WORD) instanceof ConfirmExportCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"tanqiya"},"content":"        assertTrue(parser.parseCommand(ConfirmExportCommand.COMMAND_WORD + \" \\t hi\") instanceof ConfirmExportCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"tanqiya"},"content":"        assertTrue(parser.parseCommand(ConfirmExportCommand.COMMAND_WORD + \" ignore\") instanceof ConfirmExportCommand);","lastModifiedDate":"2021-10-24"},{"lineNumber":140,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":142,"author":{"gitId":"tanqiya"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"tanqiya"},"content":"    public void parseCommand_merge() throws Exception {","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"tanqiya"},"content":"        assertTrue(parser.parseCommand(MergeCommand.COMMAND_WORD) instanceof MergeCommand);","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"tanqiya"},"content":"        assertTrue(parser.parseCommand(MergeCommand.COMMAND_WORD + \" 3\") instanceof MergeCommand);","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void parseCommand_done() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        DoneCommand command \u003d (DoneCommand) parser.parseCommand(DoneCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(new DoneCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2021-10-07"},{"lineNumber":153,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":155,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":156,"author":{"gitId":"lhw-1"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"lhw-1"},"content":"    public void parseCommand_profile() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"lhw-1"},"content":"        ProfileCommand command \u003d (ProfileCommand) parser.parseCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"lhw-1"},"content":"                ProfileCommand.COMMAND_WORD + \" -n Name -role Telemarketer\");","lastModifiedDate":"2021-10-30"},{"lineNumber":160,"author":{"gitId":"lhw-1"},"content":"        assertEquals(new ProfileCommand(new UserProfile(\"Name\", UserProfile.Role.TELEMARKETER)), command);","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":164,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void parseCommand_history() throws Exception {","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        HistoryCommand command \u003d (HistoryCommand) parser.parseCommand(HistoryCommand.COMMAND_WORD);","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(new HistoryCommand(), command);","lastModifiedDate":"2021-10-23"},{"lineNumber":167,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":168,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"skythefire":19,"vigneshsankariyer1234567890":14,"tanqiya":24,"gok99":37,"-":78,"lhw-1":7}},{"path":"src/test/java/teletubbies/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Address;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Email;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Name;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Phone;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.Tag;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"gok99":10,"-":186}},{"path":"src/test/java/teletubbies/logic/parser/ProfileCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"lhw-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Messages;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.UserProfile;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.ProfileCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"lhw-1"},"content":"class ProfileCommandParserTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"lhw-1"},"content":"    private ProfileCommandParser parser \u003d new ProfileCommandParser();","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"lhw-1"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"lhw-1"},"content":"    public void parse_validTelemarketerRole_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"lhw-1"},"content":"        String userInput \u003d \" -n Telemarketer Name -role Telemarketer\";","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"lhw-1"},"content":"        UserProfile userProfile \u003d new UserProfile(\"Telemarketer Name\", UserProfile.Role.TELEMARKETER);","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"lhw-1"},"content":"        ProfileCommand expectedCommand \u003d new ProfileCommand(userProfile);","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"lhw-1"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"lhw-1"},"content":"    public void parse_validSupervisorRole_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"lhw-1"},"content":"        String userInput \u003d \" -n Supervisor Name -role Supervisor\";","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"lhw-1"},"content":"        UserProfile userProfile \u003d new UserProfile(\"Supervisor Name\", UserProfile.Role.SUPERVISOR);","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"lhw-1"},"content":"        ProfileCommand expectedCommand \u003d new ProfileCommand(userProfile);","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"lhw-1"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"lhw-1"},"content":"    public void parse_invalidRole_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"lhw-1"},"content":"        String userInput \u003d \" -n Name -role Invalid\";","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, userInput, ProfileCommand.MESSAGE_INVALID_ROLE);","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"lhw-1"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"lhw-1"},"content":"    public void parse_noName_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"        String userInput \u003d \" -n Name\";","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, userInput,","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ProfileCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"lhw-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"lhw-1"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"lhw-1"},"content":"    public void parse_noRole_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"lhw-1"},"content":"        String userInput \u003d \" -role Invalid\";","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, userInput,","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"gok99"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ProfileCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"lhw-1"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"lhw-1"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"gok99":12,"lhw-1":35}},{"path":"src/test/java/teletubbies/logic/parser/RemarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"skythefire"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"skythefire"},"content":"import static teletubbies.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"skythefire"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"skythefire"},"content":"import static teletubbies.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"skythefire"},"content":"import static teletubbies.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"skythefire"},"content":"import static teletubbies.logic.parser.RemarkCommandParser.MESSAGE_EXCEED_REMARK_CHARACTER_LIMIT;","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"skythefire"},"content":"import static teletubbies.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"skythefire"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"skythefire"},"content":"import teletubbies.commons.core.index.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"skythefire"},"content":"import teletubbies.logic.commands.RemarkCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"skythefire"},"content":"import teletubbies.model.person.Remark;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"skythefire"},"content":"public class RemarkCommandParserTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"skythefire"},"content":"    private RemarkCommandParser parser \u003d new RemarkCommandParser();","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"skythefire"},"content":"    private final String nonEmptyRemark \u003d \"Some remark.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"skythefire"},"content":"    private final String longRemark \u003d \"This remark is exactly 41 characters long\";","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"skythefire"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"skythefire"},"content":"    public void parse_invalidRemarkLength_failure() {","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"skythefire"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"skythefire"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK + longRemark;","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"skythefire"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EXCEED_REMARK_CHARACTER_LIMIT, RemarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"skythefire"},"content":"        assertParseFailure(parser, userInput, expectedMessage);","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"skythefire"},"content":"    // @@author: j-lum","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"skythefire"},"content":"    // Reused from","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"skythefire"},"content":"    // https://github.com/se-edu/addressbook-level3/compare/tutorial-add-remark","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"skythefire"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"skythefire"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"skythefire"},"content":"        // have remark","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"skythefire"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"skythefire"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK + nonEmptyRemark;","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"skythefire"},"content":"        RemarkCommand expectedCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(nonEmptyRemark));","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"skythefire"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"skythefire"},"content":"        // no remark","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"skythefire"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK;","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"skythefire"},"content":"        expectedCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(\"\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"skythefire"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"skythefire"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"skythefire"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"skythefire"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"skythefire"},"content":"        // no parameters","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"skythefire"},"content":"        assertParseFailure(parser, RemarkCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"skythefire"},"content":"        // no index","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"skythefire"},"content":"        assertParseFailure(parser, RemarkCommand.COMMAND_WORD + \" \" + nonEmptyRemark, expectedMessage);","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"skythefire"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"skythefire":58}},{"path":"src/test/java/teletubbies/logic/parser/RemoveTagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Messages;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Range;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.RemoveTagCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"class RemoveTagCommandParserTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"    private RemoveTagCommandParser parser \u003d new RemoveTagCommandParser();","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"    private Range testRange \u003d new Range(new HashSet\u003c\u003e(List.of(1, 2, 3)));","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"    private RemoveTagCommand expectedCommand \u003d new RemoveTagCommand(testRange, \"Test\");","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"    public void parse_validHyphenRange_success() throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"        assertEquals(new RemoveTagCommandParser().parse(\"1-3 -n Test\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"                expectedCommand);","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"    public void parse_validCommaRange_success() throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"        assertEquals(new RemoveTagCommandParser().parse(\"1,2,3 -n Test\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"                expectedCommand);","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"    public void parse_missingRange_failure() {","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"        String userInput \u003d \" -n Test\";","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, userInput,","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, RemoveTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"    public void parse_missingName_failure() {","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"        String userInput \u003d \" 5-10\";","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"gok99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, userInput,","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"gok99"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, RemoveTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"gok99":49}},{"path":"src/test/java/teletubbies/logic/parser/TagCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.logic.parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Messages;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.Range;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.TagCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"class TagCommandParserTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"    private TagCommandParser parser \u003d new TagCommandParser();","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"    private Range testRange \u003d new Range(new HashSet\u003c\u003e(List.of(1, 2, 3)));","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"    public void parse_validHyphenRange_success() throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"        TagCommand expectedCommand \u003d new TagCommand(testRange, \"Test\", \"\", false);","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"        assertEquals(new TagCommandParser().parse(\"1-3 -n Test\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"                expectedCommand);","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"    public void parse_validCommaRange_success() throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"        TagCommand expectedCommand \u003d new TagCommand(testRange, \"Test\", \"\", false);","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"        assertEquals(new TagCommandParser().parse(\"1,2,3 -n Test\"),","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"                expectedCommand);","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"    public void parse_missingRange_failure() {","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"        String userInput \u003d \" -n Test\";","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, userInput,","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, TagCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"gok99"},"content":"    public void parse_missingName_failure() {","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"gok99"},"content":"        String userInput \u003d \" 5-10\";","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"gok99"},"content":"        CommandParserTestUtil.assertParseFailure(parser, userInput,","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"gok99"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, TagCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"gok99"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"gok99"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"gok99":51}},{"path":"src/test/java/teletubbies/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.beans.InvalidationListener;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import javafx.beans.property.SimpleBooleanProperty;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.Assert;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.PersonBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.TypicalPersons;","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"        AddressBook newData \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"tanqiya"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e addressBook.hasName(null));","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"tanqiya"},"content":"        assertFalse(addressBook.hasName(ALICE));","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"tanqiya"},"content":"        assertTrue(addressBook.hasName(ALICE));","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"tanqiya"},"content":"        assertTrue(addressBook.hasName(editedAlice));","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void addListener_withInvalidationListener_listenerAdded() {","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        SimpleBooleanProperty checker \u003d new SimpleBooleanProperty();","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        checker.set(false);","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        InvalidationListener listener \u003d observable -\u003e checker.set(true);","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        addressBook.addListener(listener);","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertTrue(checker.getValue());","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void removeListener_withInvalidationListener_listenerRemoved() {","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        SimpleBooleanProperty checker \u003d new SimpleBooleanProperty();","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        checker.set(false);","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        InvalidationListener listener \u003d observable -\u003e checker.set(true);","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        addressBook.addListener(listener);","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        addressBook.removeListener(listener);","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertFalse(checker.getValue());","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":123,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public void addListener(InvalidationListener listener) {","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        public void removeListener(InvalidationListener listener) {","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"vigneshsankariyer1234567890":31,"tanqiya":4,"gok99":13,"-":87}},{"path":"src/test/java/teletubbies/model/CommandInputHistoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package teletubbies.model;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.exceptions.EarliestVersionException;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.exceptions.LatestVersionException;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class CommandInputHistoryTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final List\u003cString\u003e inputs \u003d List.of(\"a\", \"b\", \"delete\", \"hello\", \"bye\", \"add\", \"edit 4\", \"exit\");","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void addToCommandInputHistoryAndCompare_success() {","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        CommandInputHistory inputHistory \u003d new CommandInputHistory();","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (String s: inputs) {","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            inputHistory.addCommandInput(s);","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        List\u003cString\u003e historyList \u003d inputHistory.getChronologicallyAscendingHistory();","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(inputs, historyList);","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void addToCommandInputHistoryAndCompareDescending_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        CommandInputHistory inputHistory \u003d new CommandInputHistory();","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (String s: inputs) {","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            inputHistory.addCommandInput(s);","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        List\u003cString\u003e expected \u003d new ArrayList\u003c\u003e(List.copyOf(inputs));","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        Collections.reverse(expected);","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(expected, inputHistory.getChronologicallyDescendingHistory());","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void undoAndCheckFullList_success() throws EarliestVersionException {","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        CommandInputHistory inputHistory \u003d new CommandInputHistory();","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (String s: inputs) {","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            inputHistory.addCommandInput(s);","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        while (!inputHistory.isEarliest()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            inputHistory.previous();","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        List\u003cString\u003e fullHistoryList \u003d inputHistory.getChronologicallyAscendingHistory();","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(inputs, fullHistoryList);","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void undoAddAndCheck_success() throws EarliestVersionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        CommandInputHistory inputHistory \u003d new CommandInputHistory();","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        List\u003cString\u003e targetList \u003d new ArrayList\u003c\u003e(inputs);","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        targetList.add(inputs.get(0));","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (String s: inputs) {","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            inputHistory.addCommandInput(s);","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        while (!inputHistory.isEarliest()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            inputHistory.previous();","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        String first \u003d inputHistory.peek();","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        inputHistory.addCommandInput(first);","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        List\u003cString\u003e fullHistoryList \u003d inputHistory.getChronologicallyAscendingHistory();","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(targetList, fullHistoryList);","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void addNull_failure() {","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        CommandInputHistory inputHistory \u003d new CommandInputHistory();","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertThrows(NullPointerException.class, () -\u003e inputHistory.addCommandInput(null));","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void getEarliestVersionRevertBackAndAddTest_success() throws EarliestVersionException,","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            LatestVersionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        CommandInputHistory inputHistory \u003d new CommandInputHistory();","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        List\u003cString\u003e targetList \u003d new ArrayList\u003c\u003e(inputs);","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        int randomPosition \u003d (int) (Math.random() * inputs.size());","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        targetList.add(inputs.get(randomPosition));","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (String s: inputs) {","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            inputHistory.addCommandInput(s);","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        while (!inputHistory.isEarliest()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            inputHistory.previous();","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        while (count \u003c randomPosition) {","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            inputHistory.next();","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            count++;","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        String first \u003d inputHistory.peek();","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(inputs.get(randomPosition), first);","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        inputHistory.addCommandInput(first);","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        List\u003cString\u003e fullHistoryList \u003d inputHistory.getChronologicallyAscendingHistory();","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(targetList, fullHistoryList);","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void undoRedoAndCheckPeekTest_success() throws EarliestVersionException,","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            LatestVersionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        CommandInputHistory inputHistory \u003d new CommandInputHistory();","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (String s: inputs) {","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            inputHistory.addCommandInput(s);","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        while (!inputHistory.isEarliest()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            inputHistory.previous();","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        while (!inputHistory.isLatest()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            inputHistory.next();","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        String latest \u003d inputHistory.peek();","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(inputs.get(inputs.size() - 1), latest);","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void isEmpty_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        CommandInputHistory inputHistory \u003d new CommandInputHistory();","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertTrue(inputHistory.isEmpty());","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        inputHistory.addCommandInput(\"\");","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertFalse(inputHistory.isEmpty());","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void equalsTest_success() throws EarliestVersionException, LatestVersionException {","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        CommandInputHistory inputHistory \u003d new CommandInputHistory();","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (String s: inputs) {","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            inputHistory.addCommandInput(s);","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // same values -\u003e true","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(inputHistory, inputHistory);","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        CommandInputHistory copyOfInputHistory \u003d new CommandInputHistory();","lastModifiedDate":"2021-10-23"},{"lineNumber":146,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (String s: inputs) {","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            copyOfInputHistory.addCommandInput(s);","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // same values -\u003e true","lastModifiedDate":"2021-10-23"},{"lineNumber":151,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(inputHistory, copyOfInputHistory);","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // different pointer -\u003e false","lastModifiedDate":"2021-10-23"},{"lineNumber":154,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        copyOfInputHistory.previous();","lastModifiedDate":"2021-10-23"},{"lineNumber":155,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertNotEquals(inputHistory, copyOfInputHistory);","lastModifiedDate":"2021-10-23"},{"lineNumber":156,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // same values -\u003e true","lastModifiedDate":"2021-10-23"},{"lineNumber":158,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        copyOfInputHistory.next();","lastModifiedDate":"2021-10-23"},{"lineNumber":159,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(inputHistory, copyOfInputHistory);","lastModifiedDate":"2021-10-23"},{"lineNumber":160,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":161,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // same values -\u003e true","lastModifiedDate":"2021-10-23"},{"lineNumber":162,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        while (!copyOfInputHistory.isEarliest()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":163,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            copyOfInputHistory.previous();","lastModifiedDate":"2021-10-23"},{"lineNumber":164,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        copyOfInputHistory.addCommandInput(\"in\");","lastModifiedDate":"2021-10-23"},{"lineNumber":167,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        inputHistory.addCommandInput(\"in\");","lastModifiedDate":"2021-10-23"},{"lineNumber":168,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":169,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(inputHistory, copyOfInputHistory);","lastModifiedDate":"2021-10-23"},{"lineNumber":170,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":171,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":172,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"vigneshsankariyer1234567890":172}},{"path":"src/test/java/teletubbies/model/HistoryManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package teletubbies.model;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.List;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.exceptions.EarliestVersionException;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.exceptions.LatestVersionException;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.logic.commands.CommandTestUtil;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class HistoryManagerTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final String testString \u003d \"\";","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final List\u003cString\u003e historyOfStrings \u003d CommandTestUtil.VALID_COMMAND_HISTORY_INPUTS;","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void emptyConstructorTest_success() {","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        HistoryManager\u003cString\u003e historyManager \u003d new HistoryManager\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertTrue(historyManager.isEmpty());","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        List\u003cString\u003e historyList \u003d historyManager.historyList();","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(0, historyList.size());","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void listConstructorTest_success() {","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        HistoryManager\u003cString\u003e historyManager \u003d new HistoryManager\u003c\u003e(historyOfStrings);","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertFalse(historyManager.isEmpty());","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        List\u003cString\u003e historyList \u003d historyManager.historyList();","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(historyList, historyOfStrings);","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void isUndoableTest_success() {","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        HistoryManager\u003cString\u003e historyManager \u003d new HistoryManager\u003c\u003e(historyOfStrings);","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertTrue(historyManager.isUndoable());","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        HistoryManager\u003cString\u003e oneState \u003d new HistoryManager\u003c\u003e(List.of(\"hello\"));","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertFalse(oneState.isUndoable());","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void isRedoableTest_success() throws EarliestVersionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        HistoryManager\u003cString\u003e historyManager \u003d new HistoryManager\u003c\u003e(historyOfStrings);","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertFalse(historyManager.isRedoable());","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        String current \u003d historyManager.peek();","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        historyManager.undo();","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        String previous \u003d historyManager.peek();","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(\"hello\", current);","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(\"hell\", previous);","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertTrue(historyManager.isRedoable());","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void undoExceptionThrows_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        HistoryManager\u003cString\u003e historyManager \u003d new HistoryManager\u003c\u003e(List.of(testString));","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertThrows(EarliestVersionException.class, historyManager::undo);","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(historyManager.peek(), testString);","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void isUndoableCountTest() throws EarliestVersionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        int secondLastIndex \u003d historyOfStrings.size() - 2;","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        HistoryManager\u003cString\u003e historyManager \u003d new HistoryManager\u003c\u003e(historyOfStrings);","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        while (historyManager.isUndoable()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            String current \u003d historyOfStrings.get(secondLastIndex - count);","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            historyManager.undo();","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            String currentHM \u003d historyManager.peek();","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            assertEquals(current, currentHM);","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            count++;","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(historyOfStrings.size() - 1, count);","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void isRedoableCountTest() throws LatestVersionException, EarliestVersionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        int undoCount \u003d 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        int secondLastIndex \u003d historyOfStrings.size() - 2;","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        HistoryManager\u003cString\u003e historyManager \u003d new HistoryManager\u003c\u003e(historyOfStrings);","lastModifiedDate":"2021-10-22"},{"lineNumber":86,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        while (historyManager.isUndoable()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            String current \u003d historyOfStrings.get(secondLastIndex - undoCount);","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            historyManager.undo();","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            String currentHM \u003d historyManager.peek();","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            assertEquals(current, currentHM);","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            undoCount++;","lastModifiedDate":"2021-10-22"},{"lineNumber":92,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":93,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(historyOfStrings.size() - 1, undoCount);","lastModifiedDate":"2021-10-22"},{"lineNumber":94,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":95,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        int redoCount \u003d 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        while (historyManager.isRedoable()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":97,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            String current \u003d historyOfStrings.get(redoCount + 1);","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            historyManager.redo();","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            String currentHM \u003d historyManager.peek();","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            assertEquals(current, currentHM);","lastModifiedDate":"2021-10-22"},{"lineNumber":101,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            redoCount++;","lastModifiedDate":"2021-10-22"},{"lineNumber":102,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":103,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(historyOfStrings.size() - 1, redoCount);","lastModifiedDate":"2021-10-22"},{"lineNumber":104,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":107,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void clearedCopyTest() throws EarliestVersionException {","lastModifiedDate":"2021-10-22"},{"lineNumber":108,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        int timesToUndo \u003d historyOfStrings.size() / 2;","lastModifiedDate":"2021-10-22"},{"lineNumber":109,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        HistoryManager\u003cString\u003e historyManager \u003d new HistoryManager\u003c\u003e(historyOfStrings);","lastModifiedDate":"2021-10-22"},{"lineNumber":110,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        while (count \u003c timesToUndo) {","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            historyManager.undo();","lastModifiedDate":"2021-10-22"},{"lineNumber":113,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            count++;","lastModifiedDate":"2021-10-22"},{"lineNumber":114,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":115,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        HistoryManager\u003cString\u003e copied \u003d HistoryManager.clearedCopy(historyManager);","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        List\u003cString\u003e sublist \u003d new ArrayList\u003c\u003e(historyOfStrings.subList(0, historyOfStrings.size() - timesToUndo));","lastModifiedDate":"2021-10-22"},{"lineNumber":117,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(sublist, copied.historyList());","lastModifiedDate":"2021-10-22"},{"lineNumber":118,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":119,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":120,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":121,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void commitAndPushTest() throws EarliestVersionException {","lastModifiedDate":"2021-10-22"},{"lineNumber":122,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        HistoryManager\u003cString\u003e hm \u003d new HistoryManager\u003c\u003e(historyOfStrings);","lastModifiedDate":"2021-10-22"},{"lineNumber":123,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        int timesToUndo \u003d historyOfStrings.size() / 2;","lastModifiedDate":"2021-10-22"},{"lineNumber":124,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        List\u003cString\u003e targetSublist \u003d new ArrayList\u003c\u003e(historyOfStrings.subList(0,","lastModifiedDate":"2021-10-22"},{"lineNumber":125,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                historyOfStrings.size() - timesToUndo));","lastModifiedDate":"2021-10-22"},{"lineNumber":126,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        String itemToAdd \u003d \"helloo\";","lastModifiedDate":"2021-10-22"},{"lineNumber":127,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":128,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        int count \u003d timesToUndo;","lastModifiedDate":"2021-10-22"},{"lineNumber":129,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        while (count \u003e 0) {","lastModifiedDate":"2021-10-22"},{"lineNumber":130,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            hm.undo();","lastModifiedDate":"2021-10-22"},{"lineNumber":131,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            count--;","lastModifiedDate":"2021-10-22"},{"lineNumber":132,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":133,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(targetSublist, hm.historyList());","lastModifiedDate":"2021-10-22"},{"lineNumber":134,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertTrue(hm.isRedoable());","lastModifiedDate":"2021-10-22"},{"lineNumber":135,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":136,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        hm \u003d hm.commitAndPush(itemToAdd);","lastModifiedDate":"2021-10-22"},{"lineNumber":137,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        targetSublist.add(itemToAdd);","lastModifiedDate":"2021-10-22"},{"lineNumber":138,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":139,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(targetSublist, hm.historyList());","lastModifiedDate":"2021-10-22"},{"lineNumber":140,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertFalse(hm.isRedoable());","lastModifiedDate":"2021-10-22"},{"lineNumber":141,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":142,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":143,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":144,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void commitAndPushEmptyHistoryManager_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        HistoryManager\u003cString\u003e hm \u003d new HistoryManager\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":146,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        hm \u003d hm.commitAndPush(testString);","lastModifiedDate":"2021-10-22"},{"lineNumber":147,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(hm.peek(), testString);","lastModifiedDate":"2021-10-22"},{"lineNumber":148,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":149,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":150,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":151,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void resetFullHistoryTest_success() throws EarliestVersionException {","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        HistoryManager\u003cString\u003e historyManager \u003d new HistoryManager\u003c\u003e(historyOfStrings);","lastModifiedDate":"2021-10-22"},{"lineNumber":153,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        int timesToUndo \u003d (int) (Math.random() * historyOfStrings.size());","lastModifiedDate":"2021-10-22"},{"lineNumber":154,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        while (timesToUndo \u003e 0) {","lastModifiedDate":"2021-10-22"},{"lineNumber":155,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            historyManager.undo();","lastModifiedDate":"2021-10-22"},{"lineNumber":156,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            timesToUndo--;","lastModifiedDate":"2021-10-22"},{"lineNumber":157,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":158,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        historyManager.resetFullHistory();","lastModifiedDate":"2021-10-22"},{"lineNumber":159,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(historyOfStrings, historyManager.historyList());","lastModifiedDate":"2021-10-22"},{"lineNumber":160,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":162,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":163,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void equalsTest() throws EarliestVersionException, LatestVersionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        HistoryManager\u003cString\u003e historyManager \u003d new HistoryManager\u003c\u003e(historyOfStrings);","lastModifiedDate":"2021-10-23"},{"lineNumber":165,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":166,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // same HistoryManager -\u003e returns true","lastModifiedDate":"2021-10-23"},{"lineNumber":167,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(historyManager, historyManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":168,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":169,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // same values as original HistoryManager -\u003e returns true","lastModifiedDate":"2021-10-23"},{"lineNumber":170,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        HistoryManager\u003cString\u003e copyOfHistoryManager \u003d new HistoryManager\u003c\u003e(historyOfStrings);","lastModifiedDate":"2021-10-23"},{"lineNumber":171,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(historyManager, copyOfHistoryManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":172,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":173,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // different pointer than original HistoryManager -\u003e returns false","lastModifiedDate":"2021-10-23"},{"lineNumber":174,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        copyOfHistoryManager.undo();","lastModifiedDate":"2021-10-23"},{"lineNumber":175,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertNotEquals(historyManager, copyOfHistoryManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":176,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":177,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // same values as original -\u003e returns true","lastModifiedDate":"2021-10-23"},{"lineNumber":178,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        copyOfHistoryManager.redo();","lastModifiedDate":"2021-10-23"},{"lineNumber":179,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(historyManager, copyOfHistoryManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":180,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":181,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // same values as original -\u003e returns true","lastModifiedDate":"2021-10-23"},{"lineNumber":182,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        String last \u003d copyOfHistoryManager.peek();","lastModifiedDate":"2021-10-23"},{"lineNumber":183,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        copyOfHistoryManager.undo();","lastModifiedDate":"2021-10-23"},{"lineNumber":184,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        copyOfHistoryManager \u003d copyOfHistoryManager.commitAndPush(last);","lastModifiedDate":"2021-10-23"},{"lineNumber":185,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(historyManager, copyOfHistoryManager);","lastModifiedDate":"2021-10-23"},{"lineNumber":186,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":187,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"vigneshsankariyer1234567890":187}},{"path":"src/test/java/teletubbies/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import static teletubbies.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.GuiSettings;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.logic.commands.CommandTestUtil;","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.AddressBookBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.Assert;","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"tanqiya"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.hasName(null));","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"tanqiya"},"content":"        assertFalse(modelManager.hasName(ALICE));","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"tanqiya"},"content":"        assertTrue(modelManager.hasName(ALICE));","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void getFullHistoryList_addInput_success() {","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        List\u003cString\u003e target \u003d List.of(\"1\", \"2\", \"3\");","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (String s: target) {","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            modelManager.addCommandInput(s);","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(target, modelManager.getChronologicallyAscendingHistory());","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void getFullHistoryList_addValidInputs_success() {","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        List\u003cString\u003e target \u003d CommandTestUtil.VALID_COMMAND_HISTORY_INPUTS;","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (String s: target) {","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            modelManager.addCommandInput(s);","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(target, modelManager.getChronologicallyAscendingHistory());","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void addInvalidInputs_commandInputHistory_throws() {","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        List\u003cString\u003e target \u003d CommandTestUtil.INVALID_COMMAND_HISTORY_INPUTS;","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (String s: target) {","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            if (s \u003d\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                assertThrows(NullPointerException.class, () -\u003e modelManager.addCommandInput(s));","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            } else {","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                modelManager.addCommandInput(s);","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                count++;","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        List\u003cString\u003e newTarget \u003d target.stream().filter(Objects::nonNull).collect(Collectors.toList());","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(newTarget.size(), count);","lastModifiedDate":"2021-10-23"},{"lineNumber":146,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(newTarget, modelManager.getChronologicallyAscendingHistory());","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2021-10-17"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-17"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":184,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":185,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // different inputHistory -\u003e returns false","lastModifiedDate":"2021-10-23"},{"lineNumber":186,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2021-10-23"},{"lineNumber":187,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        modelManagerCopy.addCommandInput(\"hi\");","lastModifiedDate":"2021-10-23"},{"lineNumber":188,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertNotEquals(modelManager, modelManagerCopy);","lastModifiedDate":"2021-10-23"},{"lineNumber":189,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":190,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":191,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"vigneshsankariyer1234567890":59,"tanqiya":3,"gok99":12,"-":119}},{"path":"src/test/java/teletubbies/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.Assert;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"gok99":4,"-":17}},{"path":"src/test/java/teletubbies/model/VersionedAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"package teletubbies.model;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static teletubbies.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static teletubbies.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import static teletubbies.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.exceptions.EarliestVersionException;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.commons.exceptions.LatestVersionException;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.model.VersionedAddressBook.EmptyAddressBookStateListException;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"import teletubbies.testutil.AddressBookBuilder;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"public class VersionedAddressBookTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final ReadOnlyAddressBook addressBookWithAmy \u003d new AddressBookBuilder().withPerson(AMY).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final ReadOnlyAddressBook addressBookWithBob \u003d new AddressBookBuilder().withPerson(BOB).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final ReadOnlyAddressBook addressBookWithCarl \u003d new AddressBookBuilder().withPerson(CARL).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final ReadOnlyAddressBook emptyAddressBook \u003d new AddressBookBuilder().build();","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final ReadOnlyAddressBook addressBookWithCarlAndAmy \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            new AddressBookBuilder().withPerson(CARL).withPerson(AMY).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final ReadOnlyAddressBook addressBookWithAmyAndBob \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            new AddressBookBuilder().withPerson(AMY).withPerson(BOB).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final ReadOnlyAddressBook addressBookWithCarlAndBob \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            new AddressBookBuilder().withPerson(CARL).withPerson(BOB).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final ReadOnlyAddressBook addressBookWithAmyBobAndCarl \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            new AddressBookBuilder().withPerson(AMY).withPerson(BOB).withPerson(CARL).build();","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private final List\u003cReadOnlyAddressBook\u003e fullStateList \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            List.of(emptyAddressBook, addressBookWithAmy, addressBookWithBob, addressBookWithCarl,","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                    addressBookWithCarlAndAmy, addressBookWithAmyAndBob, addressBookWithCarlAndBob,","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                    addressBookWithAmyBobAndCarl, emptyAddressBook);","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void commit_singleAddressBook_noStatesRemoved()","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throws LatestVersionException, EarliestVersionException, EmptyAddressBookStateListException {","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        VersionedAddressBook vAddressBook \u003d makeVersionedAddressBook(emptyAddressBook);","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        vAddressBook.commitCurrentStateAndSave();","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertAddressBookListStatus(vAddressBook,","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                List.of(emptyAddressBook),","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                emptyAddressBook,","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                List.of());","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void commit_multipleAddressBooks_noStatesRemoved()","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throws EmptyAddressBookStateListException, LatestVersionException, EarliestVersionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        VersionedAddressBook vAddressBook \u003d makeVersionedAddressBook(","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        vAddressBook.commitCurrentStateAndSave();","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertAddressBookListStatus(vAddressBook,","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                List.of(emptyAddressBook, addressBookWithAmy, addressBookWithBob),","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                addressBookWithBob,","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                List.of());","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Tests {@code VersionedAddressBookTest#commit_multipleAddressBooks_randomNumberOfStatesRemoved} multiple times.","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void testMultipleCasesOfRandomStateRemoval()","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throws LatestVersionException, EmptyAddressBookStateListException, EarliestVersionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (int i \u003d 0; i \u003c 10; i++) {","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            commit_multipleAddressBooks_randomNumberOfStatesRemoved();","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Generates a random number of times to undo and checks that when the VersionedAddressBook is committed,","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * rest of the states are removed, and it contains the relevant states.","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private void commit_multipleAddressBooks_randomNumberOfStatesRemoved()","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throws EmptyAddressBookStateListException, EarliestVersionException, LatestVersionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        VersionedAddressBook versionedAddressBook \u003d makeVersionedAddressBook(fullStateList);","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        int random \u003d generateRandomNumber(0, fullStateList.size());","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        List\u003cReadOnlyAddressBook\u003e fullList \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                List.copyOf(fullStateList);","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        undoVersionedAddressBookNTimes(versionedAddressBook, random);","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        versionedAddressBook.commitCurrentStateAndSave();","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertAddressBookListStatus(versionedAddressBook,","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                fullList.subList(0, fullStateList.size() - random),","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                fullList.get(fullStateList.size() - 1 - random),","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                List.of());","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void canUndo_multiple_returnsTrue() throws EmptyAddressBookStateListException, EarliestVersionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        VersionedAddressBook versionedAddressBook \u003d makeVersionedAddressBook(","lastModifiedDate":"2021-11-06"},{"lineNumber":95,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (int i \u003d 0; i \u003c 2; i++) {","lastModifiedDate":"2021-11-08"},{"lineNumber":97,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            assertTrue(versionedAddressBook.canUndo());","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            versionedAddressBook.undo();","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertFalse(versionedAddressBook.canUndo());","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void canUndo_single_returnsFalse() throws EmptyAddressBookStateListException {","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        VersionedAddressBook versionedAddressBook \u003d makeVersionedAddressBook(emptyAddressBook);","lastModifiedDate":"2021-11-06"},{"lineNumber":106,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertFalse(versionedAddressBook.canUndo());","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void canRedo_single_returnsFalse() throws EmptyAddressBookStateListException {","lastModifiedDate":"2021-10-24"},{"lineNumber":111,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        VersionedAddressBook versionedAddressBook \u003d makeVersionedAddressBook(emptyAddressBook);","lastModifiedDate":"2021-11-06"},{"lineNumber":112,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertFalse(versionedAddressBook.canRedo());","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":116,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void canRedo_multipleMaximallyUndone_returnsFalse()","lastModifiedDate":"2021-11-08"},{"lineNumber":117,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throws EmptyAddressBookStateListException, EarliestVersionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":118,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        VersionedAddressBook versionedAddressBook \u003d makeVersionedAddressBook(","lastModifiedDate":"2021-11-06"},{"lineNumber":119,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        undoVersionedAddressBookNTimes(versionedAddressBook, 2);","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertTrue(versionedAddressBook.canRedo());","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void undo_multipleAtEndOfStateList_success()","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throws EmptyAddressBookStateListException, EarliestVersionException, LatestVersionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        VersionedAddressBook versionedAddressBook \u003d makeVersionedAddressBook(","lastModifiedDate":"2021-11-06"},{"lineNumber":128,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        versionedAddressBook.undo();","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertAddressBookListStatus(versionedAddressBook,","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                List.of(emptyAddressBook),","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                addressBookWithAmy,","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                List.of(addressBookWithBob));","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void undo_multipleNotAtEndOfStateList_success()","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throws EmptyAddressBookStateListException, EarliestVersionException, LatestVersionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // Adapted from","lastModifiedDate":"2021-11-08"},{"lineNumber":140,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // https://github.com/se-edu/addressbook-level4/blob/master/src/test/java/seedu/address/model","lastModifiedDate":"2021-11-08"},{"lineNumber":141,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // /VersionedAddressBookTest.java","lastModifiedDate":"2021-11-08"},{"lineNumber":142,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        VersionedAddressBook versionedAddressBook \u003d makeVersionedAddressBook(","lastModifiedDate":"2021-11-06"},{"lineNumber":143,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        undoVersionedAddressBookNTimes(versionedAddressBook, 1);","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        versionedAddressBook.undo();","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertAddressBookListStatus(versionedAddressBook,","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                List.of(),","lastModifiedDate":"2021-10-24"},{"lineNumber":149,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                emptyAddressBook,","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                List.of(addressBookWithAmy, addressBookWithBob));","lastModifiedDate":"2021-10-24"},{"lineNumber":151,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void undo_single_throwsEarliestVersionException()","lastModifiedDate":"2021-10-24"},{"lineNumber":155,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throws EmptyAddressBookStateListException {","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        //@@author: sijie123","lastModifiedDate":"2021-11-08"},{"lineNumber":157,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // Adapted from","lastModifiedDate":"2021-11-08"},{"lineNumber":158,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // https://github.com/se-edu/addressbook-level4/blob/master/src/test/java/seedu/address/model","lastModifiedDate":"2021-11-08"},{"lineNumber":159,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // /VersionedAddressBookTest.java","lastModifiedDate":"2021-11-08"},{"lineNumber":160,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        VersionedAddressBook versionedAddressBook \u003d makeVersionedAddressBook(emptyAddressBook);","lastModifiedDate":"2021-11-06"},{"lineNumber":161,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertThrows(EarliestVersionException.class, versionedAddressBook::undo);","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":165,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void undo_multiple_throwsEarliestVersionException()","lastModifiedDate":"2021-10-24"},{"lineNumber":166,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throws EmptyAddressBookStateListException, EarliestVersionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":167,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        //@@author: sijie123","lastModifiedDate":"2021-11-06"},{"lineNumber":168,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // Adapted from","lastModifiedDate":"2021-11-06"},{"lineNumber":169,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // https://github.com/se-edu/addressbook-level4/blob/master/src/test/java/seedu/address/model","lastModifiedDate":"2021-11-06"},{"lineNumber":170,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // /VersionedAddressBookTest.java","lastModifiedDate":"2021-11-06"},{"lineNumber":171,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        VersionedAddressBook versionedAddressBook \u003d makeVersionedAddressBook(","lastModifiedDate":"2021-11-06"},{"lineNumber":172,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        undoVersionedAddressBookNTimes(versionedAddressBook, 2);","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertThrows(EarliestVersionException.class, versionedAddressBook::undo);","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        //@@author: sijie123","lastModifiedDate":"2021-11-06"},{"lineNumber":176,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":178,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":179,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void redo_multipleAtEndOfStateList_success()","lastModifiedDate":"2021-10-24"},{"lineNumber":180,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throws EarliestVersionException, EmptyAddressBookStateListException, LatestVersionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        //@@author: sijie123","lastModifiedDate":"2021-11-06"},{"lineNumber":182,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // Adapted from","lastModifiedDate":"2021-11-06"},{"lineNumber":183,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // https://github.com/se-edu/addressbook-level4/blob/master/src/test/java/seedu/address/model","lastModifiedDate":"2021-11-06"},{"lineNumber":184,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // /VersionedAddressBookTest.java","lastModifiedDate":"2021-11-06"},{"lineNumber":185,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        VersionedAddressBook versionedAddressBook \u003d makeVersionedAddressBook(","lastModifiedDate":"2021-11-06"},{"lineNumber":186,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2021-10-24"},{"lineNumber":187,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        undoVersionedAddressBookNTimes(versionedAddressBook, 1);","lastModifiedDate":"2021-10-24"},{"lineNumber":188,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":189,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        versionedAddressBook.redo();","lastModifiedDate":"2021-10-24"},{"lineNumber":190,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertAddressBookListStatus(versionedAddressBook,","lastModifiedDate":"2021-10-24"},{"lineNumber":191,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                List.of(emptyAddressBook, addressBookWithAmy),","lastModifiedDate":"2021-10-24"},{"lineNumber":192,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                addressBookWithBob,","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                List.of());","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        //@@author: sijie123","lastModifiedDate":"2021-11-06"},{"lineNumber":195,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":197,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":198,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void redo_multipleAtStartOfStateList_returnsTrue()","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throws LatestVersionException, EarliestVersionException, EmptyAddressBookStateListException {","lastModifiedDate":"2021-10-24"},{"lineNumber":200,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        //@@author: sijie123","lastModifiedDate":"2021-11-06"},{"lineNumber":201,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // Adapted from","lastModifiedDate":"2021-11-06"},{"lineNumber":202,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // https://github.com/se-edu/addressbook-level4/blob/master/src/test/java/seedu/address/model","lastModifiedDate":"2021-11-06"},{"lineNumber":203,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // /VersionedAddressBookTest.java","lastModifiedDate":"2021-11-06"},{"lineNumber":204,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        VersionedAddressBook versionedAddressBook \u003d makeVersionedAddressBook(","lastModifiedDate":"2021-11-06"},{"lineNumber":205,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                emptyAddressBook, addressBookWithAmy, addressBookWithBob);","lastModifiedDate":"2021-10-24"},{"lineNumber":206,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        undoVersionedAddressBookNTimes(versionedAddressBook, 2);","lastModifiedDate":"2021-10-24"},{"lineNumber":207,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":208,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        versionedAddressBook.redo();","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertAddressBookListStatus(versionedAddressBook,","lastModifiedDate":"2021-10-24"},{"lineNumber":210,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                List.of(emptyAddressBook),","lastModifiedDate":"2021-10-24"},{"lineNumber":211,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                addressBookWithAmy,","lastModifiedDate":"2021-10-24"},{"lineNumber":212,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                List.of(addressBookWithBob));","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        //@@author: sijie123","lastModifiedDate":"2021-11-06"},{"lineNumber":214,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":216,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":217,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void redo_single_throwsLatestVersionException() throws EmptyAddressBookStateListException {","lastModifiedDate":"2021-11-08"},{"lineNumber":218,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        VersionedAddressBook versionedAddressBook \u003d makeVersionedAddressBook(addressBookWithBob);","lastModifiedDate":"2021-11-08"},{"lineNumber":219,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertThrows(LatestVersionException.class, versionedAddressBook::redo);","lastModifiedDate":"2021-10-24"},{"lineNumber":220,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":221,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":222,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public void equalsTest() throws EmptyAddressBookStateListException, EarliestVersionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":224,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        //@@author: sijie123","lastModifiedDate":"2021-11-06"},{"lineNumber":225,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // Reused from","lastModifiedDate":"2021-11-06"},{"lineNumber":226,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // https://github.com/se-edu/addressbook-level4/blob/master/src/test/java/seedu/address/model","lastModifiedDate":"2021-11-06"},{"lineNumber":227,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // /VersionedAddressBookTest.java","lastModifiedDate":"2021-11-06"},{"lineNumber":228,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        VersionedAddressBook versionedAddressBook \u003d makeVersionedAddressBook(","lastModifiedDate":"2021-11-06"},{"lineNumber":229,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                emptyAddressBook, addressBookWithAmy);","lastModifiedDate":"2021-10-24"},{"lineNumber":230,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":231,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        VersionedAddressBook copy \u003d makeVersionedAddressBook(","lastModifiedDate":"2021-11-06"},{"lineNumber":232,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                emptyAddressBook, addressBookWithAmy);","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":234,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(versionedAddressBook, copy);","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":236,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(versionedAddressBook, versionedAddressBook);","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertNotEquals(null, versionedAddressBook);","lastModifiedDate":"2021-10-24"},{"lineNumber":239,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":240,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        VersionedAddressBook differentAddressBookList \u003d makeVersionedAddressBook(","lastModifiedDate":"2021-11-06"},{"lineNumber":241,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                addressBookWithBob, addressBookWithCarl);","lastModifiedDate":"2021-10-24"},{"lineNumber":242,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":243,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertNotEquals(differentAddressBookList, versionedAddressBook);","lastModifiedDate":"2021-10-24"},{"lineNumber":244,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":245,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        undoVersionedAddressBookNTimes(copy, 1);","lastModifiedDate":"2021-10-24"},{"lineNumber":246,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertNotEquals(copy, versionedAddressBook);","lastModifiedDate":"2021-10-24"},{"lineNumber":247,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        //@@author: sijie123","lastModifiedDate":"2021-11-06"},{"lineNumber":248,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":249,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":250,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":251,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":252,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Verifies that {@code versionedAddressBook} is currently pointing at {@code expectedCurrentState},","lastModifiedDate":"2021-10-24"},{"lineNumber":253,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * states before current state is equal to {@code expectedStatesBeforePointer},","lastModifiedDate":"2021-10-24"},{"lineNumber":254,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * and states after current state is equal to {@code expectedStatesAfterPointer}.","lastModifiedDate":"2021-10-24"},{"lineNumber":255,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":256,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private void assertAddressBookListStatus(VersionedAddressBook versionedAddressBook,","lastModifiedDate":"2021-10-24"},{"lineNumber":257,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                                             List\u003cReadOnlyAddressBook\u003e expectedStatesBeforeCurrentState,","lastModifiedDate":"2021-10-24"},{"lineNumber":258,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                                             ReadOnlyAddressBook expectedCurrentState,","lastModifiedDate":"2021-10-24"},{"lineNumber":259,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"                                             List\u003cReadOnlyAddressBook\u003e expectedStatesAfterCurrentState)","lastModifiedDate":"2021-10-24"},{"lineNumber":260,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throws EarliestVersionException, LatestVersionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":261,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        //@@author: sijie123","lastModifiedDate":"2021-11-06"},{"lineNumber":262,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // Reused from","lastModifiedDate":"2021-11-06"},{"lineNumber":263,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // https://github.com/se-edu/addressbook-level4/blob/master/src/test/java/seedu/address/model","lastModifiedDate":"2021-11-06"},{"lineNumber":264,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // /VersionedAddressBookTest.java","lastModifiedDate":"2021-11-06"},{"lineNumber":265,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":266,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // check if current state is correct","lastModifiedDate":"2021-10-24"},{"lineNumber":267,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertEquals(new AddressBook(versionedAddressBook), expectedCurrentState);","lastModifiedDate":"2021-10-24"},{"lineNumber":268,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":269,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // revert to the earliest version of versionedAddressBook","lastModifiedDate":"2021-10-24"},{"lineNumber":270,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        while (versionedAddressBook.canUndo()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":271,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            versionedAddressBook.undo();","lastModifiedDate":"2021-10-24"},{"lineNumber":272,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":273,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":274,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // verify states before current state","lastModifiedDate":"2021-10-24"},{"lineNumber":275,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (ReadOnlyAddressBook expectedAddressBook : expectedStatesBeforeCurrentState) {","lastModifiedDate":"2021-10-24"},{"lineNumber":276,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            assertEquals(expectedAddressBook, new AddressBook(versionedAddressBook));","lastModifiedDate":"2021-10-24"},{"lineNumber":277,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            versionedAddressBook.redo();","lastModifiedDate":"2021-10-24"},{"lineNumber":278,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":279,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":280,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // verify states after currentState","lastModifiedDate":"2021-10-24"},{"lineNumber":281,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (ReadOnlyAddressBook expectedAddressBook : expectedStatesAfterCurrentState) {","lastModifiedDate":"2021-10-24"},{"lineNumber":282,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            versionedAddressBook.redo();","lastModifiedDate":"2021-10-24"},{"lineNumber":283,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            assertEquals(expectedAddressBook, new AddressBook(versionedAddressBook));","lastModifiedDate":"2021-10-24"},{"lineNumber":284,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":285,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":286,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // check that there are no more states after pointer","lastModifiedDate":"2021-10-24"},{"lineNumber":287,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertFalse(versionedAddressBook.canRedo());","lastModifiedDate":"2021-10-24"},{"lineNumber":288,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":289,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        // revert pointer to original position","lastModifiedDate":"2021-10-24"},{"lineNumber":290,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (int i \u003d 0; i \u003c expectedStatesAfterCurrentState.size(); i++) {","lastModifiedDate":"2021-10-24"},{"lineNumber":291,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            versionedAddressBook.undo();","lastModifiedDate":"2021-10-24"},{"lineNumber":292,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":293,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        //@@author: sijie123","lastModifiedDate":"2021-11-06"},{"lineNumber":294,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":295,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":296,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":297,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Creates a loaded {@code VersionedAddressBook} with the relevant states.","lastModifiedDate":"2021-10-24"},{"lineNumber":298,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":299,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static VersionedAddressBook makeVersionedAddressBook(ReadOnlyAddressBook... addressBooks)","lastModifiedDate":"2021-11-08"},{"lineNumber":300,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throws EmptyAddressBookStateListException {","lastModifiedDate":"2021-10-24"},{"lineNumber":301,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertTrue(addressBooks.length !\u003d 0);","lastModifiedDate":"2021-10-24"},{"lineNumber":302,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return VersionedAddressBook.of(addressBooks);","lastModifiedDate":"2021-10-24"},{"lineNumber":303,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":304,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":305,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":306,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Creates a loaded {@code VersionedAddressBook} with the relevant states.","lastModifiedDate":"2021-10-24"},{"lineNumber":307,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":308,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    public static VersionedAddressBook makeVersionedAddressBook(List\u003cReadOnlyAddressBook\u003e addressBooks)","lastModifiedDate":"2021-11-08"},{"lineNumber":309,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throws EmptyAddressBookStateListException {","lastModifiedDate":"2021-10-24"},{"lineNumber":310,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        assertFalse(addressBooks.isEmpty());","lastModifiedDate":"2021-10-24"},{"lineNumber":311,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return VersionedAddressBook.of(addressBooks);","lastModifiedDate":"2021-10-24"},{"lineNumber":312,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":313,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":314,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private void undoVersionedAddressBookNTimes(VersionedAddressBook versionedAddressBook, int n)","lastModifiedDate":"2021-10-24"},{"lineNumber":315,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            throws EarliestVersionException {","lastModifiedDate":"2021-10-24"},{"lineNumber":316,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        for (int i \u003d 0; i \u003c n; i++) {","lastModifiedDate":"2021-10-24"},{"lineNumber":317,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"            versionedAddressBook.undo();","lastModifiedDate":"2021-10-24"},{"lineNumber":318,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":319,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":320,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":321,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":322,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Generates random number between the range [lowest, highest).","lastModifiedDate":"2021-10-24"},{"lineNumber":323,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":324,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    private int generateRandomNumber(int lowest, int highest) {","lastModifiedDate":"2021-10-24"},{"lineNumber":325,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return lowest + (int) (Math.random() * (highest - lowest));","lastModifiedDate":"2021-10-24"},{"lineNumber":326,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":327,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":328,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"vigneshsankariyer1234567890":328}},{"path":"src/test/java/teletubbies/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model.person;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"gok99":2,"-":34}},{"path":"src/test/java/teletubbies/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model.person;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"gok99":2,"-":66}},{"path":"src/test/java/teletubbies/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model.person;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.PersonBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"gok99":2,"-":73}},{"path":"src/test/java/teletubbies/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model.person;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"gok99":2,"-":38}},{"path":"src/test/java/teletubbies/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model.person;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"tanqiya"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_UUID_BOB;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.PersonBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"tanqiya"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"tanqiya"},"content":"    public void isSameUuid() {","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"tanqiya"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"tanqiya"},"content":"        assertTrue(ALICE.isSameUuid(ALICE));","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"tanqiya"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"tanqiya"},"content":"        assertFalse(ALICE.isSameUuid(null));","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"tanqiya"},"content":"        // same uuid, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"tanqiya"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"tanqiya"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"tanqiya"},"content":"        assertTrue(ALICE.isSameUuid(editedAlice));","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"tanqiya"},"content":"        // different uuid, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"tanqiya"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withUuid(VALID_UUID_BOB).build();","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"tanqiya"},"content":"        assertFalse(ALICE.isSameUuid(editedAlice));","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"tanqiya"},"content":"        // uuid has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"tanqiya"},"content":"        String uuidWithTrailingSpaces \u003d VALID_UUID_BOB + \" \";","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"tanqiya"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withUuid(uuidWithTrailingSpaces).build();","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"tanqiya"},"content":"        assertFalse(BOB.isSameUuid(editedBob));","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"tanqiya"},"content":"        assertTrue(ALICE.isSameName(ALICE));","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"tanqiya"},"content":"        assertFalse(ALICE.isSameName(null));","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":60,"author":{"gitId":"tanqiya"},"content":"        assertTrue(ALICE.isSameName(editedAlice));","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"tanqiya"},"content":"        assertFalse(ALICE.isSameName(editedAlice));","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":68,"author":{"gitId":"tanqiya"},"content":"        assertFalse(BOB.isSameName(editedBob));","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":73,"author":{"gitId":"tanqiya"},"content":"        assertFalse(BOB.isSameName(editedBob));","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"tanqiya":29,"gok99":10,"-":75}},{"path":"src/test/java/teletubbies/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model.person;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"gok99":2,"-":38}},{"path":"src/test/java/teletubbies/model/person/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"skythefire"},"content":"package teletubbies.model.person;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"skythefire"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"skythefire"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"skythefire"},"content":"import static teletubbies.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"skythefire"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"skythefire"},"content":"public class RemarkTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"skythefire"},"content":"    @Test","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"skythefire"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"skythefire"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Remark(null));","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"skythefire"},"content":"    // @@author: j-lum","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"skythefire"},"content":"    // Reused from","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"skythefire"},"content":"    // https://github.com/se-edu/addressbook-level3/compare/tutorial-add-remark","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"skythefire"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"skythefire"},"content":"    public void equals() {","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"skythefire"},"content":"        Remark remark \u003d new Remark(\"Hello\");","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"skythefire"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"skythefire"},"content":"        assertTrue(remark.equals(remark));","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"skythefire"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"skythefire"},"content":"        Remark remarkCopy \u003d new Remark(remark.value);","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"skythefire"},"content":"        assertTrue(remark.equals(remarkCopy));","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"skythefire"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"skythefire"},"content":"        assertFalse(remark.equals(1));","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"skythefire"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"skythefire"},"content":"        assertFalse(remark.equals(null));","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"skythefire"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"skythefire"},"content":"        Remark differentRemark \u003d new Remark(\"Bye\");","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"skythefire"},"content":"        assertFalse(remark.equals(differentRemark));","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"skythefire"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"skythefire":40}},{"path":"src/test/java/teletubbies/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model.person;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.PersonBuilder;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"skythefire"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.containsName(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"skythefire"},"content":"        assertFalse(uniquePersonList.containsName(ALICE));","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"skythefire"},"content":"        assertTrue(uniquePersonList.containsName(ALICE));","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"skythefire"},"content":"        assertTrue(uniquePersonList.containsName(editedAlice));","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"skythefire":4,"gok99":9,"-":157}},{"path":"src/test/java/teletubbies/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.model.tag;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static teletubbies.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"gok99":2,"-":24}},{"path":"src/test/java/teletubbies/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.storage;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Address;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Email;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Name;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Phone;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.Assert;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.TypicalPersons;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"tanqiya"},"content":"    private static final String VALID_UUID \u003d TypicalPersons.BENSON.getUuid().toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"    private static final String VALID_NAME \u003d TypicalPersons.BENSON.getName().toString();","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"    private static final String VALID_PHONE \u003d TypicalPersons.BENSON.getPhone().toString();","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"    private static final String VALID_EMAIL \u003d TypicalPersons.BENSON.getEmail().toString();","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"gok99"},"content":"    private static final String VALID_ADDRESS \u003d TypicalPersons.BENSON.getAddress().toString();","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"skythefire"},"content":"    private static final String VALID_REMARK \u003d TypicalPersons.BENSON.getRemark().toString();","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"    private static final String VALID_COMPLETION_STATUS \u003d TypicalPersons.BENSON.getCompletionStatus().status.toString();","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"gok99"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d TypicalPersons.BENSON.getTags().stream()","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"gok99"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(TypicalPersons.BENSON);","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"gok99"},"content":"        assertEquals(TypicalPersons.BENSON, person.toModelType());","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"tanqiya"},"content":"                new JsonAdaptedPerson(VALID_UUID, INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"skythefire"},"content":"                        VALID_COMPLETION_STATUS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"skythefire"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"skythefire"},"content":"                new JsonAdaptedPerson(VALID_UUID, null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"skythefire"},"content":"                VALID_ADDRESS, VALID_COMPLETION_STATUS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"tanqiya"},"content":"                new JsonAdaptedPerson(VALID_UUID, VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"skythefire"},"content":"                        VALID_COMPLETION_STATUS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"tanqiya"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_UUID, VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"skythefire"},"content":"                VALID_COMPLETION_STATUS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"tanqiya"},"content":"                new JsonAdaptedPerson(VALID_UUID, VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"skythefire"},"content":"                        VALID_COMPLETION_STATUS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"tanqiya"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_UUID, VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"skythefire"},"content":"                VALID_COMPLETION_STATUS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"tanqiya"},"content":"                new JsonAdaptedPerson(VALID_UUID, VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"skythefire"},"content":"                        VALID_COMPLETION_STATUS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"tanqiya"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_UUID, VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"skythefire"},"content":"                VALID_COMPLETION_STATUS, VALID_REMARK, VALID_TAGS);","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"tanqiya"},"content":"                new JsonAdaptedPerson(VALID_UUID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"skythefire"},"content":"                        VALID_COMPLETION_STATUS, VALID_REMARK, invalidTags);","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"skythefire":12,"tanqiya":9,"gok99":26,"-":76}},{"path":"src/test/java/teletubbies/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.storage;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.model.AddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.Assert;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.TypicalPersons;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"gok99"},"content":"                readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":64,"author":{"gitId":"gok99"},"content":"        AddressBook original \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"gok99"},"content":"        original.addPerson(TypicalPersons.HOON);","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"gok99"},"content":"        original.removePerson(TypicalPersons.ALICE);","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"gok99"},"content":"        original.addPerson(TypicalPersons.IDA);","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"gok99":17,"-":91}},{"path":"src/test/java/teletubbies/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.storage;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.util.JsonUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.Assert;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"    // Fix this test","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"    //    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"    //    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"gok99"},"content":"    //        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"gok99"},"content":"    //                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"gok99"},"content":"    //        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"    //        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"    //        System.out.println(addressBookFromFile.equals(typicalPersonsAddressBook));","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"    //        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"    //    }","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"gok99":16,"-":31}},{"path":"src/test/java/teletubbies/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.storage;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.GuiSettings;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import teletubbies.model.UserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.Assert;","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"gok99":9,"-":114}},{"path":"src/test/java/teletubbies/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.storage;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.GuiSettings;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.model.AddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import teletubbies.model.UserPrefs;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.TypicalPersons;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"gok99"},"content":"        AddressBook original \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gok99":7,"-":61}},{"path":"src/test/java/teletubbies/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.testutil;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import teletubbies.model.AddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gok99":3,"-":31}},{"path":"src/test/java/teletubbies/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.testutil;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"gok99":1,"-":33}},{"path":"src/test/java/teletubbies/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.testutil;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Address;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Email;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Name;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Phone;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.Tag;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"gok99":8,"-":78}},{"path":"src/test/java/teletubbies/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.testutil;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Address;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Email;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Name;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Phone;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"skythefire"},"content":"import teletubbies.model.person.Remark;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"tanqiya"},"content":"import teletubbies.model.person.Uuid;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.CompletionStatusTag;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.CompletionStatusTag.CompletionStatus;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.Tag;","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"gok99"},"content":"import teletubbies.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"tanqiya"},"content":"    public static final String DEFAULT_UUID \u003d \"5adca888-2825-49c2-82e2-78830d923aa4\";","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"gok99"},"content":"    public static final String DEFAULT_REMARK \u003d \"\";","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"gok99"},"content":"    public static final Set\u003cTag\u003e DEFAULT_TAGS \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"tanqiya"},"content":"    private Uuid uuid;","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"gok99"},"content":"    private CompletionStatusTag completionStatusTag;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"skythefire"},"content":"    private Remark remark;","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"tanqiya"},"content":"        uuid \u003d new Uuid(DEFAULT_UUID);","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"gok99"},"content":"        completionStatusTag \u003d new CompletionStatusTag();","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"skythefire"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"gok99"},"content":"        tags \u003d new HashSet\u003c\u003e(DEFAULT_TAGS);","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"tanqiya"},"content":"        uuid \u003d personToCopy.getUuid();","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"gok99"},"content":"        completionStatusTag \u003d personToCopy.getCompletionStatus();","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"skythefire"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":67,"author":{"gitId":"tanqiya"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"tanqiya"},"content":"     * Sets the {@code Uuid} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"tanqiya"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"tanqiya"},"content":"    public PersonBuilder withUuid(String uuid) {","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"tanqiya"},"content":"        this.uuid \u003d new Uuid(uuid);","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"tanqiya"},"content":"        return this;","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"tanqiya"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"tanqiya"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":115,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     * Sets the {@code CompletionStatus} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"gok99"},"content":"    public PersonBuilder withCompletionStatus(CompletionStatus completionStatus) {","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"gok99"},"content":"        this.completionStatusTag \u003d new CompletionStatusTag(completionStatus);","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"vigneshsankariyer1234567890"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"skythefire"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"skythefire"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"skythefire"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"skythefire"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"skythefire"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"skythefire"},"content":"        return this;","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"skythefire"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"skythefire"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":132,"author":{"gitId":"skythefire"},"content":"        return new Person(uuid, name, phone, email, address, completionStatusTag, remark, tags);","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"skythefire":13,"vigneshsankariyer1234567890":6,"tanqiya":13,"gok99":18,"-":85}},{"path":"src/test/java/teletubbies/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.testutil;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.AddCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.model.tag.Tag;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"gok99":10,"-":52}},{"path":"src/test/java/teletubbies/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.testutil;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gok99":1,"-":71}},{"path":"src/test/java/teletubbies/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.testutil;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import teletubbies.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gok99":4,"-":51}},{"path":"src/test/java/teletubbies/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.testutil;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import teletubbies.commons.core.index.Index;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"gok99":2,"-":10}},{"path":"src/test/java/teletubbies/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.testutil;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"gok99"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"tanqiya"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_UUID_AMY;","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"tanqiya"},"content":"import static teletubbies.logic.commands.CommandTestUtil.VALID_UUID_BOB;","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"gok99"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"gok99"},"content":"import java.util.UUID;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":21,"author":{"gitId":"gok99"},"content":"import teletubbies.logic.parser.CliSyntax;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"gok99"},"content":"import teletubbies.model.AddressBook;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"gok99"},"content":"import teletubbies.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"tanqiya"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withUuid(\"5adca888-2825-49c2-82e2-78830d923aa4\")","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"tanqiya"},"content":"            .withName(\"Alice Pauline\").withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"gok99"},"content":"            .withPhone(\"94351253\").withTags(\"friends\").withRemark(\"She likes aardvarks.\").build();","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"gok99"},"content":"    public static final Person BENSON \u003d new PersonBuilder()","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"tanqiya"},"content":"            .withName(\"Benson Meier\").withAddress(\"311, Clementi Ave 2, #02-25\").withEmail(\"johnd@example.com\")","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"skythefire"},"content":"            .withPhone(\"98765432\").withTags(\"owesMoney\", \"friends\").withRemark(\"She likes aardvarks.\")","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"skythefire"},"content":"            .withUuid(UUID.randomUUID().toString()).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"tanqiya"},"content":"    public static final Person CARL \u003d new PersonBuilder().withUuid(\"5adca839-2825-49c2-82e2-78830d923aa4\")","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"tanqiya"},"content":"            .withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"gok99"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withUuid(UUID.randomUUID().toString()).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"tanqiya"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withUuid(\"5adca839-2825-49c2-81e2-78830d923aa4\")","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"tanqiya"},"content":"            .withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"gok99"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"            .withUuid(UUID.randomUUID().toString()).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"tanqiya"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withUuid(\"5adca839-2825-49c2-82e4-78830d923aa4\")","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"tanqiya"},"content":"            .withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"gok99"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withUuid(UUID.randomUUID().toString()).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"tanqiya"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withUuid(\"5adca819-2825-49c2-82e2-78830d923aa4\")","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"tanqiya"},"content":"            .withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"gok99"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withUuid(UUID.randomUUID().toString()).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"tanqiya"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withUuid(\"5adca839-2925-49c2-82e2-78830d923aa4\")","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"tanqiya"},"content":"            .withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"gok99"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withUuid(UUID.randomUUID().toString()).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":55,"author":{"gitId":"tanqiya"},"content":"    public static final Person HOON \u003d new PersonBuilder().withUuid(\"9cd01b04-7964-4d18-98a4-a666c6520a21\")","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"tanqiya"},"content":"            .withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"tanqiya"},"content":"    public static final Person IDA \u003d new PersonBuilder().withUuid(\"9cd01b04-7964-4d18-98a4-ab9996520a21\")","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"tanqiya"},"content":"            .withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":62,"author":{"gitId":"gok99"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"tanqiya"},"content":"    public static final Person AMY \u003d new PersonBuilder().withUuid(VALID_UUID_AMY)","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"tanqiya"},"content":"            .withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"tanqiya"},"content":"            .withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"tanqiya"},"content":"    public static final Person NO_EMAIL_AMY \u003d new PersonBuilder().withUuid(VALID_UUID_AMY)","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"tanqiya"},"content":"            .withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).withEmail(CliSyntax.DEFAULT_EMAIL)","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"tanqiya"},"content":"            .withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"tanqiya"},"content":"    public static final Person NO_ADDRESS_AMY \u003d new PersonBuilder().withUuid(VALID_UUID_AMY)","lastModifiedDate":"2021-11-08"},{"lineNumber":70,"author":{"gitId":"tanqiya"},"content":"            .withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-11-08"},{"lineNumber":71,"author":{"gitId":"tanqiya"},"content":"            .withAddress(CliSyntax.DEFAULT_ADDRESS).build();","lastModifiedDate":"2021-11-08"},{"lineNumber":72,"author":{"gitId":"tanqiya"},"content":"    public static final Person NO_TAGS_AMY \u003d new PersonBuilder().withUuid(VALID_UUID_AMY)","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"tanqiya"},"content":"            .withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY)","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"tanqiya"},"content":"            .withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"tanqiya"},"content":"    public static final Person BOB \u003d new PersonBuilder().withUuid(VALID_UUID_BOB)","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"tanqiya"},"content":"            .withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"tanqiya"},"content":"            .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"tanqiya"},"content":"    public static final Person NO_TAGS_BOB \u003d new PersonBuilder().withUuid(VALID_UUID_BOB)","lastModifiedDate":"2021-11-08"},{"lineNumber":79,"author":{"gitId":"tanqiya"},"content":"            .withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-11-08"},{"lineNumber":80,"author":{"gitId":"tanqiya"},"content":"            .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-11-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"skythefire":2,"tanqiya":37,"gok99":25,"-":36}},{"path":"src/test/java/teletubbies/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.ui;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"gok99":1,"-":34}},{"path":"src/test/java/teletubbies/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gok99"},"content":"package teletubbies.ui;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"gok99"},"content":"import teletubbies.MainApp;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"gok99"},"content":"import teletubbies.testutil.Assert;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"gok99"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"gok99":15,"-":99}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"\u003c?import teletubbies.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"gok99":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"gok99"},"content":"\u003cfx:root type\u003d\"teletubbies.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"gok99":1,"-":5}}]
