[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pss-coder"},"content":"[![Java CI](https://github.com/AY2122S1-CS2103-F10-3/tp/actions/workflows/gradle.yml/badge.svg?branch\u003dmaster)](https://github.com/AY2122S1-CS2103-F10-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"pss-coder"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103-F10-3/tp/branch/master/graph/badge.svg?token\u003dFYK9IG36EO)](https://codecov.io/gh/AY2122S1-CS2103-F10-3/tp)","lastModifiedDate":"2021-09-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"SajalVaishnav"},"content":"## FriendBook","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"* Ideal for users with many friends.","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"* Aims to help users in managing their friends’ contacts.","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"* FriendBook provides a contact management platform for users with many friends to track their friends’ contacts. Additionally, it also helps users to keep track of social interactions with their friends and their friends’ birthdays.","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"* For the detailed documentation of this project, see the [FriendBook Product Website](https://ay2122s1-cs2103-f10-3.github.io/tp/).","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"RonaldTanSingWei"},"content":" * If you would like to see a demo video of our recent release (**v1.4**) as well, click [**here**](https://drive.google.com/file/d/1Mi7vEL6htqStxipfGBbUHKzwggzFgfZ2/view?usp\u003dsharing) to see.","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"SajalVaishnav"},"content":"### Acknowledgements","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"SajalVaishnav"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"pss-coder"},"content":"The avatar icons is based from Figma [SVG User Avatar Pack](https://www.figma.com/community/file/898457975261805002).","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"RonaldTanSingWei":1,"pss-coder":7,"-":5,"SajalVaishnav":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"mainClassName \u003d \u0027seedu.friendbook.Main\u0027","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"pss-coder"},"content":"    archiveName \u003d \u0027FriendBook.jar\u0027","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"pss-coder"},"content":"run {","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"pss-coder"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"-":70,"pss-coder":6}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":"We are the team behind FriendBook.","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"SajalVaishnav"},"content":"### Pawandeep Singh Sekhon","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"SajalVaishnav"},"content":"\u003cimg src\u003d\"images/pss-coder.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"Pawandeep\u0027s [github](http://github.com/pss-coder)","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"pss-coder"},"content":"Pawandeep\u0027s project [portfolio](team/pss-coder.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"SajalVaishnav"},"content":"* Responsibilities: In charge of Deliverables and Deadlines, and UI","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"SajalVaishnav"},"content":"### Chin Ze-Xi, Sean","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"SajalVaishnav"},"content":"\u003cimg src\u003d\"images/xnajasho.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"SajalVaishnav"},"content":"Sean\u0027s [github](http://github.com/xnajasho)","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":27,"author":{"gitId":"SajalVaishnav"},"content":"Sean\u0027s project [portfolio](team/xnajasho.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"SajalVaishnav"},"content":"* Responsibilities: In charge of Scheduling and tracking, and Model","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"SajalVaishnav"},"content":"### Ronald Tan Sing Wei","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"pss-coder"},"content":"\u003cimg src\u003d\"images/RonaldTanSingWei.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"SajalVaishnav"},"content":"Ronald\u0027s [github](http://github.com/ronaldtansingwei)","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"SajalVaishnav"},"content":"Ronald\u0027s project [portfolio](team/ronaldtansingwei.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"SajalVaishnav"},"content":"* Responsibilities: In charge of Documentation, Testing, and Strategy","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"SajalVaishnav"},"content":"### Sajal Vaishnav","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"SajalVaishnav"},"content":"\u003cimg src\u003d\"images/sajalvaishnav.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"SajalVaishnav"},"content":"Sajal\u0027s [github](http://github.com/sajalvaishnav)","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"SajalVaishnav"},"content":"Sajal\u0027s project [portfolio](team/sajalvaishnav.md)","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"SajalVaishnav"},"content":"* Responsibilities: In charge of Integration, Code Quality, and Storage","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"-":30,"pss-coder":4,"SajalVaishnav":18}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.\u003c","lastModifiedDate":"2020-05-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. Here are the steps to set up CodeCov for a fork of this repository.","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"1. Sign up with Codecov using your GitHub account [here](https://codecov.io/signup).","lastModifiedDate":"2020-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Once you are inside Codecov web app, add your fork to CodeCov.","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"pss-coder"},"content":"1. Get the Markdown code for the Codecov badge provided in `Settings \u003e Badges` and update the `docs/index.md` of your repo with it so that the badge [![codecov](https://codecov.io/gh/AY2122S1-CS2103-F10-3/tp/branch/master/graph/badge.svg?token\u003dFYK9IG36EO)](https://codecov.io/gh/AY2122S1-CS2103-F10-3/tp) in that page reflects the coverage of your project.","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"pss-coder"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2122S1-CS2103-F10-3/tp/blob/master/src/main/java/seedu/friendbook/MainApp.java).","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"-":77,"pss-coder":2}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"RonaldTanSingWei"},"content":":bulb: **Tip:** The diagrams shown below were made from [diagrams.net](https://www.diagrams.net/) and PlantUML.","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"RonaldTanSingWei"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S1-CS2103-F10-3/tp/blob/master/src/main/java/seedu/friendbook/Main.java) and [`MainApp`](https://github.com/AY2122S1-CS2103-F10-3/tp/blob/master/src/main/java/seedu/friendbook/MainApp.java). It is responsible for,","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"pss-coder"},"content":"* [**`Reminder`**](#reminder-component): Runs on a background thread in checking upcoming birthdays and displaying reminder alerts.","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"RonaldTanSingWei"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S1-CS2103-F10-3/tp/blob/master/src/main/java/seedu/friendbook/ui/Ui.java)","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"pss-coder"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`BirthdayListPanel`, `FriendListPanel`, `ProfileDisplay`, `FriendWindow` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"pss-coder"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2122S1-CS2103-F10-3/tp/blob/master/src/main/java/seedu/friendbook/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2122S1-CS2103-F10-3/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"pss-coder"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands as well as listen to the `Reminder` component.","lastModifiedDate":"2021-11-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"pss-coder"},"content":"* depends on a functional interface in the `Reminder` component, because the `UI` updates the `Reminder` component on reminder changes. ","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"RonaldTanSingWei"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S1-CS2103-F10-3/tp/blob/master/src/main/java/seedu/friendbook/logic/Logic.java)","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"RonaldTanSingWei"},"content":"\u003cimg src\u003d\"images/FriendBookLogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"RonaldTanSingWei"},"content":"1. When `Logic` is called upon to execute a command, it uses the `FriendBookParser` class to parse the user command.","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"RonaldTanSingWei"},"content":"The Sequence Diagram (simplified) below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-11-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"RonaldTanSingWei"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/FriendBookDeleteSequenceDiagram.png)","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"RonaldTanSingWei"},"content":"\u003cimg src\u003d\"images/FriendBookParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"RonaldTanSingWei"},"content":"* When called upon to parse a user command, the `FriendBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `FriendBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-10-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"RonaldTanSingWei"},"content":"**API** : [`Model.java`](https://github.com/AY2122S1-CS2103-F10-3/tp/blob/master/src/main/java/seedu/friendbook/model/Model.java)","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"xnajasho"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"RonaldTanSingWei"},"content":"* stores the friend book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-10-28"},{"lineNumber":123,"author":{"gitId":"xnajasho"},"content":"\t* 2 copies of the `UniquePersonList` containing the exact same `Person` objects are used. The only difference is the ordering of the `Person` objects in each of the lists, where one list functions as a contact list and the other functions as a birthday list which is sorted based on earliest birthday.","lastModifiedDate":"2021-11-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"xnajasho"},"content":"* stores a `UserPref` object that represents the user’s preferences, which includes the border sizes of the app and the profile name. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-11-08"},{"lineNumber":126,"author":{"gitId":"xnajasho"},"content":"* stores a `Reminder` object which is associated to a `Person` object. Note that this `Reminder` is functionally different from the `Reminder` component. The `Reminder` object in the `Model` component is simply a class to store the details of a `Reminder` and to ascertain if a `Person` has his/her `Reminder` enabled.","lastModifiedDate":"2021-11-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"RonaldTanSingWei"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `FriendBook`, which `Person` references. This allows `FriendBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2021-10-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"RonaldTanSingWei"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S1-CS2103-F10-3/tp/blob/master/src/main/java/seedu/friendbook/storage/Storage.java)","lastModifiedDate":"2021-10-28"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"SajalVaishnav"},"content":"* can save both friend book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-11-08"},{"lineNumber":144,"author":{"gitId":"RonaldTanSingWei"},"content":"* inherits from both `FriendBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-10-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-10-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":147,"author":{"gitId":"pss-coder"},"content":"### Reminder component","lastModifiedDate":"2021-11-07"},{"lineNumber":148,"author":{"gitId":"pss-coder"},"content":"**API** : [`Reminder.java`](https://github.com/AY2122S1-CS2103-F10-3/tp/blob/master/src/main/java/seedu/friendbook/reminder/Reminder.java)","lastModifiedDate":"2021-11-07"},{"lineNumber":149,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":150,"author":{"gitId":"pss-coder"},"content":"\u003cimg src\u003d\"images/ReminderClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":151,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":152,"author":{"gitId":"pss-coder"},"content":"How the `Reminder` component works,","lastModifiedDate":"2021-11-07"},{"lineNumber":153,"author":{"gitId":"pss-coder"},"content":"* Runs every 12 hour starting with a 10second delay on application opening in the background.","lastModifiedDate":"2021-11-07"},{"lineNumber":154,"author":{"gitId":"pss-coder"},"content":"* Under `ReminderManager` class, it will check birthdays that upcoming in a week or less.","lastModifiedDate":"2021-11-07"},{"lineNumber":155,"author":{"gitId":"pss-coder"},"content":"* Displays an alert for the upcoming birthdays to notify user.","lastModifiedDate":"2021-11-07"},{"lineNumber":156,"author":{"gitId":"pss-coder"},"content":"* Relies on some methods in the `Logic` component (because the `UI` component\u0027s job is to allow user to enable/disable reminders.)","lastModifiedDate":"2021-11-07"},{"lineNumber":157,"author":{"gitId":"pss-coder"},"content":"* depends on the `Person` class in order to display relevant information in the alert.","lastModifiedDate":"2021-11-07"},{"lineNumber":158,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"RonaldTanSingWei"},"content":"Classes used by multiple components are in the `seedu.friendbook.commons` package.","lastModifiedDate":"2021-10-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"pss-coder"},"content":"### Reminder Feature","lastModifiedDate":"2021-11-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":171,"author":{"gitId":"pss-coder"},"content":"#### Implementation","lastModifiedDate":"2021-11-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":173,"author":{"gitId":"pss-coder"},"content":"Below is a sequence diagram of how the Reminder feature is initialised.","lastModifiedDate":"2021-11-08"},{"lineNumber":174,"author":{"gitId":"pss-coder"},"content":"![initialisation of Reminder feature](images/ReminderInitialisationSequenceDiagram.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":177,"author":{"gitId":"pss-coder"},"content":"The reminder mechanism is facilitated by the [`ReminderManager.java`](https://github.com/AY2122S1-CS2103-F10-3/tp/blob/master/src/main/java/seedu/friendbook/reminder/ReminderManager.java) class.","lastModifiedDate":"2021-11-08"},{"lineNumber":178,"author":{"gitId":"RonaldTanSingWei"},"content":"It extends to an internal JavaFX java library [`ScheduledService`](https://docs.oracle.com/javase/8/javafx/api/javafx/concurrent/ScheduledService.html),","lastModifiedDate":"2021-11-08"},{"lineNumber":179,"author":{"gitId":"pss-coder"},"content":"which executes tasks in the background without affecting UI thread.","lastModifiedDate":"2021-11-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":181,"author":{"gitId":"pss-coder"},"content":"The `ReminderManager` class executes a task which checks for upcoming birthdays that are coming in a week or less","lastModifiedDate":"2021-11-08"},{"lineNumber":182,"author":{"gitId":"pss-coder"},"content":"and user wishes to have these friends\u0027 birthday to be reminded.","lastModifiedDate":"2021-11-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":184,"author":{"gitId":"pss-coder"},"content":"The implementation relies on the `Model` for its birthday list. For every change in the birthday list,","lastModifiedDate":"2021-11-07"},{"lineNumber":185,"author":{"gitId":"pss-coder"},"content":"results in the `ReminderManger` class restarting the task to get the latest version of the birthday list. It does so by adding a","lastModifiedDate":"2021-11-08"},{"lineNumber":186,"author":{"gitId":"pss-coder"},"content":"listener to the birthday list.","lastModifiedDate":"2021-11-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":188,"author":{"gitId":"pss-coder"},"content":"The way the list is updated relies on the `Logic` component and `UI` component.","lastModifiedDate":"2021-11-07"},{"lineNumber":189,"author":{"gitId":"pss-coder"},"content":"In the `BirthdayCard`class and `MainWindow` class under `UI` component, which makes use of an functional","lastModifiedDate":"2021-11-08"},{"lineNumber":190,"author":{"gitId":"pss-coder"},"content":"interface [`SetRemindExecutor`](https://github.com/AY2122S1-CS2103-F10-3/tp/blob/20bd196ca06820b425556ab4dc57dfcd5924a563/src/main/java/seedu/friendbook/reminder/ReminderManager.java#L122)","lastModifiedDate":"2021-11-07"},{"lineNumber":191,"author":{"gitId":"pss-coder"},"content":"in `ReminderManager` class for every update in the reminder checkbox in `BirthdayCard.java`.","lastModifiedDate":"2021-11-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":193,"author":{"gitId":"pss-coder"},"content":"For every change in the reminder checkbox in `BirthdayCard` class, [`LogicManager#executeUpdateReminder(Person, Person)`](https://github.com/AY2122S1-CS2103-F10-3/tp/blob/20bd196ca06820b425556ab4dc57dfcd5924a563/src/main/java/seedu/friendbook/logic/LogicManager.java#L62) method","lastModifiedDate":"2021-11-08"},{"lineNumber":194,"author":{"gitId":"pss-coder"},"content":"updates the birthday list which then results in the listener in the `ReminderManager` class to restart the background task.","lastModifiedDate":"2021-11-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":196,"author":{"gitId":"pss-coder"},"content":"If there exists a birthday that is less than a week or less, and user wishes for that birthday to be reminded, a popup alert will display","lastModifiedDate":"2021-11-07"},{"lineNumber":197,"author":{"gitId":"pss-coder"},"content":"a message of all friends that have birthdays coming in a week or less.","lastModifiedDate":"2021-11-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":199,"author":{"gitId":"pss-coder"},"content":"Below is another sequence diagram showing a scenario of when a reminder checkbox is updated by the user:","lastModifiedDate":"2021-11-08"},{"lineNumber":200,"author":{"gitId":"pss-coder"},"content":"![Friend Reminder Updated](images/UpdateFriendReminderSequenceDiagram.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":203,"author":{"gitId":"pss-coder"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":205,"author":{"gitId":"pss-coder"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2021-10-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":207,"author":{"gitId":"pss-coder"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2021-10-26"},{"lineNumber":208,"author":{"gitId":"pss-coder"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2021-10-26"},{"lineNumber":209,"author":{"gitId":"pss-coder"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2021-10-26"},{"lineNumber":210,"author":{"gitId":"pss-coder"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2021-10-26"},{"lineNumber":211,"author":{"gitId":"pss-coder"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2021-10-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":213,"author":{"gitId":"pss-coder"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":215,"author":{"gitId":"pss-coder"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2021-10-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":217,"author":{"gitId":"pss-coder"},"content":"### Product scope","lastModifiedDate":"2021-10-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":219,"author":{"gitId":"pss-coder"},"content":"**Target user profile**:","lastModifiedDate":"2021-10-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":221,"author":{"gitId":"pss-coder"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2021-10-26"},{"lineNumber":222,"author":{"gitId":"pss-coder"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2021-10-26"},{"lineNumber":223,"author":{"gitId":"pss-coder"},"content":"* can type fast","lastModifiedDate":"2021-10-26"},{"lineNumber":224,"author":{"gitId":"pss-coder"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2021-10-26"},{"lineNumber":225,"author":{"gitId":"pss-coder"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2021-10-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":227,"author":{"gitId":"pss-coder"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-10-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":230,"author":{"gitId":"pss-coder"},"content":"### User stories","lastModifiedDate":"2021-10-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":232,"author":{"gitId":"pss-coder"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2021-10-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":234,"author":{"gitId":"pss-coder"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2021-10-26"},{"lineNumber":235,"author":{"gitId":"pss-coder"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2021-10-26"},{"lineNumber":236,"author":{"gitId":"RonaldTanSingWei"},"content":"| `* * *`  | user                                       |view all my friends             | look at the friends i have         |","lastModifiedDate":"2021-11-08"},{"lineNumber":237,"author":{"gitId":"RonaldTanSingWei"},"content":"| `* * *`  | user                                       | add a new person               | keep in contact with the friend                                       |","lastModifiedDate":"2021-11-08"},{"lineNumber":238,"author":{"gitId":"RonaldTanSingWei"},"content":"| `* * *`  | user                                       | edit my friend\u0027s details              | update my friend\u0027s details                                  |","lastModifiedDate":"2021-11-08"},{"lineNumber":239,"author":{"gitId":"RonaldTanSingWei"},"content":"| `*`      | user                                       | delete a friend       | remove him from my contacts |","lastModifiedDate":"2021-11-08"},{"lineNumber":240,"author":{"gitId":"RonaldTanSingWei"},"content":"| `* *`    | user                                       | find friends by tags     | find my friends belonging to certain groups                        |","lastModifiedDate":"2021-11-08"},{"lineNumber":241,"author":{"gitId":"RonaldTanSingWei"},"content":"| `* *`    | user                                       | find friends by name     | filter friends and find friends |","lastModifiedDate":"2021-11-08"},{"lineNumber":242,"author":{"gitId":"xnajasho"},"content":"| `* * *`  | user                                       | view my friends\u0027 details       | retrieve my friend\u0027s details whenever I need them                      |","lastModifiedDate":"2021-11-08"},{"lineNumber":243,"author":{"gitId":"RonaldTanSingWei"},"content":"| `* * *`  | user                                       | view friends by their birthdays| glance at which friends have their birthdays coming up|","lastModifiedDate":"2021-11-08"},{"lineNumber":244,"author":{"gitId":"RonaldTanSingWei"},"content":"| `* *`    | user                                       | view my friend\u0027s age           | know how old my friend is|","lastModifiedDate":"2021-11-08"},{"lineNumber":245,"author":{"gitId":"RonaldTanSingWei"},"content":"| `* * *`  | forgetful user                             | be reminded of my friends\u0027 birthdays| keep track of my friends\u0027 birthdays and if they are nearing       |  ","lastModifiedDate":"2021-11-08"},{"lineNumber":246,"author":{"gitId":"RonaldTanSingWei"},"content":"| `* *`    | user                                       | add my friend\u0027s Telegram ID| contact my friend on telegram    |","lastModifiedDate":"2021-11-08"},{"lineNumber":247,"author":{"gitId":"RonaldTanSingWei"},"content":"| `* `     | user                                       | add custom avatars to my friends       | to keep track of my friends\u0027 ages                                      |","lastModifiedDate":"2021-11-08"},{"lineNumber":248,"author":{"gitId":"RonaldTanSingWei"},"content":"| `*`      | user                                       | add my own username to my profile             | personalise my FriendBook experience|","lastModifiedDate":"2021-11-08"},{"lineNumber":249,"author":{"gitId":"RonaldTanSingWei"},"content":"| `*`      | forgetful user                             | refer to the usage instructions |familiarise myself with FriendBook usage |","lastModifiedDate":"2021-11-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":252,"author":{"gitId":"pss-coder"},"content":"### Use cases","lastModifiedDate":"2021-10-26"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":254,"author":{"gitId":"RonaldTanSingWei"},"content":"(For all use cases below, the **System** is the `FriendBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-10-28"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":256,"author":{"gitId":"RonaldTanSingWei"},"content":"#### Friend Contacts Use Cases","lastModifiedDate":"2021-11-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":258,"author":{"gitId":"RonaldTanSingWei"},"content":"**Use Case 1 (UC1): View all friends**","lastModifiedDate":"2021-11-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":260,"author":{"gitId":"RonaldTanSingWei"},"content":"**MSS**","lastModifiedDate":"2021-10-28"},{"lineNumber":261,"author":{"gitId":"RonaldTanSingWei"},"content":"1. User requests to list all friends.","lastModifiedDate":"2021-11-08"},{"lineNumber":262,"author":{"gitId":"RonaldTanSingWei"},"content":"2. FriendBook shows the list of friends stored within.","lastModifiedDate":"2021-11-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":264,"author":{"gitId":"RonaldTanSingWei"},"content":"    Use case ends.","lastModifiedDate":"2021-11-04"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":266,"author":{"gitId":"RonaldTanSingWei"},"content":"Extensions","lastModifiedDate":"2021-10-28"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":268,"author":{"gitId":"RonaldTanSingWei"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-11-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":270,"author":{"gitId":"RonaldTanSingWei"},"content":"    Use case ends.","lastModifiedDate":"2021-11-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":272,"author":{"gitId":"RonaldTanSingWei"},"content":"**Use case 2 (UC2): Add a friend**","lastModifiedDate":"2021-11-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":274,"author":{"gitId":"RonaldTanSingWei"},"content":"**MSS**","lastModifiedDate":"2021-11-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":276,"author":{"gitId":"RonaldTanSingWei"},"content":"1.  User requests to list friends.","lastModifiedDate":"2021-11-08"},{"lineNumber":277,"author":{"gitId":"RonaldTanSingWei"},"content":"2.  FriendBook shows a list of friends.","lastModifiedDate":"2021-11-08"},{"lineNumber":278,"author":{"gitId":"RonaldTanSingWei"},"content":"3.  User requests to add a friend with the given information.","lastModifiedDate":"2021-11-08"},{"lineNumber":279,"author":{"gitId":"RonaldTanSingWei"},"content":"4.  FriendBook adds the friend and updates the list","lastModifiedDate":"2021-11-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":281,"author":{"gitId":"RonaldTanSingWei"},"content":"    Use case ends.","lastModifiedDate":"2021-11-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":283,"author":{"gitId":"RonaldTanSingWei"},"content":"**Extensions**","lastModifiedDate":"2021-11-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":285,"author":{"gitId":"RonaldTanSingWei"},"content":"* 3a. The given information is invalid as it does not follow the correct syntax.","lastModifiedDate":"2021-11-04"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":287,"author":{"gitId":"RonaldTanSingWei"},"content":"    * 3a1. FriendBook shows an error message.","lastModifiedDate":"2021-11-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":289,"author":{"gitId":"RonaldTanSingWei"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-11-04"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":291,"author":{"gitId":"RonaldTanSingWei"},"content":"* 3b. The user input is already in the list.","lastModifiedDate":"2021-11-04"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":293,"author":{"gitId":"RonaldTanSingWei"},"content":"    * 3b1. FriendBook informs user that their input is already stored in the list.","lastModifiedDate":"2021-11-04"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":295,"author":{"gitId":"RonaldTanSingWei"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-11-04"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":297,"author":{"gitId":"RonaldTanSingWei"},"content":"**Use case 3 (UC3): Edit friend details**","lastModifiedDate":"2021-11-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":299,"author":{"gitId":"pss-coder"},"content":"**MSS**","lastModifiedDate":"2021-10-26"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":301,"author":{"gitId":"RonaldTanSingWei"},"content":"1. User requests to list friends.","lastModifiedDate":"2021-11-08"},{"lineNumber":302,"author":{"gitId":"RonaldTanSingWei"},"content":"2. FriendBook shows the list of friends.","lastModifiedDate":"2021-11-08"},{"lineNumber":303,"author":{"gitId":"RonaldTanSingWei"},"content":"3. User requests to edit the information of a specific friend in the list.","lastModifiedDate":"2021-11-08"},{"lineNumber":304,"author":{"gitId":"RonaldTanSingWei"},"content":"4. FriendBook updates the information of the specific friend and displays the new information.","lastModifiedDate":"2021-11-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":306,"author":{"gitId":"pss-coder"},"content":"    Use case ends.","lastModifiedDate":"2021-10-26"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":308,"author":{"gitId":"pss-coder"},"content":"**Extensions**","lastModifiedDate":"2021-10-26"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":310,"author":{"gitId":"pss-coder"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-10-26"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":312,"author":{"gitId":"pss-coder"},"content":"  Use case ends.","lastModifiedDate":"2021-10-26"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":314,"author":{"gitId":"pss-coder"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-10-26"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":316,"author":{"gitId":"RonaldTanSingWei"},"content":"\t* 3a1. FriendBook shows an error message.","lastModifiedDate":"2021-10-28"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":318,"author":{"gitId":"pss-coder"},"content":"\t  Use case resumes at step 2.","lastModifiedDate":"2021-10-26"},{"lineNumber":319,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":320,"author":{"gitId":"RonaldTanSingWei"},"content":"* 3b. The information to be updated is invalid.","lastModifiedDate":"2021-11-08"},{"lineNumber":321,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":322,"author":{"gitId":"RonaldTanSingWei"},"content":"\t* 3b1. FriendBook shows an error message.","lastModifiedDate":"2021-11-08"},{"lineNumber":323,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":324,"author":{"gitId":"RonaldTanSingWei"},"content":"\t  Use case resumes at step 2.","lastModifiedDate":"2021-11-08"},{"lineNumber":325,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":326,"author":{"gitId":"RonaldTanSingWei"},"content":"**Use case 4 (UC4): Delete a friend**","lastModifiedDate":"2021-11-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-11-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":330,"author":{"gitId":"RonaldTanSingWei"},"content":"1. User requests to list friends.","lastModifiedDate":"2021-11-04"},{"lineNumber":331,"author":{"gitId":"RonaldTanSingWei"},"content":"2. FriendBook shows the list of friends.","lastModifiedDate":"2021-11-04"},{"lineNumber":332,"author":{"gitId":"RonaldTanSingWei"},"content":"3. User requests to delete a specific friend in the list.","lastModifiedDate":"2021-11-08"},{"lineNumber":333,"author":{"gitId":"RonaldTanSingWei"},"content":"4. FriendBook deletes the friend and updates the list.","lastModifiedDate":"2021-11-04"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":335,"author":{"gitId":"RonaldTanSingWei"},"content":"   Use case ends.","lastModifiedDate":"2021-11-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":337,"author":{"gitId":"RonaldTanSingWei"},"content":"**Extensions:**","lastModifiedDate":"2021-11-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":339,"author":{"gitId":"RonaldTanSingWei"},"content":"* 2a: List is empty.","lastModifiedDate":"2021-11-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":341,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-11-04"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":343,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-11-04"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":345,"author":{"gitId":"RonaldTanSingWei"},"content":"\t* 3a1. FriendBook shows an error message.","lastModifiedDate":"2021-11-04"},{"lineNumber":346,"author":{"gitId":"RonaldTanSingWei"},"content":" ","lastModifiedDate":"2021-10-28"},{"lineNumber":347,"author":{"gitId":"RonaldTanSingWei"},"content":"\t  Use case resumes at step 2.","lastModifiedDate":"2021-11-04"},{"lineNumber":348,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":349,"author":{"gitId":"RonaldTanSingWei"},"content":"**Use case 5 (UC5): Find friends by tag**","lastModifiedDate":"2021-11-08"},{"lineNumber":350,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":351,"author":{"gitId":"RonaldTanSingWei"},"content":"**MSS:**","lastModifiedDate":"2021-11-08"},{"lineNumber":352,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":353,"author":{"gitId":"RonaldTanSingWei"},"content":"1. User specifies a set of keywords.","lastModifiedDate":"2021-11-08"},{"lineNumber":354,"author":{"gitId":"RonaldTanSingWei"},"content":"2. FriendBook displays a list of person(s) with tags matching the keyword(s).","lastModifiedDate":"2021-11-08"},{"lineNumber":355,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":356,"author":{"gitId":"RonaldTanSingWei"},"content":"   Use case ends.","lastModifiedDate":"2021-11-08"},{"lineNumber":357,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":358,"author":{"gitId":"RonaldTanSingWei"},"content":"**Extensions:**","lastModifiedDate":"2021-11-08"},{"lineNumber":359,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":360,"author":{"gitId":"RonaldTanSingWei"},"content":"* 2a: List is empty.","lastModifiedDate":"2021-11-08"},{"lineNumber":361,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":362,"author":{"gitId":"RonaldTanSingWei"},"content":"  Use case ends.","lastModifiedDate":"2021-11-08"},{"lineNumber":363,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":364,"author":{"gitId":"RonaldTanSingWei"},"content":"* 2b: Keywords do not match any of the tags that any of the friends have.","lastModifiedDate":"2021-11-08"},{"lineNumber":365,"author":{"gitId":"RonaldTanSingWei"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":366,"author":{"gitId":"RonaldTanSingWei"},"content":"    * 2b1: FriendBook displays an empty list.","lastModifiedDate":"2021-11-08"},{"lineNumber":367,"author":{"gitId":"RonaldTanSingWei"},"content":"      ","lastModifiedDate":"2021-11-08"},{"lineNumber":368,"author":{"gitId":"RonaldTanSingWei"},"content":"      Use case ends.","lastModifiedDate":"2021-11-08"},{"lineNumber":369,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":370,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":371,"author":{"gitId":"RonaldTanSingWei"},"content":"**Use case 6 (UC6): Find friends by name**","lastModifiedDate":"2021-11-08"},{"lineNumber":372,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":373,"author":{"gitId":"RonaldTanSingWei"},"content":"**MSS:**","lastModifiedDate":"2021-11-08"},{"lineNumber":374,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":375,"author":{"gitId":"RonaldTanSingWei"},"content":"1. User specifies a set of keywords.","lastModifiedDate":"2021-11-08"},{"lineNumber":376,"author":{"gitId":"RonaldTanSingWei"},"content":"2. FriendBook displays a list of person(s) with names matching the keyword(s).","lastModifiedDate":"2021-11-08"},{"lineNumber":377,"author":{"gitId":"RonaldTanSingWei"},"content":"  ","lastModifiedDate":"2021-10-28"},{"lineNumber":378,"author":{"gitId":"RonaldTanSingWei"},"content":"    Use case ends.","lastModifiedDate":"2021-10-28"},{"lineNumber":379,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":380,"author":{"gitId":"RonaldTanSingWei"},"content":"**Extensions:**","lastModifiedDate":"2021-10-28"},{"lineNumber":381,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":382,"author":{"gitId":"RonaldTanSingWei"},"content":"* 2a: List is empty.","lastModifiedDate":"2021-10-28"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":384,"author":{"gitId":"RonaldTanSingWei"},"content":"  Use case ends.","lastModifiedDate":"2021-10-28"},{"lineNumber":385,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":386,"author":{"gitId":"RonaldTanSingWei"},"content":"* 2b: Keywords do not match any of the names that any of the friends have.","lastModifiedDate":"2021-11-08"},{"lineNumber":387,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":388,"author":{"gitId":"RonaldTanSingWei"},"content":"    * 2b1: FriendBook displays an empty list.","lastModifiedDate":"2021-11-08"},{"lineNumber":389,"author":{"gitId":"RonaldTanSingWei"},"content":"      ","lastModifiedDate":"2021-10-28"},{"lineNumber":390,"author":{"gitId":"RonaldTanSingWei"},"content":"      Use case ends.","lastModifiedDate":"2021-11-08"},{"lineNumber":391,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":392,"author":{"gitId":"RonaldTanSingWei"},"content":"**Use case 7 (UC7): View friend details**","lastModifiedDate":"2021-11-08"},{"lineNumber":393,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":394,"author":{"gitId":"RonaldTanSingWei"},"content":"**MSS:**","lastModifiedDate":"2021-10-28"},{"lineNumber":395,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":396,"author":{"gitId":"RonaldTanSingWei"},"content":"1. User requests to list friends.","lastModifiedDate":"2021-11-08"},{"lineNumber":397,"author":{"gitId":"RonaldTanSingWei"},"content":"2. FriendBook shows the list of friends.","lastModifiedDate":"2021-11-08"},{"lineNumber":398,"author":{"gitId":"RonaldTanSingWei"},"content":"3. User requests to view the complete details of a specified friend in the list.","lastModifiedDate":"2021-11-08"},{"lineNumber":399,"author":{"gitId":"RonaldTanSingWei"},"content":"4. FriendBook displays the full contact details of the specified person.","lastModifiedDate":"2021-11-08"},{"lineNumber":400,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":401,"author":{"gitId":"RonaldTanSingWei"},"content":"   Use case ends.","lastModifiedDate":"2021-10-28"},{"lineNumber":402,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":403,"author":{"gitId":"RonaldTanSingWei"},"content":"**Extensions:**","lastModifiedDate":"2021-10-28"},{"lineNumber":404,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":405,"author":{"gitId":"RonaldTanSingWei"},"content":"* 2a: List is empty.","lastModifiedDate":"2021-10-28"},{"lineNumber":406,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":407,"author":{"gitId":"RonaldTanSingWei"},"content":"  Use case ends.","lastModifiedDate":"2021-10-28"},{"lineNumber":408,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":409,"author":{"gitId":"RonaldTanSingWei"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-11-08"},{"lineNumber":410,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":411,"author":{"gitId":"RonaldTanSingWei"},"content":"    * 3a1. FriendBook shows an error message.","lastModifiedDate":"2021-11-08"},{"lineNumber":412,"author":{"gitId":"RonaldTanSingWei"},"content":"      ","lastModifiedDate":"2021-11-08"},{"lineNumber":413,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-11-08"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":415,"author":{"gitId":"RonaldTanSingWei"},"content":"#### Birthday Use Cases","lastModifiedDate":"2021-11-08"},{"lineNumber":416,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":417,"author":{"gitId":"RonaldTanSingWei"},"content":"**Use case 8 (UC8): View friends by birthday**","lastModifiedDate":"2021-11-08"},{"lineNumber":418,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":419,"author":{"gitId":"RonaldTanSingWei"},"content":"**MSS:**","lastModifiedDate":"2021-10-28"},{"lineNumber":420,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":421,"author":{"gitId":"RonaldTanSingWei"},"content":"1. User requests to list friends.","lastModifiedDate":"2021-11-08"},{"lineNumber":422,"author":{"gitId":"RonaldTanSingWei"},"content":"2. FriendBook shows the list of friends.","lastModifiedDate":"2021-11-08"},{"lineNumber":423,"author":{"gitId":"RonaldTanSingWei"},"content":"3. User requests to view the birthday of a specified person in the list.","lastModifiedDate":"2021-11-08"},{"lineNumber":424,"author":{"gitId":"RonaldTanSingWei"},"content":"4. FriendBook displays the birthday of the specified person. ","lastModifiedDate":"2021-11-08"},{"lineNumber":425,"author":{"gitId":"RonaldTanSingWei"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":426,"author":{"gitId":"RonaldTanSingWei"},"content":"    Use case ends.","lastModifiedDate":"2021-10-28"},{"lineNumber":427,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":428,"author":{"gitId":"RonaldTanSingWei"},"content":"**Extensions:**","lastModifiedDate":"2021-10-28"},{"lineNumber":429,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":430,"author":{"gitId":"RonaldTanSingWei"},"content":"* 2a: List is empty.","lastModifiedDate":"2021-10-28"},{"lineNumber":431,"author":{"gitId":"RonaldTanSingWei"},"content":"  ","lastModifiedDate":"2021-10-28"},{"lineNumber":432,"author":{"gitId":"RonaldTanSingWei"},"content":"  Use case ends.","lastModifiedDate":"2021-10-28"},{"lineNumber":433,"author":{"gitId":"RonaldTanSingWei"},"content":"  ","lastModifiedDate":"2021-10-28"},{"lineNumber":434,"author":{"gitId":"RonaldTanSingWei"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-11-08"},{"lineNumber":435,"author":{"gitId":"RonaldTanSingWei"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":436,"author":{"gitId":"RonaldTanSingWei"},"content":"  * 3a1. FriendBook shows an error message.","lastModifiedDate":"2021-11-08"},{"lineNumber":437,"author":{"gitId":"RonaldTanSingWei"},"content":"    ","lastModifiedDate":"2021-11-08"},{"lineNumber":438,"author":{"gitId":"RonaldTanSingWei"},"content":"    Use case resumes at step 2.","lastModifiedDate":"2021-11-08"},{"lineNumber":439,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":440,"author":{"gitId":"RonaldTanSingWei"},"content":"**Use case 9 (UC9): View friend\u0027s age**","lastModifiedDate":"2021-11-08"},{"lineNumber":441,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":442,"author":{"gitId":"RonaldTanSingWei"},"content":"**MSS:**","lastModifiedDate":"2021-10-28"},{"lineNumber":443,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":444,"author":{"gitId":"RonaldTanSingWei"},"content":"1. User requests to list friends.","lastModifiedDate":"2021-11-08"},{"lineNumber":445,"author":{"gitId":"RonaldTanSingWei"},"content":"2. FriendBook shows the list of friends.","lastModifiedDate":"2021-11-08"},{"lineNumber":446,"author":{"gitId":"RonaldTanSingWei"},"content":"3. User requests to view the age of a specified person in the list.","lastModifiedDate":"2021-11-08"},{"lineNumber":447,"author":{"gitId":"RonaldTanSingWei"},"content":"4. FriendBook displays the age of the specified person.","lastModifiedDate":"2021-11-08"},{"lineNumber":448,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":449,"author":{"gitId":"RonaldTanSingWei"},"content":"    Use case ends.","lastModifiedDate":"2021-10-28"},{"lineNumber":450,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":451,"author":{"gitId":"RonaldTanSingWei"},"content":"**Extensions:**","lastModifiedDate":"2021-10-28"},{"lineNumber":452,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":453,"author":{"gitId":"RonaldTanSingWei"},"content":"* 2a: List is empty.","lastModifiedDate":"2021-11-04"},{"lineNumber":454,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":455,"author":{"gitId":"RonaldTanSingWei"},"content":"  Use case ends.","lastModifiedDate":"2021-11-04"},{"lineNumber":456,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":457,"author":{"gitId":"RonaldTanSingWei"},"content":"* 3a: The given index is invalid.","lastModifiedDate":"2021-11-08"},{"lineNumber":458,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":459,"author":{"gitId":"RonaldTanSingWei"},"content":"    * 3a1: FriendBook shows an error message.","lastModifiedDate":"2021-11-08"},{"lineNumber":460,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":461,"author":{"gitId":"RonaldTanSingWei"},"content":"      Use case ends.","lastModifiedDate":"2021-11-08"},{"lineNumber":462,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":463,"author":{"gitId":"RonaldTanSingWei"},"content":"#### Reminder Use Cases","lastModifiedDate":"2021-11-08"},{"lineNumber":464,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":465,"author":{"gitId":"RonaldTanSingWei"},"content":"**Use case 10 (UC10): Set birthday reminder for a friend**","lastModifiedDate":"2021-11-08"},{"lineNumber":466,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":467,"author":{"gitId":"RonaldTanSingWei"},"content":"**MSS:**","lastModifiedDate":"2021-10-28"},{"lineNumber":468,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":469,"author":{"gitId":"RonaldTanSingWei"},"content":"1. User requests to list friends.","lastModifiedDate":"2021-11-08"},{"lineNumber":470,"author":{"gitId":"RonaldTanSingWei"},"content":"2. FriendBook shows the list of friends.","lastModifiedDate":"2021-11-08"},{"lineNumber":471,"author":{"gitId":"RonaldTanSingWei"},"content":"3. User sets the birthday reminder of a selected friend to on.","lastModifiedDate":"2021-11-08"},{"lineNumber":472,"author":{"gitId":"RonaldTanSingWei"},"content":"4. FriendBook updates the reminder for that selected person to on.","lastModifiedDate":"2021-11-08"},{"lineNumber":473,"author":{"gitId":"RonaldTanSingWei"},"content":"   ","lastModifiedDate":"2021-10-28"},{"lineNumber":474,"author":{"gitId":"RonaldTanSingWei"},"content":"   Use case ends.","lastModifiedDate":"2021-10-28"},{"lineNumber":475,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":476,"author":{"gitId":"RonaldTanSingWei"},"content":"**Extensions:**","lastModifiedDate":"2021-10-28"},{"lineNumber":477,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":478,"author":{"gitId":"RonaldTanSingWei"},"content":"* 2a: List is empty.","lastModifiedDate":"2021-11-08"},{"lineNumber":479,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":480,"author":{"gitId":"RonaldTanSingWei"},"content":"  Use case ends.","lastModifiedDate":"2021-11-08"},{"lineNumber":481,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":482,"author":{"gitId":"RonaldTanSingWei"},"content":"* 3a: The selected friend already has the birthday reminder turned on.","lastModifiedDate":"2021-11-08"},{"lineNumber":483,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":484,"author":{"gitId":"RonaldTanSingWei"},"content":"    * 3a1. FriendBook keeps the selected friend’s reminder turned on.","lastModifiedDate":"2021-11-08"},{"lineNumber":485,"author":{"gitId":"RonaldTanSingWei"},"content":"  ","lastModifiedDate":"2021-10-28"},{"lineNumber":486,"author":{"gitId":"RonaldTanSingWei"},"content":"      Use case ends.","lastModifiedDate":"2021-11-04"},{"lineNumber":487,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":488,"author":{"gitId":"RonaldTanSingWei"},"content":"* 3b: The selected index is invalid.","lastModifiedDate":"2021-11-08"},{"lineNumber":489,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":490,"author":{"gitId":"RonaldTanSingWei"},"content":"    * 3b1. FriendBook shows an error message.","lastModifiedDate":"2021-11-08"},{"lineNumber":491,"author":{"gitId":"RonaldTanSingWei"},"content":"    ","lastModifiedDate":"2021-11-08"},{"lineNumber":492,"author":{"gitId":"RonaldTanSingWei"},"content":"      Use case resumes at Step 2.","lastModifiedDate":"2021-11-08"},{"lineNumber":493,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":494,"author":{"gitId":"RonaldTanSingWei"},"content":"#### Social Interaction Use Cases","lastModifiedDate":"2021-11-08"},{"lineNumber":495,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":496,"author":{"gitId":"RonaldTanSingWei"},"content":"**Use case 11 (UC11): Add friend\u0027s Telegram ID**","lastModifiedDate":"2021-11-08"},{"lineNumber":497,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":498,"author":{"gitId":"RonaldTanSingWei"},"content":"**MSS**","lastModifiedDate":"2021-11-08"},{"lineNumber":499,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":500,"author":{"gitId":"RonaldTanSingWei"},"content":"1. User requests to list friends.","lastModifiedDate":"2021-11-08"},{"lineNumber":501,"author":{"gitId":"RonaldTanSingWei"},"content":"2. FriendBook shows the list of friends.","lastModifiedDate":"2021-11-08"},{"lineNumber":502,"author":{"gitId":"RonaldTanSingWei"},"content":"3. User requests to add the Telegram ID of a specific friend in the list.","lastModifiedDate":"2021-11-08"},{"lineNumber":503,"author":{"gitId":"RonaldTanSingWei"},"content":"4. FriendBook updates the friend\u0027s information by adding the Telegram ID.","lastModifiedDate":"2021-11-08"},{"lineNumber":504,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":505,"author":{"gitId":"RonaldTanSingWei"},"content":"    Use case ends.","lastModifiedDate":"2021-11-07"},{"lineNumber":506,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":507,"author":{"gitId":"RonaldTanSingWei"},"content":"**Extensions:**","lastModifiedDate":"2021-11-08"},{"lineNumber":508,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":509,"author":{"gitId":"RonaldTanSingWei"},"content":"* 2a: List is empty.","lastModifiedDate":"2021-11-08"},{"lineNumber":510,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":511,"author":{"gitId":"RonaldTanSingWei"},"content":"  Use case ends.","lastModifiedDate":"2021-11-08"},{"lineNumber":512,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":513,"author":{"gitId":"RonaldTanSingWei"},"content":"* 3a: The selected friend already has a Telegram ID.","lastModifiedDate":"2021-11-08"},{"lineNumber":514,"author":{"gitId":"RonaldTanSingWei"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":515,"author":{"gitId":"RonaldTanSingWei"},"content":"    * 3a1. FriendBook replaces the current Telegram ID with the new Telegram ID input.","lastModifiedDate":"2021-11-08"},{"lineNumber":516,"author":{"gitId":"RonaldTanSingWei"},"content":"    ","lastModifiedDate":"2021-11-08"},{"lineNumber":517,"author":{"gitId":"RonaldTanSingWei"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2021-11-08"},{"lineNumber":518,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":519,"author":{"gitId":"RonaldTanSingWei"},"content":"* 3b: The selected index is invalid.","lastModifiedDate":"2021-11-08"},{"lineNumber":520,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":521,"author":{"gitId":"RonaldTanSingWei"},"content":"    * 3b1. FriendBook shows an error message.","lastModifiedDate":"2021-11-08"},{"lineNumber":522,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":523,"author":{"gitId":"RonaldTanSingWei"},"content":"      Use case resumes at Step 2.","lastModifiedDate":"2021-11-08"},{"lineNumber":524,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":525,"author":{"gitId":"RonaldTanSingWei"},"content":"#### Enhancement Use Cases","lastModifiedDate":"2021-11-08"},{"lineNumber":526,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":527,"author":{"gitId":"RonaldTanSingWei"},"content":"**Use case 12 (UC12): Add Avatar image for friend**","lastModifiedDate":"2021-11-08"},{"lineNumber":528,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":529,"author":{"gitId":"RonaldTanSingWei"},"content":"**MSS**","lastModifiedDate":"2021-11-08"},{"lineNumber":530,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":531,"author":{"gitId":"RonaldTanSingWei"},"content":"1. User requests to list friends.","lastModifiedDate":"2021-11-08"},{"lineNumber":532,"author":{"gitId":"RonaldTanSingWei"},"content":"2. FriendBook shows the list of friends.","lastModifiedDate":"2021-11-08"},{"lineNumber":533,"author":{"gitId":"RonaldTanSingWei"},"content":"3. User requests to add the avatar for a specific friend in the list.","lastModifiedDate":"2021-11-08"},{"lineNumber":534,"author":{"gitId":"RonaldTanSingWei"},"content":"4. FriendBook updates the friend\u0027s information by adding the avatar.","lastModifiedDate":"2021-11-08"},{"lineNumber":535,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":536,"author":{"gitId":"RonaldTanSingWei"},"content":"    Use case ends.","lastModifiedDate":"2021-11-07"},{"lineNumber":537,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":538,"author":{"gitId":"RonaldTanSingWei"},"content":"**Extensions:**","lastModifiedDate":"2021-11-07"},{"lineNumber":539,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":540,"author":{"gitId":"RonaldTanSingWei"},"content":"* 2a: List is empty.","lastModifiedDate":"2021-11-07"},{"lineNumber":541,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":542,"author":{"gitId":"RonaldTanSingWei"},"content":"  Use case ends.","lastModifiedDate":"2021-11-07"},{"lineNumber":543,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":544,"author":{"gitId":"RonaldTanSingWei"},"content":"* 3a: The selected friend already has an avatar.","lastModifiedDate":"2021-11-08"},{"lineNumber":545,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":546,"author":{"gitId":"RonaldTanSingWei"},"content":"    * 3a1. FriendBook replaces the current avatar with the new avatar input.","lastModifiedDate":"2021-11-08"},{"lineNumber":547,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":548,"author":{"gitId":"RonaldTanSingWei"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2021-11-08"},{"lineNumber":549,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":550,"author":{"gitId":"RonaldTanSingWei"},"content":"* 3b: The selected index is invalid.","lastModifiedDate":"2021-11-08"},{"lineNumber":551,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":552,"author":{"gitId":"RonaldTanSingWei"},"content":"    * 3b1. FriendBook shows an error message.","lastModifiedDate":"2021-11-08"},{"lineNumber":553,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":554,"author":{"gitId":"RonaldTanSingWei"},"content":"      Use case resumes at Step 2.","lastModifiedDate":"2021-11-08"},{"lineNumber":555,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":556,"author":{"gitId":"RonaldTanSingWei"},"content":"**Use case 13 (UC13): View help guide**","lastModifiedDate":"2021-11-08"},{"lineNumber":557,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":558,"author":{"gitId":"RonaldTanSingWei"},"content":"**MSS**","lastModifiedDate":"2021-11-08"},{"lineNumber":559,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":560,"author":{"gitId":"RonaldTanSingWei"},"content":"1. User requests to view the help guide.","lastModifiedDate":"2021-11-08"},{"lineNumber":561,"author":{"gitId":"RonaldTanSingWei"},"content":"2. FriendBook displays the help guide.","lastModifiedDate":"2021-11-08"},{"lineNumber":562,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":563,"author":{"gitId":"RonaldTanSingWei"},"content":"    Use case ends.","lastModifiedDate":"2021-11-08"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":565,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2021-10-26"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":567,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2021-10-26"},{"lineNumber":568,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-10-26"},{"lineNumber":569,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-10-26"},{"lineNumber":570,"author":{"gitId":"RonaldTanSingWei"},"content":"4.  Should be able to operate without the need for Internet connection, although some features may not work as intended","lastModifiedDate":"2021-11-08"},{"lineNumber":571,"author":{"gitId":"RonaldTanSingWei"},"content":"5.  When a user inputs a command, the result should be displayed within 1 second.","lastModifiedDate":"2021-11-08"},{"lineNumber":572,"author":{"gitId":"RonaldTanSingWei"},"content":"6.  Data should be reusable and transferable between multiple devices","lastModifiedDate":"2021-11-08"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":575,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2021-10-26"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":577,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2021-10-26"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":579,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-26"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":581,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2021-10-26"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":583,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2021-10-26"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":585,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2021-10-26"},{"lineNumber":586,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2021-10-26"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":588,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":590,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2021-10-26"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":592,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2021-10-26"},{"lineNumber":593,"author":{"gitId":"pss-coder"},"content":"\t","lastModifiedDate":"2021-10-26"},{"lineNumber":594,"author":{"gitId":"pss-coder"},"content":"\t1. Download the jar file and copy into an empty folder ","lastModifiedDate":"2021-10-26"},{"lineNumber":595,"author":{"gitId":"pss-coder"},"content":"\t","lastModifiedDate":"2021-10-26"},{"lineNumber":596,"author":{"gitId":"xnajasho"},"content":"\t2. Double-click the jar file.\u003cbr\u003e Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2021-11-08"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":598,"author":{"gitId":"xnajasho"},"content":"2. Saving window preferences","lastModifiedDate":"2021-11-08"},{"lineNumber":599,"author":{"gitId":"pss-coder"},"content":"\t","lastModifiedDate":"2021-10-26"},{"lineNumber":600,"author":{"gitId":"pss-coder"},"content":"\t1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2021-10-26"},{"lineNumber":601,"author":{"gitId":"pss-coder"},"content":"\t","lastModifiedDate":"2021-10-26"},{"lineNumber":602,"author":{"gitId":"xnajasho"},"content":"\t2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e Expected: The most recent window size and location is retained.","lastModifiedDate":"2021-11-08"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":604,"author":{"gitId":"xnajasho"},"content":"3. Exiting the app","lastModifiedDate":"2021-11-08"},{"lineNumber":605,"author":{"gitId":"xnajasho"},"content":"\t","lastModifiedDate":"2021-11-08"},{"lineNumber":606,"author":{"gitId":"xnajasho"},"content":"\t1. User has previously entered commands which would have modified data to be different compared to the data at the start of the current session","lastModifiedDate":"2021-11-08"},{"lineNumber":607,"author":{"gitId":"xnajasho"},"content":"\t","lastModifiedDate":"2021-11-08"},{"lineNumber":608,"author":{"gitId":"xnajasho"},"content":"\t2. Exit the app either by force terminating it, or entering the command `exit`. \u003cbr\u003e Expected: GUI window closes. All changes made are saved to the data file and will reflect the latest modified version upon the next session. User preferences are saved as well.","lastModifiedDate":"2021-11-08"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":613,"author":{"gitId":"xnajasho"},"content":"### Adding a person","lastModifiedDate":"2021-11-08"},{"lineNumber":614,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":615,"author":{"gitId":"xnajasho"},"content":"1. Adding a person","lastModifiedDate":"2021-11-08"},{"lineNumber":616,"author":{"gitId":"xnajasho"},"content":"\t","lastModifiedDate":"2021-11-08"},{"lineNumber":617,"author":{"gitId":"xnajasho"},"content":"\t1. Test case: `add 1` \u003cbr\u003e Expected: No person is added. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-11-08"},{"lineNumber":618,"author":{"gitId":"xnajasho"},"content":"\t","lastModifiedDate":"2021-11-08"},{"lineNumber":619,"author":{"gitId":"xnajasho"},"content":"\t2. Test case: `Add 1` \u003cbr\u003e Expected: No person is added. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-11-08"},{"lineNumber":620,"author":{"gitId":"xnajasho"},"content":"\t","lastModifiedDate":"2021-11-08"},{"lineNumber":621,"author":{"gitId":"xnajasho"},"content":"\t3. Test case: `add n/James Lim` \u003cbr\u003e Expected: No person is added. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-11-08"},{"lineNumber":622,"author":{"gitId":"xnajasho"},"content":"\t","lastModifiedDate":"2021-11-08"},{"lineNumber":623,"author":{"gitId":"xnajasho"},"content":"\t4. Test case: `add n/James lim p/1234567890 e/jameslime@example.com b/1995-05-23` \u003cbr\u003e Expected: `James Lim` is added to the list and immediately reflected. Details of the newly added contact is shown in the status message.","lastModifiedDate":"2021-11-08"},{"lineNumber":624,"author":{"gitId":"xnajasho"},"content":"\t","lastModifiedDate":"2021-11-08"},{"lineNumber":625,"author":{"gitId":"xnajasho"},"content":"\t5. Test case: Enter the command `add n/Markus lim p/99995555 e/marclim@example.com b/1996-06-24` twice. \u003cbr\u003e Expected: The 1st command succeeds if the contact to add does not already exist in the list, adding him the the list. The 2nd command fails and error details are shown in the status message.","lastModifiedDate":"2021-11-08"},{"lineNumber":626,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":628,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2021-10-26"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":630,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2021-10-26"},{"lineNumber":631,"author":{"gitId":"pss-coder"},"content":"\t","lastModifiedDate":"2021-10-26"},{"lineNumber":632,"author":{"gitId":"pss-coder"},"content":"\t1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":633,"author":{"gitId":"pss-coder"},"content":"\t","lastModifiedDate":"2021-10-26"},{"lineNumber":634,"author":{"gitId":"xnajasho"},"content":"\t2. Test case: `delete 1`\u003cbr\u003e Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2021-11-08"},{"lineNumber":635,"author":{"gitId":"xnajasho"},"content":"\t3. Test case: `delete 0`\u003cbr\u003e Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-11-08"},{"lineNumber":636,"author":{"gitId":"pss-coder"},"content":"\t","lastModifiedDate":"2021-10-26"},{"lineNumber":637,"author":{"gitId":"xnajasho"},"content":"\t4. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e Expected: Similar to previous.","lastModifiedDate":"2021-11-08"},{"lineNumber":638,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":639,"author":{"gitId":"xnajasho"},"content":"2. Deleting a person based on a previous subquery","lastModifiedDate":"2021-11-08"},{"lineNumber":640,"author":{"gitId":"xnajasho"},"content":"\t","lastModifiedDate":"2021-11-08"},{"lineNumber":641,"author":{"gitId":"xnajasho"},"content":"\t1. Prerequisites: Find all persons containing the tags `colleagues` using the `findtag colleagues` command. 2 contacts are shown","lastModifiedDate":"2021-11-08"},{"lineNumber":642,"author":{"gitId":"xnajasho"},"content":"\t","lastModifiedDate":"2021-11-08"},{"lineNumber":643,"author":{"gitId":"xnajasho"},"content":"\t2. Test case: `delete 2`\u003cbr\u003e Expected: Second contact containing the `colleagues` tag is deleted from the list. Details of the deleted contact is shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2021-11-08"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":645,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":647,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":648,"author":{"gitId":"xnajasho"},"content":"### Editing a person","lastModifiedDate":"2021-11-08"},{"lineNumber":649,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":650,"author":{"gitId":"xnajasho"},"content":"1. Editing a person while all persons are being shown","lastModifiedDate":"2021-11-08"},{"lineNumber":651,"author":{"gitId":"xnajasho"},"content":"\t","lastModifiedDate":"2021-11-08"},{"lineNumber":652,"author":{"gitId":"xnajasho"},"content":"\t1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2021-11-08"},{"lineNumber":653,"author":{"gitId":"xnajasho"},"content":"\t","lastModifiedDate":"2021-11-08"},{"lineNumber":654,"author":{"gitId":"xnajasho"},"content":"\t2. Test case: `edit 1`\u003cbr\u003e Expected: No person is edited. Error details is shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-11-08"},{"lineNumber":655,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":656,"author":{"gitId":"xnajasho"},"content":"\t3. Test case: `edit 1 b/2005/02/12`\u003cbr\u003e Expected: No person is edited. Error details is shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-11-08"},{"lineNumber":657,"author":{"gitId":"xnajasho"},"content":"\t","lastModifiedDate":"2021-11-08"},{"lineNumber":658,"author":{"gitId":"xnajasho"},"content":"\t4. Test case: `edit 1 t/` \u003cbr\u003e Expected: 1st person in the list is edited. All tags will of the first person will be removed and GUI will immediately reflect it. Details of the edited contact is shown in the status message.","lastModifiedDate":"2021-11-08"},{"lineNumber":659,"author":{"gitId":"xnajasho"},"content":"\t","lastModifiedDate":"2021-11-08"},{"lineNumber":660,"author":{"gitId":"xnajasho"},"content":"\t5. Test case: Enter `edit 2 p/88452324`, then `edit 3 p/88452324` \u003cbr\u003e Expected: First command will be successful and the 2nd person will be edited. Upon execution of the 2nd command, the 3rd person will not be edited. Error details is shown in the status message pertaining to duplicate phone number. Status bar remains the same.","lastModifiedDate":"2021-11-08"},{"lineNumber":661,"author":{"gitId":"xnajasho"},"content":"\t","lastModifiedDate":"2021-11-08"},{"lineNumber":662,"author":{"gitId":"xnajasho"},"content":"\t6. Test case: Enter `edit 2 e/example123456@example.com`, then `edit 3 e/example123456@example.com` \u003cbr\u003e Expected: First command will be successful and the 2nd person will be edited. Upon execution of the 2nd command, the 3rd person will not be edited. Error details is shown in the status message pertaining to duplicate phone emails. Status bar remains the same.","lastModifiedDate":"2021-11-08"},{"lineNumber":663,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":664,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":667,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2021-10-26"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":669,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2021-10-26"},{"lineNumber":670,"author":{"gitId":"pss-coder"},"content":"\t","lastModifiedDate":"2021-10-26"},{"lineNumber":671,"author":{"gitId":"xnajasho"},"content":"\t1. Simulating missing data files: \u003cbr\u003e Navigate to the directory the jar file is in and delete the `friendbook.json` file located in the `data` directory. Double-click and relaunch the jar file. \u003cbr\u003e Expected: Shows the GUI with a set of sample contacts. Any previously stored contacts will be replaced by the sample contacts.","lastModifiedDate":"2021-11-08"},{"lineNumber":672,"author":{"gitId":"pss-coder"},"content":"\t","lastModifiedDate":"2021-10-26"},{"lineNumber":673,"author":{"gitId":"xnajasho"},"content":"\t2. Simulating corrupted data files: \u003cbr\u003e Navigate to the directory the jar file is in and edit the `friendbook.json` file located in the `data` directory. Change the name of the first contact to `Alex Yeoh--Bing Xuan` and save the file. Relaunch the jar file. \u003cbr\u003e Expected: Shows the GUI with an empty list of contacts. Corrupted data file will not be replaced by an empty data file unless the user types `exit`.","lastModifiedDate":"2021-11-08"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":676,"author":{"gitId":"pss-coder"},"content":"---","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"RonaldTanSingWei":291,"xnajasho":54,"-":245,"pss-coder":85,"SajalVaishnav":1}},{"path":"docs/Documentation.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Documentation guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"**Setting up and maintaining the project website:**","lastModifiedDate":"2020-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* We use [**Jekyll**](https://jekyllrb.com/) to manage documentation.","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"* The `docs/` folder is used for documentation.","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* To learn how set it up and maintain the project website, follow the guide [_[se-edu/guides] **Using Jekyll for project documentation**_](https://se-education.org/guides/tutorials/jekyll.html).","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* Note these points when adapting the documentation to a different project/product:","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * The \u0027Site-wide settings\u0027 section of the page linked above has information on how to update site-wide elements such as the top navigation bar.","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * :bulb: In addition to updating content files, you might have to update the config files `docs\\_config.yml` and `docs\\_sass\\minima\\_base.scss` (which contains a reference to `AB-3` that comes into play when converting documentation pages to PDF format).","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* If you are using Intellij for editing documentation files, you can consider enabling \u0027soft wrapping\u0027 for `*.md` files, as explained in [_[se-edu/guides] **Intellij IDEA: Useful settings**_](https://se-education.org/guides/tutorials/intellijUsefulSettings.html#enabling-soft-wrapping)","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Style guidance:**","lastModifiedDate":"2020-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Follow the [**_Google developer documentation style guide_**](https://developers.google.com/style).","lastModifiedDate":"2020-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Also relevant is the [_[se-edu/guides] **Markdown coding standard**_](https://se-education.org/guides/conventions/markdown.html)","lastModifiedDate":"2020-06-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**Diagrams:**","lastModifiedDate":"2020-06-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"pss-coder"},"content":"* See the [**diagrams.net**](https://www.diagrams.net/)","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"**Converting a document to the PDF format:**","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* See the guide [_[se-edu/guides] **Saving web documents as PDF files**_](https://se-education.org/guides/tutorials/savingPdf.html)","lastModifiedDate":"2020-06-07"}],"authorContributionMap":{"-":28,"pss-coder":1}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"pss-coder"},"content":"   1. Run the `seedu.friendbook.Main` and try a few commands.","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"-":54,"pss-coder":1}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"pss-coder"},"content":"   e.g. `seedu.friendbook.commons.StringUtilTest`","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"pss-coder"},"content":"   e.g. `seedu.friendbook.storage.StorageManagerTest`","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"pss-coder"},"content":"   e.g. `seedu.friendbook.logic.LogicManagerTest`","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"-":33,"pss-coder":3}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"FriendBook is a **desktop app for managing your friends and is optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"If you can type fast, FriendBook can get your friend management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"FriendBook is mainly targeted for **users with many friends.**","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"FriendBook addresses the question: **How might we provide users with many ways to manage their friends’ contacts and remember their friends\u0027 birthdays?**","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"RonaldTanSingWei"},"content":"_FriendBook provides a contact management platform for users with many friends to track their friends’ contacts. ","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":"Additionally, it also helps users to keep track of social interactions, such as contacting others on Telegram and keeping track of their friends\u0027 birthdays to celebrate with them._","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"RonaldTanSingWei"},"content":"## Quick Start","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"RonaldTanSingWei"},"content":"2. Download the latest `FriendBook.jar` from [here](https://github.com/AY2122S1-CS2103-F10-3/tp/releases/tag/v1.4).","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"pss-coder"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your FriendBook.","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"pss-coder"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"pss-coder"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"pss-coder"},"content":"   * **`list`** : Lists all friends.","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"pss-coder"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 b/1994-03-03` : Adds a friend named `John Doe` to the Friend Book.","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"RonaldTanSingWei"},"content":"   * **`delete`**`3` : Deletes the 3rd friend shown in the friend list.","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"pss-coder"},"content":"   * **`clear`** : Deletes all friends.","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"RonaldTanSingWei"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"xnajasho"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"RonaldTanSingWei"},"content":"FriendBook allows for the friends stored to be assigned a custom avatar from 1 of 20 premade avatars for more personality.","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"RonaldTanSingWei"},"content":"To select an avatar, assign the user the avatar based on its number from 1 to 20 e.g `edit 1 avatar/15`","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"RonaldTanSingWei"},"content":"![Avatar Example](images/AvatarExample.png)","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"pss-coder"},"content":"An avatar with the number 0 `edit 1 avatar/0` resets the avatar to its default image.","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"RonaldTanSingWei"},"content":"**Custom Profile**","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"RonaldTanSingWei"},"content":"FriendBook allows users to customise their own profile by adding their own name to the FriendBook. Their name would then be recorded at the top, beside the welcome statement","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":89,"author":{"gitId":"RonaldTanSingWei"},"content":"\u003cimg src\u003d\"images/PersonalProfile.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":90,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":91,"author":{"gitId":"RonaldTanSingWei"},"content":"A user who has set their profile to FriendBookUser.","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":93,"author":{"gitId":"RonaldTanSingWei"},"content":"**Friend Windows**","lastModifiedDate":"2021-11-08"},{"lineNumber":94,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":95,"author":{"gitId":"RonaldTanSingWei"},"content":"Users can view the windows of their friends using the `view` command","lastModifiedDate":"2021-11-08"},{"lineNumber":96,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":97,"author":{"gitId":"RonaldTanSingWei"},"content":"An example of a profile with only the necessary information added:","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"RonaldTanSingWei"},"content":"\u003cimg src\u003d\"images/MinimumProfileExample.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":101,"author":{"gitId":"RonaldTanSingWei"},"content":"An example of a profile with all the fields filled in:","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":103,"author":{"gitId":"RonaldTanSingWei"},"content":"\u003cimg src\u003d\"images/FullProfileExample.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"RonaldTanSingWei"},"content":"**Reminder Feature**","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":107,"author":{"gitId":"pss-coder"},"content":"The reminder feature is a feature designed for users to reminded of their friends\u0027 birthdays at an intervals of every 12 hours with a 10 second starting delay on application launch.","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"pss-coder"},"content":"The reminder interval resets with any reminder updated for a friend.","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":110,"author":{"gitId":"RonaldTanSingWei"},"content":"![Reminder Example](images/ReminderExample.png)","lastModifiedDate":"2021-11-01"},{"lineNumber":111,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":112,"author":{"gitId":"RonaldTanSingWei"},"content":"The checkbox under each individual friend labelled \u0027Enable Notification\u0027 allows users to select the birthdays of the friends that they wish to be reminded of.","lastModifiedDate":"2021-11-02"},{"lineNumber":113,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":114,"author":{"gitId":"pss-coder"},"content":"Checking the reminder box sends the user a notification reminding them of that specific friend\u0027s birthday within a week or less and notifies every twelve hours before birthday has already past to the following year.","lastModifiedDate":"2021-11-07"},{"lineNumber":115,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":116,"author":{"gitId":"pss-coder"},"content":"Below is a screenshot of the reminder alert based from the example above.","lastModifiedDate":"2021-11-08"},{"lineNumber":117,"author":{"gitId":"pss-coder"},"content":"![Reminder Example](images/ReminderAlertExample.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":118,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":119,"author":{"gitId":"RonaldTanSingWei"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"xnajasho"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-07"},{"lineNumber":122,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"xnajasho"},"content":"## Constraints","lastModifiedDate":"2021-11-07"},{"lineNumber":124,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"xnajasho"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":126,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":127,"author":{"gitId":"xnajasho"},"content":"**:information_source: Summary of the various constraints for each field:**\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":128,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":129,"author":{"gitId":"xnajasho"},"content":"The various fields in a contact have differing constraints from one another. Below are the contraints to ensure valid fields are entered correctly. Fields which are not mentioned have no restrictions on input.","lastModifiedDate":"2021-11-07"},{"lineNumber":130,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":131,"author":{"gitId":"xnajasho"},"content":"**Name (Compulsory)**","lastModifiedDate":"2021-11-07"},{"lineNumber":132,"author":{"gitId":"xnajasho"},"content":"   * Names can only contain alphanumeric characters/spaces/hyphens/underscores.\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":133,"author":{"gitId":"xnajasho"},"content":"   ","lastModifiedDate":"2021-11-07"},{"lineNumber":134,"author":{"gitId":"xnajasho"},"content":"   * Names are not allowed to start with numbers e.g `123 John`.\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":135,"author":{"gitId":"xnajasho"},"content":"   ","lastModifiedDate":"2021-11-07"},{"lineNumber":136,"author":{"gitId":"xnajasho"},"content":"   * Names cannot consist solely of numbers.\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":137,"author":{"gitId":"xnajasho"},"content":"   ","lastModifiedDate":"2021-11-07"},{"lineNumber":138,"author":{"gitId":"xnajasho"},"content":"   * Hyphens/Underscores present MUST be preced by a character.\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":139,"author":{"gitId":"xnajasho"},"content":"   ","lastModifiedDate":"2021-11-07"},{"lineNumber":140,"author":{"gitId":"xnajasho"},"content":"   * Consecutive hyphens/underscores are not allowed.\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":141,"author":{"gitId":"xnajasho"},"content":"   ","lastModifiedDate":"2021-11-07"},{"lineNumber":142,"author":{"gitId":"xnajasho"},"content":"   * Names are not allowed to begin with spaces.\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":143,"author":{"gitId":"xnajasho"},"content":"   ","lastModifiedDate":"2021-11-07"},{"lineNumber":144,"author":{"gitId":"xnajasho"},"content":"**Phone (Compulsory)**","lastModifiedDate":"2021-11-07"},{"lineNumber":145,"author":{"gitId":"xnajasho"},"content":"   * Only consists of numbers, and at least 3 digits long.\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":146,"author":{"gitId":"xnajasho"},"content":"   ","lastModifiedDate":"2021-11-07"},{"lineNumber":147,"author":{"gitId":"xnajasho"},"content":"   * No two people can have the same phone numbers.\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":148,"author":{"gitId":"xnajasho"},"content":"   ","lastModifiedDate":"2021-11-07"},{"lineNumber":149,"author":{"gitId":"xnajasho"},"content":"   ","lastModifiedDate":"2021-11-07"},{"lineNumber":150,"author":{"gitId":"xnajasho"},"content":"**Email (Compulsory)**","lastModifiedDate":"2021-11-07"},{"lineNumber":151,"author":{"gitId":"xnajasho"},"content":"   * Emails should be of the format `local-part@domain`.\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":152,"author":{"gitId":"xnajasho"},"content":"  ","lastModifiedDate":"2021-11-07"},{"lineNumber":153,"author":{"gitId":"xnajasho"},"content":"      * The local-part should only contain alphanumeric characters and any of these special characters: `+`, `_`, `.`, `-`","lastModifiedDate":"2021-11-07"},{"lineNumber":154,"author":{"gitId":"xnajasho"},"content":"      ","lastModifiedDate":"2021-11-07"},{"lineNumber":155,"author":{"gitId":"xnajasho"},"content":"      * The local-part should not start or end with any of the above special characters","lastModifiedDate":"2021-11-07"},{"lineNumber":156,"author":{"gitId":"xnajasho"},"content":"      ","lastModifiedDate":"2021-11-07"},{"lineNumber":157,"author":{"gitId":"xnajasho"},"content":"      * The domain name must:","lastModifiedDate":"2021-11-07"},{"lineNumber":158,"author":{"gitId":"xnajasho"},"content":"   ","lastModifiedDate":"2021-11-07"},{"lineNumber":159,"author":{"gitId":"xnajasho"},"content":"         * end with a domain label at least 2 characters long e.g  `com`, `net`","lastModifiedDate":"2021-11-07"},{"lineNumber":160,"author":{"gitId":"xnajasho"},"content":"         ","lastModifiedDate":"2021-11-07"},{"lineNumber":161,"author":{"gitId":"xnajasho"},"content":"         * have each domain label start and end with an alphanumeric character.","lastModifiedDate":"2021-11-07"},{"lineNumber":162,"author":{"gitId":"xnajasho"},"content":"         ","lastModifiedDate":"2021-11-07"},{"lineNumber":163,"author":{"gitId":"xnajasho"},"content":"         * have each domain label separated by periods.","lastModifiedDate":"2021-11-07"},{"lineNumber":164,"author":{"gitId":"xnajasho"},"content":"   ","lastModifiedDate":"2021-11-07"},{"lineNumber":165,"author":{"gitId":"xnajasho"},"content":"         * have each domain label consist of alphanumeric characters, separated by hyphens (if any).","lastModifiedDate":"2021-11-07"},{"lineNumber":166,"author":{"gitId":"xnajasho"},"content":"   ","lastModifiedDate":"2021-11-07"},{"lineNumber":167,"author":{"gitId":"xnajasho"},"content":"   * No two people can have the same email.\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":168,"author":{"gitId":"xnajasho"},"content":"   ","lastModifiedDate":"2021-11-07"},{"lineNumber":169,"author":{"gitId":"xnajasho"},"content":"**Birthday (Compulsory)**","lastModifiedDate":"2021-11-07"},{"lineNumber":170,"author":{"gitId":"xnajasho"},"content":"   * Only `YYYY-MM-DD` format is allowed","lastModifiedDate":"2021-11-07"},{"lineNumber":171,"author":{"gitId":"xnajasho"},"content":"   ","lastModifiedDate":"2021-11-07"},{"lineNumber":172,"author":{"gitId":"xnajasho"},"content":"**Avatar**","lastModifiedDate":"2021-11-07"},{"lineNumber":173,"author":{"gitId":"xnajasho"},"content":"   * Only avatar numbers from 0 to 20 are allowed","lastModifiedDate":"2021-11-07"},{"lineNumber":174,"author":{"gitId":"xnajasho"},"content":"      ","lastModifiedDate":"2021-11-07"},{"lineNumber":175,"author":{"gitId":"xnajasho"},"content":"**TeleHandle**","lastModifiedDate":"2021-11-07"},{"lineNumber":176,"author":{"gitId":"xnajasho"},"content":"   * Handles are case-insensitive, can contain underscores and digits","lastModifiedDate":"2021-11-07"},{"lineNumber":177,"author":{"gitId":"xnajasho"},"content":"   ","lastModifiedDate":"2021-11-07"},{"lineNumber":178,"author":{"gitId":"xnajasho"},"content":"   * Handles must be at least 5 characters long","lastModifiedDate":"2021-11-07"},{"lineNumber":179,"author":{"gitId":"xnajasho"},"content":"   ","lastModifiedDate":"2021-11-07"},{"lineNumber":180,"author":{"gitId":"xnajasho"},"content":"   * `@` domain is not required in the input. ","lastModifiedDate":"2021-11-07"},{"lineNumber":181,"author":{"gitId":"xnajasho"},"content":"      ","lastModifiedDate":"2021-11-07"},{"lineNumber":182,"author":{"gitId":"xnajasho"},"content":"**Reminder**","lastModifiedDate":"2021-11-07"},{"lineNumber":183,"author":{"gitId":"xnajasho"},"content":"   * Only 2 valid inputs - `on` and `off`. Both are case-insensitive","lastModifiedDate":"2021-11-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"pss-coder"},"content":"### Adding a Friend: `add`","lastModifiedDate":"2021-10-28"},{"lineNumber":188,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":189,"author":{"gitId":"pss-coder"},"content":"Adds a friend to the FriendBook.","lastModifiedDate":"2021-10-28"},{"lineNumber":190,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":191,"author":{"gitId":"xnajasho"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL b/BIRTHDAY [a/ADDRESS] [avatar/AVATAR] [tele/TELEHANDLE] [desc/DESCRIPTION] [r/REMINDER] [t/TAG]…​`","lastModifiedDate":"2021-11-07"},{"lineNumber":192,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":193,"author":{"gitId":"RonaldTanSingWei"},"content":"* Friends can have the same name, but must have different phone numbers, emails and addresses","lastModifiedDate":"2021-11-08"},{"lineNumber":194,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":195,"author":{"gitId":"RonaldTanSingWei"},"content":"* A friend can have any number of tags (including 0)","lastModifiedDate":"2021-11-08"},{"lineNumber":196,"author":{"gitId":"RonaldTanSingWei"},"content":"   ","lastModifiedDate":"2021-11-08"},{"lineNumber":197,"author":{"gitId":"RonaldTanSingWei"},"content":"* The avatar value must only be from 0 to 20","lastModifiedDate":"2021-11-08"},{"lineNumber":198,"author":{"gitId":"RonaldTanSingWei"},"content":"   ","lastModifiedDate":"2021-10-28"},{"lineNumber":199,"author":{"gitId":"RonaldTanSingWei"},"content":"* The only valid reminder inputs are \u0027on\u0027 and \u0027off\u0027","lastModifiedDate":"2021-11-08"},{"lineNumber":200,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":201,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":202,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-27"},{"lineNumber":203,"author":{"gitId":"RonaldTanSingWei"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 b/1985-05-13`","lastModifiedDate":"2021-10-27"},{"lineNumber":204,"author":{"gitId":"RonaldTanSingWei"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 b/1999-10-22 t/criminal`","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"RonaldTanSingWei"},"content":"* `add n/James Low p/91593836 e/jameslow@example.com a/Hougang Avnue 5 b/1980-04-01 avatar/5 tele/jameslow222 desc/doctor r/on t/friends`","lastModifiedDate":"2021-10-27"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":207,"author":{"gitId":"pss-coder"},"content":"### List all friends : `list`","lastModifiedDate":"2021-10-28"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"pss-coder"},"content":"Shows a list of all friends in the FriendBook.","lastModifiedDate":"2021-10-28"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"pss-coder"},"content":"### Editing a friend : `edit`","lastModifiedDate":"2021-10-28"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":215,"author":{"gitId":"pss-coder"},"content":"Edits an existing friend in the FriendBook.","lastModifiedDate":"2021-10-28"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":217,"author":{"gitId":"xnajasho"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [b/BIRTHDAY] [avatar/AVATAR] [tele/TELE HANDLE] [desc/DESCRIPTION] [r/REMINDER] [t/TAG]…​[t/TAG]…`","lastModifiedDate":"2021-10-28"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":219,"author":{"gitId":"pss-coder"},"content":"* Edits the friend at the specified `INDEX`. The index refers to the index number shown in the CURRENTLY displayed friend list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-28"},{"lineNumber":220,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-10-27"},{"lineNumber":221,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-10-27"},{"lineNumber":222,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2021-10-27"},{"lineNumber":223,"author":{"gitId":"RonaldTanSingWei"},"content":"* You can remove all the person’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2021-10-27"},{"lineNumber":224,"author":{"gitId":"RonaldTanSingWei"},"content":"* Leaving any fields blank e.g `tele/` clears that field","lastModifiedDate":"2021-10-27"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":226,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-27"},{"lineNumber":227,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2021-10-27"},{"lineNumber":228,"author":{"gitId":"pss-coder"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd friend in the current list to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2021-10-28"},{"lineNumber":229,"author":{"gitId":"pss-coder"},"content":"*  `edit 2 avatar/6 tele/ desc/` Edits the avatar of the 2nd friend to be the 6th default avatar, and clears their telegram handle and description","lastModifiedDate":"2021-10-28"},{"lineNumber":230,"author":{"gitId":"pss-coder"},"content":"*  `edit 4 b/1992-01-10 avatar/10 tele/newTelehandle desc/xyz` Edits the 4th friend in the list and updates his/her birthday to `1992-01-10`, avatar to `10`, telegram handle to `newTelehandle` and description to `xyz`","lastModifiedDate":"2021-10-28"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":232,"author":{"gitId":"pss-coder"},"content":"### Locating friend by name: `find`","lastModifiedDate":"2021-10-28"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":234,"author":{"gitId":"RonaldTanSingWei"},"content":"Finds friends whose names contain any of the given keywords.","lastModifiedDate":"2021-11-01"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-10-27"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":238,"author":{"gitId":"RonaldTanSingWei"},"content":"* The keywords are names of friends stored in FriendBook","lastModifiedDate":"2021-11-01"},{"lineNumber":239,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2021-10-27"},{"lineNumber":240,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2021-10-27"},{"lineNumber":241,"author":{"gitId":"RonaldTanSingWei"},"content":"* Only the name is searched","lastModifiedDate":"2021-11-01"},{"lineNumber":242,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2021-10-27"},{"lineNumber":243,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-10-27"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2021-10-27"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":246,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-27"},{"lineNumber":247,"author":{"gitId":"RonaldTanSingWei"},"content":"* `find John` returns `John Doe`","lastModifiedDate":"2021-10-27"},{"lineNumber":248,"author":{"gitId":"RonaldTanSingWei"},"content":"* `find tim john` returns `Tim`, `John Doe`\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":249,"author":{"gitId":"RonaldTanSingWei"},"content":"  ![findtag FriendBook example](images/findFriendBookExample.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":250,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":251,"author":{"gitId":"RonaldTanSingWei"},"content":"### Locating friends by tag: `findtag`","lastModifiedDate":"2021-11-08"},{"lineNumber":252,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":253,"author":{"gitId":"RonaldTanSingWei"},"content":"Finds friends whose tags contain any of the given keywords.","lastModifiedDate":"2021-11-01"},{"lineNumber":254,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":255,"author":{"gitId":"RonaldTanSingWei"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-10-27"},{"lineNumber":256,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":257,"author":{"gitId":"RonaldTanSingWei"},"content":"* The search is case-insensitive. e.g `owesmoney` will match `owesMoney`","lastModifiedDate":"2021-10-27"},{"lineNumber":258,"author":{"gitId":"RonaldTanSingWei"},"content":"* The order of the keywords does not matter. e.g. `friends owesMoney` will match `owesMoney friends`","lastModifiedDate":"2021-10-27"},{"lineNumber":259,"author":{"gitId":"RonaldTanSingWei"},"content":"* Only the tags are searched.","lastModifiedDate":"2021-10-27"},{"lineNumber":260,"author":{"gitId":"RonaldTanSingWei"},"content":"* Only full words will be matched e.g. `friend` will not match `friends`","lastModifiedDate":"2021-10-27"},{"lineNumber":261,"author":{"gitId":"pss-coder"},"content":"* friends matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-10-28"},{"lineNumber":262,"author":{"gitId":"RonaldTanSingWei"},"content":"  e.g. `friends owesMoney` will return all friends with `friends` and `owesMoney` in their tags","lastModifiedDate":"2021-10-27"},{"lineNumber":263,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":264,"author":{"gitId":"RonaldTanSingWei"},"content":"Examples:","lastModifiedDate":"2021-10-27"},{"lineNumber":265,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":266,"author":{"gitId":"RonaldTanSingWei"},"content":"Using the given FriendBook below, when using the `findtag` command:","lastModifiedDate":"2021-11-08"},{"lineNumber":267,"author":{"gitId":"RonaldTanSingWei"},"content":"* `findtag friends` returns `John Doe` and `Lucas`","lastModifiedDate":"2021-11-08"},{"lineNumber":268,"author":{"gitId":"RonaldTanSingWei"},"content":"* `findtag owesMoney` returns `Tim` and `Lucas`\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":269,"author":{"gitId":"RonaldTanSingWei"},"content":"  ![findTag FriendBook example](images/findTagFriendBookExample.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":270,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":271,"author":{"gitId":"RonaldTanSingWei"},"content":"### Viewing a contact: `view`","lastModifiedDate":"2021-10-27"},{"lineNumber":272,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":273,"author":{"gitId":"RonaldTanSingWei"},"content":"View the full contact details (address, email, description etc) of the friend stored in FriendBook.","lastModifiedDate":"2021-11-01"},{"lineNumber":274,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":275,"author":{"gitId":"RonaldTanSingWei"},"content":"Format: `view INDEX`","lastModifiedDate":"2021-10-27"},{"lineNumber":276,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":277,"author":{"gitId":"pss-coder"},"content":"* Views the friend at the specified `INDEX`.","lastModifiedDate":"2021-10-28"},{"lineNumber":278,"author":{"gitId":"pss-coder"},"content":"* The index refers to the index number shown in the currently displayed friend list.","lastModifiedDate":"2021-10-28"},{"lineNumber":279,"author":{"gitId":"RonaldTanSingWei"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-27"},{"lineNumber":280,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":281,"author":{"gitId":"RonaldTanSingWei"},"content":"Examples:","lastModifiedDate":"2021-10-27"},{"lineNumber":282,"author":{"gitId":"RonaldTanSingWei"},"content":"* Inputting the `list` command followed by the `view 1` command views the full details of the 1st friend in the FriendBook. \u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":283,"author":{"gitId":"RonaldTanSingWei"},"content":"  ![result for \u0027view 1\u0027](images/view1.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":285,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2021-10-27"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":287,"author":{"gitId":"pss-coder"},"content":"Deletes the specified friend from the FriendBook.","lastModifiedDate":"2021-10-28"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":289,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2021-10-27"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":291,"author":{"gitId":"pss-coder"},"content":"* Deletes the friend at the specified `INDEX`.","lastModifiedDate":"2021-10-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-10-27"},{"lineNumber":293,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-27"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":295,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-27"},{"lineNumber":296,"author":{"gitId":"pss-coder"},"content":"* `list` followed by `delete 2` deletes the 2nd friend in the FriendBook.","lastModifiedDate":"2021-10-28"},{"lineNumber":297,"author":{"gitId":"pss-coder"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st friend in the results of the `find` command.","lastModifiedDate":"2021-10-28"},{"lineNumber":298,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":299,"author":{"gitId":"RonaldTanSingWei"},"content":"### Adding your profile: `profile`","lastModifiedDate":"2021-10-28"},{"lineNumber":300,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":301,"author":{"gitId":"RonaldTanSingWei"},"content":"Adds the user profile to the FriendBook","lastModifiedDate":"2021-10-28"},{"lineNumber":302,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":303,"author":{"gitId":"RonaldTanSingWei"},"content":"Format: `profile n/NAME`","lastModifiedDate":"2021-10-28"},{"lineNumber":304,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":305,"author":{"gitId":"RonaldTanSingWei"},"content":"Examples:","lastModifiedDate":"2021-10-28"},{"lineNumber":306,"author":{"gitId":"RonaldTanSingWei"},"content":"* `profile n/John sets the user profile name to John`","lastModifiedDate":"2021-10-28"},{"lineNumber":307,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":308,"author":{"gitId":"xnajasho"},"content":"### Viewing help : `help`","lastModifiedDate":"2021-11-07"},{"lineNumber":309,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":310,"author":{"gitId":"xnajasho"},"content":"Shows a message explaining the basics of each command, and a link to the full user guide.","lastModifiedDate":"2021-11-07"},{"lineNumber":311,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":312,"author":{"gitId":"xnajasho"},"content":"![help message](images/newHelpMessage.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":313,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":314,"author":{"gitId":"xnajasho"},"content":"Format: `help`","lastModifiedDate":"2021-11-07"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":316,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2021-10-27"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":318,"author":{"gitId":"RonaldTanSingWei"},"content":"Clears all entries from the FriendBook.","lastModifiedDate":"2021-10-27"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":320,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2021-10-27"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":322,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2021-10-27"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":324,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2021-10-27"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":326,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2021-10-27"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":328,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2021-10-27"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":330,"author":{"gitId":"RonaldTanSingWei"},"content":"FriendBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-10-27"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":332,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-10-27"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":334,"author":{"gitId":"xnajasho"},"content":"FriendBook data are saved as a JSON file `[JAR file location]/data/friendbook.json`. Advanced users are welcome to update data directly by editing that data file, subjected to the following [field constraints](#constraints)","lastModifiedDate":"2021-11-07"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":336,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-10-27"},{"lineNumber":337,"author":{"gitId":"xnajasho"},"content":"If your changes to the data file makes its format invalid i.e having extra/missing parameters or the edited field violates any of the above constraints, FriendBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-11-07"},{"lineNumber":338,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":340,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":342,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2021-10-27"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":344,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":345,"author":{"gitId":"RonaldTanSingWei"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous FriendBook home folder.","lastModifiedDate":"2021-10-27"},{"lineNumber":346,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":347,"author":{"gitId":"pss-coder"},"content":"**Q**: How can I refer for help without the user guide?\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":348,"author":{"gitId":"pss-coder"},"content":"**A**: Inside FriendBook, we have a help window to display all commands FriendBook offers. It can be accessed by typing: `help`.","lastModifiedDate":"2021-10-28"},{"lineNumber":349,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":350,"author":{"gitId":"pss-coder"},"content":"**Q**: Where is the data stored?\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":351,"author":{"gitId":"pss-coder"},"content":"**A**: In the footer of the FriendBook, it displays where the data is stored.","lastModifiedDate":"2021-10-28"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":353,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":355,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2021-10-27"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":357,"author":{"gitId":"RonaldTanSingWei"},"content":"Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":358,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":359,"author":{"gitId":"pss-coder"},"content":"Action | Format | Examples","lastModifiedDate":"2021-10-28"},{"lineNumber":360,"author":{"gitId":"pss-coder"},"content":"--------|------------|------","lastModifiedDate":"2021-10-28"},{"lineNumber":361,"author":{"gitId":"pss-coder"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL b/BIRTHDAY [a/ADDRESS] [avatar/AVATAR] [tele/TELEHANDLE] [desc/DESCRIPTION] [r/REMINDER] [t/TAG]…​` | `add n/James Ho p/22224444 e/jamesho@example.com b/1994-02-15 a/123, Clementi Rd, 1234665 avatar/5 tele/jamesho123 desc/cool friend r/off t/friend t/colleague`","lastModifiedDate":"2021-11-08"},{"lineNumber":362,"author":{"gitId":"pss-coder"},"content":"**Clear** | `clear` | `clear`","lastModifiedDate":"2021-10-28"},{"lineNumber":363,"author":{"gitId":"pss-coder"},"content":"**Delete** | `delete INDEX` | `delete 3`","lastModifiedDate":"2021-10-28"},{"lineNumber":364,"author":{"gitId":"pss-coder"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [b/BIRTHDAY] [avatar/AVATAR] [tele/TELEHANDLE] [desc/DESCRIPTION] [r/REMINDER] [t/TAG]…​` | `edit 2 n/James Lee e/jameslee@example.com desc/changed description`","lastModifiedDate":"2021-10-28"},{"lineNumber":365,"author":{"gitId":"pss-coder"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`| `find James Jake`","lastModifiedDate":"2021-10-28"},{"lineNumber":366,"author":{"gitId":"RonaldTanSingWei"},"content":"**Findtag** | `findtag KEYWORD [MORE_KEYWORDS]` | `findTag friends owesMoney`","lastModifiedDate":"2021-11-08"},{"lineNumber":367,"author":{"gitId":"pss-coder"},"content":"**List** | `list` | `list`","lastModifiedDate":"2021-10-28"},{"lineNumber":368,"author":{"gitId":"pss-coder"},"content":"**Profile** | `profile n/NAME` | `profile n/James Ho`","lastModifiedDate":"2021-10-28"},{"lineNumber":369,"author":{"gitId":"pss-coder"},"content":"**View** | `view INDEX` | `view 2`","lastModifiedDate":"2021-10-28"},{"lineNumber":370,"author":{"gitId":"pss-coder"},"content":"**Help** | `help` | `help`","lastModifiedDate":"2021-10-28"},{"lineNumber":371,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"RonaldTanSingWei":116,"xnajasho":73,"-":132,"pss-coder":50}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"RonaldTanSingWei"},"content":"    content: \"FriendBook\";","lastModifiedDate":"2021-11-01"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"RonaldTanSingWei":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"RonaldTanSingWei"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveFriendBook(friendBook)","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"RonaldTanSingWei":1,"-":37}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"pss-coder"},"content":"title: FriendBook","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":"[![Java CI](https://github.com/AY2122S1-CS2103-F10-3/tp/actions/workflows/gradle.yml/badge.svg?branch\u003dmaster)](https://github.com/AY2122S1-CS2103-F10-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103-F10-3/tp/branch/master/graph/badge.svg?token\u003dFYK9IG36EO)](https://codecov.io/gh/AY2122S1-CS2103-F10-3/tp)","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"**FriendBook provides a contact management platform for users with many friends to track their friends’ contacts. Additionally, it also helps users to keep track of social interactions with their friends and their friends’ birthdays.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"RonaldTanSingWei"},"content":"* If you are interested in using FriendBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":"* If you are interested about developing FriendBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"* If you would like to see a demo video of our recent release (**v1.4**) as well, click [**here**](https://drive.google.com/file/d/1Mi7vEL6htqStxipfGBbUHKzwggzFgfZ2/view?usp\u003dsharing) to see.","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"* Avatar logos from Figma [here](https://www.figma.com/community/file/898457975261805002).","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"RonaldTanSingWei":2,"-":13,"pss-coder":5}},{"path":"docs/team/pss-coder.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"pss-coder"},"content":"title: Pawandeep Project Portfolio Page","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":"### Project: FriendBook","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":"FriendBook is a desktop application for managing your contact details.","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"SajalVaishnav"},"content":"Given below are my contributions to this project.","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"* **New Feature**: Added Birthday Reminder Capability.","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"  * What it does: Behind the UI, there is a background thread that periodically checks if a friend birthday is coming in a week or less.","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"  * Justification: This feature enables the user to get reminded of friends birthday without needing to remember the friends\u0027 birthday. The application does it for the user.","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"pss-coder"},"content":"  * Highlights: These enhancements requires more knowledge on backgrounds threads and how it packages together with the current codebase.","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"pss-coder"},"content":"  * More information about the reminder implementation can be viewed in the Developer Guide [here](https://ay2122s1-cs2103-f10-3.github.io/tp/DeveloperGuide.html#implementation).","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"pss-coder"},"content":"  * Credits: *Implementation idea came from [here](https://edencoding.com/periodic-background-tasks/)*.","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"* **New Feature**: View Friend Info","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"pss-coder"},"content":"  * What it does: Under the friend list, user can choose to double click a selected friend to display more information regarding selected friend.","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"pss-coder"},"content":"  * Justification: There is `view` command to view more info of a selected friend but tying together with the UI would provide the user a more cohesive experience.","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"pss-coder"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dpss-coder\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dzoom\u0026zA\u003dpss-coder\u0026zR\u003dAY2122S1-CS2103-F10-3%2Ftp%5Bmaster%5D\u0026zACS\u003d229.35809328849248\u0026zS\u003d2021-09-17\u0026zFS\u003d\u0026zU\u003d2021-11-03\u0026zMG\u003dfalse\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos\u0026zFR\u003dfalse\u0026tabAuthor\u003dpss-coder\u0026tabRepo\u003dAY2122S1-CS2103-F10-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"pss-coder"},"content":"* **Project management**:","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"pss-coder"},"content":"  * Managed releases `v1.2.1` - `v1.4` (3 releases) on GitHub","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"pss-coder"},"content":"  * Managed and kickstart Weekly meeting with weekly team agenda as shown [here](https://docs.google.com/document/d/1xcqD8LnlwylQ1s89ss10ZG3XUZhzocf565lyr2Q70jE/edit)","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"pss-coder"},"content":"  * In charge of weekly team project deadline and deliverables","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"pss-coder"},"content":"  * Setting up GitHub team project org/repo","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"pss-coder"},"content":"  * Maintaining GitHub issue tracker","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"pss-coder"},"content":"  * Created Product Demo Video","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"pss-coder"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"pss-coder"},"content":"  * Updated the GUI color scheme (current follows a blue, yellow, pink theme) (Pull requests [\\#69](https://github.com/AY2122S1-CS2103-F10-3/tp/pull/69))","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"pss-coder"},"content":"  * Created reminder field for add/edit commands [\\#72](https://github.com/AY2122S1-CS2103-F10-3/tp/pull/72)","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"pss-coder"},"content":"  * Updated PersonListCard to FriendListCard with Avatar Image [\\#64](https://github.com/AY2122S1-CS2103-F10-3/tp/pull/64)","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"pss-coder"},"content":"  * Improved GUI for Help Window [\\#162](https://github.com/AY2122S1-CS2103-F10-3/tp/pull/162)","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"pss-coder"},"content":"  * Implemented new GUI Layout introducing BirthdayListPanel [#49](https://github.com/AY2122S1-CS2103-F10-3/tp/pull/49)","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"pss-coder"},"content":"  * Implemented Friend Window UI based on Selected Friend [\\#157](https://github.com/AY2122S1-CS2103-F10-3/tp/pull/157)","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"pss-coder"},"content":"* **Documentation**:","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"pss-coder"},"content":"    * Updated FAQ section","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"pss-coder"},"content":"    * Updated Ui Image","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"pss-coder"},"content":"    * Updated the Architecture section","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"pss-coder"},"content":"    * Updated UI Component section","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"pss-coder"},"content":"    * Updated Documentation, logging, testing, configuration, dev-ops pages","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"pss-coder"},"content":"    * Added in Reminder component section","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"pss-coder"},"content":"    * Added in Reminder Implementation","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"pss-coder"},"content":"    * Finalised User stories and use cases","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"pss-coder"},"content":"* **Community**:","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"pss-coder"},"content":"  * PRs involving changes to tP codebase were reviewed by me.","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"pss-coder"},"content":"  * Contributed to forum discussions: \u003e25 posts (examples: [1](https://github.com/nus-cs2103-AY2122S1/forum/issues/105), [2](https://github.com/nus-cs2103-AY2122S1/forum/issues/188), [3](https://github.com/nus-cs2103-AY2122S1/forum/issues/309), [4](https://github.com/nus-cs2103-AY2122S1/forum/issues/314))","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"pss-coder"},"content":"  * Reported bugs and suggestions for other teams in the class which can be viewed [here](https://github.com/pss-coder/ped/issues).","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"pss-coder"},"content":"  * Integrated Avatar logos from Figma [here](https://www.figma.com/community/file/898457975261805002).","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":17,"pss-coder":43,"SajalVaishnav":1}},{"path":"docs/team/ronaldtansingwei.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"SajalVaishnav"},"content":"title: Ronald\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"### Project: FriendBook","lastModifiedDate":"2021-11-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"FriendBook is a desktop address book application adapted from AddressBook - Level 3.  The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"SajalVaishnav"},"content":"Given below are my contributions to this project.","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":"* **New Feature**: Added the ability to find users based on their tags.","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"RonaldTanSingWei"},"content":"  * What it does: allows the user to find users with specified tags.","lastModifiedDate":"2021-11-03"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":"  * Justification: This feature improves the product by allowing users to go through their FriendBook and find friends with related tags more easily, grouping them according to these tags.","lastModifiedDate":"2021-11-03"},{"lineNumber":15,"author":{"gitId":"RonaldTanSingWei"},"content":"  * Highlights: The implementation allows finding of multiple groups at once.","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"RonaldTanSingWei"},"content":"  * Credits: Original design was based off the Find Command previously present inside AddressBook - Level 3","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"RonaldTanSingWei"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dRonaldTanSingWei\u0026tabRepo\u003dAY2122S1-CS2103-F10-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"RonaldTanSingWei"},"content":"  * Managed releases `v1.2` - `v1.4` (3 releases) on GitHub","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"RonaldTanSingWei"},"content":"  * Focused on managing documentation and recording the various features and usages of FriendBook","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"RonaldTanSingWei"},"content":"  * Contributed to ideation of certain features of FriendBook","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"RonaldTanSingWei"},"content":"  * Refactor code: Changed the codebase to reflect our software as FriendBook instead of AddressBook","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"RonaldTanSingWei"},"content":"    * Provided images displaying the usage of features of the software","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"RonaldTanSingWei"},"content":"    * Update the Features section to reflect FriendBook\u0027s Avatars, Profile and Reminder Features","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"RonaldTanSingWei"},"content":"    * Added implementation details of the `findtag` feature","lastModifiedDate":"2021-11-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"RonaldTanSingWei"},"content":"    * Updated the Logic and Parser component to reflect FriendBook\u0027s logic component","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"RonaldTanSingWei"},"content":"    * Updated User Stories to reflect the uses that users may want from FriendBook","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"RonaldTanSingWei"},"content":"    * Updated Use Cases to reflect new use cases for FriendBook","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"RonaldTanSingWei"},"content":"    * Updated the list of non-functional requirements for FriendBook","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"RonaldTanSingWei":19,"-":17,"SajalVaishnav":2}},{"path":"docs/team/sajalvaishnav.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"SajalVaishnav"},"content":"title: Sajal\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"SajalVaishnav"},"content":"### Project: FriendBook","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"SajalVaishnav"},"content":"FriendBook is a desktop application for managing your contact details.","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"SajalVaishnav"},"content":"While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"SajalVaishnav"},"content":"Given below are my contributions to this project.","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"SajalVaishnav"},"content":"* **New Feature**: Friend\u0027s Description","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"SajalVaishnav"},"content":"  * What it does: The feature allows the user to add a description for a friend in FriendBook","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"SajalVaishnav"},"content":"  * Justification: Enhances the usability of the app by imporving the user experience","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"SajalVaishnav"},"content":"  * Highlights: The changes required thorough understanding of the codebase and OOP and SE principles to ensure a smooth implementation. Especially because this field was optional, I had to pick the most maintainable and extensible solution for an optional field.","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"SajalVaishnav"},"content":"* **New Feature**: Friend\u0027s Telegram Handle","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"SajalVaishnav"},"content":"  * What it does: The feature allows the user to add a friend\u0027s telegram handle to FriendBook","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"SajalVaishnav"},"content":"  * Justification: Enhances the usability of the app as user can link to other common social apps","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"SajalVaishnav"},"content":"  * Highlights: The changes required thorough understanding of the codebase and OOP and SE principles to ensure a smooth implementation.","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"SajalVaishnav"},"content":"* **New Feature**: Username command","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"SajalVaishnav"},"content":"  * What it does: The feature allows the user set a username for themselves ","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"SajalVaishnav"},"content":"  * Justification: Personalizes the app to the user and improves user experience","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"SajalVaishnav"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dsajalvaishnav\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dzoom\u0026zA\u003dsajalvaishnav\u0026zR\u003dAY2122S1-CS2103-F10-3%2Ftp%5Bmaster%5D\u0026zACS\u003d229.35809328849248\u0026zS\u003d2021-09-17\u0026zFS\u003d\u0026zU\u003d2021-11-03\u0026zMG\u003dfalse\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos\u0026zFR\u003dfalse\u0026tabAuthor\u003dsajalvaishnav\u0026tabRepo\u003dAY2122S1-CS2103-F10-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"SajalVaishnav"},"content":"  * In charge of the Storage component","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"SajalVaishnav"},"content":"  * Assisted with reviewing code and architecture decisions","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"SajalVaishnav"},"content":"  * Made the Address field optional when adding a friend ","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"SajalVaishnav"},"content":"    * Worked on the User Guide\u0027s first release","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"SajalVaishnav"},"content":"    * Helped with ideation and discussions for further improvements","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"SajalVaishnav"},"content":"  * Developer Guide","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"SajalVaishnav"},"content":"    * Participated in discussion and ideation for the guide","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"SajalVaishnav"},"content":"  * Informally reviewed code written by fellow team members and discussed possible alternatives.","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"SajalVaishnav"},"content":"  * Reported bugs and suggestions for other teams in the class ","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":20,"SajalVaishnav":28}},{"path":"docs/team/xnajasho.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"SajalVaishnav"},"content":"title: Sean\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"### Project: FriendBook","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"FriendBook is a desktop address book application adapted from AddressBook - Level 3. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 15 kLoC.","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"SajalVaishnav"},"content":"Given below are my contributions to this project.","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"* **New Feature**: Added the ability to track the birthdays for every contact added in FriendBook.","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"  * What it does: Provides the user the ability to countdown and track the remaining days to every contact\u0027s birthday in the form of a list for visual representation(closest birthday is shown first). This feature supports automatic update and sorting when a new contact is added.","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"  * Justification: As a contact management app, it is a useful feature to have for users who regularly keep in contact with their friends. It may be difficult to keep track of the different birthdays, especially for users who have large connections. This feature aims to alleviate this problem by pushing the responsibility to the app, providing users the ability to retrieve such information within a short period whenever necessary. As such, we decided to make the Birthday field compulsory as without it, it would just be a normal contact management app.","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"* **New Feature**: Viewing full details of the contact.","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"  * What it does: Provides the user the ability to view the full particulars of a contact with a single command.","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"  * Justification: It is not practical to show the full details of the person in the app\u0027s home page as it takes up too much space, given the various different fields present per contact. Hence, the home page only displays a subset of important details of the contact. This feature thus allows the user to access all other details of the contact whenever needed.","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"* **Code contributed**: [Reposense Link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dxnajasho\u0026tabRepo\u003dAY2122S1-CS2103-F10-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"xnajasho"},"content":"  * Managed releases `v1.2` - `v1.4` (3 releases) on GitHub","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"xnajasho"},"content":"  * Assisted team lead with setting soft deadlines and idea generation","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"xnajasho"},"content":"  * Maintained GitHub issue tracker","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"xnajasho"},"content":"  * Provided the main feedback on pros/cons of implemented features and how to better implement/improve them","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"xnajasho"},"content":"  * Created test data for various components","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"xnajasho"},"content":"  * Fixed various Command related bugs ([\\#144](https://github.com/AY2122S1-CS2103-F10-3/tp/pull/144), [\\#145](https://github.com/AY2122S1-CS2103-F10-3/tp/pull/145), [\\#152](https://github.com/AY2122S1-CS2103-F10-3/tp/pull/152) , [\\#156](https://github.com/AY2122S1-CS2103-F10-3/tp/pull/156))","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"xnajasho"},"content":"  * Fixed bugs which were present in original AB3 which allowed duplicate phone numbers and emails ([\\#156](https://github.com/AY2122S1-CS2103-F10-3/tp/pull/156))","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"xnajasho"},"content":"  * Fixed bugs which were present in original AB3 which allowed names to contain only numbers ([\\#167](https://github.com/AY2122S1-CS2103-F10-3/tp/pull/167))","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"xnajasho"},"content":"    * Added documentation for the feature `view` ([\\#85](https://github.com/AY2122S1-CS2103-F10-3/tp/pull/85))","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"xnajasho"},"content":"    * Added field constraints summary ([\\#174](https://github.com/AY2122S1-CS2103-F10-3/tp/pull/174))","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"xnajasho"},"content":"    * Update command summary table to support newly implemented fields ([\\#92](https://github.com/AY2122S1-CS2103-F10-3/tp/pull/92/files))","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"xnajasho"},"content":"    * Added Use Case scenarios for various commands (UC4 - UC7)","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"xnajasho"},"content":"    * Updated user stories summary table ([\\#177](https://github.com/AY2122S1-CS2103-F10-3/tp/pull/177))","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"xnajasho"},"content":"    * Updated and maintained details relevant to the Model Component","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"xnajasho"},"content":"    * Updated Instructions for Manual Testing ([\\#192](https://github.com/AY2122S1-CS2103-F10-3/tp/pull/192))","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"xnajasho"},"content":"  * Reported bugs and suggestions for other teams in the class ([PED Link](https://github.com/xnajasho/ped/issues))","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"xnajasho":25,"-":19,"SajalVaishnav":2}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"pss-coder"},"content":"Simply add the following to [`seedu.address.ui.FriendCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-10-07"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2021-08-01"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"-":400,"pss-coder":1}},{"path":"src/main/java/seedu/friendbook/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.LogsCenter;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.util.FileUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"RonaldTanSingWei":3,"-":61}},{"path":"src/main/java/seedu/friendbook/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"RonaldTanSingWei":1,"-":24}},{"path":"src/main/java/seedu/friendbook/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.Config;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.LogsCenter;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.Version;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.util.ConfigUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.util.StringUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.Logic;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.LogicManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.FriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ModelManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ReadOnlyFriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.reminder.Reminder;","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.reminder.ReminderManager;","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.storage.FriendBookStorage;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.storage.JsonFriendBookStorage;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.storage.Storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.storage.StorageManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.storage.UserPrefsStorage;","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.ui.Ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.ui.UiManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"pss-coder"},"content":"    private Reminder birthdayReminder;","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"RonaldTanSingWei"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing FriendBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"pss-coder"},"content":"        assert config !\u003d null : \"config should not be null\";","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"RonaldTanSingWei"},"content":"        FriendBookStorage friendBookStorage \u003d new JsonFriendBookStorage(userPrefs.getFriendBookFilePath());","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"RonaldTanSingWei"},"content":"        storage \u003d new StorageManager(friendBookStorage, userPrefsStorage);","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":73,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"pss-coder"},"content":"        birthdayReminder \u003d new ReminderManager(model.getFilteredPersonListSortedByBirthday());","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"pss-coder"},"content":"        birthdayReminder.startBirthdayReminder();","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"RonaldTanSingWei"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s friend book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"RonaldTanSingWei"},"content":"     * The data from the sample friend book will be used instead if {@code storage}\u0027s friend book is not found,","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"RonaldTanSingWei"},"content":"     * or an empty friend book will be used instead if errors occur when reading {@code storage}\u0027s friend book.","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"RonaldTanSingWei"},"content":"        Optional\u003cReadOnlyFriendBook\u003e friendBookOptional;","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"RonaldTanSingWei"},"content":"        ReadOnlyFriendBook initialData;","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"RonaldTanSingWei"},"content":"            friendBookOptional \u003d storage.readFriendBook();","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"RonaldTanSingWei"},"content":"            if (!friendBookOptional.isPresent()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"RonaldTanSingWei"},"content":"                logger.info(\"Data file not found. Will be starting with a sample FriendBook\");","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"RonaldTanSingWei"},"content":"            initialData \u003d friendBookOptional.orElseGet(SampleDataUtil::getSampleFriendBook);","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"RonaldTanSingWei"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty FriendBook\");","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"RonaldTanSingWei"},"content":"            initialData \u003d new FriendBook();","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":96,"author":{"gitId":"RonaldTanSingWei"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty FriendBook\");","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"RonaldTanSingWei"},"content":"            initialData \u003d new FriendBook();","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"RonaldTanSingWei"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty FriendBook\");","lastModifiedDate":"2021-10-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"RonaldTanSingWei"},"content":"        logger.info(\"Starting FriendBook \" + MainApp.VERSION);","lastModifiedDate":"2021-10-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"RonaldTanSingWei"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping FriendBook ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-10-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RonaldTanSingWei":43,"xnajasho":1,"-":140,"pss-coder":6}},{"path":"src/main/java/seedu/friendbook/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.commons.core;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RonaldTanSingWei":1,"-":62}},{"path":"src/main/java/seedu/friendbook/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.commons.core;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RonaldTanSingWei":1,"-":78}},{"path":"src/main/java/seedu/friendbook/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.commons.core;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"RonaldTanSingWei"},"content":"    private static final String LOG_FILE \u003d \"friendbook.log\";","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RonaldTanSingWei":2,"-":110}},{"path":"src/main/java/seedu/friendbook/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.commons.core;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"    public static final String MESSAGE_CONTAINS_FIELD_IN_BRACKETS \u003d \"Unable to parse command as %s field contains\"","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"            + \" fields enclosed in square brackets, e.g [t/TAG]\\n\"","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"            + \"Please remove all enclosing square brackets.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"    public static final String MESSAGE_COMMAND_CONTAINS_UPPERCASE \u003d \"%s command contains UPPERCASE characters.\"","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"            + \" Please enter LOWERCASE characters only\";","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RonaldTanSingWei":1,"xnajasho":5,"-":11}},{"path":"src/main/java/seedu/friendbook/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.commons.core;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RonaldTanSingWei":1,"-":115}},{"path":"src/main/java/seedu/friendbook/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.commons.core.index;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"RonaldTanSingWei":1,"-":53}},{"path":"src/main/java/seedu/friendbook/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.commons.exceptions;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RonaldTanSingWei":1,"-":10}},{"path":"src/main/java/seedu/friendbook/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.commons.exceptions;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RonaldTanSingWei":1,"-":20}},{"path":"src/main/java/seedu/friendbook/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.commons.util;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.MainApp;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"RonaldTanSingWei":2,"-":40}},{"path":"src/main/java/seedu/friendbook/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.commons.util;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RonaldTanSingWei":1,"-":34}},{"path":"src/main/java/seedu/friendbook/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.commons.util;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.Config;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"RonaldTanSingWei":3,"-":20}},{"path":"src/main/java/seedu/friendbook/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.commons.util;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RonaldTanSingWei":1,"-":82}},{"path":"src/main/java/seedu/friendbook/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.commons.util;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.LogsCenter;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RonaldTanSingWei":3,"-":140}},{"path":"src/main/java/seedu/friendbook/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.commons.util;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RonaldTanSingWei":2,"-":66}},{"path":"src/main/java/seedu/friendbook/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"pss-coder"},"content":"import javafx.beans.property.StringProperty;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.GuiSettings;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.CommandResult;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ReadOnlyFriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"SajalVaishnav"},"content":"import seedu.friendbook.model.person.Name;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"pss-coder"},"content":"     * Executes the update reminder and updates model.","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"pss-coder"},"content":"     * @param person original person data.","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"pss-coder"},"content":"     * @param newPerson new person data to update to","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"pss-coder"},"content":"     * @throws CommandException If an error occurs during update execution.","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"pss-coder"},"content":"    void executeUpdateReminder(Person person, Person newPerson) throws CommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"RonaldTanSingWei"},"content":"     * Returns the FriendBook.","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":39,"author":{"gitId":"RonaldTanSingWei"},"content":"     * @see seedu.friendbook.model.Model#getFriendBook()","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":41,"author":{"gitId":"RonaldTanSingWei"},"content":"    ReadOnlyFriendBook getFriendBook();","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":46,"author":{"gitId":"xnajasho"},"content":"    /** Returns an unmodifiable view of the filtered list of persons sorted by days to birthday */","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"xnajasho"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonListSortedByBirthday();","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"RonaldTanSingWei"},"content":"     * Returns the user prefs\u0027 friend book file path.","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"RonaldTanSingWei"},"content":"    Path getFriendBookFilePath();","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"SajalVaishnav"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"SajalVaishnav"},"content":"     * Returns the user pref\u0027s username","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"SajalVaishnav"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"SajalVaishnav"},"content":"    Name getUsername();","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"pss-coder"},"content":"     * Returns the user pref\u0027s username property","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"pss-coder"},"content":"    StringProperty getUsernameProperty();","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"SajalVaishnav"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"SajalVaishnav"},"content":"     * Sets the user prefs\u0027 username.","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"SajalVaishnav"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"SajalVaishnav"},"content":"    void setUsername(Name username);","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"RonaldTanSingWei":12,"xnajasho":3,"-":38,"pss-coder":14,"SajalVaishnav":11}},{"path":"src/main/java/seedu/friendbook/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"SajalVaishnav"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"import javafx.beans.property.StringProperty;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.GuiSettings;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.LogsCenter;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.Command;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.CommandResult;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.parser.FriendBookParser;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ReadOnlyFriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"SajalVaishnav"},"content":"import seedu.friendbook.model.person.Name;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.storage.Storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"RonaldTanSingWei"},"content":"    private final FriendBookParser friendBookParser;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"RonaldTanSingWei"},"content":"        friendBookParser \u003d new FriendBookParser();","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"RonaldTanSingWei"},"content":"        Command command \u003d friendBookParser.parseCommand(commandText);","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"RonaldTanSingWei"},"content":"            storage.saveFriendBook(model.getFriendBook());","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"pss-coder"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"pss-coder"},"content":"    public void executeUpdateReminder(Person person, Person newPerson) throws CommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"pss-coder"},"content":"        logger.info(\"Updating Person reminder through checkbox\");","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"pss-coder"},"content":"        model.setPerson(person, newPerson);","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"pss-coder"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"pss-coder"},"content":"            storage.saveFriendBook(model.getFriendBook());","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"pss-coder"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"pss-coder"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":73,"author":{"gitId":"RonaldTanSingWei"},"content":"    public ReadOnlyFriendBook getFriendBook() {","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"RonaldTanSingWei"},"content":"        return model.getFriendBook();","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":82,"author":{"gitId":"xnajasho"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"xnajasho"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonListSortedByBirthday() {","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"xnajasho"},"content":"        return model.getFilteredPersonListSortedByBirthday();","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"RonaldTanSingWei"},"content":"    public Path getFriendBookFilePath() {","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"RonaldTanSingWei"},"content":"        return model.getFriendBookFilePath();","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"SajalVaishnav"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"SajalVaishnav"},"content":"    public void setUsername(Name username) {","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"SajalVaishnav"},"content":"        requireNonNull(username);","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"SajalVaishnav"},"content":"        model.setUsername(username);","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"SajalVaishnav"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"SajalVaishnav"},"content":"    public Name getUsername() {","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"SajalVaishnav"},"content":"        return model.getUsername();","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"pss-coder"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"pss-coder"},"content":"    public StringProperty getUsernameProperty() {","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"pss-coder"},"content":"        return this.model.getUsernameProperty();","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"RonaldTanSingWei":20,"xnajasho":5,"-":61,"pss-coder":17,"SajalVaishnav":13}},{"path":"src/main/java/seedu/friendbook/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package seedu.friendbook.logic.commands;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_AVATAR;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_REMINDER;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_TELEHANDLE;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"RonaldTanSingWei"},"content":" * Adds a person to the friend book.","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"pss-coder"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the friend book.\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"pss-coder"},"content":"            + \"\\nParameters: \"","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"xnajasho"},"content":"            + PREFIX_BIRTHDAY + \"BIRTHDAY \"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"xnajasho"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"xnajasho"},"content":"            + \"[\" + PREFIX_AVATAR + \"AVATAR] \"","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"xnajasho"},"content":"            + \"[\" + PREFIX_TELEHANDLE + \"TELE HANDLE] \"","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"xnajasho"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"xnajasho"},"content":"            + \"[\" + PREFIX_REMINDER + \"REMINDER] \"","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"pss-coder"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"pss-coder"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"xnajasho"},"content":"            + PREFIX_BIRTHDAY + \"1994-05-15 \"","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"pss-coder"},"content":"            + PREFIX_ADDRESS + \"123, Clementi Rd, S1234665 \"","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"pss-coder"},"content":"            + PREFIX_AVATAR + \"1 \"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"SajalVaishnav"},"content":"            + PREFIX_TELEHANDLE + \"JohnDoe123 \"","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"SajalVaishnav"},"content":"            + PREFIX_DESCRIPTION + \"nice guy \"","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"pss-coder"},"content":"            + PREFIX_REMINDER + \"on \"","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"xnajasho"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"pss-coder"},"content":"    public static final String MESSAGE_PLACEHOLDER \u003d COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"pss-coder"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"pss-coder"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"pss-coder"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"pss-coder"},"content":"            + PREFIX_BIRTHDAY + \"BIRTHDAY \"","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"SajalVaishnav"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"xnajasho"},"content":"            + \"[\" + PREFIX_AVATAR + \"AVATAR] \"","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"xnajasho"},"content":"            + \"[\" + PREFIX_TELEHANDLE + \"TELEHANDLE] \"","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"xnajasho"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"xnajasho"},"content":"            + \"[\" + PREFIX_REMINDER + \"REMINDER] \"","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"pss-coder"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\";","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"RonaldTanSingWei"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the friend book\";","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"xnajasho"},"content":"    public static final String MESSAGE_PHONE_NUMBER_EXISTS \u003d \"Phone number is already used by someone else\";","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"xnajasho"},"content":"    public static final String MESSAGE_EMAIL_EXISTS \u003d \"Email is already used by someone else\";","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"xnajasho"},"content":"        if (model.hasPhone(toAdd.getPhone())) {","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"xnajasho"},"content":"            throw new CommandException(MESSAGE_PHONE_NUMBER_EXISTS);","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"xnajasho"},"content":"        if (model.hasEmail(toAdd.getEmail())) {","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"xnajasho"},"content":"            throw new CommandException(MESSAGE_EMAIL_EXISTS);","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RonaldTanSingWei":6,"xnajasho":21,"-":47,"pss-coder":24,"SajalVaishnav":3}},{"path":"src/main/java/seedu/friendbook/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.FriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":" * Clears the friend book.","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Clears friend and birthday list entirely. \\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"            + \"\\nExample: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"RonaldTanSingWei"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Friendbook has been cleared!\";","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"RonaldTanSingWei"},"content":"        model.setFriendBook(new FriendBook());","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RonaldTanSingWei":6,"-":17,"pss-coder":2}},{"path":"src/main/java/seedu/friendbook/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"     *","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"pss-coder"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"pss-coder"},"content":"     * Represents enum of all Commands FriendBook presents","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"pss-coder"},"content":"    public enum CommandList {","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"pss-coder"},"content":"        ADD, EDIT, CLEAR, DELETE, EXIT, FIND, FINDTAG, HELP, LIST, PROFILE, VIEW;","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"pss-coder"},"content":"        @Override","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"pss-coder"},"content":"        public String toString() {","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"pss-coder"},"content":"            return super.toString().toLowerCase();","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"pss-coder"},"content":"        public String getCommandMessageUsage() {","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"pss-coder"},"content":"            String usage;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"pss-coder"},"content":"            switch (this) {","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"pss-coder"},"content":"            case ADD:","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"pss-coder"},"content":"                usage \u003d AddCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"pss-coder"},"content":"                break;","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"pss-coder"},"content":"            case EDIT:","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"pss-coder"},"content":"                usage \u003d EditCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"pss-coder"},"content":"                break;","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"pss-coder"},"content":"            case CLEAR:","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"pss-coder"},"content":"                usage \u003d ClearCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"pss-coder"},"content":"                break;","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"pss-coder"},"content":"            case DELETE:","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"pss-coder"},"content":"                usage \u003d DeleteCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"pss-coder"},"content":"                break;","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"pss-coder"},"content":"            case EXIT:","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"pss-coder"},"content":"                usage \u003d ExitCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"pss-coder"},"content":"                break;","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"pss-coder"},"content":"            case FIND:","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"pss-coder"},"content":"                usage \u003d FindCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"pss-coder"},"content":"                break;","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"pss-coder"},"content":"            case FINDTAG:","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"pss-coder"},"content":"                usage \u003d FindTagCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"pss-coder"},"content":"                break;","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"pss-coder"},"content":"            case HELP:","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"pss-coder"},"content":"                usage \u003d HelpCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"pss-coder"},"content":"                break;","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"pss-coder"},"content":"            case LIST:","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"pss-coder"},"content":"                usage \u003d ListCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"pss-coder"},"content":"                break;","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"pss-coder"},"content":"            case PROFILE:","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"pss-coder"},"content":"                usage \u003d ProfileCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"pss-coder"},"content":"                break;","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"pss-coder"},"content":"            case VIEW:","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"pss-coder"},"content":"                usage \u003d ViewCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"pss-coder"},"content":"                break;","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"pss-coder"},"content":"            default:","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"pss-coder"},"content":"                usage \u003d null;","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"pss-coder"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"pss-coder"},"content":"            return usage;","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RonaldTanSingWei":3,"-":8,"pss-coder":63}},{"path":"src/main/java/seedu/friendbook/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"xnajasho"},"content":"    /** Command result to view a specific person. */","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"xnajasho"},"content":"    private final Optional\u003cPerson\u003e personToView;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"xnajasho"},"content":"        this.personToView \u003d Optional.ofNullable(null);","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"xnajasho"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"xnajasho"},"content":"     * Constructs a {@code CommandResult} with the specified fields to view a person\u0027s info.","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"xnajasho"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"xnajasho"},"content":"    public CommandResult(String feedbackToUser, Person personToView, boolean showHelp, boolean exit) {","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"xnajasho"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"xnajasho"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"xnajasho"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"xnajasho"},"content":"        this.personToView \u003d Optional.of(personToView);","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"xnajasho"},"content":"    public Person getPersonToView() {","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"xnajasho"},"content":"        return personToView.orElse(null);","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"xnajasho"},"content":"    public boolean isViewPerson() {","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"xnajasho"},"content":"        return personToView.isPresent();","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RonaldTanSingWei":1,"xnajasho":21,"-":70}},{"path":"src/main/java/seedu/friendbook/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":" * Deletes a person identified using it\u0027s displayed index from the friend book.","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"pss-coder"},"content":"            + \"\\nParameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"pss-coder"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RonaldTanSingWei":7,"-":44,"pss-coder":2}},{"path":"src/main/java/seedu/friendbook/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_AVATAR;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_REMINDER;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_TELEHANDLE;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Address;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Avatar;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Birthday;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Description;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Email;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Name;","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Phone;","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.TeleHandle;","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.reminder.Reminder;","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"RonaldTanSingWei"},"content":" * Edits the details of an existing person in the friend book.","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"pss-coder"},"content":"            + \"\\nParameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"xnajasho"},"content":"            + \"[\" + PREFIX_BIRTHDAY + \"BIRTHDAY] \"","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"pss-coder"},"content":"            + \"[\" + PREFIX_AVATAR + \"AVATAR] \"","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"SajalVaishnav"},"content":"            + \"[\" + PREFIX_TELEHANDLE + \"TELE_HANDLE] \"","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"SajalVaishnav"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"pss-coder"},"content":"            + \"[\" + PREFIX_REMINDER + \"REMINDER] \"","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"pss-coder"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"RonaldTanSingWei"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the friend book.\";","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"xnajasho"},"content":"    public static final String MESSAGE_PHONE_NUMBER_EXISTS \u003d \"Phone number is already used by someone else\";","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"xnajasho"},"content":"    public static final String MESSAGE_EMAIL_EXISTS \u003d \"Email is already used by someone else\";","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"xnajasho"},"content":"        if (isPhoneEdited(personToEdit, editedPerson) \u0026\u0026 model.hasPhone(editedPerson.getPhone())) {","lastModifiedDate":"2021-11-03"},{"lineNumber":103,"author":{"gitId":"xnajasho"},"content":"            throw new CommandException(MESSAGE_PHONE_NUMBER_EXISTS);","lastModifiedDate":"2021-11-03"},{"lineNumber":104,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":105,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":106,"author":{"gitId":"xnajasho"},"content":"        if (isEmailEdited(personToEdit, editedPerson) \u0026\u0026 model.hasEmail(editedPerson.getEmail())) {","lastModifiedDate":"2021-11-03"},{"lineNumber":107,"author":{"gitId":"xnajasho"},"content":"            throw new CommandException(MESSAGE_EMAIL_EXISTS);","lastModifiedDate":"2021-11-03"},{"lineNumber":108,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":109,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"xnajasho"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":116,"author":{"gitId":"xnajasho"},"content":"     * Helper method to check if the newly edited person has his/her phone details edited","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"xnajasho"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":118,"author":{"gitId":"xnajasho"},"content":"    public static boolean isPhoneEdited(Person personToEdit, Person editedPerson) {","lastModifiedDate":"2021-11-03"},{"lineNumber":119,"author":{"gitId":"xnajasho"},"content":"        return !personToEdit.getPhone().equals(editedPerson.getPhone());","lastModifiedDate":"2021-11-03"},{"lineNumber":120,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":121,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":122,"author":{"gitId":"xnajasho"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":123,"author":{"gitId":"xnajasho"},"content":"     * Helper method to check if the newly edited person has his/her email edited","lastModifiedDate":"2021-11-03"},{"lineNumber":124,"author":{"gitId":"xnajasho"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"xnajasho"},"content":"    public static boolean isEmailEdited(Person personToEdit, Person editedPerson) {","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"xnajasho"},"content":"        return !personToEdit.getEmail().equals(editedPerson.getEmail());","lastModifiedDate":"2021-11-03"},{"lineNumber":127,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"xnajasho"},"content":"        Birthday updatedBirthday \u003d editPersonDescriptor.getBirthday().orElse(personToEdit.getBirthday());","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"SajalVaishnav"},"content":"        TeleHandle updatedTeleHandle \u003d editPersonDescriptor.getTeleHandle()","lastModifiedDate":"2021-10-14"},{"lineNumber":143,"author":{"gitId":"SajalVaishnav"},"content":"                .orElse(personToEdit.getTeleHandle());","lastModifiedDate":"2021-10-14"},{"lineNumber":144,"author":{"gitId":"SajalVaishnav"},"content":"        Description updatedDescription \u003d editPersonDescriptor.getDescription()","lastModifiedDate":"2021-10-14"},{"lineNumber":145,"author":{"gitId":"SajalVaishnav"},"content":"                .orElse(personToEdit.getDescription());","lastModifiedDate":"2021-10-14"},{"lineNumber":146,"author":{"gitId":"pss-coder"},"content":"        Avatar updatedAvatar \u003d editPersonDescriptor.getAvatar().orElse(personToEdit.getAvatar());","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"pss-coder"},"content":"        Reminder updatedReminder \u003d editPersonDescriptor.getReminder().orElse(personToEdit.getReminder());","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"SajalVaishnav"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags,","lastModifiedDate":"2021-10-14"},{"lineNumber":149,"author":{"gitId":"pss-coder"},"content":"                updatedBirthday, updatedTeleHandle, updatedDescription, updatedAvatar, updatedReminder);","lastModifiedDate":"2021-10-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"xnajasho"},"content":"        private Birthday birthday;","lastModifiedDate":"2021-10-06"},{"lineNumber":181,"author":{"gitId":"pss-coder"},"content":"        private Avatar avatar;","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"SajalVaishnav"},"content":"        private TeleHandle teleHandle;","lastModifiedDate":"2021-10-14"},{"lineNumber":183,"author":{"gitId":"SajalVaishnav"},"content":"        private Description description;","lastModifiedDate":"2021-10-14"},{"lineNumber":184,"author":{"gitId":"pss-coder"},"content":"        private Reminder reminder;","lastModifiedDate":"2021-10-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":189,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":197,"author":{"gitId":"xnajasho"},"content":"            setBirthday(toCopy.birthday);","lastModifiedDate":"2021-10-06"},{"lineNumber":198,"author":{"gitId":"pss-coder"},"content":"            setAvatar(toCopy.avatar);","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"SajalVaishnav"},"content":"            setTeleHandle(toCopy.teleHandle);","lastModifiedDate":"2021-10-14"},{"lineNumber":200,"author":{"gitId":"SajalVaishnav"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2021-10-14"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"pss-coder"},"content":"            setReminder(toCopy.reminder);","lastModifiedDate":"2021-10-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"SajalVaishnav"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags, birthday, teleHandle,","lastModifiedDate":"2021-10-14"},{"lineNumber":210,"author":{"gitId":"pss-coder"},"content":"                    description, avatar, reminder);","lastModifiedDate":"2021-10-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":245,"author":{"gitId":"xnajasho"},"content":"        public void setBirthday(Birthday bday) {","lastModifiedDate":"2021-10-06"},{"lineNumber":246,"author":{"gitId":"xnajasho"},"content":"            this.birthday \u003d bday;","lastModifiedDate":"2021-10-06"},{"lineNumber":247,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":248,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":249,"author":{"gitId":"xnajasho"},"content":"        public Optional\u003cBirthday\u003e getBirthday() {","lastModifiedDate":"2021-10-06"},{"lineNumber":250,"author":{"gitId":"xnajasho"},"content":"            return Optional.ofNullable(birthday);","lastModifiedDate":"2021-10-06"},{"lineNumber":251,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":252,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":253,"author":{"gitId":"SajalVaishnav"},"content":"        public void setTeleHandle(TeleHandle teleHandle) {","lastModifiedDate":"2021-10-14"},{"lineNumber":254,"author":{"gitId":"SajalVaishnav"},"content":"            this.teleHandle \u003d teleHandle;","lastModifiedDate":"2021-10-14"},{"lineNumber":255,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":256,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":257,"author":{"gitId":"SajalVaishnav"},"content":"        public Optional\u003cTeleHandle\u003e getTeleHandle() {","lastModifiedDate":"2021-10-14"},{"lineNumber":258,"author":{"gitId":"SajalVaishnav"},"content":"            return Optional.ofNullable(teleHandle);","lastModifiedDate":"2021-10-14"},{"lineNumber":259,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":260,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":261,"author":{"gitId":"SajalVaishnav"},"content":"        public void setDescription(Description description) {","lastModifiedDate":"2021-10-14"},{"lineNumber":262,"author":{"gitId":"SajalVaishnav"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-10-14"},{"lineNumber":263,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":264,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":265,"author":{"gitId":"SajalVaishnav"},"content":"        public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2021-10-14"},{"lineNumber":266,"author":{"gitId":"SajalVaishnav"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2021-10-14"},{"lineNumber":267,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":268,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":269,"author":{"gitId":"pss-coder"},"content":"        public void setAvatar(Avatar avatar) {","lastModifiedDate":"2021-10-24"},{"lineNumber":270,"author":{"gitId":"pss-coder"},"content":"            this.avatar \u003d avatar;","lastModifiedDate":"2021-10-24"},{"lineNumber":271,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":272,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":273,"author":{"gitId":"pss-coder"},"content":"        public Optional\u003cAvatar\u003e getAvatar() {","lastModifiedDate":"2021-10-24"},{"lineNumber":274,"author":{"gitId":"pss-coder"},"content":"            return Optional.ofNullable(avatar);","lastModifiedDate":"2021-10-24"},{"lineNumber":275,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":276,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":277,"author":{"gitId":"pss-coder"},"content":"        public void setReminder(Reminder reminder) {","lastModifiedDate":"2021-10-23"},{"lineNumber":278,"author":{"gitId":"pss-coder"},"content":"            this.reminder \u003d reminder;","lastModifiedDate":"2021-10-23"},{"lineNumber":279,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":280,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":281,"author":{"gitId":"pss-coder"},"content":"        public Optional\u003cReminder\u003e getReminder() {","lastModifiedDate":"2021-10-23"},{"lineNumber":282,"author":{"gitId":"pss-coder"},"content":"            return Optional.ofNullable(reminder);","lastModifiedDate":"2021-10-23"},{"lineNumber":283,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":284,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":286,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":287,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":288,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":295,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":296,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":297,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":305,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":306,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":309,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":310,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":311,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":312,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":314,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":315,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":317,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":318,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":320,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":321,"author":{"gitId":"xnajasho"},"content":"                    \u0026\u0026 getBirthday().equals(e.getBirthday())","lastModifiedDate":"2021-10-06"},{"lineNumber":322,"author":{"gitId":"pss-coder"},"content":"                    \u0026\u0026 getAvatar().equals(e.getAvatar())","lastModifiedDate":"2021-10-24"},{"lineNumber":323,"author":{"gitId":"SajalVaishnav"},"content":"                    \u0026\u0026 getTeleHandle().equals(e.getTeleHandle())","lastModifiedDate":"2021-10-14"},{"lineNumber":324,"author":{"gitId":"SajalVaishnav"},"content":"                    \u0026\u0026 getDescription().equals(e.getDescription())","lastModifiedDate":"2021-10-14"},{"lineNumber":325,"author":{"gitId":"pss-coder"},"content":"                    \u0026\u0026 getReminder().equals(e.getReminder())","lastModifiedDate":"2021-10-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":327,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"RonaldTanSingWei":11,"xnajasho":37,"-":201,"pss-coder":50,"SajalVaishnav":30}},{"path":"src/main/java/seedu/friendbook/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Exits FriendBook Programme \\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"            + \"\\nExample: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Friend Book as requested ...\";","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"RonaldTanSingWei":3,"-":16,"pss-coder":2}},{"path":"src/main/java/seedu/friendbook/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":" * Finds and lists all persons in friend book whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"pss-coder"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all friends whose names contain any of \"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"pss-coder"},"content":"            + \"\\nParameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"RonaldTanSingWei":5,"-":34,"pss-coder":3}},{"path":"src/main/java/seedu/friendbook/logic/commands/FindTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.Messages;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":" * Finds and lists all persons in friend book whose tag contains any of the argument keywords.","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"RonaldTanSingWei"},"content":"public class FindTagCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"    public static final String COMMAND_WORD \u003d \"findtag\";","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"pss-coder"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all friends whose tags contain any of \"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"RonaldTanSingWei"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"pss-coder"},"content":"            + \"\\nParameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" favorite work school\";","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"RonaldTanSingWei"},"content":"    private final TagContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"RonaldTanSingWei"},"content":"    public FindTagCommand(TagContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"RonaldTanSingWei"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"RonaldTanSingWei"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"RonaldTanSingWei"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"RonaldTanSingWei"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"RonaldTanSingWei"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"RonaldTanSingWei"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"RonaldTanSingWei"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"RonaldTanSingWei"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"RonaldTanSingWei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"RonaldTanSingWei"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"RonaldTanSingWei"},"content":"                || (other instanceof FindTagCommand // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"RonaldTanSingWei"},"content":"                \u0026\u0026 predicate.equals(((FindTagCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"RonaldTanSingWei"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"RonaldTanSingWei":37,"xnajasho":1,"pss-coder":4}},{"path":"src/main/java/seedu/friendbook/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"            + \"\\nExample: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RonaldTanSingWei":2,"-":18,"pss-coder":1}},{"path":"src/main/java/seedu/friendbook/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":" * Lists all persons in the friend book to the user.","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Clears all find commands and \"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"pss-coder"},"content":"            + \"list all friends in friend list. \\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"pss-coder"},"content":"            + \"\\nExample: \" + COMMAND_WORD;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RonaldTanSingWei":4,"-":20,"pss-coder":3}},{"path":"src/main/java/seedu/friendbook/logic/commands/ProfileCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SajalVaishnav"},"content":"package seedu.friendbook.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"SajalVaishnav"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"SajalVaishnav"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"SajalVaishnav"},"content":"import seedu.friendbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"SajalVaishnav"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"SajalVaishnav"},"content":"import seedu.friendbook.model.person.Name;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"SajalVaishnav"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":" * Sets the app to display the username of the user","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"SajalVaishnav"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"SajalVaishnav"},"content":"public class ProfileCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"SajalVaishnav"},"content":"    public static final String COMMAND_WORD \u003d \"profile\";","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"pss-coder"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Sets the username for the current user.\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"pss-coder"},"content":"            + \"\\nParameters: \"","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"            + PREFIX_NAME + \"NAME \\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"pss-coder"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" n/john_doe\";","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"SajalVaishnav"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Username set: %1$s\";","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"SajalVaishnav"},"content":"    public static final String MESSAGE_DUPLICATE_USERNAME \u003d \"This username is the same as the current one\";","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"SajalVaishnav"},"content":"    private final Name username;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"SajalVaishnav"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"SajalVaishnav"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"SajalVaishnav"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"SajalVaishnav"},"content":"    public ProfileCommand(Name name) {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"SajalVaishnav"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"SajalVaishnav"},"content":"        this.username \u003d name;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"SajalVaishnav"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"SajalVaishnav"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"SajalVaishnav"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"SajalVaishnav"},"content":"        if (model.getUsername().equals(this.username)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"SajalVaishnav"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_USERNAME);","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"SajalVaishnav"},"content":"        model.setUsername(this.username);","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"SajalVaishnav"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, this.username));","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"SajalVaishnav"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"SajalVaishnav"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"SajalVaishnav"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"SajalVaishnav"},"content":"                || (other instanceof ProfileCommand // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"SajalVaishnav"},"content":"                \u0026\u0026 username.equals(((ProfileCommand) other).username));","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"SajalVaishnav"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"xnajasho":1,"pss-coder":4,"SajalVaishnav":46}},{"path":"src/main/java/seedu/friendbook/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package seedu.friendbook.logic.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.commons.core.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.commons.core.index.Index;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":" * View the details of the identified person using it\u0027s displayed index from the friend book.","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"xnajasho"},"content":"            + \": View the details of the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"pss-coder"},"content":"            + \"\\nParameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"pss-coder"},"content":"            + \"\\nExample: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"xnajasho"},"content":"    public static final String MESSAGE_VIEW_PERSON_SUCCESS \u003d \"View Person: %1$s\";","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"xnajasho"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"xnajasho"},"content":"    public ViewCommand(Index targetIndex) {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"xnajasho"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"xnajasho"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"xnajasho"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"xnajasho"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"xnajasho"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"xnajasho"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"xnajasho"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"xnajasho"},"content":"        Person personToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"xnajasho"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"xnajasho"},"content":"                String.format(MESSAGE_VIEW_PERSON_SUCCESS, personToView), personToView, false, false);","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"xnajasho"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"xnajasho"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"xnajasho"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"xnajasho"},"content":"                || (other instanceof ViewCommand // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"xnajasho"},"content":"                \u0026\u0026 targetIndex.equals(((ViewCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"xnajasho":51,"pss-coder":2}},{"path":"src/main/java/seedu/friendbook/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.commands.exceptions;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"RonaldTanSingWei":1,"-":16}},{"path":"src/main/java/seedu/friendbook/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_AVATAR;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_REMINDER;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_TELEHANDLE;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.AddCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Address;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Avatar;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Birthday;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Description;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Email;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Name;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Phone;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.TeleHandle;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.reminder.Reminder;","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"SajalVaishnav"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":46,"author":{"gitId":"xnajasho"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"xnajasho"},"content":"                        PREFIX_BIRTHDAY, PREFIX_AVATAR, PREFIX_TELEHANDLE, PREFIX_DESCRIPTION,","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"xnajasho"},"content":"                        PREFIX_REMINDER, PREFIX_TAG);","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"SajalVaishnav"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"SajalVaishnav"},"content":"                PREFIX_BIRTHDAY) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"xnajasho"},"content":"        Birthday birthday \u003d ParserUtil.parseBirthday(argMultimap.getValue(PREFIX_BIRTHDAY).get());","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"SajalVaishnav"},"content":"        //Using orElse because address, avatar,telehandle and description are all optional","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"SajalVaishnav"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).orElse(\"\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"pss-coder"},"content":"        Avatar avatar \u003d ParserUtil.parseAvatar(argMultimap.getValue(PREFIX_AVATAR).orElse(Avatar.DEFAULT_AVATAR));","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"pss-coder"},"content":"        TeleHandle teleHandle \u003d ParserUtil.parseTeleHandle(argMultimap.getValue(PREFIX_TELEHANDLE).orElse(\"\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"pss-coder"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).orElse(\"\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"pss-coder"},"content":"        Reminder reminder \u003d ParserUtil.parseReminder(argMultimap.getValue(PREFIX_REMINDER).orElse(\"off\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"xnajasho"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, birthday,","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"xnajasho"},"content":"                teleHandle, description, avatar, reminder);","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"RonaldTanSingWei":6,"xnajasho":6,"-":39,"pss-coder":25,"SajalVaishnav":6}},{"path":"src/main/java/seedu/friendbook/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"RonaldTanSingWei":1,"-":59}},{"path":"src/main/java/seedu/friendbook/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"RonaldTanSingWei":1,"-":147}},{"path":"src/main/java/seedu/friendbook/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"    public static final Prefix PREFIX_BIRTHDAY \u003d new Prefix(\"b/\");","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"SajalVaishnav"},"content":"    public static final Prefix PREFIX_TELEHANDLE \u003d new Prefix(\"tele/\");","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"SajalVaishnav"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"desc/\");","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"pss-coder"},"content":"    public static final Prefix PREFIX_AVATAR \u003d new Prefix(\"avatar/\");","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"pss-coder"},"content":"    public static final Prefix PREFIX_REMINDER \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"RonaldTanSingWei":1,"xnajasho":1,"-":13,"pss-coder":2,"SajalVaishnav":2}},{"path":"src/main/java/seedu/friendbook/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"RonaldTanSingWei":5,"-":24}},{"path":"src/main/java/seedu/friendbook/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_AVATAR;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_REMINDER;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_TELEHANDLE;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.EditCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"xnajasho"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"pss-coder"},"content":"                        PREFIX_BIRTHDAY, PREFIX_AVATAR, PREFIX_TELEHANDLE, PREFIX_DESCRIPTION, PREFIX_REMINDER,","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"pss-coder"},"content":"                        PREFIX_TAG);","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"xnajasho"},"content":"        if (argMultimap.getValue(PREFIX_BIRTHDAY).isPresent()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"xnajasho"},"content":"            editPersonDescriptor.setBirthday(ParserUtil.parseBirthday(argMultimap.getValue(PREFIX_BIRTHDAY).get()));","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"pss-coder"},"content":"        if (argMultimap.getValue(PREFIX_AVATAR).isPresent()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"pss-coder"},"content":"            editPersonDescriptor.setAvatar(ParserUtil.parseAvatar(argMultimap.getValue(PREFIX_AVATAR).get()));","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"SajalVaishnav"},"content":"        if (argMultimap.getValue(PREFIX_TELEHANDLE).isPresent()) {","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"SajalVaishnav"},"content":"            editPersonDescriptor.setTeleHandle(ParserUtil","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"SajalVaishnav"},"content":"                    .parseTeleHandle(argMultimap.getValue(PREFIX_TELEHANDLE).get()));","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"SajalVaishnav"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"SajalVaishnav"},"content":"            editPersonDescriptor.setDescription(ParserUtil","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"SajalVaishnav"},"content":"                    .parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"pss-coder"},"content":"        if (argMultimap.getValue(PREFIX_REMINDER).isPresent()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"pss-coder"},"content":"            editPersonDescriptor.setReminder(ParserUtil","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"pss-coder"},"content":"                    .parseReminder(argMultimap.getValue(PREFIX_REMINDER).get()));","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"RonaldTanSingWei":8,"xnajasho":4,"-":69,"pss-coder":19,"SajalVaishnav":8}},{"path":"src/main/java/seedu/friendbook/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.FindCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"RonaldTanSingWei":5,"-":28}},{"path":"src/main/java/seedu/friendbook/logic/parser/FindTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.FindTagCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"public class FindTagCommandParser implements Parser\u003cFindTagCommand\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"RonaldTanSingWei"},"content":"     * Parses the given {@code String} of arguments in the context of the FindTagCommand","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":"     * and returns a FindTagCommand object for execution.","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"RonaldTanSingWei"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"RonaldTanSingWei"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"RonaldTanSingWei"},"content":"    public FindTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"RonaldTanSingWei"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"RonaldTanSingWei"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"RonaldTanSingWei"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"pss-coder"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTagCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"RonaldTanSingWei"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"RonaldTanSingWei"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"RonaldTanSingWei"},"content":"        return new FindTagCommand(new TagContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"RonaldTanSingWei"},"content":"}","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"RonaldTanSingWei":30,"pss-coder":1}},{"path":"src/main/java/seedu/friendbook/logic/parser/FriendBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.commons.core.Messages.MESSAGE_COMMAND_CONTAINS_UPPERCASE;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.AddCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.Command;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.EditCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.FindCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.FindTagCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.ListCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"SajalVaishnav"},"content":"import seedu.friendbook.logic.commands.ProfileCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"RonaldTanSingWei"},"content":"public class FriendBookParser {","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"xnajasho"},"content":"     * Used to check if command contains any upper case characters","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"xnajasho"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"xnajasho"},"content":"    private static final String UPPER_CASE_REGEX \u003d \".*[A-Z].*\";","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"xnajasho"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"xnajasho"},"content":"     * Parses user input(case-sensitive) into command for execution.","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"xnajasho"},"content":"     * @throws ParseException if the user input does not conform the expected format, or contains uppercase","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"RonaldTanSingWei"},"content":"        case FindTagCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"RonaldTanSingWei"},"content":"            return new FindTagCommandParser().parse(arguments);","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":85,"author":{"gitId":"xnajasho"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"xnajasho"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"SajalVaishnav"},"content":"        case ProfileCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"SajalVaishnav"},"content":"            return new ProfileCommandParser().parse(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":91,"author":{"gitId":"xnajasho"},"content":"            if (hasUpperCase(commandWord)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":92,"author":{"gitId":"xnajasho"},"content":"                throw new ParseException(String.format(MESSAGE_COMMAND_CONTAINS_UPPERCASE, commandWord.toLowerCase()));","lastModifiedDate":"2021-11-02"},{"lineNumber":93,"author":{"gitId":"xnajasho"},"content":"            } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"xnajasho"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":100,"author":{"gitId":"xnajasho"},"content":"     * Checks if the given command message contains uppercase characters.","lastModifiedDate":"2021-11-02"},{"lineNumber":101,"author":{"gitId":"xnajasho"},"content":"     * @return true if it is a valid command and contains uppercase characters.","lastModifiedDate":"2021-11-02"},{"lineNumber":102,"author":{"gitId":"xnajasho"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":103,"author":{"gitId":"xnajasho"},"content":"    public static boolean hasUpperCase(String message) {","lastModifiedDate":"2021-11-02"},{"lineNumber":104,"author":{"gitId":"xnajasho"},"content":"        return isAValidCommand(message) \u0026\u0026 message.matches(UPPER_CASE_REGEX);","lastModifiedDate":"2021-11-02"},{"lineNumber":105,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":106,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":107,"author":{"gitId":"xnajasho"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":108,"author":{"gitId":"xnajasho"},"content":"     * Helper method to check if the command is valid.","lastModifiedDate":"2021-11-02"},{"lineNumber":109,"author":{"gitId":"xnajasho"},"content":"     * A command is valid if it is a case-insensitive version of the actual command word.","lastModifiedDate":"2021-11-02"},{"lineNumber":110,"author":{"gitId":"xnajasho"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":111,"author":{"gitId":"xnajasho"},"content":"    public static boolean isAValidCommand(String message) {","lastModifiedDate":"2021-11-02"},{"lineNumber":112,"author":{"gitId":"xnajasho"},"content":"        String lowerCaseCommand \u003d message.toLowerCase();","lastModifiedDate":"2021-11-02"},{"lineNumber":113,"author":{"gitId":"xnajasho"},"content":"        return lowerCaseCommand.equals(AddCommand.COMMAND_WORD)","lastModifiedDate":"2021-11-02"},{"lineNumber":114,"author":{"gitId":"xnajasho"},"content":"                || lowerCaseCommand.equals(EditCommand.COMMAND_WORD)","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"xnajasho"},"content":"                || lowerCaseCommand.equals(DeleteCommand.COMMAND_WORD)","lastModifiedDate":"2021-11-02"},{"lineNumber":116,"author":{"gitId":"xnajasho"},"content":"                || lowerCaseCommand.equals(ClearCommand.COMMAND_WORD)","lastModifiedDate":"2021-11-02"},{"lineNumber":117,"author":{"gitId":"xnajasho"},"content":"                || lowerCaseCommand.equals(FindCommand.COMMAND_WORD)","lastModifiedDate":"2021-11-02"},{"lineNumber":118,"author":{"gitId":"xnajasho"},"content":"                || lowerCaseCommand.equals(FindTagCommand.COMMAND_WORD)","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"xnajasho"},"content":"                || lowerCaseCommand.equals(ListCommand.COMMAND_WORD)","lastModifiedDate":"2021-11-02"},{"lineNumber":120,"author":{"gitId":"xnajasho"},"content":"                || lowerCaseCommand.equals(ExitCommand.COMMAND_WORD)","lastModifiedDate":"2021-11-02"},{"lineNumber":121,"author":{"gitId":"xnajasho"},"content":"                || lowerCaseCommand.equals(HelpCommand.COMMAND_WORD)","lastModifiedDate":"2021-11-02"},{"lineNumber":122,"author":{"gitId":"xnajasho"},"content":"                || lowerCaseCommand.equals(ViewCommand.COMMAND_WORD)","lastModifiedDate":"2021-11-02"},{"lineNumber":123,"author":{"gitId":"xnajasho"},"content":"                || lowerCaseCommand.equals(ProfileCommand.COMMAND_WORD);","lastModifiedDate":"2021-11-02"},{"lineNumber":124,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RonaldTanSingWei":19,"xnajasho":43,"-":60,"SajalVaishnav":3}},{"path":"src/main/java/seedu/friendbook/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.Command;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"RonaldTanSingWei":3,"-":13}},{"path":"src/main/java/seedu/friendbook/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.commons.core.Messages;","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.util.StringUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Address;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Avatar;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Birthday;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Description;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Email;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Name;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Phone;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.TeleHandle;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.person.exceptions.BirthdayHasNotOccurredException;","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.reminder.Reminder;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"xnajasho"},"content":"     * @throws ParseException if the given {@code name} is invalid, or contains optional fields enclosed in []","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"xnajasho"},"content":"        if (containsSquareBracketFields(trimmedName)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"xnajasho"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_CONTAINS_FIELD_IN_BRACKETS, \"Name\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"xnajasho"},"content":"     * @throws ParseException if the given {@code phone} is invalid, or contains optional fields enclosed in []","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"xnajasho"},"content":"        if (containsSquareBracketFields(trimmedPhone)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"xnajasho"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_CONTAINS_FIELD_IN_BRACKETS, \"Phone\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"xnajasho"},"content":"     * @throws ParseException if the given {@code address} is invalid, or contains optional fields enclosed in []","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"xnajasho"},"content":"        if (containsSquareBracketFields(trimmedAddress)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"xnajasho"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_CONTAINS_FIELD_IN_BRACKETS, \"Address\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"xnajasho"},"content":"     * @throws ParseException if the given {@code email} is invalid, or contains optional fields enclosed in []","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"xnajasho"},"content":"        if (containsSquareBracketFields(trimmedEmail)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":111,"author":{"gitId":"xnajasho"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_CONTAINS_FIELD_IN_BRACKETS, \"Email\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":112,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"xnajasho"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"xnajasho"},"content":"     * Parses a {@code String birthday} into a {@code Birthday}.","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"xnajasho"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"xnajasho"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"xnajasho"},"content":"     * @throws ParseException if the given {@code birthday} is invalid, or contains optional fields enclosed in []","lastModifiedDate":"2021-11-01"},{"lineNumber":124,"author":{"gitId":"xnajasho"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"xnajasho"},"content":"    public static Birthday parseBirthday(String bday) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"xnajasho"},"content":"        requireNonNull(bday);","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"xnajasho"},"content":"        String trimmedBday \u003d bday.trim();","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"xnajasho"},"content":"        if (containsSquareBracketFields(trimmedBday)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":129,"author":{"gitId":"xnajasho"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_CONTAINS_FIELD_IN_BRACKETS, \"Birthday\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":130,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":131,"author":{"gitId":"xnajasho"},"content":"        if (!Birthday.isValidFormat(trimmedBday)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":132,"author":{"gitId":"xnajasho"},"content":"            throw new ParseException(Birthday.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"xnajasho"},"content":"        try {","lastModifiedDate":"2021-11-01"},{"lineNumber":135,"author":{"gitId":"xnajasho"},"content":"            Birthday.invalidValuesCheck(trimmedBday);","lastModifiedDate":"2021-11-01"},{"lineNumber":136,"author":{"gitId":"xnajasho"},"content":"        } catch (DateTimeException | BirthdayHasNotOccurredException e) {","lastModifiedDate":"2021-11-01"},{"lineNumber":137,"author":{"gitId":"xnajasho"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2021-11-01"},{"lineNumber":138,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":139,"author":{"gitId":"xnajasho"},"content":"        return new Birthday(trimmedBday);","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":141,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"xnajasho"},"content":"     * @throws ParseException if the given {@code tag} is invalid, or contains optional fields enclosed in []","lastModifiedDate":"2021-11-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"xnajasho"},"content":"        if (containsSquareBracketFields(trimmedTag)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":152,"author":{"gitId":"xnajasho"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_CONTAINS_FIELD_IN_BRACKETS, \"Tag\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":153,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":171,"author":{"gitId":"SajalVaishnav"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":172,"author":{"gitId":"SajalVaishnav"},"content":"     * Parses a {@code String teleHandle} into a {@code TeleHandle}.","lastModifiedDate":"2021-10-14"},{"lineNumber":173,"author":{"gitId":"SajalVaishnav"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-14"},{"lineNumber":174,"author":{"gitId":"SajalVaishnav"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":175,"author":{"gitId":"xnajasho"},"content":"     * @throws ParseException if the given {@code teleHandle} is invalid, or contains optional fields enclosed in []","lastModifiedDate":"2021-11-01"},{"lineNumber":176,"author":{"gitId":"SajalVaishnav"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":177,"author":{"gitId":"SajalVaishnav"},"content":"    public static TeleHandle parseTeleHandle(String teleHandle) throws ParseException {","lastModifiedDate":"2021-10-14"},{"lineNumber":178,"author":{"gitId":"SajalVaishnav"},"content":"        requireNonNull(teleHandle);","lastModifiedDate":"2021-10-14"},{"lineNumber":179,"author":{"gitId":"SajalVaishnav"},"content":"        String trimmedTeleHandle \u003d teleHandle.trim();","lastModifiedDate":"2021-10-14"},{"lineNumber":180,"author":{"gitId":"xnajasho"},"content":"        if (containsSquareBracketFields(teleHandle)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":181,"author":{"gitId":"xnajasho"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_CONTAINS_FIELD_IN_BRACKETS, \"TeleHandle\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":182,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":183,"author":{"gitId":"SajalVaishnav"},"content":"        if (!TeleHandle.isValidTeleHandle(trimmedTeleHandle)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":184,"author":{"gitId":"SajalVaishnav"},"content":"            throw new ParseException(TeleHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-14"},{"lineNumber":185,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":186,"author":{"gitId":"SajalVaishnav"},"content":"        return new TeleHandle(trimmedTeleHandle);","lastModifiedDate":"2021-10-14"},{"lineNumber":187,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":188,"author":{"gitId":"SajalVaishnav"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":189,"author":{"gitId":"SajalVaishnav"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2021-10-14"},{"lineNumber":190,"author":{"gitId":"SajalVaishnav"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-14"},{"lineNumber":191,"author":{"gitId":"SajalVaishnav"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":192,"author":{"gitId":"xnajasho"},"content":"     * @throws ParseException if the given {@code description} is invalid, or contains optional fields enclosed in []","lastModifiedDate":"2021-11-01"},{"lineNumber":193,"author":{"gitId":"SajalVaishnav"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":194,"author":{"gitId":"SajalVaishnav"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2021-10-14"},{"lineNumber":195,"author":{"gitId":"SajalVaishnav"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-10-14"},{"lineNumber":196,"author":{"gitId":"SajalVaishnav"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2021-10-14"},{"lineNumber":197,"author":{"gitId":"xnajasho"},"content":"        if (containsSquareBracketFields(trimmedDescription)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":198,"author":{"gitId":"xnajasho"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_CONTAINS_FIELD_IN_BRACKETS, \"Description\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":199,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":200,"author":{"gitId":"SajalVaishnav"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":201,"author":{"gitId":"SajalVaishnav"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-14"},{"lineNumber":202,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":203,"author":{"gitId":"SajalVaishnav"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2021-10-14"},{"lineNumber":204,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":205,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":206,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":207,"author":{"gitId":"pss-coder"},"content":"     * Parses a {@code String avatar} into a {@code Picture}.","lastModifiedDate":"2021-10-24"},{"lineNumber":208,"author":{"gitId":"pss-coder"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-19"},{"lineNumber":209,"author":{"gitId":"pss-coder"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":210,"author":{"gitId":"xnajasho"},"content":"     * @throws ParseException if the given {@code avatar} is invalid, or contains optional fields enclosed in []","lastModifiedDate":"2021-11-01"},{"lineNumber":211,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":212,"author":{"gitId":"pss-coder"},"content":"    public static Avatar parseAvatar(String avatar) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"pss-coder"},"content":"        requireNonNull(avatar);","lastModifiedDate":"2021-10-24"},{"lineNumber":214,"author":{"gitId":"pss-coder"},"content":"        String trimmedPicture \u003d avatar.trim();","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"xnajasho"},"content":"        if (containsSquareBracketFields(trimmedPicture)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":216,"author":{"gitId":"xnajasho"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_CONTAINS_FIELD_IN_BRACKETS, \"Avatar\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":217,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":218,"author":{"gitId":"pss-coder"},"content":"        if (!Avatar.isValidAvatar(trimmedPicture)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":219,"author":{"gitId":"pss-coder"},"content":"            throw new ParseException(Avatar.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":220,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":221,"author":{"gitId":"pss-coder"},"content":"        return new Avatar(trimmedPicture);","lastModifiedDate":"2021-10-24"},{"lineNumber":222,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":223,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":224,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":225,"author":{"gitId":"pss-coder"},"content":"     * Parses a {@code String reminder} into a {@code Reminder}.","lastModifiedDate":"2021-10-23"},{"lineNumber":226,"author":{"gitId":"pss-coder"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-23"},{"lineNumber":227,"author":{"gitId":"pss-coder"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":228,"author":{"gitId":"xnajasho"},"content":"     * @throws ParseException if the given {@code reminder} is invalid, or contains optional fields enclosed in []","lastModifiedDate":"2021-11-01"},{"lineNumber":229,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":230,"author":{"gitId":"pss-coder"},"content":"    public static Reminder parseReminder(String reminder) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":231,"author":{"gitId":"pss-coder"},"content":"        requireNonNull(reminder);","lastModifiedDate":"2021-10-23"},{"lineNumber":232,"author":{"gitId":"pss-coder"},"content":"        String trimmedReminder \u003d reminder.trim();","lastModifiedDate":"2021-10-23"},{"lineNumber":233,"author":{"gitId":"xnajasho"},"content":"        if (containsSquareBracketFields(trimmedReminder)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":234,"author":{"gitId":"xnajasho"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_CONTAINS_FIELD_IN_BRACKETS, \"Reminder\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":235,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":236,"author":{"gitId":"pss-coder"},"content":"        if (!Reminder.isValidReminder(trimmedReminder)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":237,"author":{"gitId":"pss-coder"},"content":"            throw new ParseException(Reminder.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":238,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":239,"author":{"gitId":"pss-coder"},"content":"        return new Reminder(trimmedReminder);","lastModifiedDate":"2021-10-23"},{"lineNumber":240,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":241,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":242,"author":{"gitId":"xnajasho"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":243,"author":{"gitId":"xnajasho"},"content":"     * Helper method to check if given message with prefix contains unremoved square brackets","lastModifiedDate":"2021-11-01"},{"lineNumber":244,"author":{"gitId":"xnajasho"},"content":"     * @return true if unremoved square brackets are present","lastModifiedDate":"2021-11-01"},{"lineNumber":245,"author":{"gitId":"xnajasho"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":246,"author":{"gitId":"xnajasho"},"content":"    public static boolean containsSquareBracketFields(String message) {","lastModifiedDate":"2021-11-01"},{"lineNumber":247,"author":{"gitId":"xnajasho"},"content":"        return message.contains(\"[avatar/\") || message.contains(\"[tele/\") || message.contains(\"[desc/\")","lastModifiedDate":"2021-11-01"},{"lineNumber":248,"author":{"gitId":"xnajasho"},"content":"                || message.contains(\"[r/\") || message.contains(\"[t/\");","lastModifiedDate":"2021-11-01"},{"lineNumber":249,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"RonaldTanSingWei":6,"xnajasho":71,"-":110,"pss-coder":37,"SajalVaishnav":26}},{"path":"src/main/java/seedu/friendbook/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"RonaldTanSingWei":1,"-":38}},{"path":"src/main/java/seedu/friendbook/logic/parser/ProfileCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SajalVaishnav"},"content":"package seedu.friendbook.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"SajalVaishnav"},"content":"import static seedu.friendbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"SajalVaishnav"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"SajalVaishnav"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"SajalVaishnav"},"content":"import seedu.friendbook.logic.commands.ProfileCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"SajalVaishnav"},"content":"import seedu.friendbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"SajalVaishnav"},"content":"import seedu.friendbook.model.person.Name;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"SajalVaishnav"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"SajalVaishnav"},"content":" * Parses input arguments and creates a new ProfileCommand object","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"SajalVaishnav"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"SajalVaishnav"},"content":"public class ProfileCommandParser implements Parser\u003cProfileCommand\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"SajalVaishnav"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"SajalVaishnav"},"content":"     * Parses the given {@code String} of arguments in the context of the ProfileCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"SajalVaishnav"},"content":"     * and returns an ProfileCommand object for execution.","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"SajalVaishnav"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"SajalVaishnav"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"SajalVaishnav"},"content":"    public ProfileCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"SajalVaishnav"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"SajalVaishnav"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"SajalVaishnav"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"SajalVaishnav"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"SajalVaishnav"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ProfileCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"SajalVaishnav"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"SajalVaishnav"},"content":"        return new ProfileCommand(name);","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"SajalVaishnav"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"SajalVaishnav"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"SajalVaishnav"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"SajalVaishnav"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"SajalVaishnav"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"SajalVaishnav"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"SajalVaishnav"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"SajalVaishnav":43}},{"path":"src/main/java/seedu/friendbook/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package seedu.friendbook.logic.parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.commons.core.index.Index;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"     * and returns a ViewCommand object for execution.","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"        try {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"xnajasho"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"xnajasho"},"content":"            return new ViewCommand(index);","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"xnajasho"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"xnajasho"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"xnajasho"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"xnajasho":28}},{"path":"src/main/java/seedu/friendbook/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.parser.exceptions;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"RonaldTanSingWei":2,"-":15}},{"path":"src/main/java/seedu/friendbook/model/FriendBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.person.Email;","lastModifiedDate":"2021-11-03"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.person.Phone;","lastModifiedDate":"2021-11-03"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.UniquePersonList;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":" * Wraps all data at the friend-book level","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"RonaldTanSingWei"},"content":"public class FriendBook implements ReadOnlyFriendBook {","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"RonaldTanSingWei"},"content":"    public FriendBook() {}","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"RonaldTanSingWei"},"content":"     * Creates a FriendBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"RonaldTanSingWei"},"content":"    public FriendBook(ReadOnlyFriendBook toBeCopied) {","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"RonaldTanSingWei"},"content":"     * Resets the existing data of this {@code FriendBook} with {@code newData}.","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void resetData(ReadOnlyFriendBook newData) {","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"RonaldTanSingWei"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the friend book.","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"xnajasho"},"content":"     * Returns true if a person with the same Phone Number exists in the friend book.","lastModifiedDate":"2021-11-08"},{"lineNumber":73,"author":{"gitId":"xnajasho"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"xnajasho"},"content":"    public boolean hasPhone(Phone phone) {","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"xnajasho"},"content":"        requireNonNull(phone);","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"xnajasho"},"content":"        return persons.hasExistingPhoneNumber(phone);","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"xnajasho"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"xnajasho"},"content":"     * Returns true if a person with the same Email exists in the friend book.","lastModifiedDate":"2021-11-08"},{"lineNumber":81,"author":{"gitId":"xnajasho"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"xnajasho"},"content":"    public boolean hasEmail(Email email) {","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"xnajasho"},"content":"        requireNonNull(email);","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"xnajasho"},"content":"        return persons.hasExistingEmail(email);","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"RonaldTanSingWei"},"content":"     * Adds a person to the friend book.","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"RonaldTanSingWei"},"content":"     * The person must not already exist in the friend book.","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"RonaldTanSingWei"},"content":"     * {@code target} must exist in the friend book.","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"RonaldTanSingWei"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the friend book.","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"RonaldTanSingWei"},"content":"     * Removes {@code key} from this {@code FriendBook}.","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"RonaldTanSingWei"},"content":"     * {@code key} must exist in the friend book.","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":127,"author":{"gitId":"xnajasho"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"xnajasho"},"content":"    public ObservableList\u003cPerson\u003e getSortedPersonListByBirthday() {","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"xnajasho"},"content":"        return persons.asUnmodifiableObservableListSortedByBirthday();","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"RonaldTanSingWei"},"content":"                || (other instanceof FriendBook // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"RonaldTanSingWei"},"content":"                \u0026\u0026 persons.equals(((FriendBook) other).persons));","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RonaldTanSingWei":19,"xnajasho":22,"-":102}},{"path":"src/main/java/seedu/friendbook/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":"import javafx.beans.property.StringProperty;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.GuiSettings;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.person.Email;","lastModifiedDate":"2021-11-03"},{"lineNumber":10,"author":{"gitId":"SajalVaishnav"},"content":"import seedu.friendbook.model.person.Name;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.person.Phone;","lastModifiedDate":"2021-11-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"RonaldTanSingWei"},"content":"     * Returns the user prefs\u0027 friend book file path.","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"RonaldTanSingWei"},"content":"    Path getFriendBookFilePath();","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"RonaldTanSingWei"},"content":"     * Sets the user prefs\u0027 friend book file path.","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"RonaldTanSingWei"},"content":"    void setFriendBookFilePath(Path friendBookFilePath);","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"SajalVaishnav"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"SajalVaishnav"},"content":"     * Returns the user pref\u0027s username","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"SajalVaishnav"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"SajalVaishnav"},"content":"    Name getUsername();","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"pss-coder"},"content":"     * Returns the user pref\u0027s username property","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"pss-coder"},"content":"    StringProperty getUsernameProperty();","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"SajalVaishnav"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"SajalVaishnav"},"content":"     * Sets the user prefs\u0027 username.","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"SajalVaishnav"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"SajalVaishnav"},"content":"    void setUsername(Name username);","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"RonaldTanSingWei"},"content":"     * Replaces friend book data with the data in {@code friendBook}.","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"RonaldTanSingWei"},"content":"    void setFriendBook(ReadOnlyFriendBook friendBook);","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"RonaldTanSingWei"},"content":"    /** Returns the FriendBook */","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"RonaldTanSingWei"},"content":"    ReadOnlyFriendBook getFriendBook();","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"RonaldTanSingWei"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the friend book.","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"xnajasho"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"xnajasho"},"content":"     * Returns true if the phone exists in the friend book.","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"xnajasho"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"xnajasho"},"content":"    boolean hasPhone(Phone phone);","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"xnajasho"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"xnajasho"},"content":"     * Returns true if the email exists in the friend book.","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"xnajasho"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"xnajasho"},"content":"    boolean hasEmail(Email email);","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"RonaldTanSingWei"},"content":"     * The person must exist in the friend book.","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"RonaldTanSingWei"},"content":"     * {@code person} must not already exist in the friend book.","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":102,"author":{"gitId":"RonaldTanSingWei"},"content":"     * {@code target} must exist in the friend book.","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"RonaldTanSingWei"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the friend book.","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"xnajasho"},"content":"    /** Returns an unmodifiable view of the filtered person list which is sorted by days to birthday */","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"xnajasho"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonListSortedByBirthday();","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":115,"author":{"gitId":"RonaldTanSingWei"},"content":"     * The given predicate is a person","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"RonaldTanSingWei":18,"xnajasho":15,"-":71,"pss-coder":6,"SajalVaishnav":10}},{"path":"src/main/java/seedu/friendbook/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":"import javafx.beans.property.SimpleStringProperty;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"import javafx.beans.property.StringProperty;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.GuiSettings;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.LogsCenter;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.person.Email;","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"SajalVaishnav"},"content":"import seedu.friendbook.model.person.Name;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.person.Phone;","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"RonaldTanSingWei"},"content":" * Represents the in-memory model of the friend book data.","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"RonaldTanSingWei"},"content":"    private final FriendBook friendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"xnajasho"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersonsCopy;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"pss-coder"},"content":"    private final StringProperty userNameProperty;","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"RonaldTanSingWei"},"content":"     * Initializes a ModelManager with the given friendBook and userPrefs.","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"RonaldTanSingWei"},"content":"    public ModelManager(ReadOnlyFriendBook friendBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"RonaldTanSingWei"},"content":"        requireAllNonNull(friendBook, userPrefs);","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"RonaldTanSingWei"},"content":"        logger.fine(\"Initializing with friend book: \" + friendBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"RonaldTanSingWei"},"content":"        this.friendBook \u003d new FriendBook(friendBook);","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"RonaldTanSingWei"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.friendBook.getPersonList());","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"xnajasho"},"content":"        filteredPersonsCopy \u003d new FilteredList\u003c\u003e(this.friendBook.getSortedPersonListByBirthday());","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"pss-coder"},"content":"        userNameProperty \u003d new SimpleStringProperty(userPrefs.getUsername().fullName);","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"RonaldTanSingWei"},"content":"        this(new FriendBook(), new UserPrefs());","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"RonaldTanSingWei"},"content":"    public Path getFriendBookFilePath() {","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"RonaldTanSingWei"},"content":"        return userPrefs.getFriendBookFilePath();","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void setFriendBookFilePath(Path friendBookFilePath) {","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"RonaldTanSingWei"},"content":"        requireNonNull(friendBookFilePath);","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"RonaldTanSingWei"},"content":"        userPrefs.setFriendBookFilePath(friendBookFilePath);","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"SajalVaishnav"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"SajalVaishnav"},"content":"    public Name getUsername() {","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"SajalVaishnav"},"content":"        return userPrefs.getUsername();","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"pss-coder"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"pss-coder"},"content":"    public StringProperty getUsernameProperty() {","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"pss-coder"},"content":"        return this.userNameProperty;","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"SajalVaishnav"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"SajalVaishnav"},"content":"    public void setUsername(Name username) {","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"SajalVaishnav"},"content":"        requireNonNull(username);","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"SajalVaishnav"},"content":"        userPrefs.setUsername(username);","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"pss-coder"},"content":"        userNameProperty.setValue(username.fullName);","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"RonaldTanSingWei"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FriendBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void setFriendBook(ReadOnlyFriendBook friendBook) {","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"RonaldTanSingWei"},"content":"        this.friendBook.resetData(friendBook);","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":114,"author":{"gitId":"RonaldTanSingWei"},"content":"    public ReadOnlyFriendBook getFriendBook() {","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"RonaldTanSingWei"},"content":"        return friendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"RonaldTanSingWei"},"content":"        return friendBook.hasPerson(person);","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"xnajasho"},"content":"    @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"xnajasho"},"content":"    public boolean hasPhone(Phone phone) {","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"xnajasho"},"content":"        requireNonNull(phone);","lastModifiedDate":"2021-11-03"},{"lineNumber":127,"author":{"gitId":"xnajasho"},"content":"        return friendBook.hasPhone(phone);","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":130,"author":{"gitId":"xnajasho"},"content":"    @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":131,"author":{"gitId":"xnajasho"},"content":"    public boolean hasEmail(Email email) {","lastModifiedDate":"2021-11-03"},{"lineNumber":132,"author":{"gitId":"xnajasho"},"content":"        requireNonNull(email);","lastModifiedDate":"2021-11-03"},{"lineNumber":133,"author":{"gitId":"xnajasho"},"content":"        return friendBook.hasEmail(email);","lastModifiedDate":"2021-11-03"},{"lineNumber":134,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":135,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":138,"author":{"gitId":"RonaldTanSingWei"},"content":"        friendBook.removePerson(target);","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":143,"author":{"gitId":"RonaldTanSingWei"},"content":"        friendBook.addPerson(person);","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":151,"author":{"gitId":"RonaldTanSingWei"},"content":"        friendBook.setPerson(target, editedPerson);","lastModifiedDate":"2021-10-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"RonaldTanSingWei"},"content":"     * {@code versionedFriendBook}","lastModifiedDate":"2021-10-05"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":165,"author":{"gitId":"xnajasho"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"xnajasho"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonListSortedByBirthday() {","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"xnajasho"},"content":"        return filteredPersonsCopy;","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"RonaldTanSingWei"},"content":"        return friendBook.equals(other.friendBook)","lastModifiedDate":"2021-10-05"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RonaldTanSingWei":30,"xnajasho":21,"-":121,"pss-coder":11,"SajalVaishnav":12}},{"path":"src/main/java/seedu/friendbook/model/ReadOnlyFriendBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"public interface ReadOnlyFriendBook {","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"     * Returns an unmodifiable view of the persons list ordered by the person with the closest birthday.","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"xnajasho"},"content":"    ObservableList\u003cPerson\u003e getSortedPersonListByBirthday();","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RonaldTanSingWei":3,"xnajasho":6,"-":14}},{"path":"src/main/java/seedu/friendbook/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.GuiSettings;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"SajalVaishnav"},"content":"import seedu.friendbook.model.person.Name;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"RonaldTanSingWei"},"content":"    Path getFriendBookFilePath();","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"SajalVaishnav"},"content":"    Name getUsername();","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"RonaldTanSingWei":3,"-":13,"SajalVaishnav":3}},{"path":"src/main/java/seedu/friendbook/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.GuiSettings;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"SajalVaishnav"},"content":"import seedu.friendbook.model.person.Name;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"RonaldTanSingWei"},"content":"    private Path friendBookFilePath \u003d Paths.get(\"data\" , \"friendbook.json\");","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"SajalVaishnav"},"content":"    private Name username \u003d new Name(\"generic username\");","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"RonaldTanSingWei"},"content":"        setFriendBookFilePath(newUserPrefs.getFriendBookFilePath());","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"SajalVaishnav"},"content":"        setUsername(newUserPrefs.getUsername());","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"RonaldTanSingWei"},"content":"    public Path getFriendBookFilePath() {","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"RonaldTanSingWei"},"content":"        return friendBookFilePath;","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void setFriendBookFilePath(Path friendBookFilePath) {","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"RonaldTanSingWei"},"content":"        requireNonNull(friendBookFilePath);","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"RonaldTanSingWei"},"content":"        this.friendBookFilePath \u003d friendBookFilePath;","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"SajalVaishnav"},"content":"    public void setUsername(Name username) {","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"SajalVaishnav"},"content":"        requireNonNull(username);","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"SajalVaishnav"},"content":"        this.username \u003d username;","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"SajalVaishnav"},"content":"    public Name getUsername() {","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"SajalVaishnav"},"content":"        return this.username;","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"SajalVaishnav"},"content":"        return guiSettings.equals(o.getGuiSettings())","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"SajalVaishnav"},"content":"                \u0026\u0026 friendBookFilePath.equals(o.getFriendBookFilePath())","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"SajalVaishnav"},"content":"                \u0026\u0026 username.equals(o.getUsername());","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"SajalVaishnav"},"content":"        return Objects.hash(guiSettings, friendBookFilePath, username);","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"RonaldTanSingWei"},"content":"        sb.append(\"\\nLocal data file location : \" + friendBookFilePath);","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"SajalVaishnav"},"content":"        sb.append(\"\\nUsername : \" + username.fullName);","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RonaldTanSingWei":10,"xnajasho":2,"-":75,"SajalVaishnav":14}},{"path":"src/main/java/seedu/friendbook/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":" * Represents a Person\u0027s address in the friend book.","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"SajalVaishnav"},"content":"        boolean isValid \u003d test.matches(VALIDATION_REGEX) || test.trim().equals(\"\");","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"SajalVaishnav"},"content":"        return isValid;","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"SajalVaishnav"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"SajalVaishnav"},"content":"     * Returns true if description is empty.","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"SajalVaishnav"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"SajalVaishnav"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"SajalVaishnav"},"content":"        return value.isEmpty();","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RonaldTanSingWei":3,"-":53,"SajalVaishnav":9}},{"path":"src/main/java/seedu/friendbook/model/person/Avatar.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pss-coder"},"content":"package seedu.friendbook.model.person;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"pss-coder"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.MainApp;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":" * Represents a Person\u0027s avatar file name in the friend book.","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":" * Gurantees: immutable; is valid as declared in {@link #isValidAvatar(String)}","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":" * */","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"public class Avatar {","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"    public static final String AVATAR_PATH \u003d \"/images/avatars/Avatar\";","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"pss-coder"},"content":"    /*","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"pss-coder"},"content":"     * Only alphanumeric and underscores allowed.","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"    public static final String VALIDATION_REGEX \u003d \"/^[0-9]$|^[0-9]$|^1[0-9]$|^20$|^0$/\";","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"pss-coder"},"content":"    public static final String DEFAULT_AVATAR \u003d \"0\";","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"pss-coder"},"content":"    public static final Image DEFAULT_AVATAR_IMAGE \u003d new Image(","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"pss-coder"},"content":"            MainApp.class.getResourceAsStream(AVATAR_PATH + \"0.png\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"pss-coder"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"pss-coder"},"content":"            \"Choose Avatar from 0-20 only\";","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"pss-coder"},"content":"    public final String value;","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"xnajasho"},"content":"     * Constructs an {@code Avatar}.","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"pss-coder"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"xnajasho"},"content":"     * @param avatar A valid avatar number.","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"pss-coder"},"content":"    public Avatar(String avatar) {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"pss-coder"},"content":"        requireNonNull(avatar);","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"pss-coder"},"content":"        checkArgument(isValidAvatar(avatar), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"pss-coder"},"content":"        this.value \u003d avatar;","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"xnajasho"},"content":"     * Returns true if a given string is a valid avatar.","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"pss-coder"},"content":"    public static boolean isValidAvatar(String test) {","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"xnajasho"},"content":"        return test.matches(VALIDATION_REGEX) || test.trim().equals(\"\");","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"pss-coder"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"pss-coder"},"content":"    public String toString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"pss-coder"},"content":"        return this.value;","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"pss-coder"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"pss-coder"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"pss-coder"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"xnajasho"},"content":"                || (other instanceof Avatar // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"pss-coder"},"content":"                \u0026\u0026 value.equals(((Avatar) other).value)); // state check","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"pss-coder"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"pss-coder"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"pss-coder"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"pss-coder"},"content":"     * Returns true if the avatar is empty.","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"pss-coder"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"pss-coder"},"content":"        return value.isEmpty();","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"pss-coder"},"content":"    public Image getImage() throws NullPointerException {","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"pss-coder"},"content":"        if (!isValidAvatar(value)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"pss-coder"},"content":"            return DEFAULT_AVATAR_IMAGE;","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"pss-coder"},"content":"        return new Image(","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"pss-coder"},"content":"                MainApp.class.getResourceAsStream(AVATAR_PATH + this.value + \".png\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"xnajasho":5,"pss-coder":77}},{"path":"src/main/java/seedu/friendbook/model/person/Birthday.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package seedu.friendbook.model.person;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"import java.time.Period;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.person.exceptions.BirthdayHasNotOccurredException;","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"public class Birthday {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"            \"Birthdays should be in \u0027YYYY-MM-DD\u0027 format and should not be blank\";","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"xnajasho"},"content":"    public final String value;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"xnajasho"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"xnajasho"},"content":"     * Constructs a {@code Birthday}.","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"xnajasho"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"xnajasho"},"content":"     * @param birthday A valid birthday in \u0027YYYY-MM-DD\u0027 format.","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"xnajasho"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"xnajasho"},"content":"    public Birthday(String birthday) {","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"xnajasho"},"content":"        requireNonNull(birthday);","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"xnajasho"},"content":"        checkArgument(isValidFormat(birthday), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"xnajasho"},"content":"        value \u003d birthday;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"xnajasho"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"xnajasho"},"content":"     * Checks if the specified birthday has passed","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"xnajasho"},"content":"     * @param birthday A valid birthday in \u0027YYYY-MM-DD\u0027 format","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"xnajasho"},"content":"     * @return false if birthday has yet to occur","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"xnajasho"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"xnajasho"},"content":"    public static boolean hasBirthdayPassed(LocalDate birthday) {","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"xnajasho"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"xnajasho"},"content":"        return currentDate.getYear() \u003e birthday.getYear()","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"xnajasho"},"content":"                || currentDate.getYear() \u003d\u003d birthday.getYear()","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"xnajasho"},"content":"                    \u0026\u0026 currentDate.getMonthValue() \u003e birthday.getMonthValue()","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"xnajasho"},"content":"                || currentDate.getYear() \u003d\u003d birthday.getYear()","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"xnajasho"},"content":"                    \u0026\u0026 currentDate.getMonthValue() \u003d\u003d birthday.getMonthValue()","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"xnajasho"},"content":"                    \u0026\u0026 currentDate.getDayOfMonth() \u003e\u003d birthday.getDayOfMonth();","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"xnajasho"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"xnajasho"},"content":"     * Returns true if the input birthday follows the \u0027yyyy-MM-dd\u0027 format","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"xnajasho"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"xnajasho"},"content":"    public static boolean isValidFormat(String test) {","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"xnajasho"},"content":"        boolean isValid;","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"xnajasho"},"content":"        DateTimeFormatter formatter \u003d","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"xnajasho"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd\").withResolverStyle(ResolverStyle.LENIENT);","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"xnajasho"},"content":"        try {","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"xnajasho"},"content":"            LocalDate date \u003d formatter.parse(test, LocalDate::from);","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"xnajasho"},"content":"            isValid \u003d true;","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"xnajasho"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"xnajasho"},"content":"            isValid \u003d false;","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"xnajasho"},"content":"        return isValid;","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"xnajasho"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"xnajasho"},"content":"     * Checks if the birthday contains any invalid values i.e DayOfMonth \u003e 31,leap month values etc","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"xnajasho"},"content":"     * @throws DateTimeException first if values are invalid","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"xnajasho"},"content":"     * @throws BirthdayHasNotOccurredException next if birthday has yet to occur","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"xnajasho"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"xnajasho"},"content":"    public static void invalidValuesCheck(String birthday) throws BirthdayHasNotOccurredException {","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"xnajasho"},"content":"        boolean hasPassed;","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"xnajasho"},"content":"        try {","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"xnajasho"},"content":"            LocalDate date \u003d LocalDate.parse(birthday);","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"xnajasho"},"content":"            hasPassed \u003d hasBirthdayPassed(date);","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"xnajasho"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"xnajasho"},"content":"            throw new DateTimeException(e.getMessage());","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"xnajasho"},"content":"        if (!hasPassed) {","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"xnajasho"},"content":"            throw new BirthdayHasNotOccurredException();","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"xnajasho"},"content":"    public String getActualDate() {","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"xnajasho"},"content":"        LocalDate date \u003d LocalDate.parse(value);","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"xnajasho"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"xnajasho"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"xnajasho"},"content":"     * Calculates the remaining days until specified birthday","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"xnajasho"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"xnajasho"},"content":"    public long calculateRemainingDaysToBirthday() {","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"xnajasho"},"content":"        if (isTodayBirthday()) {","lastModifiedDate":"2021-11-02"},{"lineNumber":95,"author":{"gitId":"xnajasho"},"content":"            return 0;","lastModifiedDate":"2021-11-02"},{"lineNumber":96,"author":{"gitId":"xnajasho"},"content":"        } else {","lastModifiedDate":"2021-11-02"},{"lineNumber":97,"author":{"gitId":"xnajasho"},"content":"            LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"xnajasho"},"content":"            LocalDate birthday \u003d LocalDate.parse(value);","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"xnajasho"},"content":"            LocalDate nextBday \u003d birthday.withYear(today.getYear());","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"xnajasho"},"content":"            //If your birthday has occurred this year already, add 1 to the year.","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"xnajasho"},"content":"            if (nextBday.isBefore(today)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":103,"author":{"gitId":"xnajasho"},"content":"                nextBday \u003d nextBday.plusYears(1);","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"xnajasho"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"xnajasho"},"content":"            return ChronoUnit.DAYS.between(today, nextBday);","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":109,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":110,"author":{"gitId":"xnajasho"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":111,"author":{"gitId":"xnajasho"},"content":"     * Helper method to check if specified birthday is today","lastModifiedDate":"2021-11-02"},{"lineNumber":112,"author":{"gitId":"xnajasho"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":113,"author":{"gitId":"xnajasho"},"content":"    public boolean isTodayBirthday() {","lastModifiedDate":"2021-11-02"},{"lineNumber":114,"author":{"gitId":"xnajasho"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2021-11-02"},{"lineNumber":115,"author":{"gitId":"xnajasho"},"content":"        LocalDate birthday \u003d LocalDate.parse(value);","lastModifiedDate":"2021-11-02"},{"lineNumber":116,"author":{"gitId":"xnajasho"},"content":"        return birthday.getMonth().equals(today.getMonth())","lastModifiedDate":"2021-11-02"},{"lineNumber":117,"author":{"gitId":"xnajasho"},"content":"                \u0026\u0026 birthday.getDayOfMonth() \u003d\u003d today.getDayOfMonth();","lastModifiedDate":"2021-11-02"},{"lineNumber":118,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":119,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"xnajasho"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"xnajasho"},"content":"     * Calculates the age based on the birthday date","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"xnajasho"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"xnajasho"},"content":"    public int calculateAge() {","lastModifiedDate":"2021-10-14"},{"lineNumber":124,"author":{"gitId":"xnajasho"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"xnajasho"},"content":"        LocalDate bday \u003d LocalDate.parse(value);","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"xnajasho"},"content":"        return Period.between(bday, today).getYears();","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"xnajasho"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"xnajasho"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"xnajasho"},"content":"        return value;","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"xnajasho"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"xnajasho"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"xnajasho"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"xnajasho"},"content":"                || (other instanceof Birthday","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"xnajasho"},"content":"                \u0026\u0026 value.equals(((Birthday) other).value));","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"xnajasho"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"xnajasho"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"xnajasho"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"xnajasho":145}},{"path":"src/main/java/seedu/friendbook/model/person/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SajalVaishnav"},"content":"package seedu.friendbook.model.person;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"SajalVaishnav"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"SajalVaishnav"},"content":"import static seedu.friendbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"SajalVaishnav"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"SajalVaishnav"},"content":" * Represents a Person\u0027s description in the friend book.","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"SajalVaishnav"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"SajalVaishnav"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"SajalVaishnav"},"content":"public class Description {","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"SajalVaishnav"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Descriptions can take any values, and it should not be blank\";","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"SajalVaishnav"},"content":"    /*","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"SajalVaishnav"},"content":"     * The first character of the description must not be a whitespace,","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"SajalVaishnav"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"SajalVaishnav"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"SajalVaishnav"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"SajalVaishnav"},"content":"    public final String value;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"SajalVaishnav"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"SajalVaishnav"},"content":"     * Constructs an {@code Description}.","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"SajalVaishnav"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"SajalVaishnav"},"content":"     * @param description A valid description.","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"SajalVaishnav"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"SajalVaishnav"},"content":"    public Description(String description) {","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"SajalVaishnav"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"SajalVaishnav"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"SajalVaishnav"},"content":"        value \u003d description;","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"SajalVaishnav"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"pss-coder"},"content":"     * Returns true if a given string is a valid description or is empty.","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"SajalVaishnav"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"SajalVaishnav"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"xnajasho"},"content":"        boolean isValid \u003d test.matches(VALIDATION_REGEX) || test.trim().equals(\"\");","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"SajalVaishnav"},"content":"        return isValid;","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"xnajasho"},"content":"    public static boolean containsOnlySpaces(String test) {","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"xnajasho"},"content":"        return test.trim().equals(\"\");","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"SajalVaishnav"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"SajalVaishnav"},"content":"    public String toString() {","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"SajalVaishnav"},"content":"        return value;","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"SajalVaishnav"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"SajalVaishnav"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"SajalVaishnav"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"SajalVaishnav"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"SajalVaishnav"},"content":"                \u0026\u0026 value.equals(((Description) other).value)); // state check","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"SajalVaishnav"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"SajalVaishnav"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"SajalVaishnav"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"SajalVaishnav"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"pss-coder"},"content":"     * Returns true if description is empty.","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"SajalVaishnav"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"pss-coder"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"pss-coder"},"content":"        return value.isEmpty();","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"SajalVaishnav"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"xnajasho":5,"pss-coder":4,"SajalVaishnav":59}},{"path":"src/main/java/seedu/friendbook/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":" * Represents a Person\u0027s email in the friend book.","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RonaldTanSingWei":3,"-":68}},{"path":"src/main/java/seedu/friendbook/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":" * Represents a Person\u0027s name in the friend book.","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"            \"Names can only contain alphanumeric characters, spaces, hyphens or underscores,\"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"            + \" subjected to the following constraints:\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"            + \"1. Names are not allowed to start with numbers\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"            + \"2. Names cannot consist solely of numbers\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"            + \"3. Hyphens or underscores MUST be preceded by a character\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"            + \"4. Consecutive hyphens or underscores are not allowed\\n\"","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"            + \"5. Names are not allowed to begin with spaces\";","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"pss-coder"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"xnajasho"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(?!.*--)(?!.*__)[a-zA-Z][a-zA-Z\\\\d\\\\s\\\\_\\\\-]*\";","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"SajalVaishnav"},"content":"    /*","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"SajalVaishnav"},"content":"    This is to allow readabililty from JSON format","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"SajalVaishnav"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"SajalVaishnav"},"content":"    public Name() {","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"SajalVaishnav"},"content":"        this.fullName \u003d \"read-from-json\";","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RonaldTanSingWei":3,"xnajasho":8,"-":53,"pss-coder":1,"SajalVaishnav":6}},{"path":"src/main/java/seedu/friendbook/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.util.StringUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"RonaldTanSingWei":2,"-":29}},{"path":"src/main/java/seedu/friendbook/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.reminder.Reminder;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":" * Represents a Person in the friend book.","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"SajalVaishnav"},"content":"    private final Description description;","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"SajalVaishnav"},"content":"    private final TeleHandle teleHandle;","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"xnajasho"},"content":"    private final Birthday birthday;","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"pss-coder"},"content":"    private final Avatar avatar;","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"pss-coder"},"content":"    private final Reminder reminder;","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"SajalVaishnav"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Birthday bday,","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"pss-coder"},"content":"                  TeleHandle teleHandle, Description description, Avatar avatar, Reminder reminder) {","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"pss-coder"},"content":"        requireAllNonNull(name, phone, email, address, tags, bday, teleHandle, description, avatar, reminder);","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"xnajasho"},"content":"        this.birthday \u003d bday;","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"SajalVaishnav"},"content":"        this.teleHandle \u003d teleHandle;","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"SajalVaishnav"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"pss-coder"},"content":"        this.avatar \u003d avatar;","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"pss-coder"},"content":"        this.reminder \u003d reminder;","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"pss-coder"},"content":"    private Person(Person person) {","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"pss-coder"},"content":"        this.name \u003d person.name;","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"pss-coder"},"content":"        this.phone \u003d person.phone;","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"pss-coder"},"content":"        this.email \u003d person.email;","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"pss-coder"},"content":"        this.address \u003d person.address;","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"pss-coder"},"content":"        this.tags.addAll(person.tags);","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"pss-coder"},"content":"        this.birthday \u003d person.birthday;","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"pss-coder"},"content":"        this.teleHandle \u003d person.teleHandle;","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"pss-coder"},"content":"        this.description \u003d person.description;","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"pss-coder"},"content":"        this.avatar \u003d person.avatar;","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"pss-coder"},"content":"        this.reminder \u003d person.reminder;","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"pss-coder"},"content":"    public static Person newInstance(Person person) {","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"pss-coder"},"content":"        return new Person(person);","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":84,"author":{"gitId":"xnajasho"},"content":"    public Birthday getBirthday() {","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"xnajasho"},"content":"        return birthday;","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"SajalVaishnav"},"content":"    public TeleHandle getTeleHandle() {","lastModifiedDate":"2021-10-14"},{"lineNumber":89,"author":{"gitId":"SajalVaishnav"},"content":"        return teleHandle;","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":92,"author":{"gitId":"SajalVaishnav"},"content":"    public Description getDescription() {","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"SajalVaishnav"},"content":"        return description;","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"pss-coder"},"content":"    public Avatar getAvatar() {","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"pss-coder"},"content":"        return avatar;","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"pss-coder"},"content":"    public Reminder getReminder() {","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"pss-coder"},"content":"        return reminder;","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"xnajasho"},"content":"     * Returns true if both persons have the same name, phone number, email, birthday","lastModifiedDate":"2021-11-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"xnajasho"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName())","lastModifiedDate":"2021-11-03"},{"lineNumber":123,"author":{"gitId":"xnajasho"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2021-11-03"},{"lineNumber":124,"author":{"gitId":"xnajasho"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2021-11-03"},{"lineNumber":125,"author":{"gitId":"xnajasho"},"content":"                \u0026\u0026 otherPerson.getBirthday().equals(getBirthday());","lastModifiedDate":"2021-11-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":147,"author":{"gitId":"xnajasho"},"content":"                \u0026\u0026 otherPerson.getBirthday().equals(getBirthday())","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"SajalVaishnav"},"content":"                \u0026\u0026 otherPerson.getTeleHandle().equals(getTeleHandle())","lastModifiedDate":"2021-10-14"},{"lineNumber":149,"author":{"gitId":"SajalVaishnav"},"content":"                \u0026\u0026 otherPerson.getDescription().equals(getDescription())","lastModifiedDate":"2021-10-14"},{"lineNumber":150,"author":{"gitId":"pss-coder"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"pss-coder"},"content":"                \u0026\u0026 otherPerson.getAvatar().equals(getAvatar())","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"pss-coder"},"content":"                \u0026\u0026 otherPerson.getReminder().equals(getReminder());","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":170,"author":{"gitId":"xnajasho"},"content":"                .append(getAddress())","lastModifiedDate":"2021-10-06"},{"lineNumber":171,"author":{"gitId":"xnajasho"},"content":"                .append(\"; Birthday: \")","lastModifiedDate":"2021-10-06"},{"lineNumber":172,"author":{"gitId":"xnajasho"},"content":"                .append(getBirthday());","lastModifiedDate":"2021-10-06"},{"lineNumber":173,"author":{"gitId":"pss-coder"},"content":"        if (!getAvatar().isEmpty()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":174,"author":{"gitId":"pss-coder"},"content":"            builder.append(\"; Avatar: \").append(getAvatar());","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"pss-coder"},"content":"        if (!getTeleHandle().isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"SajalVaishnav"},"content":"            builder.append(\"; Tele Handle: \").append(getTeleHandle());","lastModifiedDate":"2021-10-14"},{"lineNumber":178,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":179,"author":{"gitId":"pss-coder"},"content":"        if (!getDescription().isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"SajalVaishnav"},"content":"            builder.append(\"; Description: \").append(getDescription());","lastModifiedDate":"2021-10-14"},{"lineNumber":181,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":182,"author":{"gitId":"xnajasho"},"content":"        builder.append(\"; Reminder: \").append(getReminder());","lastModifiedDate":"2021-10-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":191,"author":{"gitId":"SajalVaishnav"},"content":"    public int getDaysToRemainingBirthday() {","lastModifiedDate":"2021-10-14"},{"lineNumber":192,"author":{"gitId":"SajalVaishnav"},"content":"        return (int) birthday.calculateRemainingDaysToBirthday();","lastModifiedDate":"2021-10-14"},{"lineNumber":193,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":194,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":195,"author":{"gitId":"SajalVaishnav"},"content":"    public int getAge() {","lastModifiedDate":"2021-10-14"},{"lineNumber":196,"author":{"gitId":"SajalVaishnav"},"content":"        return birthday.calculateAge();","lastModifiedDate":"2021-10-14"},{"lineNumber":197,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RonaldTanSingWei":3,"xnajasho":16,"-":114,"pss-coder":39,"SajalVaishnav":26}},{"path":"src/main/java/seedu/friendbook/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":" * Represents a Person\u0027s phone number in the friend book.","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RonaldTanSingWei":3,"-":50}},{"path":"src/main/java/seedu/friendbook/model/person/TagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model.person;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.util.StringUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.tag.Tag;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"public class TagContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"RonaldTanSingWei"},"content":"    public TagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"RonaldTanSingWei"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"RonaldTanSingWei"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"RonaldTanSingWei"},"content":"        Set\u003cTag\u003e tags \u003d person.getTags();","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"RonaldTanSingWei"},"content":"        boolean checker \u003d false;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"RonaldTanSingWei"},"content":"        for (Tag tag : tags) {","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"RonaldTanSingWei"},"content":"            String check \u003d tag.getTagName();","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"RonaldTanSingWei"},"content":"            for (String keyword : keywords) {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"RonaldTanSingWei"},"content":"                if (StringUtil.containsWordIgnoreCase(check, keyword)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"RonaldTanSingWei"},"content":"                    checker \u003d true;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"RonaldTanSingWei"},"content":"                }","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"RonaldTanSingWei"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"RonaldTanSingWei"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"RonaldTanSingWei"},"content":"        return checker;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"RonaldTanSingWei"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"RonaldTanSingWei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"RonaldTanSingWei"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"RonaldTanSingWei"},"content":"                || (other instanceof TagContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"RonaldTanSingWei"},"content":"                \u0026\u0026 keywords.equals(((TagContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"RonaldTanSingWei"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"RonaldTanSingWei":39}},{"path":"src/main/java/seedu/friendbook/model/person/TeleHandle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SajalVaishnav"},"content":"package seedu.friendbook.model.person;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"SajalVaishnav"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"SajalVaishnav"},"content":"import static seedu.friendbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"SajalVaishnav"},"content":"import java.net.MalformedURLException;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"SajalVaishnav"},"content":"import java.net.URL;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"SajalVaishnav"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"SajalVaishnav"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"SajalVaishnav"},"content":" * Represents a Person\u0027s telegram handle in the friend book.","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidTeleHandle(String)}","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"SajalVaishnav"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"SajalVaishnav"},"content":"public class TeleHandle {","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"TeleHandle can use a-z and A-Z, 0-9 and underscores, and it \"","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"SajalVaishnav"},"content":"            + \"should have at least 5 characters\";","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"SajalVaishnav"},"content":"    /*","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"SajalVaishnav"},"content":"     * At least 5 characters long; and has only alphabets, digits and underscores.","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"SajalVaishnav"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"pss-coder"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[(a-zA-Z0-9_]{5,}$\";","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"SajalVaishnav"},"content":"    public final String value;","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"SajalVaishnav"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"SajalVaishnav"},"content":"     * Constructs a {@code TeleHandle}.","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"SajalVaishnav"},"content":"     *","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"SajalVaishnav"},"content":"     * @param teleHandle A valid telegram handle.","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"SajalVaishnav"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"SajalVaishnav"},"content":"    public TeleHandle(String teleHandle) {","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"SajalVaishnav"},"content":"        requireNonNull(teleHandle);","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"SajalVaishnav"},"content":"        checkArgument(isValidTeleHandle(teleHandle), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"SajalVaishnav"},"content":"        value \u003d teleHandle;","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"SajalVaishnav"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"pss-coder"},"content":"     * Returns true if a given string is a valid TeleHandle, or is empty","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"SajalVaishnav"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"SajalVaishnav"},"content":"    public static boolean isValidTeleHandle(String test) {","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"pss-coder"},"content":"        boolean isValid \u003d test.matches(VALIDATION_REGEX) || test.trim().equals(\"\");","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"SajalVaishnav"},"content":"        return isValid;","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"SajalVaishnav"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"SajalVaishnav"},"content":"    public String toString() {","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"SajalVaishnav"},"content":"        return value;","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"SajalVaishnav"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"SajalVaishnav"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"SajalVaishnav"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"SajalVaishnav"},"content":"                || (other instanceof TeleHandle // instanceof handles nulls","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"SajalVaishnav"},"content":"                \u0026\u0026 value.equals(((TeleHandle) other).value)); // state check","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"SajalVaishnav"},"content":"    @Override","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"SajalVaishnav"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"SajalVaishnav"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"SajalVaishnav"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"pss-coder"},"content":"     * Returns true if the tele handle is empty.","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"SajalVaishnav"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"pss-coder"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"pss-coder"},"content":"        return value.isEmpty();","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"SajalVaishnav"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"SajalVaishnav"},"content":"     * Converts telegram handle to a t.me/ link","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"SajalVaishnav"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"SajalVaishnav"},"content":"    public Optional\u003cURL\u003e getTeleHandleUrl() {","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"SajalVaishnav"},"content":"        try {","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"SajalVaishnav"},"content":"            URL teleUrl \u003d new URL(\"https://t.me/\" + this.value);","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"SajalVaishnav"},"content":"            return Optional.of(teleUrl);","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"SajalVaishnav"},"content":"        } catch (MalformedURLException e) {","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"SajalVaishnav"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"SajalVaishnav"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"xnajasho":2,"pss-coder":6,"SajalVaishnav":75}},{"path":"src/main/java/seedu/friendbook/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"xnajasho"},"content":"    private final ObservableList\u003cPerson\u003e birthdayListCopy \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"xnajasho"},"content":"    private final Comparator\u003cPerson\u003e comparator \u003d Comparator.comparingInt(Person::getDaysToRemainingBirthday);","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"xnajasho"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"xnajasho"},"content":"     * Returns true if the list contains an existing phone number","lastModifiedDate":"2021-11-03"},{"lineNumber":45,"author":{"gitId":"xnajasho"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":46,"author":{"gitId":"xnajasho"},"content":"    public boolean hasExistingPhoneNumber(Phone phone) {","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"xnajasho"},"content":"        requireNonNull(phone);","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"xnajasho"},"content":"        return internalList.stream().anyMatch(x -\u003e x.getPhone().equals(phone));","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"xnajasho"},"content":"    /**","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"xnajasho"},"content":"     * Returns true if the list contains an existing Email","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"xnajasho"},"content":"     */","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"xnajasho"},"content":"    public boolean hasExistingEmail(Email email) {","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"xnajasho"},"content":"        requireNonNull(email);","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"xnajasho"},"content":"        return internalList.stream().anyMatch(x -\u003e x.getEmail().equals(email));","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"xnajasho"},"content":"        birthdayListCopy.add(toAdd);","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"xnajasho"},"content":"        birthdayListCopy.sort(comparator);","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":82,"author":{"gitId":"xnajasho"},"content":"        int sortedIndex \u003d birthdayListCopy.indexOf(target);","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"xnajasho"},"content":"        if (index \u003d\u003d -1 || sortedIndex \u003d\u003d -1) {","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"xnajasho"},"content":"        birthdayListCopy.set(sortedIndex, editedPerson);","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"xnajasho"},"content":"        birthdayListCopy.sort(comparator);","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"xnajasho"},"content":"        birthdayListCopy.remove(toRemove);","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"xnajasho"},"content":"        birthdayListCopy.sort(comparator);","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":113,"author":{"gitId":"xnajasho"},"content":"        birthdayListCopy.setAll(replacement.birthdayListCopy);","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"xnajasho"},"content":"        birthdayListCopy.sort(comparator);","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":128,"author":{"gitId":"xnajasho"},"content":"        birthdayListCopy.setAll(persons);","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"xnajasho"},"content":"        birthdayListCopy.sort(comparator);","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":139,"author":{"gitId":"xnajasho"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"xnajasho"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList} sorted by nearest birthday.","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"xnajasho"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"xnajasho"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableListSortedByBirthday() {","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"xnajasho"},"content":"        return FXCollections.unmodifiableObservableList(birthdayListCopy);","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RonaldTanSingWei":4,"xnajasho":40,"-":132}},{"path":"src/main/java/seedu/friendbook/model/person/exceptions/BirthdayHasNotOccurredException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package seedu.friendbook.model.person.exceptions;","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"/**","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":" * Signals that the operation is invalid due to having invalid Birthday fields","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":" */","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"public class BirthdayHasNotOccurredException extends Exception {","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"    public BirthdayHasNotOccurredException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"        super(\"Invalid Birthday Field: Birthday has yet to occur\");","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"xnajasho":10}},{"path":"src/main/java/seedu/friendbook/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model.person.exceptions;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"RonaldTanSingWei":1,"-":10}},{"path":"src/main/java/seedu/friendbook/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model.person.exceptions;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"RonaldTanSingWei":1,"-":5}},{"path":"src/main/java/seedu/friendbook/model/reminder/Reminder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pss-coder"},"content":"package seedu.friendbook.model.reminder;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"pss-coder"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"pss-coder"},"content":"public class Reminder {","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":"            \"Reminder should only contain on or off as values \";","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":"    private String stringValue;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"     * Constructs a {@code Reminder}.","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"     * @param stringValue A valid reminder value.","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"pss-coder"},"content":"    public Reminder(String stringValue) {","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"pss-coder"},"content":"        requireNonNull(stringValue);","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"        this.stringValue \u003d stringValue.toLowerCase();","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"pss-coder"},"content":"    public String getStringValue() {","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"pss-coder"},"content":"        return stringValue;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"pss-coder"},"content":"    public void setReminder(Boolean booleanValue) {","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"pss-coder"},"content":"        this.stringValue \u003d booleanValue \u003d\u003d true ? \"on\" : \"off\";","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"pss-coder"},"content":"    public Boolean getBooleanValue() {","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"pss-coder"},"content":"        return stringValue.equals(\"on\");","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"xnajasho"},"content":"     * Returns true if a given reminder is valid. Values are case-insensitive","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"pss-coder"},"content":"    public static boolean isValidReminder(String test) {","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"xnajasho"},"content":"        return test.equalsIgnoreCase(\"on\") || test.equalsIgnoreCase(\"off\") || test.trim().equals(\"\");","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"pss-coder"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"pss-coder"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"pss-coder"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"pss-coder"},"content":"                || (other instanceof Reminder // instanceof handles nulls","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"pss-coder"},"content":"                \u0026\u0026 stringValue.equals(((Reminder) other).stringValue)); // state check","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"pss-coder"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"pss-coder"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"pss-coder"},"content":"        return stringValue.hashCode();","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"pss-coder"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"pss-coder"},"content":"    public String toString() {","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"pss-coder"},"content":"        return stringValue;","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"xnajasho":3,"pss-coder":54}},{"path":"src/main/java/seedu/friendbook/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model.tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":" * Represents a Tag in the friend book.","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"RonaldTanSingWei"},"content":"    public String getTagName() {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"RonaldTanSingWei"},"content":"        return this.tagName;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"RonaldTanSingWei":7,"-":51}},{"path":"src/main/java/seedu/friendbook/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model.util;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.FriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ReadOnlyFriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Address;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Avatar;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Birthday;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Description;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Email;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Name;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Phone;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.TeleHandle;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.reminder.Reminder;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"RonaldTanSingWei"},"content":" * Contains utility methods for populating {@code FriendBook} with sample data.","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"xnajasho"},"content":" * TeleHandles values are prefixed with @ for generation of sample FriendBook for jar file. Remove the","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"xnajasho"},"content":" * @ character when running the app for the first time via IntelliJ","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"pss-coder"},"content":"                getTagSet(\"friends\"), new Birthday(\"1998-03-16\"), new TeleHandle(\"alexi\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"pss-coder"},"content":"                    new Description(\"good friend\"), new Avatar(\"1\"), new Reminder(\"on\")),","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"SajalVaishnav"},"content":"                getTagSet(\"colleagues\", \"friends\"), new Birthday(\"1994-07-20\"),","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"pss-coder"},"content":"                    new TeleHandle(\"bertyy\"), new Description(\"good friend\"), new Avatar(\"3\"), new Reminder(\"on\")),","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"pss-coder"},"content":"                getTagSet(\"neighbours\"), new Birthday(\"1999-06-10\"), new TeleHandle(\"cherry\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"pss-coder"},"content":"                    new Description(\"good friend\"), new Avatar(\"2\"), new Reminder(\"on\")),","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"pss-coder"},"content":"                getTagSet(\"family\"), new Birthday(\"1992-09-24\"), new TeleHandle(\"davelord\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"pss-coder"},"content":"                    new Description(\"good friend\"), new Avatar(\"5\"), new Reminder(\"on\")),","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"pss-coder"},"content":"                getTagSet(\"classmates\"), new Birthday(\"1985-02-25\"), new TeleHandle(\"irfan\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"pss-coder"},"content":"                    new Description(\"good friend\"), new Avatar(\"20\"), new Reminder(\"on\")),","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"pss-coder"},"content":"                getTagSet(\"colleagues\"), new Birthday(\"1994-11-28\"), new TeleHandle(\"royyyyy\"),","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"pss-coder"},"content":"                    new Description(\"good friend\"), new Avatar(\"18\"), new Reminder(\"on\"))","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"RonaldTanSingWei"},"content":"    public static ReadOnlyFriendBook getSampleFriendBook() {","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"RonaldTanSingWei"},"content":"        FriendBook sampleAb \u003d new FriendBook();","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"RonaldTanSingWei":7,"xnajasho":3,"-":42,"pss-coder":21,"SajalVaishnav":1}},{"path":"src/main/java/seedu/friendbook/reminder/Reminder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pss-coder"},"content":"package seedu.friendbook.reminder;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"pss-coder"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"pss-coder"},"content":" * The Background Service of the Birthday Reminder.","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"public interface Reminder {","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":"     * Starts the Birthday Reminder in the background.","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"     * The birthday reminder","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"    void startBirthdayReminder();","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"pss-coder":15}},{"path":"src/main/java/seedu/friendbook/reminder/ReminderManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pss-coder"},"content":"package seedu.friendbook.reminder;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"pss-coder"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"pss-coder"},"content":"import java.util.List;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"pss-coder"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"import javafx.application.Platform;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":"import javafx.concurrent.ScheduledService;","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"import javafx.concurrent.Task;","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"import javafx.util.Duration;","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.commons.core.LogsCenter;","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"pss-coder"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"pss-coder"},"content":" * The main BirthdayReminderManager to run birthday reminder in the background.","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"pss-coder"},"content":"public class ReminderManager extends ScheduledService\u003cList\u003cPerson\u003e\u003e implements Reminder {","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"pss-coder"},"content":"    // reminder service polls every 12 hour starting with a 10second Delay","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"pss-coder"},"content":"    private static final Duration periodDuration \u003d Duration.hours(12);","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"pss-coder"},"content":"    private static final Duration delayDuration \u003d Duration.seconds(10);","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"pss-coder"},"content":"    private final ObservableList\u003cPerson\u003e personList;","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"pss-coder"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ReminderManager.class);","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"pss-coder"},"content":"     * Constructs a {@code ReminderService} with the given {@code personList}.","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"pss-coder"},"content":"    public ReminderManager(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"pss-coder"},"content":"        this.personList \u003d personList;","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"pss-coder"},"content":"        // restart reminder service for any new addition to personList","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"pss-coder"},"content":"        personList.addListener((ListChangeListener\u003cPerson\u003e) c -\u003e {","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"pss-coder"},"content":"            if (c.next() \u0026\u0026 c.wasAdded()) {","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"pss-coder"},"content":"                logger.info(\"reminder service restarting\");","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"pss-coder"},"content":"                if (isRunning()) {","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"pss-coder"},"content":"                    cancel();","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"pss-coder"},"content":"                    Platform.runLater(this::restart);","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"pss-coder"},"content":"                }","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"pss-coder"},"content":"            }","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"pss-coder"},"content":"        });","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"pss-coder"},"content":"     * Starts the Birthday Reminder.","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"pss-coder"},"content":"     * The birthday reminder also checks and displays an alert on success.","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"pss-coder"},"content":"    @Override","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"pss-coder"},"content":"    public void startBirthdayReminder() {","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"pss-coder"},"content":"        this.setPeriod(periodDuration);","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"pss-coder"},"content":"        this.setDelay(delayDuration);","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"pss-coder"},"content":"        this.handleOnSucceedHandler();","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"pss-coder"},"content":"        Platform.runLater(this::start);","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"pss-coder"},"content":"        logger.info(\"Starting Reminder Service...\");","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"pss-coder"},"content":"    private void handleOnSucceedHandler() {","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"pss-coder"},"content":"        this.setOnSucceeded(event -\u003e {","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"pss-coder"},"content":"            if (event.getSource().getValue() \u003d\u003d null) {","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"pss-coder"},"content":"                return;","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"pss-coder"},"content":"            }","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"pss-coder"},"content":"            @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"pss-coder"},"content":"            List\u003cPerson\u003e reminderList \u003d (List\u003cPerson\u003e) event.getSource().getValue();","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"pss-coder"},"content":"            if (reminderList.size() \u003e 0) {","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"pss-coder"},"content":"                Platform.runLater(() -\u003e showReminderAlert(reminderList));","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"pss-coder"},"content":"                logger.info(\"reminder service success with list:\" + reminderList);","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"pss-coder"},"content":"            }","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"pss-coder"},"content":"        });","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"pss-coder"},"content":"     * Shows the Birthday reminder alert with the given {@code reminderList}.","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"pss-coder"},"content":"    public static void showReminderAlert(List\u003cPerson\u003e reminderList) {","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"pss-coder"},"content":"        final Alert alert \u003d new Alert(Alert.AlertType.INFORMATION);","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"pss-coder"},"content":"        alert.getDialogPane().getStylesheets().add(\"stylesheets/FriendBookTheme.css\");","lastModifiedDate":"2021-11-05"},{"lineNumber":85,"author":{"gitId":"pss-coder"},"content":"        alert.setTitle(\"Birthday Reminder Alert\");","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"pss-coder"},"content":"        alert.setHeaderText(\"Friend(s) Birthday coming in less than a week: \");","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"pss-coder"},"content":"        StringBuilder text \u003d new StringBuilder();","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"pss-coder"},"content":"        text.append(\"\\n\");","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"pss-coder"},"content":"        for (Person friend: reminderList) {","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"pss-coder"},"content":"            if (friend.getDaysToRemainingBirthday() \u003d\u003d 0) {","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"pss-coder"},"content":"                text.append(\"\\n\" + friend.getName().fullName + \" is \" + friend.getAge() + \" years old today.\");","lastModifiedDate":"2021-11-08"},{"lineNumber":92,"author":{"gitId":"pss-coder"},"content":"            } else {","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"pss-coder"},"content":"                text.append(\"\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"pss-coder"},"content":"                        + friend.getName().fullName + \" is going to be \" + friend.getAge() + \" years old soon.\");","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"pss-coder"},"content":"            }","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"pss-coder"},"content":"        alert.setContentText(text.toString());","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"pss-coder"},"content":"        alert.showAndWait();","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"pss-coder"},"content":"    private Task\u003cList\u003cPerson\u003e\u003e setReminderTask() {","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"pss-coder"},"content":"        return new Task\u003c\u003e() {","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"pss-coder"},"content":"            @Override","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"pss-coder"},"content":"            protected List\u003cPerson\u003e call() {","lastModifiedDate":"2021-11-05"},{"lineNumber":105,"author":{"gitId":"pss-coder"},"content":"                // get names of person with names of friends whose birthday are coming in a week","lastModifiedDate":"2021-11-05"},{"lineNumber":106,"author":{"gitId":"pss-coder"},"content":"                return new ArrayList\u003c\u003e(personList","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"pss-coder"},"content":"                        .filtered(x -\u003e x.getReminder().getBooleanValue())","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"pss-coder"},"content":"                        .filtered(x -\u003e x.getBirthday().calculateRemainingDaysToBirthday() \u003c\u003d 7));","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"pss-coder"},"content":"            }","lastModifiedDate":"2021-11-05"},{"lineNumber":110,"author":{"gitId":"pss-coder"},"content":"        };","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":112,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":113,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":114,"author":{"gitId":"pss-coder"},"content":"    @Override","lastModifiedDate":"2021-11-05"},{"lineNumber":115,"author":{"gitId":"pss-coder"},"content":"    protected Task\u003cList\u003cPerson\u003e\u003e createTask() {","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"pss-coder"},"content":"        return setReminderTask();","lastModifiedDate":"2021-11-05"},{"lineNumber":117,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":119,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"pss-coder"},"content":"     * Represents a function that can execute Reminder service.","lastModifiedDate":"2021-11-05"},{"lineNumber":121,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":122,"author":{"gitId":"pss-coder"},"content":"    @FunctionalInterface","lastModifiedDate":"2021-11-05"},{"lineNumber":123,"author":{"gitId":"pss-coder"},"content":"    public interface SetRemindExecutor {","lastModifiedDate":"2021-11-05"},{"lineNumber":124,"author":{"gitId":"pss-coder"},"content":"        void execute(Person oldPerson, Person updatedPerson) throws CommandException;","lastModifiedDate":"2021-11-05"},{"lineNumber":125,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":126,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"pss-coder":126}},{"path":"src/main/java/seedu/friendbook/storage/FriendBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ReadOnlyFriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":" * Represents a storage for {@link seedu.friendbook.model.FriendBook}.","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"RonaldTanSingWei"},"content":"public interface FriendBookStorage {","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"RonaldTanSingWei"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"RonaldTanSingWei"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"RonaldTanSingWei"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"RonaldTanSingWei"},"content":"    Path getFriendBookFilePath();","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"RonaldTanSingWei"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"RonaldTanSingWei"},"content":"     * Returns FriendBook data as a {@link ReadOnlyFriendBook}.","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"RonaldTanSingWei"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"RonaldTanSingWei"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"RonaldTanSingWei"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"RonaldTanSingWei"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"RonaldTanSingWei"},"content":"    Optional\u003cReadOnlyFriendBook\u003e readFriendBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"RonaldTanSingWei"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"RonaldTanSingWei"},"content":"     * @see #getFriendBookFilePath()","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"RonaldTanSingWei"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"RonaldTanSingWei"},"content":"    Optional\u003cReadOnlyFriendBook\u003e readFriendBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"RonaldTanSingWei"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"RonaldTanSingWei"},"content":"     * Saves the given {@link ReadOnlyFriendBook} to the storage.","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"RonaldTanSingWei"},"content":"     * @param friendBook cannot be null.","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"RonaldTanSingWei"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"RonaldTanSingWei"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"RonaldTanSingWei"},"content":"    void saveFriendBook(ReadOnlyFriendBook friendBook) throws IOException;","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"RonaldTanSingWei"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"RonaldTanSingWei"},"content":"     * @see #saveFriendBook(ReadOnlyFriendBook)","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"RonaldTanSingWei"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"RonaldTanSingWei"},"content":"    void saveFriendBook(ReadOnlyFriendBook friendBook, Path filePath) throws IOException;","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"RonaldTanSingWei"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"RonaldTanSingWei":45}},{"path":"src/main/java/seedu/friendbook/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Address;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Avatar;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Birthday;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Description;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Email;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Name;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Phone;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.TeleHandle;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.person.exceptions.BirthdayHasNotOccurredException;","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.reminder.Reminder;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"xnajasho"},"content":"    private final String birthday;","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"SajalVaishnav"},"content":"    private final String teleHandle;","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"SajalVaishnav"},"content":"    private final String description;","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"pss-coder"},"content":"    private final String avatar;","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"pss-coder"},"content":"    private final String reminder;","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"xnajasho"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"SajalVaishnav"},"content":"            @JsonProperty(\"birthday\") String birthday,","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"pss-coder"},"content":"            @JsonProperty(\"avatar\") String avatar,","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"pss-coder"},"content":"            @JsonProperty(\"teleHandle\") String teleHandle, @JsonProperty(\"description\") String description,","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"pss-coder"},"content":"                             @JsonProperty(\"reminder\") String reminder) {","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"xnajasho"},"content":"        this.birthday \u003d birthday;","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"pss-coder"},"content":"        this.avatar \u003d avatar;","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"SajalVaishnav"},"content":"        this.teleHandle \u003d teleHandle;","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"SajalVaishnav"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"pss-coder"},"content":"        this.reminder \u003d reminder;","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"xnajasho"},"content":"        birthday \u003d source.getBirthday().value;","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"SajalVaishnav"},"content":"        teleHandle \u003d source.getTeleHandle().value;","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"SajalVaishnav"},"content":"        description \u003d source.getDescription().value;","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"pss-coder"},"content":"        avatar \u003d source.getAvatar().value;","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"pss-coder"},"content":"        reminder \u003d source.getReminder().getStringValue();","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"SajalVaishnav"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-14"},{"lineNumber":101,"author":{"gitId":"SajalVaishnav"},"content":"                    Name.class.getSimpleName()));","lastModifiedDate":"2021-10-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"SajalVaishnav"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-14"},{"lineNumber":110,"author":{"gitId":"SajalVaishnav"},"content":"                    Phone.class.getSimpleName()));","lastModifiedDate":"2021-10-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"SajalVaishnav"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-14"},{"lineNumber":119,"author":{"gitId":"SajalVaishnav"},"content":"                    Email.class.getSimpleName()));","lastModifiedDate":"2021-10-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"SajalVaishnav"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"SajalVaishnav"},"content":"                    Address.class.getSimpleName()));","lastModifiedDate":"2021-10-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"xnajasho"},"content":"        if (birthday \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"xnajasho"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-10-06"},{"lineNumber":137,"author":{"gitId":"xnajasho"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Birthday.class.getSimpleName()));","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"xnajasho"},"content":"        if (!Birthday.isValidFormat(birthday)) {","lastModifiedDate":"2021-11-01"},{"lineNumber":140,"author":{"gitId":"xnajasho"},"content":"            throw new IllegalValueException(Birthday.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":141,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"xnajasho"},"content":"        try {","lastModifiedDate":"2021-11-01"},{"lineNumber":143,"author":{"gitId":"xnajasho"},"content":"            Birthday.invalidValuesCheck(birthday);","lastModifiedDate":"2021-11-01"},{"lineNumber":144,"author":{"gitId":"xnajasho"},"content":"        } catch (DateTimeException | BirthdayHasNotOccurredException e) {","lastModifiedDate":"2021-11-01"},{"lineNumber":145,"author":{"gitId":"xnajasho"},"content":"            throw new IllegalValueException(e.getMessage());","lastModifiedDate":"2021-11-01"},{"lineNumber":146,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":147,"author":{"gitId":"xnajasho"},"content":"        final Birthday modelBirthday \u003d new Birthday(birthday);","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"SajalVaishnav"},"content":"        if (teleHandle \u003d\u003d null) {","lastModifiedDate":"2021-10-14"},{"lineNumber":150,"author":{"gitId":"SajalVaishnav"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-10-14"},{"lineNumber":151,"author":{"gitId":"SajalVaishnav"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, TeleHandle.class.getSimpleName()));","lastModifiedDate":"2021-10-14"},{"lineNumber":152,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":153,"author":{"gitId":"SajalVaishnav"},"content":"        if (!TeleHandle.isValidTeleHandle(teleHandle)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":154,"author":{"gitId":"SajalVaishnav"},"content":"            throw new IllegalValueException(TeleHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-14"},{"lineNumber":155,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":156,"author":{"gitId":"SajalVaishnav"},"content":"        final TeleHandle modelTeleHandle \u003d new TeleHandle(teleHandle);","lastModifiedDate":"2021-10-14"},{"lineNumber":157,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"SajalVaishnav"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2021-10-14"},{"lineNumber":159,"author":{"gitId":"SajalVaishnav"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-10-14"},{"lineNumber":160,"author":{"gitId":"SajalVaishnav"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Description.class.getSimpleName()));","lastModifiedDate":"2021-10-14"},{"lineNumber":161,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":162,"author":{"gitId":"SajalVaishnav"},"content":"        if (!Description.isValidDescription(description)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":163,"author":{"gitId":"SajalVaishnav"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-14"},{"lineNumber":164,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":165,"author":{"gitId":"SajalVaishnav"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2021-10-14"},{"lineNumber":166,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":167,"author":{"gitId":"pss-coder"},"content":"        if (avatar \u003d\u003d null) {","lastModifiedDate":"2021-10-24"},{"lineNumber":168,"author":{"gitId":"pss-coder"},"content":"            throw new IllegalValueException(","lastModifiedDate":"2021-10-24"},{"lineNumber":169,"author":{"gitId":"pss-coder"},"content":"                    String.format(MISSING_FIELD_MESSAGE_FORMAT, Avatar.class.getSimpleName()));","lastModifiedDate":"2021-10-24"},{"lineNumber":170,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":171,"author":{"gitId":"pss-coder"},"content":"        if (!Avatar.isValidAvatar(avatar)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":172,"author":{"gitId":"pss-coder"},"content":"            throw new IllegalValueException(Avatar.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-24"},{"lineNumber":173,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"pss-coder"},"content":"        final Avatar modelAvatar \u003d new Avatar(avatar);","lastModifiedDate":"2021-10-24"},{"lineNumber":175,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"pss-coder"},"content":"        if (reminder \u003d\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":177,"author":{"gitId":"pss-coder"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-23"},{"lineNumber":178,"author":{"gitId":"pss-coder"},"content":"                    Reminder.class.getSimpleName()));","lastModifiedDate":"2021-10-23"},{"lineNumber":179,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":180,"author":{"gitId":"pss-coder"},"content":"        if (!Reminder.isValidReminder(reminder)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":181,"author":{"gitId":"xnajasho"},"content":"            throw new IllegalValueException(Reminder.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":183,"author":{"gitId":"pss-coder"},"content":"        final Reminder modelReminder \u003d new Reminder(reminder);","lastModifiedDate":"2021-10-23"},{"lineNumber":184,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":186,"author":{"gitId":"SajalVaishnav"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelBirthday,","lastModifiedDate":"2021-10-14"},{"lineNumber":187,"author":{"gitId":"pss-coder"},"content":"                modelTeleHandle, modelDescription, modelAvatar, modelReminder);","lastModifiedDate":"2021-10-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"RonaldTanSingWei":3,"xnajasho":22,"-":95,"pss-coder":37,"SajalVaishnav":33}},{"path":"src/main/java/seedu/friendbook/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"RonaldTanSingWei":3,"-":45}},{"path":"src/main/java/seedu/friendbook/storage/JsonFriendBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.LogsCenter;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.util.FileUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.util.JsonUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ReadOnlyFriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"RonaldTanSingWei"},"content":" * A class to access FriendBook data stored as a json file on the hard disk.","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"RonaldTanSingWei"},"content":"public class JsonFriendBookStorage implements FriendBookStorage {","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"RonaldTanSingWei"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonFriendBookStorage.class);","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"RonaldTanSingWei"},"content":"    public JsonFriendBookStorage(Path filePath) {","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"RonaldTanSingWei"},"content":"    public Path getFriendBookFilePath() {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"RonaldTanSingWei"},"content":"    public Optional\u003cReadOnlyFriendBook\u003e readFriendBook() throws DataConversionException {","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"RonaldTanSingWei"},"content":"        return readFriendBook(filePath);","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"RonaldTanSingWei"},"content":"     * Similar to {@link #readFriendBook()}.","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"RonaldTanSingWei"},"content":"    public Optional\u003cReadOnlyFriendBook\u003e readFriendBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"RonaldTanSingWei"},"content":"        Optional\u003cJsonSerializableFriendBook\u003e jsonFriendBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"RonaldTanSingWei"},"content":"                filePath, JsonSerializableFriendBook.class);","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"RonaldTanSingWei"},"content":"        if (!jsonFriendBook.isPresent()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"RonaldTanSingWei"},"content":"            return Optional.of(jsonFriendBook.get().toModelType());","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void saveFriendBook(ReadOnlyFriendBook friendBook) throws IOException {","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"RonaldTanSingWei"},"content":"        saveFriendBook(friendBook, filePath);","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"RonaldTanSingWei"},"content":"     * Similar to {@link #saveFriendBook(ReadOnlyFriendBook)}.","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void saveFriendBook(ReadOnlyFriendBook friendBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"RonaldTanSingWei"},"content":"        requireNonNull(friendBook);","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"RonaldTanSingWei"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableFriendBook(friendBook), filePath);","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"RonaldTanSingWei":26,"-":54}},{"path":"src/main/java/seedu/friendbook/storage/JsonSerializableFriendBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.FriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ReadOnlyFriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"RonaldTanSingWei"},"content":" * An Immutable FriendBook that is serializable to JSON format.","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"RonaldTanSingWei"},"content":"@JsonRootName(value \u003d \"friendbook\")","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"RonaldTanSingWei"},"content":"class JsonSerializableFriendBook {","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"xnajasho"},"content":"    public static final String MESSAGE_PHONE_NUMBER_EXISTS \u003d \"Persons list contains duplicate phone numbers(s).\";","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":26,"author":{"gitId":"xnajasho"},"content":"    public static final String MESSAGE_EMAIL_EXISTS \u003d \"Persons list contains duplicate phone email(s).\";","lastModifiedDate":"2021-11-03"},{"lineNumber":27,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"RonaldTanSingWei"},"content":"     * Constructs a {@code JsonSerializableFriendBook} with the given persons.","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"RonaldTanSingWei"},"content":"    public JsonSerializableFriendBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"RonaldTanSingWei"},"content":"     * Converts a given {@code ReadOnlyFriendBook} into this class for Jackson use.","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"RonaldTanSingWei"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableFriendBook}.","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"RonaldTanSingWei"},"content":"    public JsonSerializableFriendBook(ReadOnlyFriendBook source) {","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"RonaldTanSingWei"},"content":"     * Converts this friend book into the model\u0027s {@code FriendBook} object.","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"RonaldTanSingWei"},"content":"    public FriendBook toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"RonaldTanSingWei"},"content":"        FriendBook friendBook \u003d new FriendBook();","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"RonaldTanSingWei"},"content":"            if (friendBook.hasPerson(person)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"xnajasho"},"content":"            if (friendBook.hasPhone(person.getPhone())) {","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"xnajasho"},"content":"                throw new IllegalValueException(MESSAGE_PHONE_NUMBER_EXISTS);","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"xnajasho"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"xnajasho"},"content":"            if (friendBook.hasEmail(person.getEmail())) {","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"xnajasho"},"content":"                throw new IllegalValueException(MESSAGE_EMAIL_EXISTS);","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"xnajasho"},"content":"            }","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"RonaldTanSingWei"},"content":"            friendBook.addPerson(person);","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"RonaldTanSingWei"},"content":"        return friendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"RonaldTanSingWei":19,"xnajasho":10,"-":41}},{"path":"src/main/java/seedu/friendbook/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.util.JsonUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"RonaldTanSingWei":5,"-":42}},{"path":"src/main/java/seedu/friendbook/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ReadOnlyFriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"RonaldTanSingWei"},"content":"public interface Storage extends FriendBookStorage, UserPrefsStorage {","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"RonaldTanSingWei"},"content":"    Path getFriendBookFilePath();","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"RonaldTanSingWei"},"content":"    Optional\u003cReadOnlyFriendBook\u003e readFriendBook() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"RonaldTanSingWei"},"content":"    void saveFriendBook(ReadOnlyFriendBook friendBook) throws IOException;","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"RonaldTanSingWei":9,"-":23}},{"path":"src/main/java/seedu/friendbook/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.LogsCenter;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ReadOnlyFriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"RonaldTanSingWei"},"content":" * Manages storage of FriendBook data in local storage.","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"RonaldTanSingWei"},"content":"    private FriendBookStorage friendBookStorage;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"RonaldTanSingWei"},"content":"     * Creates a {@code StorageManager} with the given {@code FriendBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"RonaldTanSingWei"},"content":"    public StorageManager(FriendBookStorage friendBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"RonaldTanSingWei"},"content":"        this.friendBookStorage \u003d friendBookStorage;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"RonaldTanSingWei"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FriendBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"RonaldTanSingWei"},"content":"    public Path getFriendBookFilePath() {","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"RonaldTanSingWei"},"content":"        return friendBookStorage.getFriendBookFilePath();","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"RonaldTanSingWei"},"content":"    public Optional\u003cReadOnlyFriendBook\u003e readFriendBook() throws DataConversionException, IOException {","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"RonaldTanSingWei"},"content":"        return readFriendBook(friendBookStorage.getFriendBookFilePath());","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"RonaldTanSingWei"},"content":"    public Optional\u003cReadOnlyFriendBook\u003e readFriendBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"RonaldTanSingWei"},"content":"        return friendBookStorage.readFriendBook(filePath);","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void saveFriendBook(ReadOnlyFriendBook friendBook) throws IOException {","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"RonaldTanSingWei"},"content":"        saveFriendBook(friendBook, friendBookStorage.getFriendBookFilePath());","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void saveFriendBook(ReadOnlyFriendBook friendBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"RonaldTanSingWei"},"content":"        friendBookStorage.saveFriendBook(friendBook, filePath);","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RonaldTanSingWei":22,"-":57}},{"path":"src/main/java/seedu/friendbook/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":" * Represents a storage for {@link seedu.friendbook.model.UserPrefs}.","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"RonaldTanSingWei"},"content":"     * Saves the given {@link seedu.friendbook.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"RonaldTanSingWei":6,"-":30}},{"path":"src/main/java/seedu/friendbook/ui/BirthdayCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pss-coder"},"content":"package seedu.friendbook.ui;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"pss-coder"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"pss-coder"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.control.CheckBox;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.commons.core.LogsCenter;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.reminder.ReminderManager;","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"pss-coder"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"pss-coder"},"content":" * An UI component that displays information of a {@code Person} Birthday.","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"pss-coder"},"content":"public class BirthdayCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"pss-coder"},"content":"    private static final String FXML \u003d \"BirthdayListCard.fxml\";","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"pss-coder"},"content":"    public final Person person;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"pss-coder"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(BirthdayCard.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"pss-coder"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"pss-coder"},"content":"    private ImageView friendImage;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"pss-coder"},"content":"    private Label name;","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"pss-coder"},"content":"    private Label dob;","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"pss-coder"},"content":"    private Label age;","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"pss-coder"},"content":"    private Label daysToBirthday;","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"pss-coder"},"content":"    private CheckBox reminderCheckBox;","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"pss-coder"},"content":"    private VBox birthdayCircleContainer;","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"pss-coder"},"content":"    private Circle birthdayCircle;","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"pss-coder"},"content":"    private Label birthdayDaysLeftLabel;","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"pss-coder"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"pss-coder"},"content":"    public BirthdayCard(Person person, int displayedIndex,","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"pss-coder"},"content":"                        ReminderManager.SetRemindExecutor setRemindExecutor) {","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"pss-coder"},"content":"        super(FXML);","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"pss-coder"},"content":"        this.person \u003d person;","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"pss-coder"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"pss-coder"},"content":"        age.setText(\"Currently \" + person.getAge() + \" Years Old\");","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"xnajasho"},"content":"        dob.setText(person.getBirthday().getActualDate());","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"pss-coder"},"content":"        //Birthday","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"pss-coder"},"content":"        daysToBirthday.setText(String.valueOf(person.getDaysToRemainingBirthday()));","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"pss-coder"},"content":"        setBirthdayCircle(person.getDaysToRemainingBirthday());","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"pss-coder"},"content":"        //Reminder","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"pss-coder"},"content":"        reminderCheckBox.setSelected(person.getReminder().getBooleanValue());","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"pss-coder"},"content":"        // update person model store in new value for every change in reminder checkbox","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"pss-coder"},"content":"        reminderCheckBox.selectedProperty().addListener((observable, oldValue, newValue) -\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"pss-coder"},"content":"            logger.info(\"Updating reminder to \" + newValue + \" for \" + person.getName().fullName);","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"pss-coder"},"content":"            Person updatedFriend \u003d Person.newInstance(person);","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"pss-coder"},"content":"            updatedFriend.getReminder().setReminder(newValue);","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"pss-coder"},"content":"            try {","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"pss-coder"},"content":"                setRemindExecutor.execute(person, updatedFriend);","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"pss-coder"},"content":"            } catch (CommandException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":73,"author":{"gitId":"pss-coder"},"content":"                logger.info(\"Failed to update reminder for: \" + person.getName().fullName);","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"pss-coder"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":75,"author":{"gitId":"pss-coder"},"content":"        });","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"pss-coder"},"content":"     * Sets display for Birthday Circle based on {@code daysLeftToBirthday}.","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"pss-coder"},"content":"    public void setBirthdayCircle(int daysLeftToBirthday) {","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"pss-coder"},"content":"        if (daysLeftToBirthday \u003d\u003d 0) {","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"pss-coder"},"content":"            // friend birthday is today","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"pss-coder"},"content":"            birthdayCircle.getStyleClass().add(\"circle-today\");","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"pss-coder"},"content":"            daysToBirthday.setText(\"Today\");","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"pss-coder"},"content":"            birthdayCircleContainer.getChildren().remove(birthdayDaysLeftLabel);","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"pss-coder"},"content":"        } else if (daysLeftToBirthday \u003c\u003d 7) {","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"pss-coder"},"content":"            // friend birthday is in less than a week","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"pss-coder"},"content":"            birthdayCircle.getStyleClass().add(\"circle-week-away\");","lastModifiedDate":"2021-11-01"},{"lineNumber":90,"author":{"gitId":"pss-coder"},"content":"        } else {","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"pss-coder"},"content":"            // default view","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"pss-coder"},"content":"            birthdayCircle.getStyleClass().add(\"circle-default\");","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"pss-coder"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"pss-coder"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"pss-coder"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"pss-coder"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"pss-coder"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"pss-coder"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"pss-coder"},"content":"        if (!(other instanceof FriendListCard)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"pss-coder"},"content":"            return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"pss-coder"},"content":"        // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"pss-coder"},"content":"        FriendListCard card \u003d (FriendListCard) other;","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"pss-coder"},"content":"        return person.equals(card.person);","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"xnajasho":1,"pss-coder":109}},{"path":"src/main/java/seedu/friendbook/ui/BirthdayListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"pss-coder"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"pss-coder"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.reminder.ReminderManager;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":" * Panel containing the list of friends\u0027 birthdays.","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"public class BirthdayListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"pss-coder"},"content":"    private static final String FXML \u003d \"BirthdayListPanel.fxml\";","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"pss-coder"},"content":"    private final ReminderManager.SetRemindExecutor setRemindExecutor;","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"pss-coder"},"content":"    private ListView\u003cPerson\u003e birthdayListView;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"pss-coder"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"pss-coder"},"content":"    public BirthdayListPanel(ObservableList\u003cPerson\u003e personList,","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"pss-coder"},"content":"                             ReminderManager.SetRemindExecutor setRemindExecutor) {","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"pss-coder"},"content":"        super(FXML);","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"pss-coder"},"content":"        this.setRemindExecutor \u003d setRemindExecutor;","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"pss-coder"},"content":"        birthdayListView.setItems(personList);","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"pss-coder"},"content":"        birthdayListView.setCellFactory(listView -\u003e new BirthdayListPanel.BirthdayListViewCell());","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"pss-coder"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"pss-coder"},"content":"    class BirthdayListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"pss-coder"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"pss-coder"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"pss-coder"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"pss-coder"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"pss-coder"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"pss-coder"},"content":"                setText(null);","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"pss-coder"},"content":"            } else {","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"pss-coder"},"content":"                setGraphic(new BirthdayCard(person, getIndex() + 1, setRemindExecutor).getRoot());","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"pss-coder"},"content":"            }","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"RonaldTanSingWei":2,"pss-coder":49}},{"path":"src/main/java/seedu/friendbook/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.CommandResult;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"pss-coder"},"content":"    public void setAddPlaceholderText(String placeholderText) {","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"pss-coder"},"content":"        commandTextField.setText(placeholderText);","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"RonaldTanSingWei"},"content":"         * @see seedu.friendbook.logic.Logic#execute(String)","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"RonaldTanSingWei":5,"-":80,"pss-coder":4}},{"path":"src/main/java/seedu/friendbook/ui/FriendListCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"pss-coder"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.commons.core.LogsCenter;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Avatar;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"pss-coder"},"content":" * An UI component that displays brief information of a {@code Person} friend.","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"public class FriendListCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"pss-coder"},"content":"    private static final String FXML \u003d \"FriendListCard.fxml\";","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"pss-coder"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(FriendListCard.class);","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"pss-coder"},"content":"    private ImageView avatar;","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"pss-coder"},"content":"    public FriendListCard(Person person, int displayedIndex) {","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"pss-coder"},"content":"        id.setText(displayedIndex + \".\");","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":62,"author":{"gitId":"pss-coder"},"content":"                .forEach(tag -\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"pss-coder"},"content":"                    Label label \u003d new Label(tag.tagName + \"\\t\");","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"pss-coder"},"content":"                    label.getStyleClass().add(\"cell_tag_label\");","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"pss-coder"},"content":"                    label.setTextAlignment(TextAlignment.CENTER);","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"pss-coder"},"content":"                    tags.getChildren().add(label);","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"pss-coder"},"content":"                });","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"pss-coder"},"content":"        setFriendAvatar();","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"pss-coder"},"content":"    private void setFriendAvatar() {","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"pss-coder"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"pss-coder"},"content":"            avatar.setImage(person.getAvatar().getImage());","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"pss-coder"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"pss-coder"},"content":"            // set default avatar if friend has no avatar","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"pss-coder"},"content":"            logger.info(\"Failed to set avatar for \" + person.getName().fullName","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"pss-coder"},"content":"                    + \" setting default avatar instead.\");","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"pss-coder"},"content":"            avatar.setImage(Avatar.DEFAULT_AVATAR_IMAGE);","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"pss-coder"},"content":"        if (!(other instanceof FriendListCard)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"pss-coder"},"content":"        FriendListCard card \u003d (FriendListCard) other;","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"RonaldTanSingWei":2,"-":66,"pss-coder":31}},{"path":"src/main/java/seedu/friendbook/ui/FriendListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.input.MouseButton;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.LogsCenter;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"pss-coder"},"content":"public class FriendListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"pss-coder"},"content":"    private static final String FXML \u003d \"FriendListPanel.fxml\";","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"pss-coder"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(FriendListPanel.class);","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"pss-coder"},"content":"    private ListView\u003cPerson\u003e friendListView;","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"pss-coder"},"content":"    public FriendListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"pss-coder"},"content":"        System.out.println(personList.toString());","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"pss-coder"},"content":"        friendListView.setItems(personList);","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"pss-coder"},"content":"        friendListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"pss-coder"},"content":"        setFriendListViewClickHandler();","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"pss-coder"},"content":"     * Sets double mouse click handler for selected list view for {@code FriendListPanel} selected friend.","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"pss-coder"},"content":"     * Creates a {@code FriendWindow} with the given {@code Person} friend.","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"pss-coder"},"content":"    private void setFriendListViewClickHandler() {","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"pss-coder"},"content":"        friendListView.setOnMouseClicked(mouseEvent -\u003e {","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"pss-coder"},"content":"            if (mouseEvent.getButton().equals(MouseButton.PRIMARY)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"pss-coder"},"content":"                if (mouseEvent.getClickCount() \u003d\u003d 2) {","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"pss-coder"},"content":"                    Person friend \u003d friendListView.getSelectionModel().getSelectedItem();","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"pss-coder"},"content":"                    displayFriendWindow(friend);","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"pss-coder"},"content":"                }","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"pss-coder"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"pss-coder"},"content":"        });","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"pss-coder"},"content":"     * Creates a {@code FriendWindow} with the given {@code Person} friend.","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"pss-coder"},"content":"    private void displayFriendWindow(Person friend) {","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"pss-coder"},"content":"        if (friend !\u003d null) {","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"pss-coder"},"content":"            FriendWindow friendWindow \u003d new FriendWindow(friend);","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"pss-coder"},"content":"            if (!friendWindow.isShowing()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"pss-coder"},"content":"                friendWindow.show();","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"pss-coder"},"content":"            } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"pss-coder"},"content":"                friendWindow.focus();","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"pss-coder"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"pss-coder"},"content":"                setGraphic(new FriendListCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"RonaldTanSingWei":3,"-":38,"pss-coder":40}},{"path":"src/main/java/seedu/friendbook/ui/FriendWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pss-coder"},"content":"package seedu.friendbook.ui;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"pss-coder"},"content":"import java.awt.Desktop;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"pss-coder"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"pss-coder"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":"import java.net.URL;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.control.Hyperlink;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.control.Tooltip;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"pss-coder"},"content":"import javafx.util.Duration;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.commons.core.LogsCenter;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"pss-coder"},"content":"/**","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"pss-coder"},"content":" * An UI Window for displaying selected {@code Person} Friend information.","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"pss-coder"},"content":" */","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"pss-coder"},"content":"public class FriendWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"pss-coder"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(FriendWindow.class);","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"pss-coder"},"content":"    private static final String FXML \u003d \"FriendWindow.fxml\";","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"pss-coder"},"content":"    private Person friend;","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"pss-coder"},"content":"    private ImageView avatar;","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"pss-coder"},"content":"    private ImageView teleImageView;","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"pss-coder"},"content":"    private VBox topContainer;","lastModifiedDate":"2021-11-03"},{"lineNumber":43,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-11-03"},{"lineNumber":44,"author":{"gitId":"pss-coder"},"content":"    private VBox fieldContainer;","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"pss-coder"},"content":"    private VBox addressContainer;","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"pss-coder"},"content":"    private VBox descriptionContainer;","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"pss-coder"},"content":"    private Hyperlink teleHandle;","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"pss-coder"},"content":"    private Tooltip upcomingAgeToolTip;","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"pss-coder"},"content":"    private Label name;","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"xnajasho"},"content":"    @FXML","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"xnajasho"},"content":"    private Label phone;","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"xnajasho"},"content":"    @FXML","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"pss-coder"},"content":"    private Label addressLabel;","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"xnajasho"},"content":"    private Label address;","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"xnajasho"},"content":"    @FXML","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"xnajasho"},"content":"    private Label email;","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"xnajasho"},"content":"    @FXML","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"pss-coder"},"content":"    private Label descriptionLabel;","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"xnajasho"},"content":"    private Label description;","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"pss-coder"},"content":"    private Label daysToBirthdayLabel;","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"pss-coder"},"content":"    private Label daysToBirthday;","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"pss-coder"},"content":"    private Label birthday;","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"pss-coder"},"content":"    private Circle birthdayCircle;","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"pss-coder"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"pss-coder"},"content":"     * Creates a new FriendWindow.","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"pss-coder"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"pss-coder"},"content":"     * @param root Stage to use as the root of the FriendWindow.","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"pss-coder"},"content":"    public FriendWindow(Stage root) {","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"pss-coder"},"content":"        super(FXML, root);","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"pss-coder"},"content":"     * Creates a  {@code FriendWindow} with the given {@code Person} friend.","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"pss-coder"},"content":"    public FriendWindow(Person friend) {","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"pss-coder"},"content":"        this(new Stage());","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"pss-coder"},"content":"        this.friend \u003d friend;","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"pss-coder"},"content":"        avatar.setImage(friend.getAvatar().getImage());","lastModifiedDate":"2021-11-05"},{"lineNumber":97,"author":{"gitId":"pss-coder"},"content":"        name.setText(friend.getName().fullName);","lastModifiedDate":"2021-11-05"},{"lineNumber":98,"author":{"gitId":"pss-coder"},"content":"        birthday.setText(friend.getBirthday().getActualDate());","lastModifiedDate":"2021-11-05"},{"lineNumber":99,"author":{"gitId":"pss-coder"},"content":"        phone.setText(friend.getPhone().value);","lastModifiedDate":"2021-11-05"},{"lineNumber":100,"author":{"gitId":"pss-coder"},"content":"        email.setText(friend.getEmail().value);","lastModifiedDate":"2021-11-05"},{"lineNumber":101,"author":{"gitId":"pss-coder"},"content":"        daysToBirthday.setText(String.valueOf(friend.getDaysToRemainingBirthday()));","lastModifiedDate":"2021-11-05"},{"lineNumber":102,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":103,"author":{"gitId":"pss-coder"},"content":"        upcomingAgeToolTip.setText(String.format(\"Going to be %s Years Old\", friend.getAge() + 1));","lastModifiedDate":"2021-11-05"},{"lineNumber":104,"author":{"gitId":"pss-coder"},"content":"        upcomingAgeToolTip.setShowDelay(Duration.ONE);","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":106,"author":{"gitId":"pss-coder"},"content":"        setBirthdayCircle(friend.getDaysToRemainingBirthday());","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"pss-coder"},"content":"        friend.getTags().stream()","lastModifiedDate":"2021-11-05"},{"lineNumber":109,"author":{"gitId":"pss-coder"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"pss-coder"},"content":"                .forEach(tag -\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"pss-coder"},"content":"                    Label label \u003d new Label(tag.tagName + \"\\t\");","lastModifiedDate":"2021-10-28"},{"lineNumber":112,"author":{"gitId":"pss-coder"},"content":"                    label.getStyleClass().add(\"cell_tag_label\");","lastModifiedDate":"2021-10-28"},{"lineNumber":113,"author":{"gitId":"pss-coder"},"content":"                    label.setTextAlignment(TextAlignment.CENTER);","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"pss-coder"},"content":"                    tags.getChildren().add(label);","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"pss-coder"},"content":"                });","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"pss-coder"},"content":"        setOptionalAddress();","lastModifiedDate":"2021-11-07"},{"lineNumber":118,"author":{"gitId":"pss-coder"},"content":"        setOptionalDescription();","lastModifiedDate":"2021-11-05"},{"lineNumber":119,"author":{"gitId":"pss-coder"},"content":"        setOptionalTeleHandle();","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":121,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":122,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":123,"author":{"gitId":"pss-coder"},"content":"     * Display address only if there is address about {@code Person} friend.","lastModifiedDate":"2021-11-07"},{"lineNumber":124,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":125,"author":{"gitId":"pss-coder"},"content":"    public void setOptionalAddress() {","lastModifiedDate":"2021-11-07"},{"lineNumber":126,"author":{"gitId":"pss-coder"},"content":"        if (!friend.getAddress().isEmpty()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":127,"author":{"gitId":"pss-coder"},"content":"            address.setText(friend.getAddress().value);","lastModifiedDate":"2021-11-07"},{"lineNumber":128,"author":{"gitId":"pss-coder"},"content":"        } else {","lastModifiedDate":"2021-11-07"},{"lineNumber":129,"author":{"gitId":"pss-coder"},"content":"            addressContainer.getChildren().remove(addressLabel);","lastModifiedDate":"2021-11-07"},{"lineNumber":130,"author":{"gitId":"pss-coder"},"content":"            addressContainer.getChildren().remove(address);","lastModifiedDate":"2021-11-07"},{"lineNumber":131,"author":{"gitId":"pss-coder"},"content":"            VBox.setMargin(description, new Insets(-10, 0, 0, 0));","lastModifiedDate":"2021-11-07"},{"lineNumber":132,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":133,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":134,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":135,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":136,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":137,"author":{"gitId":"pss-coder"},"content":"     * Display description only if there is description about {@code Person} friend.","lastModifiedDate":"2021-11-05"},{"lineNumber":138,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":139,"author":{"gitId":"pss-coder"},"content":"    public void setOptionalDescription() {","lastModifiedDate":"2021-11-05"},{"lineNumber":140,"author":{"gitId":"pss-coder"},"content":"        if (!friend.getDescription().isEmpty()) {","lastModifiedDate":"2021-11-05"},{"lineNumber":141,"author":{"gitId":"pss-coder"},"content":"            description.setText(friend.getDescription().value);","lastModifiedDate":"2021-11-05"},{"lineNumber":142,"author":{"gitId":"pss-coder"},"content":"        } else {","lastModifiedDate":"2021-10-31"},{"lineNumber":143,"author":{"gitId":"pss-coder"},"content":"            descriptionContainer.getChildren().remove(descriptionLabel);","lastModifiedDate":"2021-11-03"},{"lineNumber":144,"author":{"gitId":"pss-coder"},"content":"            descriptionContainer.getChildren().remove(description);","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":147,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":148,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":149,"author":{"gitId":"pss-coder"},"content":"     * Display telegram info only if {@code Person} friend tele handle is given.","lastModifiedDate":"2021-11-05"},{"lineNumber":150,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":151,"author":{"gitId":"pss-coder"},"content":"    public void setOptionalTeleHandle() {","lastModifiedDate":"2021-11-05"},{"lineNumber":152,"author":{"gitId":"pss-coder"},"content":"        if (friend.getTeleHandle().isEmpty()) {","lastModifiedDate":"2021-11-05"},{"lineNumber":153,"author":{"gitId":"pss-coder"},"content":"            topContainer.getChildren().remove(teleHandle);","lastModifiedDate":"2021-11-03"},{"lineNumber":154,"author":{"gitId":"pss-coder"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"pss-coder"},"content":"            teleHandle.setText(friend.getTeleHandle().value);","lastModifiedDate":"2021-11-05"},{"lineNumber":156,"author":{"gitId":"pss-coder"},"content":"            teleHandle.setOnAction(event -\u003e {","lastModifiedDate":"2021-10-31"},{"lineNumber":157,"author":{"gitId":"pss-coder"},"content":"                try {","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"pss-coder"},"content":"                    // open browser","lastModifiedDate":"2021-11-05"},{"lineNumber":159,"author":{"gitId":"pss-coder"},"content":"                    Desktop.getDesktop().browse(new URL(String.format(\"https://t.me/%s\",","lastModifiedDate":"2021-10-31"},{"lineNumber":160,"author":{"gitId":"pss-coder"},"content":"                            friend.getTeleHandle().value)).toURI());","lastModifiedDate":"2021-11-05"},{"lineNumber":161,"author":{"gitId":"pss-coder"},"content":"                } catch (URISyntaxException | IOException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"pss-coder"},"content":"                    logger.info(\"friend \" + friend.getName().fullName + \" tele handle failed to open browser.\");","lastModifiedDate":"2021-11-05"},{"lineNumber":163,"author":{"gitId":"pss-coder"},"content":"                }","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"pss-coder"},"content":"            });","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":167,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":168,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":169,"author":{"gitId":"pss-coder"},"content":"     * Sets display for Birthday Circle based on {@code daysLeftToBirthday}.","lastModifiedDate":"2021-11-05"},{"lineNumber":170,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":171,"author":{"gitId":"pss-coder"},"content":"    public void setBirthdayCircle(int daysLeftToBirthday) {","lastModifiedDate":"2021-11-01"},{"lineNumber":172,"author":{"gitId":"pss-coder"},"content":"        if (daysLeftToBirthday \u003d\u003d 0) {","lastModifiedDate":"2021-11-02"},{"lineNumber":173,"author":{"gitId":"pss-coder"},"content":"            // friend birthday is today","lastModifiedDate":"2021-11-05"},{"lineNumber":174,"author":{"gitId":"pss-coder"},"content":"            daysToBirthdayLabel.setVisible(false);","lastModifiedDate":"2021-11-01"},{"lineNumber":175,"author":{"gitId":"pss-coder"},"content":"            daysToBirthday.setText(\"Today\");","lastModifiedDate":"2021-11-05"},{"lineNumber":176,"author":{"gitId":"pss-coder"},"content":"            birthdayCircle.getStyleClass().add(\"circle-today\");","lastModifiedDate":"2021-11-05"},{"lineNumber":177,"author":{"gitId":"pss-coder"},"content":"            upcomingAgeToolTip.setText(\"Today is your friend birthday\");","lastModifiedDate":"2021-11-01"},{"lineNumber":178,"author":{"gitId":"pss-coder"},"content":"        } else if (daysLeftToBirthday \u003c\u003d 7) {","lastModifiedDate":"2021-11-01"},{"lineNumber":179,"author":{"gitId":"pss-coder"},"content":"            // friend birthday is in less than a week","lastModifiedDate":"2021-11-05"},{"lineNumber":180,"author":{"gitId":"pss-coder"},"content":"            birthdayCircle.getStyleClass().add(\"circle-week-away\");","lastModifiedDate":"2021-11-01"},{"lineNumber":181,"author":{"gitId":"pss-coder"},"content":"        } else {","lastModifiedDate":"2021-11-01"},{"lineNumber":182,"author":{"gitId":"pss-coder"},"content":"            // default view","lastModifiedDate":"2021-11-05"},{"lineNumber":183,"author":{"gitId":"pss-coder"},"content":"            birthdayCircle.getStyleClass().add(\"circle-default\");","lastModifiedDate":"2021-11-01"},{"lineNumber":184,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":185,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":186,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":187,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":188,"author":{"gitId":"xnajasho"},"content":"     * Shows the friend window.","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"pss-coder"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"pss-coder"},"content":"     * \u003cul\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"pss-coder"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"pss-coder"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2021-10-19"},{"lineNumber":193,"author":{"gitId":"pss-coder"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":194,"author":{"gitId":"pss-coder"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":195,"author":{"gitId":"pss-coder"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"pss-coder"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":197,"author":{"gitId":"pss-coder"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":198,"author":{"gitId":"pss-coder"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2021-10-19"},{"lineNumber":199,"author":{"gitId":"pss-coder"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":200,"author":{"gitId":"pss-coder"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":201,"author":{"gitId":"pss-coder"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2021-10-19"},{"lineNumber":202,"author":{"gitId":"pss-coder"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":203,"author":{"gitId":"pss-coder"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":204,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":205,"author":{"gitId":"pss-coder"},"content":"    public void show() {","lastModifiedDate":"2021-10-19"},{"lineNumber":206,"author":{"gitId":"pss-coder"},"content":"        logger.fine(\"Showing selected friend window.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":207,"author":{"gitId":"pss-coder"},"content":"        getRoot().show();","lastModifiedDate":"2021-10-19"},{"lineNumber":208,"author":{"gitId":"pss-coder"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2021-10-19"},{"lineNumber":209,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":210,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":211,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":212,"author":{"gitId":"pss-coder"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2021-10-19"},{"lineNumber":213,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":214,"author":{"gitId":"pss-coder"},"content":"    public boolean isShowing() {","lastModifiedDate":"2021-10-19"},{"lineNumber":215,"author":{"gitId":"pss-coder"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2021-10-19"},{"lineNumber":216,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":217,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":218,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":219,"author":{"gitId":"pss-coder"},"content":"     * Hides the help window.","lastModifiedDate":"2021-10-19"},{"lineNumber":220,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":221,"author":{"gitId":"pss-coder"},"content":"    public void hide() {","lastModifiedDate":"2021-10-19"},{"lineNumber":222,"author":{"gitId":"pss-coder"},"content":"        getRoot().hide();","lastModifiedDate":"2021-10-19"},{"lineNumber":223,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":224,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":225,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":226,"author":{"gitId":"pss-coder"},"content":"     * Focuses on the friend window.","lastModifiedDate":"2021-10-19"},{"lineNumber":227,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":228,"author":{"gitId":"pss-coder"},"content":"    public void focus() {","lastModifiedDate":"2021-10-19"},{"lineNumber":229,"author":{"gitId":"pss-coder"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2021-10-19"},{"lineNumber":230,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":231,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"xnajasho":9,"pss-coder":222}},{"path":"src/main/java/seedu/friendbook/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.model.person.Avatar.AVATAR_PATH;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"pss-coder"},"content":"import java.awt.Desktop;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":"import java.io.IOException;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"import java.net.URISyntaxException;","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":"import java.net.URL;","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":17,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.control.TitledPane;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.layout.TilePane;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.MainApp;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.LogsCenter;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.logic.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"pss-coder"},"content":"    public static final String USER_GUIDE_URL \u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"pss-coder"},"content":"            \"https://ay2122s1-cs2103-f10-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"pss-coder"},"content":"    public static final String HELP_MESSAGE \u003d \"For more details, Click to go to User Guide\";","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"pss-coder"},"content":"    private VBox commandListAccordion;","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"pss-coder"},"content":"    private TilePane avatarPane;","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"pss-coder"},"content":"    private final Command.CommandList[] commandList \u003d Command.CommandList.values();","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"pss-coder"},"content":"    private final TitledPane[] commandPanes \u003d new TitledPane[commandList.length];","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":61,"author":{"gitId":"pss-coder"},"content":"        setAvatarPane();","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"pss-coder"},"content":"        setCommandListPanes();","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"pss-coder"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"pss-coder"},"content":"    public HelpWindow() {","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"pss-coder"},"content":"        this(new Stage());","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"pss-coder"},"content":"     * Creates a TitlePane in Accordion view to view all Avatar images.","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"pss-coder"},"content":"    private void setAvatarPane() {","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"pss-coder"},"content":"        for (int i \u003d 0; i \u003c 21; i++) {","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"pss-coder"},"content":"            VBox avatarContainer \u003d new VBox();","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"pss-coder"},"content":"            avatarContainer.setAlignment(Pos.TOP_CENTER);","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"pss-coder"},"content":"            Image avatar \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"pss-coder"},"content":"                    MainApp.class.getResourceAsStream(AVATAR_PATH + i + \".png\")));","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"pss-coder"},"content":"            ImageView imageView \u003d new ImageView(avatar);","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"pss-coder"},"content":"            imageView.setFitHeight(50);","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"pss-coder"},"content":"            imageView.setFitWidth(50);","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"pss-coder"},"content":"            Label avatarLabel \u003d new Label(\"Avatar \" + i);","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"pss-coder"},"content":"            avatarLabel.paddingProperty().set(new Insets(5, 5, 5, 5));","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"pss-coder"},"content":"            avatarContainer.getChildren().addAll(imageView, avatarLabel);","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"pss-coder"},"content":"            avatarPane.getChildren().add(avatarContainer);","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":93,"author":{"gitId":"pss-coder"},"content":"     * Creates a TitlePane in Accordion view to view all command instructions.","lastModifiedDate":"2021-11-05"},{"lineNumber":94,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":95,"author":{"gitId":"pss-coder"},"content":"    private void setCommandListPanes() {","lastModifiedDate":"2021-11-05"},{"lineNumber":96,"author":{"gitId":"pss-coder"},"content":"        // Command list view","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"pss-coder"},"content":"        for (int i \u003d 0; i \u003c commandList.length; i++) {","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"pss-coder"},"content":"            Label commandInstruction \u003d new Label(commandList[i].getCommandMessageUsage());","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"pss-coder"},"content":"            commandInstruction.setWrapText(true);","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"pss-coder"},"content":"            commandInstruction.setMaxWidth(500);","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"pss-coder"},"content":"            TilePane tilePane \u003d new TilePane(commandInstruction);","lastModifiedDate":"2021-10-28"},{"lineNumber":102,"author":{"gitId":"pss-coder"},"content":"            tilePane.setPrefColumns(4);","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"pss-coder"},"content":"            commandPanes[i] \u003d new TitledPane(commandList[i].toString(), tilePane);","lastModifiedDate":"2021-10-28"},{"lineNumber":105,"author":{"gitId":"pss-coder"},"content":"            commandPanes[i].setExpanded(false);","lastModifiedDate":"2021-10-31"},{"lineNumber":106,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"pss-coder"},"content":"        commandListAccordion.getChildren().addAll(commandPanes);","lastModifiedDate":"2021-10-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":160,"author":{"gitId":"pss-coder"},"content":"    private void openUrl() {","lastModifiedDate":"2021-11-01"},{"lineNumber":161,"author":{"gitId":"pss-coder"},"content":"        try {","lastModifiedDate":"2021-11-01"},{"lineNumber":162,"author":{"gitId":"pss-coder"},"content":"            Desktop.getDesktop().browse(new URL(USER_GUIDE_URL).toURI());","lastModifiedDate":"2021-11-01"},{"lineNumber":163,"author":{"gitId":"pss-coder"},"content":"        } catch (URISyntaxException | IOException e) {","lastModifiedDate":"2021-11-01"},{"lineNumber":164,"author":{"gitId":"pss-coder"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-11-01"},{"lineNumber":165,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"RonaldTanSingWei":2,"-":85,"pss-coder":80}},{"path":"src/main/java/seedu/friendbook/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.control.ButtonType;","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.control.MenuBar;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.GuiSettings;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.LogsCenter;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.Logic;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.logic.commands.AddCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.CommandResult;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"pss-coder"},"content":"    private MenuBar menuBar;","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"pss-coder"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"pss-coder"},"content":"    private StackPane profilePlaceHolder;","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"pss-coder"},"content":"    private ProfileDisplay profileDisplay;","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"pss-coder"},"content":"    private StackPane friendListPanelPlaceholder;","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"pss-coder"},"content":"    private FriendListPanel friendListPanel;","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"pss-coder"},"content":"    private StackPane birthdayListPanelPlaceholder;","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"pss-coder"},"content":"    private BirthdayListPanel birthdayListPanel;","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"pss-coder"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"pss-coder"},"content":"    private CommandBox commandBox;","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"pss-coder"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"pss-coder"},"content":"        //Profile display","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"pss-coder"},"content":"        profileDisplay \u003d new ProfileDisplay(logic.getUsernameProperty());","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"pss-coder"},"content":"        profileDisplay.getAddButton().setOnAction(event -\u003e handleAddButton());","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"pss-coder"},"content":"        profilePlaceHolder.getChildren().add(profileDisplay.getRoot());","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"pss-coder"},"content":"        // Friend list view","lastModifiedDate":"2021-10-24"},{"lineNumber":139,"author":{"gitId":"pss-coder"},"content":"        friendListPanel \u003d new FriendListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2021-10-07"},{"lineNumber":140,"author":{"gitId":"pss-coder"},"content":"        friendListPanelPlaceholder.getChildren().add(friendListPanel.getRoot());","lastModifiedDate":"2021-10-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"pss-coder"},"content":"        // Birthday list view","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"pss-coder"},"content":"        birthdayListPanel \u003d new BirthdayListPanel(logic.getFilteredPersonListSortedByBirthday(),","lastModifiedDate":"2021-10-24"},{"lineNumber":144,"author":{"gitId":"pss-coder"},"content":"                this::executeReminderCheckBox);","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"pss-coder"},"content":"        birthdayListPanelPlaceholder.getChildren().add(birthdayListPanel.getRoot());","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":147,"author":{"gitId":"pss-coder"},"content":"        // Result view","lastModifiedDate":"2021-10-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":151,"author":{"gitId":"pss-coder"},"content":"        // Command box view","lastModifiedDate":"2021-10-24"},{"lineNumber":152,"author":{"gitId":"pss-coder"},"content":"        commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":154,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":155,"author":{"gitId":"pss-coder"},"content":"        // Status bar view","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"pss-coder"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getFriendBookFilePath());","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"pss-coder"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2021-10-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"xnajasho"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"xnajasho"},"content":"     * Opens the FriendWindow.","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"xnajasho"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"xnajasho"},"content":"    @FXML","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"xnajasho"},"content":"    public void handleViewPerson(CommandResult command) {","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"xnajasho"},"content":"        FriendWindow friendWindow \u003d new FriendWindow(command.getPersonToView());","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"xnajasho"},"content":"        if (!friendWindow.isShowing()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"xnajasho"},"content":"            friendWindow.show();","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"xnajasho"},"content":"        } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"xnajasho"},"content":"            friendWindow.focus();","lastModifiedDate":"2021-10-20"},{"lineNumber":182,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":183,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":184,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":197,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"RonaldTanSingWei"},"content":"     * @see seedu.friendbook.logic.Logic#execute(String)","lastModifiedDate":"2021-10-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"pss-coder"},"content":"            CommandResult commandResult;","lastModifiedDate":"2021-11-02"},{"lineNumber":222,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":223,"author":{"gitId":"pss-coder"},"content":"            // clear prompt","lastModifiedDate":"2021-11-02"},{"lineNumber":224,"author":{"gitId":"pss-coder"},"content":"            if (commandText.equals(\"clear\")) {","lastModifiedDate":"2021-11-02"},{"lineNumber":225,"author":{"gitId":"pss-coder"},"content":"                Alert clearConfirmationPrompt \u003d new Alert(Alert.AlertType.CONFIRMATION,","lastModifiedDate":"2021-11-02"},{"lineNumber":226,"author":{"gitId":"pss-coder"},"content":"                        \"are sure you want to lose your friends?\", ButtonType.NO, ButtonType.YES);","lastModifiedDate":"2021-11-02"},{"lineNumber":227,"author":{"gitId":"pss-coder"},"content":"                clearConfirmationPrompt.setTitle(\"confirm clearing FriendBook?\");","lastModifiedDate":"2021-11-02"},{"lineNumber":228,"author":{"gitId":"pss-coder"},"content":"                clearConfirmationPrompt.showAndWait();","lastModifiedDate":"2021-11-02"},{"lineNumber":229,"author":{"gitId":"pss-coder"},"content":"                if (clearConfirmationPrompt.getResult() \u003d\u003d ButtonType.NO) {","lastModifiedDate":"2021-11-02"},{"lineNumber":230,"author":{"gitId":"pss-coder"},"content":"                    // ignore","lastModifiedDate":"2021-11-02"},{"lineNumber":231,"author":{"gitId":"pss-coder"},"content":"                    return null;","lastModifiedDate":"2021-11-02"},{"lineNumber":232,"author":{"gitId":"pss-coder"},"content":"                }","lastModifiedDate":"2021-11-02"},{"lineNumber":233,"author":{"gitId":"pss-coder"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":234,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":235,"author":{"gitId":"pss-coder"},"content":"            commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2021-11-02"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":246,"author":{"gitId":"xnajasho"},"content":"            if (commandResult.isViewPerson()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":247,"author":{"gitId":"xnajasho"},"content":"                handleViewPerson(commandResult);","lastModifiedDate":"2021-10-20"},{"lineNumber":248,"author":{"gitId":"xnajasho"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":257,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":258,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":259,"author":{"gitId":"pss-coder"},"content":"     * Update friend\u0027s reminder on checkbox update.","lastModifiedDate":"2021-10-24"},{"lineNumber":260,"author":{"gitId":"pss-coder"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":261,"author":{"gitId":"pss-coder"},"content":"     * @see seedu.friendbook.logic.Logic#executeUpdateReminder(Person, Person)","lastModifiedDate":"2021-10-24"},{"lineNumber":262,"author":{"gitId":"pss-coder"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":263,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":264,"author":{"gitId":"pss-coder"},"content":"    private void executeReminderCheckBox(Person person, Person newPerson) throws CommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":265,"author":{"gitId":"pss-coder"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":266,"author":{"gitId":"pss-coder"},"content":"            this.logic.executeUpdateReminder(person, newPerson);","lastModifiedDate":"2021-10-23"},{"lineNumber":267,"author":{"gitId":"pss-coder"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":268,"author":{"gitId":"pss-coder"},"content":"            logger.info(\"fail to update person reminder through checkbox: \" + newPerson);","lastModifiedDate":"2021-10-23"},{"lineNumber":269,"author":{"gitId":"pss-coder"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2021-10-23"},{"lineNumber":270,"author":{"gitId":"pss-coder"},"content":"            throw e;","lastModifiedDate":"2021-10-23"},{"lineNumber":271,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":272,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":273,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":274,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":275,"author":{"gitId":"pss-coder"},"content":"     * Executes the add button and updates command text field.","lastModifiedDate":"2021-10-13"},{"lineNumber":276,"author":{"gitId":"pss-coder"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":277,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":278,"author":{"gitId":"pss-coder"},"content":"    public void handleAddButton() {","lastModifiedDate":"2021-10-13"},{"lineNumber":279,"author":{"gitId":"pss-coder"},"content":"        commandBox.setAddPlaceholderText(AddCommand.MESSAGE_PLACEHOLDER);","lastModifiedDate":"2021-10-13"},{"lineNumber":280,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":281,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"RonaldTanSingWei":8,"xnajasho":16,"-":176,"pss-coder":82}},{"path":"src/main/java/seedu/friendbook/ui/ProfileDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"pss-coder"},"content":"import javafx.beans.property.StringProperty;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"pss-coder"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":"public class ProfileDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"    private static final String FXML \u003d \"ProfileDisplay.fxml\";","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"    private Label usernameLabel;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"pss-coder"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"pss-coder"},"content":"    private Button addFriendButton;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"pss-coder"},"content":"     * Creates a {@code ProfileDisplay} with the given {@code usernameProperty}.","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"pss-coder"},"content":"    public ProfileDisplay(StringProperty usernameProperty) {","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"pss-coder"},"content":"        super(FXML);","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"pss-coder"},"content":"        if (!usernameProperty.getValue().equals(\"generic username\")) {","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"pss-coder"},"content":"            usernameLabel.textProperty().bind(usernameProperty);","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"pss-coder"},"content":"        } else {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"pss-coder"},"content":"            usernameLabel.setText(\"\");","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"pss-coder"},"content":"    public Button getAddButton() {","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"pss-coder"},"content":"        return this.addFriendButton;","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"RonaldTanSingWei":1,"pss-coder":35}},{"path":"src/main/java/seedu/friendbook/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"     * Creates a {@code ResultDisplay}.","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"pss-coder"},"content":"        resultDisplay.setWrapText(true);","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"RonaldTanSingWei":1,"-":27,"pss-coder":4}},{"path":"src/main/java/seedu/friendbook/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"pss-coder"},"content":"        saveLocationStatus.setText(\"Data is stored in: \" + Paths.get(\".\").resolve(saveLocation));","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RonaldTanSingWei":1,"-":26,"pss-coder":1}},{"path":"src/main/java/seedu/friendbook/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"RonaldTanSingWei":1,"-":12}},{"path":"src/main/java/seedu/friendbook/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.MainApp;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.LogsCenter;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.util.StringUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.Logic;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"RonaldTanSingWei"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/friend_book_32.png\";","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"pss-coder"},"content":"        alert.getDialogPane().getStylesheets().add(\"stylesheets/FriendBookTheme.css\");","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"RonaldTanSingWei":6,"-":82,"pss-coder":1}},{"path":"src/main/java/seedu/friendbook/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.MainApp;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"RonaldTanSingWei":2,"-":86}},{"path":"src/main/resources/stylesheets/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"pss-coder"},"content":"    /*-fx-background-color: red;*/","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"pss-coder"},"content":"    -fx-background-color: #e27881 !important;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"pss-coder"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":"    -fx-text-fill: black !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"#saveLocationStatus {","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"    -fx-text-fill: #524d50;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":5,"pss-coder":8}},{"path":"src/main/resources/stylesheets/FriendBookTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pss-coder"},"content":"/* PRIMARY STYLES */","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"pss-coder"},"content":".background {","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"pss-coder"},"content":"    -fx-background-color: derive(whitesmoke, 20%);","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"pss-coder"},"content":"    background-color: whitesmoke; /* Used in the default.html file */","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":".main-container {","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"    -fx-background-color: whitesmoke;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":".label {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"    -fx-text-fill: #524d50;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"pss-coder"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"pss-coder"},"content":".label-bright {","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"pss-coder"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"pss-coder"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"pss-coder"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"pss-coder"},"content":".label-header {","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"pss-coder"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"pss-coder"},"content":"    -fx-font-family: \"Open Sans Extra Bold\";","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"pss-coder"},"content":"    -fx-text-fill: whitesmoke;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"pss-coder"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"pss-coder"},"content":"/* Menu bar */","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"pss-coder"},"content":"/*#menuBar {*/","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"pss-coder"},"content":"/*    -fx-background-color: derive(whitesmoke, 20%);*/","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"pss-coder"},"content":"/*}*/","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"pss-coder"},"content":".menu-bar {","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"pss-coder"},"content":"    -fx-background-color: #95baec;","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"pss-coder"},"content":".menu-bar .label {","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"pss-coder"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"pss-coder"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"pss-coder"},"content":"    -fx-text-fill: #64113F;","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"pss-coder"},"content":"    /*-fx-opacity: 0.9;*/","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"pss-coder"},"content":".menu .left-container {","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"pss-coder"},"content":"    -fx-background-color: black;","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"pss-coder"},"content":"/* PROFILE DISPLAY STYLEs */","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"pss-coder"},"content":"#profilePlaceHolder {","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"pss-coder"},"content":"    -fx-background-color: #95baec;","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"pss-coder"},"content":"    background-color: #95baec; /* Used in the default.html file */","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"pss-coder"},"content":".button {","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"pss-coder"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"pss-coder"},"content":"    -fx-background-color: #f9edcd;","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"pss-coder"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"pss-coder"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"pss-coder"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"pss-coder"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"pss-coder"},"content":".button:hover {","lastModifiedDate":"2021-10-13"},{"lineNumber":72,"author":{"gitId":"pss-coder"},"content":"    -fx-text-fill: #524d50;","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"pss-coder"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"pss-coder"},"content":"    -fx-cursor: hand;","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"pss-coder"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"pss-coder"},"content":"  -fx-text-fill: whitesmoke;","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"pss-coder"},"content":"/* LIST VIEW STYLEs */","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"pss-coder"},"content":".cell_big_label {","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"pss-coder"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"pss-coder"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"pss-coder"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"pss-coder"},"content":".cell_small_label {","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"pss-coder"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"pss-coder"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"pss-coder"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"pss-coder"},"content":".text-field {","lastModifiedDate":"2021-10-13"},{"lineNumber":96,"author":{"gitId":"pss-coder"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"pss-coder"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-13"},{"lineNumber":98,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":100,"author":{"gitId":"pss-coder"},"content":".list-view {","lastModifiedDate":"2021-10-13"},{"lineNumber":101,"author":{"gitId":"pss-coder"},"content":"    /*-fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.8), 10, 0, 0, 0);*/","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"pss-coder"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"pss-coder"},"content":"    -fx-padding: 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":104,"author":{"gitId":"pss-coder"},"content":"    -fx-background-color: derive(whitesmoke, 20%);","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"pss-coder"},"content":".list-cell {","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"pss-coder"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"pss-coder"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"pss-coder"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":111,"author":{"gitId":"pss-coder"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":114,"author":{"gitId":"pss-coder"},"content":".list-cell:filled:even {","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"pss-coder"},"content":"    -fx-background-color: white;","lastModifiedDate":"2021-10-13"},{"lineNumber":116,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":117,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":118,"author":{"gitId":"pss-coder"},"content":".list-cell:filled:odd {","lastModifiedDate":"2021-10-13"},{"lineNumber":119,"author":{"gitId":"pss-coder"},"content":"    -fx-background-color: white;","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":121,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":122,"author":{"gitId":"pss-coder"},"content":"/* Selected cell */","lastModifiedDate":"2021-10-13"},{"lineNumber":123,"author":{"gitId":"pss-coder"},"content":".list-cell:filled:hover {","lastModifiedDate":"2021-10-13"},{"lineNumber":124,"author":{"gitId":"pss-coder"},"content":"    -fx-background-color: #d9dce8;","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":126,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":127,"author":{"gitId":"pss-coder"},"content":".list-cell:filled:default {","lastModifiedDate":"2021-10-13"},{"lineNumber":128,"author":{"gitId":"pss-coder"},"content":"    -fx-background-color: white;","lastModifiedDate":"2021-10-13"},{"lineNumber":129,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"pss-coder"},"content":".list-cell:empty {","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"pss-coder"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"pss-coder"},"content":"    -fx-background: white;","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":136,"author":{"gitId":"pss-coder"},"content":"#tags {","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"pss-coder"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-10-13"},{"lineNumber":138,"author":{"gitId":"pss-coder"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-10-13"},{"lineNumber":139,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":140,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"pss-coder"},"content":"#tags .label {","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"pss-coder"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-21"},{"lineNumber":143,"author":{"gitId":"pss-coder"},"content":"    -fx-background-color: #f1cfde;","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"pss-coder"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"pss-coder"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-10-13"},{"lineNumber":146,"author":{"gitId":"pss-coder"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-10-13"},{"lineNumber":147,"author":{"gitId":"pss-coder"},"content":"    /*-fx-alignment: centre;*/","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"pss-coder"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":150,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":151,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":152,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":153,"author":{"gitId":"pss-coder"},"content":"/* Scrollbar Style*/","lastModifiedDate":"2021-10-13"},{"lineNumber":154,"author":{"gitId":"pss-coder"},"content":".scroll-bar {","lastModifiedDate":"2021-10-13"},{"lineNumber":155,"author":{"gitId":"pss-coder"},"content":"    -fx-background-color: #f9edcd;","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":158,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":159,"author":{"gitId":"pss-coder"},"content":".scroll-bar .thumb {","lastModifiedDate":"2021-10-13"},{"lineNumber":160,"author":{"gitId":"pss-coder"},"content":"    -fx-background-color: #d9dce8;","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"pss-coder"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2021-10-13"},{"lineNumber":162,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":163,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":164,"author":{"gitId":"pss-coder"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2021-10-13"},{"lineNumber":165,"author":{"gitId":"pss-coder"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-13"},{"lineNumber":166,"author":{"gitId":"pss-coder"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":167,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":168,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":169,"author":{"gitId":"pss-coder"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2021-10-13"},{"lineNumber":170,"author":{"gitId":"pss-coder"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2021-10-13"},{"lineNumber":171,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":172,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":173,"author":{"gitId":"pss-coder"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2021-10-13"},{"lineNumber":174,"author":{"gitId":"pss-coder"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2021-10-13"},{"lineNumber":175,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":176,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":177,"author":{"gitId":"pss-coder"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2021-10-13"},{"lineNumber":178,"author":{"gitId":"pss-coder"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2021-10-13"},{"lineNumber":179,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":180,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":181,"author":{"gitId":"pss-coder"},"content":"/* CommandBox Style */","lastModifiedDate":"2021-10-13"},{"lineNumber":182,"author":{"gitId":"pss-coder"},"content":".pane-with-border {","lastModifiedDate":"2021-10-13"},{"lineNumber":183,"author":{"gitId":"pss-coder"},"content":"    -fx-effect: dropshadow(three-pass-box, rgba(0,0,0,0.8), 3, 0, 0, 0);","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":185,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":186,"author":{"gitId":"pss-coder"},"content":"#commandTextField {","lastModifiedDate":"2021-10-13"},{"lineNumber":187,"author":{"gitId":"pss-coder"},"content":"    -fx-background-color: #f9edcd;","lastModifiedDate":"2021-10-21"},{"lineNumber":188,"author":{"gitId":"pss-coder"},"content":"    /*-fx-background-insets: 0;*/","lastModifiedDate":"2021-10-13"},{"lineNumber":189,"author":{"gitId":"pss-coder"},"content":"    /*-fx-border-insets: 0;*/","lastModifiedDate":"2021-10-13"},{"lineNumber":190,"author":{"gitId":"pss-coder"},"content":"    /*-fx-border-width: 1;*/","lastModifiedDate":"2021-10-13"},{"lineNumber":191,"author":{"gitId":"pss-coder"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-10-21"},{"lineNumber":192,"author":{"gitId":"pss-coder"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2021-10-13"},{"lineNumber":193,"author":{"gitId":"pss-coder"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-21"},{"lineNumber":194,"author":{"gitId":"pss-coder"},"content":"    -fx-prompt-text-fill: black ;","lastModifiedDate":"2021-10-21"},{"lineNumber":195,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":196,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":197,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":198,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":199,"author":{"gitId":"pss-coder"},"content":"/* ResultDisplay Style */","lastModifiedDate":"2021-10-13"},{"lineNumber":200,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":201,"author":{"gitId":"pss-coder"},"content":"#resultDisplay .content{","lastModifiedDate":"2021-10-13"},{"lineNumber":202,"author":{"gitId":"pss-coder"},"content":"    /*-fx-background-color: #F7CACD;*/","lastModifiedDate":"2021-10-13"},{"lineNumber":203,"author":{"gitId":"pss-coder"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":204,"author":{"gitId":"pss-coder"},"content":"    -fx-text-fill: #f1cfde;","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":206,"author":{"gitId":"pss-coder"},"content":".result-display {","lastModifiedDate":"2021-10-13"},{"lineNumber":207,"author":{"gitId":"pss-coder"},"content":"    -fx-font-family: \"Open Sans SemiBold Italic\";","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"pss-coder"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-13"},{"lineNumber":209,"author":{"gitId":"pss-coder"},"content":"    -fx-text-fill: #95baec;","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":211,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":212,"author":{"gitId":"pss-coder"},"content":".friend-window {","lastModifiedDate":"2021-10-25"},{"lineNumber":213,"author":{"gitId":"pss-coder"},"content":"    -fx-background-color: derive(white, 20%);","lastModifiedDate":"2021-11-01"},{"lineNumber":214,"author":{"gitId":"pss-coder"},"content":"    background-color: white; /* Used in the default.html file */","lastModifiedDate":"2021-11-01"},{"lineNumber":215,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":216,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":217,"author":{"gitId":"pss-coder"},"content":".friend-window .label {","lastModifiedDate":"2021-10-25"},{"lineNumber":218,"author":{"gitId":"pss-coder"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-21"},{"lineNumber":219,"author":{"gitId":"pss-coder"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-25"},{"lineNumber":220,"author":{"gitId":"pss-coder"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-10-21"},{"lineNumber":221,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":223,"author":{"gitId":"pss-coder"},"content":".friend-window .fw-label {","lastModifiedDate":"2021-11-01"},{"lineNumber":224,"author":{"gitId":"pss-coder"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2021-11-01"},{"lineNumber":225,"author":{"gitId":"pss-coder"},"content":"    -fx-text-fill: #64113F;","lastModifiedDate":"2021-11-01"},{"lineNumber":226,"author":{"gitId":"pss-coder"},"content":"    -fx-font-family: \"Open Sans Extra Bold\";","lastModifiedDate":"2021-11-01"},{"lineNumber":227,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-11-01"},{"lineNumber":228,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":229,"author":{"gitId":"pss-coder"},"content":".circle-default {","lastModifiedDate":"2021-11-01"},{"lineNumber":230,"author":{"gitId":"pss-coder"},"content":"    -fx-fill: #f9edcd;","lastModifiedDate":"2021-11-01"},{"lineNumber":231,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-11-01"},{"lineNumber":232,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":233,"author":{"gitId":"pss-coder"},"content":".circle-week-away {","lastModifiedDate":"2021-11-01"},{"lineNumber":234,"author":{"gitId":"pss-coder"},"content":"    -fx-fill: #95baec;","lastModifiedDate":"2021-11-01"},{"lineNumber":235,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-11-01"},{"lineNumber":236,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":237,"author":{"gitId":"pss-coder"},"content":".circle-today {","lastModifiedDate":"2021-11-01"},{"lineNumber":238,"author":{"gitId":"pss-coder"},"content":"    -fx-fill: #e27881;","lastModifiedDate":"2021-11-01"},{"lineNumber":239,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-11-01"},{"lineNumber":240,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":241,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":242,"author":{"gitId":"pss-coder"},"content":"#teleImageView {","lastModifiedDate":"2021-10-25"},{"lineNumber":243,"author":{"gitId":"pss-coder"},"content":"    -fx-cursor: hand;","lastModifiedDate":"2021-10-25"},{"lineNumber":244,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":245,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":246,"author":{"gitId":"pss-coder"},"content":"/* End of Stylesheet */","lastModifiedDate":"2021-10-25"},{"lineNumber":247,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"pss-coder":247}},{"path":"src/main/resources/stylesheets/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pss-coder"},"content":".background {","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"pss-coder"},"content":"    -fx-background-color: #95baec;","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"pss-coder"},"content":"    background-color: whitesmoke; /* Used in the default.html file */","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":".main-container {","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"    -fx-background-color: #95baec;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":".label {","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"    -fx-text-fill: #524d50;","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"pss-coder"},"content":".help-title {","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"pss-coder"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"pss-coder"},"content":"    -fx-font-family: \"Open Sans Extra Bold\";","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"    -fx-text-fill: whitesmoke;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"pss-coder"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"pss-coder"},"content":".titled-pane .title {","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"pss-coder"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"pss-coder"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"pss-coder"},"content":"    -fx-text-fill: #524d50;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"pss-coder"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"pss-coder"},"content":".titled-pane .title:hover {","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"pss-coder"},"content":"    -fx-background-color: #d9dce8;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"pss-coder"},"content":"    -fx-cursor: \"hand\";","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"pss-coder"},"content":".accordion .titled-pane \u003e *.content {","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"pss-coder"},"content":"    -fx-background-color: #f9edcd;","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"pss-coder"},"content":".button {","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"pss-coder"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"pss-coder"},"content":"    -fx-background-color: #f9edcd;","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"pss-coder"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"pss-coder"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"pss-coder"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"pss-coder"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"pss-coder"},"content":".button:hover {","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"pss-coder"},"content":"    -fx-text-fill: #524d50;","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"pss-coder"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"pss-coder"},"content":"    -fx-cursor: hand;","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"pss-coder"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"pss-coder"},"content":"    -fx-text-fill: whitesmoke;","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":58,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"pss-coder"},"content":"/* Scrollbar Style*/","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"pss-coder"},"content":".scroll-bar {","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"pss-coder"},"content":"    -fx-background-color: #f9edcd;","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"pss-coder"},"content":".scroll-bar .thumb {","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"pss-coder"},"content":"    -fx-background-color: #d9dce8;","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"pss-coder"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"pss-coder"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"pss-coder"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"pss-coder"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"pss-coder"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"pss-coder"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"pss-coder"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"pss-coder"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"pss-coder"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"pss-coder"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"pss-coder":84,"-":1}},{"path":"src/main/resources/view/BirthdayListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.control.CheckBox?\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" maxWidth\u003d\"1.7976931348623157E308\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"pss-coder"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"pss-coder"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"pss-coder"},"content":"         \u003cHBox alignment\u003d\"CENTER_LEFT\" prefHeight\u003d\"100.0\" prefWidth\u003d\"150.0\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"pss-coder"},"content":"               \u003cVBox alignment\u003d\"CENTER\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"105.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"pss-coder"},"content":"                   \u003cLabel fx:id\u003d\"name\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"pss-coder"},"content":"                   \u003cLabel fx:id\u003d\"dob\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"cell_small_label\" text\u003d\"DOB\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"pss-coder"},"content":"                   \u003cLabel fx:id\u003d\"age\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"cell_small_label\" text\u003d\"AGE\" /\u003e","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"pss-coder"},"content":"                   \u003cCheckBox fx:id\u003d\"reminderCheckBox\" maxWidth\u003d\"1.7976931348623157E308\" mnemonicParsing\u003d\"false\" text\u003d\"Enable Notification\" /\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"pss-coder"},"content":"                   \u003cpadding\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"pss-coder"},"content":"                       \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"pss-coder"},"content":"                   \u003c/padding\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"pss-coder"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"pss-coder"},"content":"               \u003cInsets /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"pss-coder"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"pss-coder"},"content":"               \u003c/VBox\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"pss-coder"},"content":"               \u003cVBox fx:id\u003d\"birthdayCircleContainer\" alignment\u003d\"CENTER\" prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"pss-coder"},"content":"                     \u003cStackPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"pss-coder"},"content":"                           \u003cCircle fx:id\u003d\"birthdayCircle\" fill\u003d\"WHITE\" radius\u003d\"25.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" /\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"pss-coder"},"content":"                           \u003cLabel fx:id\u003d\"daysToBirthday\" styleClass\u003d\"cell_small_label\" text\u003d\"5\" textAlignment\u003d\"CENTER\" textOverrun\u003d\"CLIP\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"pss-coder"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"pss-coder"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"pss-coder"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"pss-coder"},"content":"                     \u003c/StackPane\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"pss-coder"},"content":"                     \u003cLabel fx:id\u003d\"birthdayDaysLeftLabel\" styleClass\u003d\"cell_small_label\" text\u003d\"Days left\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"pss-coder"},"content":"                        \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"pss-coder"},"content":"                           \u003cInsets /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"pss-coder"},"content":"                        \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"pss-coder"},"content":"                           \u003cInsets bottom\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                     \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"               \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"pss-coder"},"content":"            \u003cGridPane.margin\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"pss-coder"},"content":"               \u003cInsets /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"pss-coder"},"content":"            \u003c/GridPane.margin\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"pss-coder"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":19,"pss-coder":40}},{"path":"src/main/resources/view/BirthdayListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":"  \u003cListView fx:id\u003d\"birthdayListView\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"      \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":"         \u003cInsets /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"      \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"   \u003c/ListView\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":6,"pss-coder":7}},{"path":"src/main/resources/view/FriendListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.geometry.Rectangle2D?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"pss-coder"},"content":"            \u003cImageView fx:id\u003d\"avatar\" fitHeight\u003d\"80.0\" fitWidth\u003d\"80.0\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"pss-coder"},"content":"               \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"pss-coder"},"content":"                  \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"pss-coder"},"content":"               \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"pss-coder"},"content":"            \u003cviewport\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"pss-coder"},"content":"               \u003cRectangle2D /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"pss-coder"},"content":"            \u003c/viewport\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"pss-coder"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"pss-coder"},"content":"          \u003cVBox minHeight\u003d\"105\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"pss-coder"},"content":"              \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"pss-coder"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"pss-coder"},"content":"              \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"pss-coder"},"content":"                \u003cminWidth\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"pss-coder"},"content":"                  \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"pss-coder"},"content":"                  \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"pss-coder"},"content":"                \u003c/minWidth\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"pss-coder"},"content":"              \u003c/Label\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"pss-coder"},"content":"              \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":42,"author":{"gitId":"pss-coder"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"pss-coder"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"pss-coder"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"pss-coder"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"pss-coder"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"pss-coder"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":20,"pss-coder":31}},{"path":"src/main/resources/view/FriendListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":"  \u003cListView fx:id\u003d\"friendListView\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"      \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":"         \u003cInsets /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"      \u003c/VBox.margin\u003e\u003c/ListView\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":6,"pss-coder":6}},{"path":"src/main/resources/view/FriendWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pss-coder"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"pss-coder"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.control.Hyperlink?\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.control.Tooltip?\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"pss-coder"},"content":"\u003cfx:root minHeight\u003d\"300.0\" minWidth\u003d\"400.0\" resizable\u003d\"false\" title\u003d\"View Friend\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"    \u003cicons\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"pss-coder"},"content":"        \u003cImage url\u003d\"@/images/avatars/Avatar0.png\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"pss-coder"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"pss-coder"},"content":"    \u003cscene\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"pss-coder"},"content":"        \u003cScene\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"pss-coder"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"pss-coder"},"content":"                \u003cURL value\u003d\"@../stylesheets/Fonts.css\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"pss-coder"},"content":"                \u003cURL value\u003d\"@../stylesheets/FriendBookTheme.css\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"pss-coder"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"pss-coder"},"content":"         \u003cVBox alignment\u003d\"TOP_CENTER\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" spacing\u003d\"20.0\" styleClass\u003d\"friend-window\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"pss-coder"},"content":"            \u003cVBox fx:id\u003d\"topContainer\" alignment\u003d\"CENTER\" spacing\u003d\"10.0\"\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":31,"author":{"gitId":"pss-coder"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"pss-coder"},"content":"                     \u003cImageView fx:id\u003d\"avatar\" fitHeight\u003d\"80.0\" fitWidth\u003d\"80.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"pss-coder"},"content":"               \u003c/ImageView\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"pss-coder"},"content":"                  \u003cHyperlink fx:id\u003d\"teleHandle\" text\u003d\"\\@pss_coder\" /\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"pss-coder"},"content":"                           \u003cLabel fx:id\u003d\"name\" maxHeight\u003d\"1.7976931348623157E308\" text\u003d\"Pawandeep Singh Sekhon\" wrapText\u003d\"true\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"pss-coder"},"content":"                  \u003cLabel text\u003d\"24 Years old\"\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"pss-coder"},"content":"                     \u003cpadding\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"pss-coder"},"content":"                        \u003cInsets bottom\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"pss-coder"},"content":"                     \u003c/padding\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"pss-coder"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"pss-coder"},"content":"               \u003c/children\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"pss-coder"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"pss-coder"},"content":"               \u003cHBox alignment\u003d\"CENTER\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"pss-coder"},"content":"                     \u003cVBox fx:id\u003d\"fieldContainer\" alignment\u003d\"CENTER_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"200.0\" prefWidth\u003d\"100.0\" spacing\u003d\"10.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"pss-coder"},"content":"                  \u003cVBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5.0\"\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"pss-coder"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"pss-coder"},"content":"                        \u003cLabel fx:id\u003d\"phoneLabel\" maxHeight\u003d\"1.7976931348623157E308\" styleClass\u003d\"fw-label\" text\u003d\"Phone\" /\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"pss-coder"},"content":"                                 \u003cLabel fx:id\u003d\"phone\" maxHeight\u003d\"1.7976931348623157E308\" text\u003d\"xxxx\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"pss-coder"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"pss-coder"},"content":"                     \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"pss-coder"},"content":"                        \u003cInsets left\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"pss-coder"},"content":"                     \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"pss-coder"},"content":"                  \u003c/VBox\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"pss-coder"},"content":"                  \u003cVBox spacing\u003d\"5.0\"\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"pss-coder"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"pss-coder"},"content":"                        \u003cLabel fx:id\u003d\"emalLabel\" maxHeight\u003d\"1.7976931348623157E308\" styleClass\u003d\"fw-label\" text\u003d\"Email\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"pss-coder"},"content":"                                 \u003cLabel fx:id\u003d\"email\" maxHeight\u003d\"1.7976931348623157E308\" text\u003d\"xxxx\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"pss-coder"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"pss-coder"},"content":"                     \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"pss-coder"},"content":"                        \u003cInsets left\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"pss-coder"},"content":"                     \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"pss-coder"},"content":"                  \u003c/VBox\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"pss-coder"},"content":"                  \u003cVBox spacing\u003d\"5.0\"\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"pss-coder"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"pss-coder"},"content":"                        \u003cHBox fillHeight\u003d\"false\"\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"pss-coder"},"content":"                           \u003cchildren\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"pss-coder"},"content":"                              \u003cVBox spacing\u003d\"5.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"pss-coder"},"content":"                                 \u003cchildren\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"pss-coder"},"content":"                                    \u003cLabel fx:id\u003d\"birthdayLabel\" maxHeight\u003d\"1.7976931348623157E308\" styleClass\u003d\"fw-label\" text\u003d\"Birthday\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"pss-coder"},"content":"                                             \u003cLabel fx:id\u003d\"birthday\" maxHeight\u003d\"1.7976931348623157E308\" text\u003d\"xxxxx\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"pss-coder"},"content":"                                 \u003c/children\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"pss-coder"},"content":"                              \u003c/VBox\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"pss-coder"},"content":"                                        \u003cVBox  alignment\u003d\"CENTER\" fillWidth\u003d\"false\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"pss-coder"},"content":"                                      \u003cStackPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"pss-coder"},"content":"                                          \u003cCircle fx:id\u003d\"birthdayCircle\" fill\u003d\"#f9edcd\" radius\u003d\"25.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" styleClass\u003d\"circle\" /\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"pss-coder"},"content":"                                          \u003cLabel fx:id\u003d\"daysToBirthday\" text\u003d\"Today\" textAlignment\u003d\"CENTER\" textOverrun\u003d\"CLIP\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"pss-coder"},"content":"                                       \u003ctooltip\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"pss-coder"},"content":"                                          \u003cTooltip fx:id\u003d\"upcomingAgeToolTip\" autoHide\u003d\"true\" text\u003d\"upcoming age\" /\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"pss-coder"},"content":"                                       \u003c/tooltip\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"pss-coder"},"content":"                                       \u003cfont\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"pss-coder"},"content":"                                          \u003cFont size\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"pss-coder"},"content":"                                       \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"pss-coder"},"content":"                                          \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"pss-coder"},"content":"                                              \u003cInsets /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"pss-coder"},"content":"                                          \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"pss-coder"},"content":"                                      \u003c/StackPane\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"pss-coder"},"content":"                                      \u003cLabel fx:id\u003d\"daysToBirthdayLabel\" styleClass\u003d\"fw-label\" text\u003d\"Days to Birthday\" textAlignment\u003d\"CENTER\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":90,"author":{"gitId":"pss-coder"},"content":"                                          \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"pss-coder"},"content":"                                              \u003cInsets top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"pss-coder"},"content":"                                          \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"pss-coder"},"content":"                                      \u003c/Label\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"pss-coder"},"content":"                                 \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"pss-coder"},"content":"                                    \u003cInsets right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"pss-coder"},"content":"                                 \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"pss-coder"},"content":"                                  \u003c/VBox\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"pss-coder"},"content":"                           \u003c/children\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"pss-coder"},"content":"                        \u003c/HBox\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"pss-coder"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"pss-coder"},"content":"                     \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"pss-coder"},"content":"                        \u003cInsets left\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":103,"author":{"gitId":"pss-coder"},"content":"                     \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"pss-coder"},"content":"                  \u003c/VBox\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"pss-coder"},"content":"                  \u003cVBox spacing\u003d\"5.0\" fx:id\u003d\"addressContainer\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"pss-coder"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"pss-coder"},"content":"                        \u003cLabel fx:id\u003d\"addressLabel\" maxHeight\u003d\"1.7976931348623157E308\" styleClass\u003d\"fw-label\" text\u003d\"Address\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":108,"author":{"gitId":"pss-coder"},"content":"                        \u003cLabel fx:id\u003d\"address\" maxHeight\u003d\"1.7976931348623157E308\" text\u003d\"xxxxxx\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":109,"author":{"gitId":"pss-coder"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"pss-coder"},"content":"                     \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":111,"author":{"gitId":"pss-coder"},"content":"                        \u003cInsets left\u003d\"20.0\" top\u003d\"-30.0\" /\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":112,"author":{"gitId":"pss-coder"},"content":"                     \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":113,"author":{"gitId":"pss-coder"},"content":"                  \u003c/VBox\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":114,"author":{"gitId":"pss-coder"},"content":"                  \u003cVBox spacing\u003d\"5.0\" fx:id\u003d\"descriptionContainer\"\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":115,"author":{"gitId":"pss-coder"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":116,"author":{"gitId":"pss-coder"},"content":"                        \u003cLabel fx:id\u003d\"descriptionLabel\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" styleClass\u003d\"fw-label\" text\u003d\"Description\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":117,"author":{"gitId":"pss-coder"},"content":"                                 \u003cLabel fx:id\u003d\"description\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" text\u003d\"xxxxx\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":118,"author":{"gitId":"pss-coder"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":119,"author":{"gitId":"pss-coder"},"content":"                     \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":120,"author":{"gitId":"pss-coder"},"content":"                        \u003cInsets left\u003d\"20.0\" /\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":121,"author":{"gitId":"pss-coder"},"content":"                     \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":122,"author":{"gitId":"pss-coder"},"content":"                  \u003c/VBox\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":123,"author":{"gitId":"pss-coder"},"content":"                  \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":124,"author":{"gitId":"pss-coder"},"content":"                     \u003cInsets left\u003d\"10.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":125,"author":{"gitId":"pss-coder"},"content":"                  \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":126,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"pss-coder"},"content":"                     \u003c/VBox\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"pss-coder"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":129,"author":{"gitId":"pss-coder"},"content":"                  \u003cInsets top\u003d\"-20.0\" /\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":130,"author":{"gitId":"pss-coder"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":131,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"pss-coder"},"content":"               \u003c/HBox\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"pss-coder"},"content":"            \u003cVBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":134,"author":{"gitId":"pss-coder"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":135,"author":{"gitId":"pss-coder"},"content":"                  \u003cFlowPane fx:id\u003d\"tags\" alignment\u003d\"CENTER\" columnHalignment\u003d\"CENTER\" prefWrapLength\u003d\"300.0\"\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":136,"author":{"gitId":"pss-coder"},"content":"                     \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":137,"author":{"gitId":"pss-coder"},"content":"                        \u003cInsets bottom\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":138,"author":{"gitId":"pss-coder"},"content":"                     \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":139,"author":{"gitId":"pss-coder"},"content":"                  \u003c/FlowPane\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":140,"author":{"gitId":"pss-coder"},"content":"               \u003c/children\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":141,"author":{"gitId":"pss-coder"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":142,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":143,"author":{"gitId":"pss-coder"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":144,"author":{"gitId":"pss-coder"},"content":"               \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":145,"author":{"gitId":"pss-coder"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"pss-coder"},"content":"         \u003c/VBox\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"pss-coder"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"pss-coder"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"pss-coder"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"pss-coder":149}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.control.TitledPane?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.layout.TilePane?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"RonaldTanSingWei"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"pss-coder"},"content":"        \u003cURL value\u003d\"@../stylesheets/Fonts.css\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"pss-coder"},"content":"          \u003cURL value\u003d\"@../stylesheets/HelpWindow.css\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":27,"author":{"gitId":"pss-coder"},"content":"         \u003cScrollPane hbarPolicy\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"pss-coder"},"content":"               \u003cVBox alignment\u003d\"TOP_CENTER\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"600.0\" prefWidth\u003d\"600.0\" styleClass\u003d\"main-container\"\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"pss-coder"},"content":"                     \u003cLabel maxHeight\u003d\"1.7976931348623157E308\" styleClass\u003d\"help-title\" text\u003d\"FriendBook Help\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"RonaldTanSingWei"},"content":"                        \u003cfont\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"RonaldTanSingWei"},"content":"                           \u003cFont size\u003d\"24.0\" /\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"RonaldTanSingWei"},"content":"                        \u003c/font\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"pss-coder"},"content":"                        \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"pss-coder"},"content":"                           \u003cInsets bottom\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"pss-coder"},"content":"                        \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"RonaldTanSingWei"},"content":"                     \u003c/Label\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"pss-coder"},"content":"                     \u003cVBox fx:id\u003d\"commandListAccordion\" maxWidth\u003d\"550.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"pss-coder"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"pss-coder"},"content":"                           \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"pss-coder"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"pss-coder"},"content":"\u003c!--                        \u003cpanes\u003e--\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"pss-coder"},"content":"                           \u003cTitledPane expanded\u003d\"false\" text\u003d\"Avatars\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"pss-coder"},"content":"                                 \u003cTilePane fx:id\u003d\"avatarPane\" /\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"pss-coder"},"content":"                     \u003cVBox.margin\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"pss-coder"},"content":"                        \u003cInsets /\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"pss-coder"},"content":"                     \u003c/VBox.margin\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"pss-coder"},"content":"                           \u003c/TitledPane\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"pss-coder"},"content":"\u003c!--                        \u003c/panes\u003e--\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"pss-coder"},"content":"                     \u003c/VBox\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"pss-coder"},"content":"                  \u003cHBox alignment\u003d\"CENTER\" fillHeight\u003d\"false\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"pss-coder"},"content":"                      \u003cLabel fx:id\u003d\"helpMessage\" prefWidth\u003d\"350.0\" text\u003d\"Copy User Guide URL\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":56,"author":{"gitId":"pss-coder"},"content":"                          \u003cInsets /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                      \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":59,"author":{"gitId":"pss-coder"},"content":"                      \u003cButton fx:id\u003d\"copyButton\" maxHeight\u003d\"1.7976931348623157E308\" mnemonicParsing\u003d\"false\" onAction\u003d\"#openUrl\" text\u003d\"Go to User Guide\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                        \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                          \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                        \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                      \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":64,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                    \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                      \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                    \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"pss-coder"},"content":"                           \u003cInsets bottom\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                  \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":72,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"pss-coder"},"content":"               \u003c/VBox\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"pss-coder"},"content":"         \u003c/ScrollPane\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"RonaldTanSingWei":6,"-":35,"pss-coder":37}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.layout.BorderPane?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":17,"author":{"gitId":"pss-coder"},"content":"\u003cfx:root minHeight\u003d\"650.0\" minWidth\u003d\"700.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"FriendBook\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"RonaldTanSingWei"},"content":"    \u003cImage url\u003d\"@/images/friend_book_32.png\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"pss-coder"},"content":"        \u003cURL value\u003d\"@../stylesheets/Fonts.css\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"pss-coder"},"content":"        \u003cURL value\u003d\"@../stylesheets/FriendBookTheme.css\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"pss-coder"},"content":"        \u003cURL value\u003d\"@../stylesheets/Extensions.css\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"pss-coder"},"content":"            \u003c!--    Window Container        --\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"pss-coder"},"content":"      \u003cVBox alignment\u003d\"TOP_CENTER\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"600.0\" minWidth\u003d\"450.0\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"pss-coder"},"content":"          \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"              \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                  \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"              \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"              \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                  \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"              \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"pss-coder"},"content":"            \u003c!--      MAIN CONTAINER          --\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"pss-coder"},"content":"          \u003cBorderPane styleClass\u003d\"main-container\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"pss-coder"},"content":"                    \u003c!--       TOP section             --\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"pss-coder"},"content":"              \u003ctop\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"pss-coder"},"content":"                  \u003cStackPane fx:id\u003d\"profilePlaceHolder\" BorderPane.alignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"pss-coder"},"content":"              \u003c/top\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"pss-coder"},"content":"                \u003c!--       Centre section             --\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"pss-coder"},"content":"               \u003ccenter\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"pss-coder"},"content":"                  \u003cHBox alignment\u003d\"CENTER\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" spacing\u003d\"30.0\"  BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"pss-coder"},"content":"                        \u003c!--       Friend container         --\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"pss-coder"},"content":"                      \u003cVBox fx:id\u003d\"friendContainer\" alignment\u003d\"CENTER_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"pss-coder"},"content":"                          \u003cLabel text\u003d\"My Friends\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"pss-coder"},"content":"                              \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"pss-coder"},"content":"                                 \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"pss-coder"},"content":"                              \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"pss-coder"},"content":"                          \u003c/Label\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"pss-coder"},"content":"                        \u003cStackPane fx:id\u003d\"friendListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"pss-coder"},"content":"                      \u003c/VBox\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"pss-coder"},"content":"                            \u003c!--      Birthday Container          --\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"pss-coder"},"content":"                      \u003cVBox fx:id\u003d\"birthdayContainer\" alignment\u003d\"CENTER_LEFT\" maxHeight\u003d\"1.7976931348623157E308\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"pss-coder"},"content":"                          \u003cLabel text\u003d\"Friends\u0027 Upcoming Birthday\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"pss-coder"},"content":"                              \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"pss-coder"},"content":"                                 \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"pss-coder"},"content":"                              \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"pss-coder"},"content":"                          \u003c/Label\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":69,"author":{"gitId":"pss-coder"},"content":"                        \u003cStackPane fx:id\u003d\"birthdayListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"pss-coder"},"content":"                      \u003c/VBox\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":71,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"pss-coder"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"pss-coder"},"content":"                      \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"pss-coder"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"pss-coder"},"content":"                  \u003cBorderPane.margin\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"pss-coder"},"content":"                      \u003cInsets /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"pss-coder"},"content":"                  \u003c/BorderPane.margin\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"pss-coder"},"content":"                  \u003c/HBox\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":79,"author":{"gitId":"pss-coder"},"content":"               \u003c/center\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":80,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"pss-coder"},"content":"                \u003c!--       BOTTOM section             --\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"pss-coder"},"content":"                \u003cbottom\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"pss-coder"},"content":"                    \u003cVBox alignment\u003d\"CENTER\" BorderPane.alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"pss-coder"},"content":"                        \u003c!-- Result Display--\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"pss-coder"},"content":"                        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxWidth\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"pss-coder"},"content":"                            \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"pss-coder"},"content":"                                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"pss-coder"},"content":"                            \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"pss-coder"},"content":"                        \u003c/StackPane\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"pss-coder"},"content":"                        \u003c!-- Command box --\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"pss-coder"},"content":"                        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"pss-coder"},"content":"                            \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"pss-coder"},"content":"                                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"pss-coder"},"content":"                            \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":96,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":97,"author":{"gitId":"pss-coder"},"content":"                        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" maxWidth\u003d\"1.7976931348623157E308\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"pss-coder"},"content":"                            \u003cVBox.margin\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"pss-coder"},"content":"                                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"pss-coder"},"content":"                            \u003c/VBox.margin\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"pss-coder"},"content":"                        \u003c/StackPane\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":105,"author":{"gitId":"pss-coder"},"content":"                        \u003cInsets bottom\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":107,"author":{"gitId":"pss-coder"},"content":"                    \u003cBorderPane.margin\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"pss-coder"},"content":"                        \u003cInsets /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"pss-coder"},"content":"                    \u003c/BorderPane.margin\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"pss-coder"},"content":"                    \u003c/VBox\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"pss-coder"},"content":"                \u003c/bottom\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":112,"author":{"gitId":"pss-coder"},"content":"          \u003c/BorderPane\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"RonaldTanSingWei":1,"-":34,"pss-coder":81}},{"path":"src/main/resources/view/ProfileDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pss-coder"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":2,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":5,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"\u003cHBox prefHeight\u003d\"38.0\" prefWidth\u003d\"438.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":"   \u003cHBox spacing\u003d\"10.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"      \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"         \u003cInsets left\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"      \u003c/HBox.margin\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"                        \u003cLabel fx:id\u003d\"welcomeLabel\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"label-header\" text\u003d\"Welcome\" textAlignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"                     \u003cfont\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"pss-coder"},"content":"                        \u003cFont size\u003d\"18.0\" /\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"pss-coder"},"content":"                     \u003c/font\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"pss-coder"},"content":"                  \u003c/Label\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"pss-coder"},"content":"         \u003cLabel fx:id\u003d\"usernameLabel\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"label-header\" text\u003d\"username\" textAlignment\u003d\"CENTER\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"            \u003cfont\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"pss-coder"},"content":"               \u003cFont size\u003d\"18.0\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"pss-coder"},"content":"            \u003c/font\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"pss-coder"},"content":"         \u003c/Label\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"pss-coder"},"content":"   \u003c/HBox\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"pss-coder"},"content":"               \u003cButton fx:id\u003d\"addFriendButton\" alignment\u003d\"CENTER\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" mnemonicParsing\u003d\"false\" text\u003d\"Add Friend\" textAlignment\u003d\"CENTER\" HBox.hgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"pss-coder"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"pss-coder"},"content":"            \u003cInsets bottom\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"pss-coder"},"content":"         \u003c/HBox.margin\u003e\u003c/Button\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"pss-coder"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"pss-coder":30}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"80.0\" styleClass\u003d\"result-display\" StackPane.alignment\u003d\"CENTER\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":6,"pss-coder":2}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":5,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.control.Separator?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"\u003cGridPane xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"   \u003cVBox alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"pss-coder"},"content":"         \u003cSeparator prefWidth\u003d\"200.0\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"pss-coder"},"content":"      \u003cGridPane.margin\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"pss-coder"},"content":"         \u003cInsets top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"      \u003c/GridPane.margin\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"pss-coder"},"content":"   \u003c/VBox\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"pss-coder"},"content":"   \u003crowConstraints\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"pss-coder"},"content":"      \u003cRowConstraints /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"pss-coder"},"content":"   \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"-":11,"pss-coder":14}},{"path":"src/test/java/seedu/friendbook/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"RonaldTanSingWei":1,"-":57}},{"path":"src/test/java/seedu/friendbook/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.commons.core;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"RonaldTanSingWei":1,"-":26}},{"path":"src/test/java/seedu/friendbook/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.commons.core;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RonaldTanSingWei":2,"-":133}},{"path":"src/test/java/seedu/friendbook/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.commons.core.index;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"RonaldTanSingWei":2,"-":58}},{"path":"src/test/java/seedu/friendbook/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.commons.util;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertNotNull(AppUtil.getImage(\"/images/friend_book_32.png\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"RonaldTanSingWei":3,"-":33}},{"path":"src/test/java/seedu/friendbook/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.commons.util;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"RonaldTanSingWei":3,"-":105}},{"path":"src/test/java/seedu/friendbook/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.commons.util;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.Config;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"RonaldTanSingWei":4,"-":112}},{"path":"src/test/java/seedu/friendbook/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.commons.util;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RonaldTanSingWei":2,"-":21}},{"path":"src/test/java/seedu/friendbook/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.commons.util;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.testutil.SerializableTestClass;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.testutil.TestUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RonaldTanSingWei":3,"-":42}},{"path":"src/test/java/seedu/friendbook/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.commons.util;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"RonaldTanSingWei":2,"-":141}},{"path":"src/test/java/seedu/friendbook/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.AVATAR_DESC_AMY;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.BIRTHDAY_DESC_AMY;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.DESCRIPTION_DESC_AMY;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.REMINDER_DESC_AMY;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.TELEHANDLE_DESC_AMY;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":25,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.AddCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.CommandResult;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.ListCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ModelManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ReadOnlyFriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.storage.JsonFriendBookStorage;","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.storage.StorageManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.testutil.PersonBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"RonaldTanSingWei"},"content":"        JsonFriendBookStorage friendBookStorage \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"RonaldTanSingWei"},"content":"                new JsonFriendBookStorage(temporaryFolder.resolve(\"friendBook.json\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"RonaldTanSingWei"},"content":"        StorageManager storage \u003d new StorageManager(friendBookStorage, userPrefsStorage);","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"RonaldTanSingWei"},"content":"        // Setup LogicManager with JsonFriendBookIoExceptionThrowingStub","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"RonaldTanSingWei"},"content":"        JsonFriendBookStorage friendBookStorage \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"RonaldTanSingWei"},"content":"                new JsonFriendBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionFriendBook.json\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":83,"author":{"gitId":"RonaldTanSingWei"},"content":"        StorageManager storage \u003d new StorageManager(friendBookStorage, userPrefsStorage);","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"xnajasho"},"content":"                + ADDRESS_DESC_AMY + BIRTHDAY_DESC_AMY + AVATAR_DESC_AMY + TELEHANDLE_DESC_AMY + DESCRIPTION_DESC_AMY","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"xnajasho"},"content":"                + REMINDER_DESC_AMY;","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"RonaldTanSingWei"},"content":"        Model expectedModel \u003d new ModelManager(model.getFriendBook(), new UserPrefs());","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"RonaldTanSingWei"},"content":"    private static class JsonFriendBookIoExceptionThrowingStub extends JsonFriendBookStorage {","lastModifiedDate":"2021-10-05"},{"lineNumber":159,"author":{"gitId":"RonaldTanSingWei"},"content":"        private JsonFriendBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-10-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"RonaldTanSingWei"},"content":"        public void saveFriendBook(ReadOnlyFriendBook friendBook, Path filePath) throws IOException {","lastModifiedDate":"2021-10-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"RonaldTanSingWei":34,"xnajasho":7,"-":127}},{"path":"src/test/java/seedu/friendbook/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalPersons.getTypicalFriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ModelManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.testutil.PersonBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"RonaldTanSingWei"},"content":"        model \u003d new ModelManager(getTypicalFriendBook(), new UserPrefs());","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"RonaldTanSingWei"},"content":"        Model expectedModel \u003d new ModelManager(model.getFriendBook(), new UserPrefs());","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"RonaldTanSingWei"},"content":"        Person personInList \u003d model.getFriendBook().getPersonList().get(0);","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"RonaldTanSingWei":12,"-":33}},{"path":"src/test/java/seedu/friendbook/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"pss-coder"},"content":"import javafx.beans.property.StringProperty;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.GuiSettings;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.FriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ReadOnlyFriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.person.Email;","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"SajalVaishnav"},"content":"import seedu.friendbook.model.person.Name;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.person.Phone;","lastModifiedDate":"2021-11-03"},{"lineNumber":28,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.testutil.PersonBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.testutil.TypicalPersons;","lastModifiedDate":"2021-11-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"xnajasho"},"content":"    public void execute_personSameNameBirthdayAddress_addSuccessful() throws Exception {","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"xnajasho"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"xnajasho"},"content":"        Person validPerson \u003d new PersonBuilder(TypicalPersons.BENSON).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"xnajasho"},"content":"        Person validPerson2SameNameBirthdayAddress \u003d new PersonBuilder(TypicalPersons.BENSON)","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"xnajasho"},"content":"                .withPhone(TypicalPersons.ALICE.getPhone().value)","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"xnajasho"},"content":"                .withEmail(TypicalPersons.ALICE.getEmail().value)","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"xnajasho"},"content":"                .build();","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"xnajasho"},"content":"        CommandResult commandResult1 \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"xnajasho"},"content":"        CommandResult commandResult2 \u003d new AddCommand(validPerson2SameNameBirthdayAddress).execute(modelStub);","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"xnajasho"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult1.getFeedbackToUser());","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"xnajasho"},"content":"        assertEquals(String.format(","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"xnajasho"},"content":"                AddCommand.MESSAGE_SUCCESS, validPerson2SameNameBirthdayAddress), commandResult2.getFeedbackToUser());","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"xnajasho"},"content":"        assertEquals(Arrays.asList(validPerson, validPerson2SameNameBirthdayAddress), modelStub.personsAdded);","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":77,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":78,"author":{"gitId":"xnajasho"},"content":"    public void execute_personWithSamePhone_throwsCommandException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":79,"author":{"gitId":"xnajasho"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2021-11-03"},{"lineNumber":80,"author":{"gitId":"xnajasho"},"content":"        Person validPerson2WithSameNumber \u003d new PersonBuilder(TypicalPersons.ALICE)","lastModifiedDate":"2021-11-03"},{"lineNumber":81,"author":{"gitId":"xnajasho"},"content":"                .withPhone(validPerson.getPhone().value).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"xnajasho"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson2WithSameNumber);","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"xnajasho"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"xnajasho"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_PHONE_NUMBER_EXISTS, () -\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"xnajasho"},"content":"                addCommand.execute(modelStub));","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"xnajasho"},"content":"    public void execute_personWithSameEmail_throwsCommandException() {","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"xnajasho"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"xnajasho"},"content":"        Person validPerson2WithSameEmail \u003d new PersonBuilder(TypicalPersons.BENSON)","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"xnajasho"},"content":"                .withEmail(validPerson.getEmail().value).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"xnajasho"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson2WithSameEmail);","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"xnajasho"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"xnajasho"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_EMAIL_EXISTS, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":99,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"SajalVaishnav"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"SajalVaishnav"},"content":"        public Name getUsername() {","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"SajalVaishnav"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"pss-coder"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"pss-coder"},"content":"        public StringProperty getUsernameProperty() {","lastModifiedDate":"2021-10-26"},{"lineNumber":140,"author":{"gitId":"pss-coder"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":141,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":142,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":143,"author":{"gitId":"SajalVaishnav"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"SajalVaishnav"},"content":"        public void setUsername(Name username) {","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"SajalVaishnav"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"RonaldTanSingWei"},"content":"        public Path getFriendBookFilePath() {","lastModifiedDate":"2021-10-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":169,"author":{"gitId":"RonaldTanSingWei"},"content":"        public void setFriendBookFilePath(Path friendBookFilePath) {","lastModifiedDate":"2021-10-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"RonaldTanSingWei"},"content":"        public void setFriendBook(ReadOnlyFriendBook newData) {","lastModifiedDate":"2021-10-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"RonaldTanSingWei"},"content":"        public ReadOnlyFriendBook getFriendBook() {","lastModifiedDate":"2021-10-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":193,"author":{"gitId":"xnajasho"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":194,"author":{"gitId":"xnajasho"},"content":"        public boolean hasPhone(Phone phone) {","lastModifiedDate":"2021-11-03"},{"lineNumber":195,"author":{"gitId":"xnajasho"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":196,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":197,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":198,"author":{"gitId":"xnajasho"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":199,"author":{"gitId":"xnajasho"},"content":"        public boolean hasEmail(Email email) {","lastModifiedDate":"2021-11-03"},{"lineNumber":200,"author":{"gitId":"xnajasho"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":201,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":202,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"xnajasho"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"xnajasho"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonListSortedByBirthday() {","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"xnajasho"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":246,"author":{"gitId":"xnajasho"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":247,"author":{"gitId":"xnajasho"},"content":"        public boolean hasPhone(Phone phone) {","lastModifiedDate":"2021-11-03"},{"lineNumber":248,"author":{"gitId":"xnajasho"},"content":"            requireNonNull(phone);","lastModifiedDate":"2021-11-03"},{"lineNumber":249,"author":{"gitId":"xnajasho"},"content":"            return this.person.getPhone().equals(phone);","lastModifiedDate":"2021-11-03"},{"lineNumber":250,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":251,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":252,"author":{"gitId":"xnajasho"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":253,"author":{"gitId":"xnajasho"},"content":"        public boolean hasEmail(Email email) {","lastModifiedDate":"2021-11-03"},{"lineNumber":254,"author":{"gitId":"xnajasho"},"content":"            requireNonNull(email);","lastModifiedDate":"2021-11-03"},{"lineNumber":255,"author":{"gitId":"xnajasho"},"content":"            return this.person.getEmail().equals(email);","lastModifiedDate":"2021-11-03"},{"lineNumber":256,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":260,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":271,"author":{"gitId":"xnajasho"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":272,"author":{"gitId":"xnajasho"},"content":"        public boolean hasPhone(Phone phone) {","lastModifiedDate":"2021-11-03"},{"lineNumber":273,"author":{"gitId":"xnajasho"},"content":"            requireNonNull(phone);","lastModifiedDate":"2021-11-03"},{"lineNumber":274,"author":{"gitId":"xnajasho"},"content":"            return personsAdded.stream().anyMatch(personOther -\u003e personOther.getPhone().equals(phone));","lastModifiedDate":"2021-11-03"},{"lineNumber":275,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":276,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":277,"author":{"gitId":"xnajasho"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":278,"author":{"gitId":"xnajasho"},"content":"        public boolean hasEmail(Email email) {","lastModifiedDate":"2021-11-03"},{"lineNumber":279,"author":{"gitId":"xnajasho"},"content":"            requireNonNull(email);","lastModifiedDate":"2021-11-03"},{"lineNumber":280,"author":{"gitId":"xnajasho"},"content":"            return personsAdded.stream().anyMatch(personOther -\u003e personOther.getEmail().equals(email));","lastModifiedDate":"2021-11-03"},{"lineNumber":281,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":282,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":290,"author":{"gitId":"RonaldTanSingWei"},"content":"        public ReadOnlyFriendBook getFriendBook() {","lastModifiedDate":"2021-10-05"},{"lineNumber":291,"author":{"gitId":"RonaldTanSingWei"},"content":"            return new FriendBook();","lastModifiedDate":"2021-10-05"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"RonaldTanSingWei":16,"xnajasho":84,"-":178,"pss-coder":6,"SajalVaishnav":11}},{"path":"src/test/java/seedu/friendbook/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalPersons.getTypicalFriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.FriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ModelManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void execute_emptyFriendBook_success() {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void execute_nonEmptyFriendBook_success() {","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"RonaldTanSingWei"},"content":"        Model model \u003d new ModelManager(getTypicalFriendBook(), new UserPrefs());","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"RonaldTanSingWei"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalFriendBook(), new UserPrefs());","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"RonaldTanSingWei"},"content":"        expectedModel.setFriendBook(new FriendBook());","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"RonaldTanSingWei":12,"-":20}},{"path":"src/test/java/seedu/friendbook/logic/commands/CommandListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pss-coder"},"content":"package seedu.friendbook.logic.commands;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"pss-coder"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"pss-coder"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"pss-coder"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":"public class CommandListTest {","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"    private Command.CommandList commandList;","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"    public void getAddCommandUsage() {","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"        assertEquals(commandList.ADD.getCommandMessageUsage(), AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"pss-coder"},"content":"        assertTrue(commandList.ADD.toString().equals(AddCommand.COMMAND_WORD));","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"pss-coder"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"    public void getEditCommandUsage() {","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"pss-coder"},"content":"        assertEquals(commandList.EDIT.getCommandMessageUsage(), EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"pss-coder"},"content":"        assertTrue(commandList.EDIT.toString().equals(EditCommand.COMMAND_WORD));","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"pss-coder"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"pss-coder"},"content":"    public void getClearCommandUsage() {","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"pss-coder"},"content":"        assertEquals(commandList.CLEAR.getCommandMessageUsage(), ClearCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"pss-coder"},"content":"        assertTrue(commandList.CLEAR.toString().equals(ClearCommand.COMMAND_WORD));","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"pss-coder"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"pss-coder"},"content":"    public void getDeleteCommandUsage() {","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"pss-coder"},"content":"        assertEquals(commandList.DELETE.getCommandMessageUsage(), DeleteCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"pss-coder"},"content":"        assertTrue(commandList.DELETE.toString().equals(DeleteCommand.COMMAND_WORD));","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"pss-coder"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"pss-coder"},"content":"    public void getExitCommandUsage() {","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"pss-coder"},"content":"        assertEquals(commandList.EXIT.getCommandMessageUsage(), ExitCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"pss-coder"},"content":"        assertTrue(commandList.EXIT.toString().equals(ExitCommand.COMMAND_WORD));","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"pss-coder"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"pss-coder"},"content":"    public void getFindCommandUsage() {","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"pss-coder"},"content":"        assertEquals(commandList.FIND.getCommandMessageUsage(), FindCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"pss-coder"},"content":"        assertTrue(commandList.FIND.toString().equals(FindCommand.COMMAND_WORD));","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"pss-coder"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"pss-coder"},"content":"    public void getFindTagCommandUsage() {","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"pss-coder"},"content":"        assertEquals(commandList.FINDTAG.getCommandMessageUsage(), FindTagCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"pss-coder"},"content":"        assertTrue(commandList.FINDTAG.toString().equals(FindTagCommand.COMMAND_WORD));","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"pss-coder"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"pss-coder"},"content":"    public void getHelpCommandUsage() {","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"pss-coder"},"content":"        assertEquals(commandList.HELP.getCommandMessageUsage(), HelpCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"pss-coder"},"content":"        assertTrue(commandList.HELP.toString().equals(HelpCommand.COMMAND_WORD));","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"pss-coder"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"pss-coder"},"content":"    public void getListCommandUsage() {","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"pss-coder"},"content":"        assertEquals(commandList.LIST.getCommandMessageUsage(), ListCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"pss-coder"},"content":"        assertTrue(commandList.LIST.toString().equals(ListCommand.COMMAND_WORD));","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"pss-coder"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"pss-coder"},"content":"    public void getProfileCommandUsage() {","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"pss-coder"},"content":"        assertEquals(commandList.PROFILE.getCommandMessageUsage(), ProfileCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"pss-coder"},"content":"        assertTrue(commandList.PROFILE.toString().equals(ProfileCommand.COMMAND_WORD));","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"pss-coder"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"pss-coder"},"content":"    public void getViewCommandUsage() {","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"pss-coder"},"content":"        assertEquals(commandList.VIEW.getCommandMessageUsage(), ViewCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"pss-coder"},"content":"        assertTrue(commandList.VIEW.toString().equals(ViewCommand.COMMAND_WORD));","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"pss-coder"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"pss-coder"},"content":"    public void execute_getNoCommand_throwsNullPointerException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"pss-coder"},"content":"        assertThrows(NullPointerException.class, () -\u003e commandList.toString());","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"pss-coder":83}},{"path":"src/test/java/seedu/friendbook/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"    private static final CommandResult COMMAND_RESULT \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"    private static final CommandResult HELP_COMMAND_RESULT \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"            new CommandResult(\"show help please\", true, false);","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"    private static final CommandResult VIEW_ALICE_RESULT \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"xnajasho"},"content":"            new CommandResult(\"Viewing Alice\", ALICE, false, false);","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"xnajasho"},"content":"    private static final CommandResult VIEW_BENSON_RESULT \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"xnajasho"},"content":"            new CommandResult(\"Viewing Benson\", BENSON, false, false);","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"xnajasho"},"content":"    public void getPersonToView() {","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"xnajasho"},"content":"        // Any commands other than view command returns -\u003e null","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"xnajasho"},"content":"        assertNull(HELP_COMMAND_RESULT.getPersonToView());","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"xnajasho"},"content":"        assertNull(COMMAND_RESULT.getPersonToView());","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"xnajasho"},"content":"        // View person commands -\u003e return respective person","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"xnajasho"},"content":"        assertTrue(VIEW_ALICE_RESULT.getPersonToView().equals(ALICE));","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"xnajasho"},"content":"        assertTrue(VIEW_BENSON_RESULT.getPersonToView().equals(BENSON));","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"xnajasho"},"content":"        // Command results will never return any other person\u0027s info","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"xnajasho"},"content":"        assertFalse(VIEW_ALICE_RESULT.getPersonToView().equals(BENSON));","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"xnajasho"},"content":"        assertFalse(VIEW_BENSON_RESULT.getPersonToView().equals(ALICE));","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"xnajasho"},"content":"    public void isShowHelp() {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"xnajasho"},"content":"        // command to view person or give feedback -\u003e return false","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"xnajasho"},"content":"        assertFalse(COMMAND_RESULT.isShowHelp());","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"xnajasho"},"content":"        assertFalse(VIEW_ALICE_RESULT.isShowHelp());","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"xnajasho"},"content":"        assertFalse(VIEW_BENSON_RESULT.isShowHelp());","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"xnajasho"},"content":"        // help command requested -\u003e return true","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"xnajasho"},"content":"        assertTrue(HELP_COMMAND_RESULT.isShowHelp());","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"xnajasho"},"content":"    public void isViewPerson() {","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"xnajasho"},"content":"        // Any commands results other than view command -\u003e false","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"xnajasho"},"content":"        assertFalse(COMMAND_RESULT.isViewPerson());","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"xnajasho"},"content":"        assertFalse(HELP_COMMAND_RESULT.isViewPerson());","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"xnajasho"},"content":"        // View person command result -\u003e true","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"xnajasho"},"content":"        assertTrue(VIEW_ALICE_RESULT.isViewPerson());","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"xnajasho"},"content":"        assertTrue(VIEW_BENSON_RESULT.isViewPerson());","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"xnajasho"},"content":"        assertTrue(COMMAND_RESULT.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"xnajasho"},"content":"        assertTrue(COMMAND_RESULT.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"xnajasho"},"content":"        assertTrue(VIEW_ALICE_RESULT.equals(","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"xnajasho"},"content":"                new CommandResult(\"Viewing Alice\", ALICE, false, false)));","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"xnajasho"},"content":"        assertTrue(VIEW_BENSON_RESULT.equals(","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"xnajasho"},"content":"                new CommandResult(\"Viewing Benson\", BENSON, false, false)));","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"xnajasho"},"content":"        assertTrue(COMMAND_RESULT.equals(COMMAND_RESULT));","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"xnajasho"},"content":"        assertTrue(VIEW_ALICE_RESULT.equals(VIEW_ALICE_RESULT));","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"xnajasho"},"content":"        assertTrue(VIEW_BENSON_RESULT.equals(VIEW_BENSON_RESULT));","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"xnajasho"},"content":"        assertFalse(COMMAND_RESULT.equals(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"xnajasho"},"content":"        assertFalse(VIEW_ALICE_RESULT.equals(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"xnajasho"},"content":"        assertFalse(VIEW_BENSON_RESULT.equals(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"xnajasho"},"content":"        assertFalse(COMMAND_RESULT.equals(0.5f));","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"xnajasho"},"content":"        assertFalse(VIEW_ALICE_RESULT.equals(0.5f));","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"xnajasho"},"content":"        assertFalse(VIEW_BENSON_RESULT.equals(0.5f));","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"xnajasho"},"content":"        assertFalse(COMMAND_RESULT.equals(new CommandResult(\"different\")));","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"xnajasho"},"content":"        assertFalse(VIEW_ALICE_RESULT.equals(","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"xnajasho"},"content":"                new CommandResult(\"Different feedback\", ALICE, false, false)));","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"xnajasho"},"content":"        assertFalse(VIEW_BENSON_RESULT.equals(","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"xnajasho"},"content":"                new CommandResult(\"Different feedback\", BENSON, false, false)));","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"xnajasho"},"content":"        // different person to view -\u003e return false","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"xnajasho"},"content":"        assertFalse(VIEW_ALICE_RESULT.equals(VIEW_BENSON_RESULT));","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"xnajasho"},"content":"        // comparing view command and feedback -\u003e false","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"xnajasho"},"content":"        assertFalse(VIEW_ALICE_RESULT.equals(HELP_COMMAND_RESULT));","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"xnajasho"},"content":"        assertFalse(COMMAND_RESULT.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"xnajasho"},"content":"        assertFalse(VIEW_ALICE_RESULT.equals(","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"xnajasho"},"content":"                new CommandResult(\"Different feedback\", ALICE, true, false)));","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"xnajasho"},"content":"        assertFalse(VIEW_BENSON_RESULT.equals(","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"xnajasho"},"content":"                new CommandResult(\"Different feedback\", BENSON, true, false)));","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"xnajasho"},"content":"        assertFalse(COMMAND_RESULT.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"xnajasho"},"content":"        assertFalse(VIEW_ALICE_RESULT.equals(","lastModifiedDate":"2021-10-20"},{"lineNumber":117,"author":{"gitId":"xnajasho"},"content":"                new CommandResult(\"Different feedback\", ALICE, false, true)));","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"xnajasho"},"content":"        assertFalse(VIEW_BENSON_RESULT.equals(","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"xnajasho"},"content":"                new CommandResult(\"Different feedback\", BENSON, false, true)));","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"xnajasho"},"content":"        assertEquals(COMMAND_RESULT.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"xnajasho"},"content":"        assertEquals(VIEW_ALICE_RESULT.hashCode(),","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"xnajasho"},"content":"                new CommandResult(\"Viewing Alice\", ALICE, false, false).hashCode());","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"xnajasho"},"content":"        assertEquals(VIEW_BENSON_RESULT.hashCode(),","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"xnajasho"},"content":"                new CommandResult(\"Viewing Benson\", BENSON, false, false).hashCode());","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"xnajasho"},"content":"        assertNotEquals(COMMAND_RESULT.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"xnajasho"},"content":"        assertNotEquals(VIEW_ALICE_RESULT.hashCode(),","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"xnajasho"},"content":"                new CommandResult(\"Alice\", ALICE, false, false).hashCode());","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"xnajasho"},"content":"        assertNotEquals(VIEW_BENSON_RESULT.hashCode(),","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"xnajasho"},"content":"                new CommandResult(\"Benson\", BENSON, false, false).hashCode());","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"xnajasho"},"content":"        assertNotEquals(COMMAND_RESULT.hashCode(),","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"xnajasho"},"content":"                new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"xnajasho"},"content":"        assertNotEquals(VIEW_ALICE_RESULT.hashCode(),","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"xnajasho"},"content":"                new CommandResult(\"Viewing Alice\", ALICE, true, false).hashCode());","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"xnajasho"},"content":"        assertNotEquals(VIEW_BENSON_RESULT.hashCode(),","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"xnajasho"},"content":"                new CommandResult(\"Viewing Benson\", BENSON, true, false).hashCode());","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"xnajasho"},"content":"        assertNotEquals(COMMAND_RESULT.hashCode(),","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"xnajasho"},"content":"                new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"xnajasho"},"content":"        assertNotEquals(VIEW_ALICE_RESULT.hashCode(),","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"xnajasho"},"content":"                new CommandResult(\"Viewing Alice\", ALICE, false, true).hashCode());","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"xnajasho"},"content":"        assertNotEquals(VIEW_BENSON_RESULT.hashCode(),","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"xnajasho"},"content":"                new CommandResult(\"Viewing Benson\", BENSON, false, true).hashCode());","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"RonaldTanSingWei":1,"xnajasho":115,"-":39}},{"path":"src/test/java/seedu/friendbook/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_AVATAR;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"SajalVaishnav"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_REMINDER;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"SajalVaishnav"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_TELEHANDLE;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.FriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"xnajasho"},"content":"    public static final String VALID_BIRTHDAY_AMY \u003d \"1998-04-18\";","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"xnajasho"},"content":"    public static final String VALID_BIRTHDAY_BOB \u003d \"1995-02-15\";","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"SajalVaishnav"},"content":"    public static final String VALID_TELEHANDLE_AMY \u003d \"amabie\";","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"SajalVaishnav"},"content":"    public static final String VALID_TELEHANDLE_BOB \u003d \"BOBBIE_19\";","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"pss-coder"},"content":"    public static final String VALID_AVATAR_AMY \u003d \"1\";","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"pss-coder"},"content":"    public static final String VALID_AVATAR_BOB \u003d \"2\";","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"SajalVaishnav"},"content":"    public static final String VALID_DESCRIPTION_AMY \u003d \"amy daddy\";","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"SajalVaishnav"},"content":"    public static final String VALID_DESCRIPTION_BOB \u003d \"the builder\";","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"xnajasho"},"content":"    public static final String VALID_REMINDER_AMY \u003d \"off\";","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"xnajasho"},"content":"    public static final String VALID_REMINDER_BOB \u003d \"on\";","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"xnajasho"},"content":"    public static final String BIRTHDAY_DESC_AMY \u003d \" \" + PREFIX_BIRTHDAY + VALID_BIRTHDAY_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"xnajasho"},"content":"    public static final String BIRTHDAY_DESC_BOB \u003d \" \" + PREFIX_BIRTHDAY + VALID_BIRTHDAY_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"SajalVaishnav"},"content":"    public static final String TELEHANDLE_DESC_AMY \u003d \" \" + PREFIX_TELEHANDLE + VALID_TELEHANDLE_AMY;","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"SajalVaishnav"},"content":"    public static final String TELEHANDLE_DESC_BOB \u003d \" \" + PREFIX_TELEHANDLE + VALID_TELEHANDLE_BOB;","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"SajalVaishnav"},"content":"    public static final String DESCRIPTION_DESC_AMY \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_AMY;","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"SajalVaishnav"},"content":"    public static final String DESCRIPTION_DESC_BOB \u003d \" \" + PREFIX_DESCRIPTION + VALID_DESCRIPTION_BOB;","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"pss-coder"},"content":"    public static final String AVATAR_DESC_AMY \u003d \" \" + PREFIX_AVATAR + VALID_AVATAR_AMY;","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"pss-coder"},"content":"    public static final String AVATAR_DESC_BOB \u003d \" \" + PREFIX_AVATAR + VALID_AVATAR_BOB;","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"xnajasho"},"content":"    public static final String REMINDER_DESC_AMY \u003d \" \" + PREFIX_REMINDER + VALID_REMINDER_AMY;","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"xnajasho"},"content":"    public static final String REMINDER_DESC_BOB \u003d \" \" + PREFIX_REMINDER + VALID_REMINDER_BOB;","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"xnajasho"},"content":"    public static final String INVALID_BIRTHDAY_DESC \u003d \" \" + PREFIX_BIRTHDAY + \"Jun 12 1991\"; // not YYYY-MM-DD format","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"xnajasho"},"content":"    public static final String INVALID_TELEHANDLE_DESC \u003d \" \" + PREFIX_TELEHANDLE + \"chut\"; // at least 5 letters","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"xnajasho"},"content":"    public static final String INVALID_REMINDER_DESC \u003d \" \" + PREFIX_REMINDER + \"onoff\"; // reminder only on or off","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"xnajasho"},"content":"    public static final String INVALID_AVATAR_DESC \u003d \" \" + PREFIX_AVATAR + \"21\"; // only 0 - 20 avatars","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"pss-coder"},"content":"                .withAvatar(VALID_AVATAR_AMY)","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"SajalVaishnav"},"content":"                .withTags(VALID_TAG_FRIEND).withBirthday(VALID_BIRTHDAY_AMY)","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"xnajasho"},"content":"                .withTeleHandle(VALID_TELEHANDLE_AMY).withDescription(VALID_DESCRIPTION_AMY)","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"xnajasho"},"content":"                .withReminder(VALID_REMINDER_AMY).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"pss-coder"},"content":"                .withAvatar(VALID_AVATAR_BOB)","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"SajalVaishnav"},"content":"                .withBirthday(VALID_BIRTHDAY_BOB).withTeleHandle(VALID_TELEHANDLE_BOB)","lastModifiedDate":"2021-10-14"},{"lineNumber":104,"author":{"gitId":"xnajasho"},"content":"                .withDescription(VALID_DESCRIPTION_BOB)","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"xnajasho"},"content":"                .withReminder(VALID_REMINDER_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"RonaldTanSingWei"},"content":"     * - the friend book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"RonaldTanSingWei"},"content":"        FriendBook expectedFriendBook \u003d new FriendBook(actualModel.getFriendBook());","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":147,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertEquals(expectedFriendBook, actualModel.getFriendBook());","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":152,"author":{"gitId":"RonaldTanSingWei"},"content":"     * {@code model}\u0027s friend book.","lastModifiedDate":"2021-10-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"RonaldTanSingWei":13,"xnajasho":18,"-":108,"pss-coder":13,"SajalVaishnav":12}},{"path":"src/test/java/seedu/friendbook/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalPersons.getTypicalFriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ModelManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"RonaldTanSingWei"},"content":"    private Model model \u003d new ModelManager(getTypicalFriendBook(), new UserPrefs());","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"RonaldTanSingWei"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getFriendBook(), new UserPrefs());","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"RonaldTanSingWei"},"content":"        Model expectedModel \u003d new ModelManager(model.getFriendBook(), new UserPrefs());","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"RonaldTanSingWei"},"content":"        // ensures that outOfBoundIndex is still in bounds of friend book list","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getFriendBook().getPersonList().size());","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"RonaldTanSingWei":18,"-":91}},{"path":"src/test/java/seedu/friendbook/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.testutil.TypicalPersons.HOON;","lastModifiedDate":"2021-11-03"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.testutil.TypicalPersons.getTypicalFriendBook;","lastModifiedDate":"2021-11-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.FriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ModelManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.testutil.PersonBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"RonaldTanSingWei"},"content":"    private Model model \u003d new ModelManager(getTypicalFriendBook(), new UserPrefs());","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"pss-coder"},"content":"        System.out.println(expectedMessage);","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"RonaldTanSingWei"},"content":"        Model expectedModel \u003d new ModelManager(new FriendBook(model.getFriendBook()), new UserPrefs());","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"pss-coder"},"content":"        System.out.println(model.getFilteredPersonList().get(0));","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"RonaldTanSingWei"},"content":"        Model expectedModel \u003d new ModelManager(new FriendBook(model.getFriendBook()), new UserPrefs());","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"RonaldTanSingWei"},"content":"        Model expectedModel \u003d new ModelManager(new FriendBook(model.getFriendBook()), new UserPrefs());","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"RonaldTanSingWei"},"content":"        Model expectedModel \u003d new ModelManager(new FriendBook(model.getFriendBook()), new UserPrefs());","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"RonaldTanSingWei"},"content":"        // edit person in filtered list into a duplicate in friend book","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"RonaldTanSingWei"},"content":"        Person personInList \u003d model.getFriendBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":127,"author":{"gitId":"xnajasho"},"content":"    public void execute_duplicatePhoneUnfilteredList_failure() {","lastModifiedDate":"2021-11-03"},{"lineNumber":128,"author":{"gitId":"xnajasho"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"xnajasho"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson)","lastModifiedDate":"2021-11-03"},{"lineNumber":130,"author":{"gitId":"xnajasho"},"content":"                .withName(HOON.getName().fullName)","lastModifiedDate":"2021-11-03"},{"lineNumber":131,"author":{"gitId":"xnajasho"},"content":"                .withAddress(HOON.getAddress().value)","lastModifiedDate":"2021-11-03"},{"lineNumber":132,"author":{"gitId":"xnajasho"},"content":"                .withBirthday(HOON.getBirthday().value)","lastModifiedDate":"2021-11-03"},{"lineNumber":133,"author":{"gitId":"xnajasho"},"content":"                .withEmail(HOON.getEmail().value).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":134,"author":{"gitId":"xnajasho"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2021-11-03"},{"lineNumber":135,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":136,"author":{"gitId":"xnajasho"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_PHONE_NUMBER_EXISTS);","lastModifiedDate":"2021-11-03"},{"lineNumber":137,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":138,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":139,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":140,"author":{"gitId":"xnajasho"},"content":"    public void execute_duplicatePhoneFilteredList_failure() {","lastModifiedDate":"2021-11-03"},{"lineNumber":141,"author":{"gitId":"xnajasho"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":142,"author":{"gitId":"xnajasho"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-11-03"},{"lineNumber":143,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":144,"author":{"gitId":"xnajasho"},"content":"        // edit person in filtered list to have a duplicate phone number as someone else in friend book","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"xnajasho"},"content":"        Person personInList \u003d model.getFriendBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":146,"author":{"gitId":"xnajasho"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-11-03"},{"lineNumber":147,"author":{"gitId":"xnajasho"},"content":"                new EditPersonDescriptorBuilder(firstPerson)","lastModifiedDate":"2021-11-03"},{"lineNumber":148,"author":{"gitId":"xnajasho"},"content":"                        .withPhone(personInList.getPhone().value).build());","lastModifiedDate":"2021-11-03"},{"lineNumber":149,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":150,"author":{"gitId":"xnajasho"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_PHONE_NUMBER_EXISTS);","lastModifiedDate":"2021-11-03"},{"lineNumber":151,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":152,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":153,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":154,"author":{"gitId":"xnajasho"},"content":"    public void execute_duplicateEmailUnfilteredList_failure() {","lastModifiedDate":"2021-11-03"},{"lineNumber":155,"author":{"gitId":"xnajasho"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":156,"author":{"gitId":"xnajasho"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson)","lastModifiedDate":"2021-11-03"},{"lineNumber":157,"author":{"gitId":"xnajasho"},"content":"                .withName(HOON.getName().fullName)","lastModifiedDate":"2021-11-03"},{"lineNumber":158,"author":{"gitId":"xnajasho"},"content":"                .withAddress(HOON.getAddress().value)","lastModifiedDate":"2021-11-03"},{"lineNumber":159,"author":{"gitId":"xnajasho"},"content":"                .withBirthday(HOON.getBirthday().value)","lastModifiedDate":"2021-11-03"},{"lineNumber":160,"author":{"gitId":"xnajasho"},"content":"                .withPhone(HOON.getPhone().value).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":161,"author":{"gitId":"xnajasho"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2021-11-03"},{"lineNumber":162,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":163,"author":{"gitId":"xnajasho"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_EMAIL_EXISTS);","lastModifiedDate":"2021-11-03"},{"lineNumber":164,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":165,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":166,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":167,"author":{"gitId":"xnajasho"},"content":"    public void execute_duplicateEmailFilteredList_failure() {","lastModifiedDate":"2021-11-03"},{"lineNumber":168,"author":{"gitId":"xnajasho"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":169,"author":{"gitId":"xnajasho"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-11-03"},{"lineNumber":170,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":171,"author":{"gitId":"xnajasho"},"content":"        // edit person in filtered list to have a duplicate email as someone else in friend book","lastModifiedDate":"2021-11-03"},{"lineNumber":172,"author":{"gitId":"xnajasho"},"content":"        Person personInList \u003d model.getFriendBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-11-03"},{"lineNumber":173,"author":{"gitId":"xnajasho"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-11-03"},{"lineNumber":174,"author":{"gitId":"xnajasho"},"content":"                new EditPersonDescriptorBuilder(firstPerson)","lastModifiedDate":"2021-11-03"},{"lineNumber":175,"author":{"gitId":"xnajasho"},"content":"                        .withEmail(personInList.getEmail().value).build());","lastModifiedDate":"2021-11-03"},{"lineNumber":176,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":177,"author":{"gitId":"xnajasho"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_EMAIL_EXISTS);","lastModifiedDate":"2021-11-03"},{"lineNumber":178,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":179,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":191,"author":{"gitId":"RonaldTanSingWei"},"content":"     * but smaller than size of friend book","lastModifiedDate":"2021-10-05"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":197,"author":{"gitId":"RonaldTanSingWei"},"content":"        // ensures that outOfBoundIndex is still in bounds of friend book list","lastModifiedDate":"2021-10-05"},{"lineNumber":198,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getFriendBook().getPersonList().size());","lastModifiedDate":"2021-10-05"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"RonaldTanSingWei":31,"xnajasho":56,"-":141,"pss-coder":3}},{"path":"src/test/java/seedu/friendbook/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"RonaldTanSingWei":10,"-":48}},{"path":"src/test/java/seedu/friendbook/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ModelManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"RonaldTanSingWei":5,"-":15}},{"path":"src/test/java/seedu/friendbook/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalPersons.getTypicalFriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ModelManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"RonaldTanSingWei"},"content":"    private Model model \u003d new ModelManager(getTypicalFriendBook(), new UserPrefs());","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"RonaldTanSingWei"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalFriendBook(), new UserPrefs());","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"RonaldTanSingWei":13,"-":70}},{"path":"src/test/java/seedu/friendbook/logic/commands/FindTagCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.commands;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalPersons.getTypicalFriendBook;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"RonaldTanSingWei"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"RonaldTanSingWei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ModelManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.UserPrefs;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"RonaldTanSingWei"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"RonaldTanSingWei"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"RonaldTanSingWei"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"RonaldTanSingWei"},"content":"public class FindTagCommandTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"RonaldTanSingWei"},"content":"    private Model model \u003d new ModelManager(getTypicalFriendBook(), new UserPrefs());","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"RonaldTanSingWei"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalFriendBook(), new UserPrefs());","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"RonaldTanSingWei"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void equals() {","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"RonaldTanSingWei"},"content":"        TagContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"RonaldTanSingWei"},"content":"                new TagContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"RonaldTanSingWei"},"content":"        TagContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"RonaldTanSingWei"},"content":"                new TagContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"RonaldTanSingWei"},"content":"        FindTagCommand findTagFirstCommand \u003d new FindTagCommand(firstPredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"RonaldTanSingWei"},"content":"        FindTagCommand findTagSecondCommand \u003d new FindTagCommand(secondPredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"RonaldTanSingWei"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertTrue(findTagFirstCommand.equals(findTagFirstCommand));","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"RonaldTanSingWei"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"RonaldTanSingWei"},"content":"        FindTagCommand findFirstCommandCopy \u003d new FindTagCommand(firstPredicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertTrue(findTagFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"RonaldTanSingWei"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertFalse(findTagFirstCommand.equals(1));","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"RonaldTanSingWei"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertFalse(findTagFirstCommand.equals(null));","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"RonaldTanSingWei"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertFalse(findTagFirstCommand.equals(findTagSecondCommand));","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"RonaldTanSingWei"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"RonaldTanSingWei"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"RonaldTanSingWei"},"content":"        TagContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"RonaldTanSingWei"},"content":"        FindTagCommand command \u003d new FindTagCommand(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"RonaldTanSingWei"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"RonaldTanSingWei"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void execute_singleKeyword_multiplePersonsFound() {","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"RonaldTanSingWei"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"RonaldTanSingWei"},"content":"        TagContainsKeywordsPredicate predicate \u003d preparePredicate(\"friends\");","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"RonaldTanSingWei"},"content":"        FindTagCommand command \u003d new FindTagCommand(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"RonaldTanSingWei"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertEquals(Arrays.asList(ALICE, BENSON, DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"RonaldTanSingWei"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"RonaldTanSingWei"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"RonaldTanSingWei"},"content":"        TagContainsKeywordsPredicate predicate \u003d preparePredicate(\"lunchmates owesMoney\");","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"RonaldTanSingWei"},"content":"        FindTagCommand command \u003d new FindTagCommand(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"RonaldTanSingWei"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertEquals(Arrays.asList(BENSON, GEORGE), model.getFilteredPersonList());","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"RonaldTanSingWei"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"RonaldTanSingWei"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"RonaldTanSingWei"},"content":"     * @return","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"RonaldTanSingWei"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"RonaldTanSingWei"},"content":"    private TagContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"RonaldTanSingWei"},"content":"        return new TagContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"RonaldTanSingWei"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"RonaldTanSingWei":95}},{"path":"src/test/java/seedu/friendbook/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ModelManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"RonaldTanSingWei":5,"-":15}},{"path":"src/test/java/seedu/friendbook/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalPersons.getTypicalFriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ModelManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"RonaldTanSingWei"},"content":"        model \u003d new ModelManager(getTypicalFriendBook(), new UserPrefs());","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"RonaldTanSingWei"},"content":"        expectedModel \u003d new ModelManager(model.getFriendBook(), new UserPrefs());","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"RonaldTanSingWei":10,"-":29}},{"path":"src/test/java/seedu/friendbook/logic/commands/ProfileCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SajalVaishnav"},"content":"package seedu.friendbook.logic.commands;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"SajalVaishnav"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"SajalVaishnav"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"SajalVaishnav"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"SajalVaishnav"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"SajalVaishnav"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"SajalVaishnav"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"SajalVaishnav"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"SajalVaishnav"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"import javafx.beans.property.StringProperty;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"SajalVaishnav"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"SajalVaishnav"},"content":"import seedu.friendbook.commons.core.GuiSettings;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"SajalVaishnav"},"content":"import seedu.friendbook.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"SajalVaishnav"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"SajalVaishnav"},"content":"import seedu.friendbook.model.ReadOnlyFriendBook;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"SajalVaishnav"},"content":"import seedu.friendbook.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.person.Email;","lastModifiedDate":"2021-11-03"},{"lineNumber":22,"author":{"gitId":"SajalVaishnav"},"content":"import seedu.friendbook.model.person.Name;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"SajalVaishnav"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.person.Phone;","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"SajalVaishnav"},"content":"public class ProfileCommandTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"SajalVaishnav"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"SajalVaishnav"},"content":"    public void constructor_nullName_throwsNullPointerException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"SajalVaishnav"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ProfileCommand(null));","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"SajalVaishnav"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"SajalVaishnav"},"content":"    public void execute_usernameReset_usernameResetSuccessful() throws Exception {","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"SajalVaishnav"},"content":"        ModelStubAcceptsNewUsername modelStub \u003d new ModelStubAcceptsNewUsername(new Name(\"old\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"SajalVaishnav"},"content":"        Name validName \u003d new Name(\"new\");","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"SajalVaishnav"},"content":"        CommandResult commandResult \u003d new ProfileCommand(validName).execute(modelStub);","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"SajalVaishnav"},"content":"        assertEquals(String.format(ProfileCommand.MESSAGE_SUCCESS, validName), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"SajalVaishnav"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"SajalVaishnav"},"content":"    public void execute_duplicateUsername_throwsCommandException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"SajalVaishnav"},"content":"        ModelStubAcceptsNewUsername modelStub \u003d new ModelStubAcceptsNewUsername(new Name(\"old\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"SajalVaishnav"},"content":"        Name validName \u003d new Name(\"old\");","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"SajalVaishnav"},"content":"        ProfileCommand profileCommand \u003d new ProfileCommand(validName);","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"SajalVaishnav"},"content":"        assertThrows(CommandException.class, ProfileCommand.MESSAGE_DUPLICATE_USERNAME, (","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"SajalVaishnav"},"content":"                ) -\u003e profileCommand.execute(modelStub));","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"SajalVaishnav"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"SajalVaishnav"},"content":"    public void equals() {","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"SajalVaishnav"},"content":"        ProfileCommand profileCommand1 \u003d new ProfileCommand(new Name(\"alice\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"SajalVaishnav"},"content":"        ProfileCommand profileCommand2 \u003d new ProfileCommand(new Name(\"Bob\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"SajalVaishnav"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"SajalVaishnav"},"content":"        assertTrue(profileCommand1.equals(profileCommand1));","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"SajalVaishnav"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"SajalVaishnav"},"content":"        ProfileCommand profileCommand1Copy \u003d new ProfileCommand(new Name(\"alice\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"SajalVaishnav"},"content":"        assertTrue(profileCommand1.equals(profileCommand1Copy));","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"SajalVaishnav"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"SajalVaishnav"},"content":"        assertFalse(profileCommand1.equals(1));","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"SajalVaishnav"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"SajalVaishnav"},"content":"        assertFalse(profileCommand1.equals(null));","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"SajalVaishnav"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"SajalVaishnav"},"content":"        assertFalse(profileCommand1.equals(profileCommand2));","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"SajalVaishnav"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"SajalVaishnav"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"SajalVaishnav"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"SajalVaishnav"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"SajalVaishnav"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"SajalVaishnav"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"SajalVaishnav"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"SajalVaishnav"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"SajalVaishnav"},"content":"        public Name getUsername() {","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"SajalVaishnav"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"pss-coder"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"pss-coder"},"content":"        public StringProperty getUsernameProperty() {","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"pss-coder"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"SajalVaishnav"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"SajalVaishnav"},"content":"        public void setUsername(Name username) {","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"SajalVaishnav"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"SajalVaishnav"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"SajalVaishnav"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"SajalVaishnav"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"SajalVaishnav"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"SajalVaishnav"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"SajalVaishnav"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"SajalVaishnav"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"SajalVaishnav"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"SajalVaishnav"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"SajalVaishnav"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"SajalVaishnav"},"content":"        public Path getFriendBookFilePath() {","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"SajalVaishnav"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"SajalVaishnav"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"SajalVaishnav"},"content":"        public void setFriendBookFilePath(Path friendBookFilePath) {","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"SajalVaishnav"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"SajalVaishnav"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"SajalVaishnav"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"SajalVaishnav"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"SajalVaishnav"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"SajalVaishnav"},"content":"        public void setFriendBook(ReadOnlyFriendBook newData) {","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"SajalVaishnav"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"SajalVaishnav"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"SajalVaishnav"},"content":"        public ReadOnlyFriendBook getFriendBook() {","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"SajalVaishnav"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"SajalVaishnav"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"SajalVaishnav"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"SajalVaishnav"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"xnajasho"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"xnajasho"},"content":"        public boolean hasPhone(Phone phone) {","lastModifiedDate":"2021-11-03"},{"lineNumber":146,"author":{"gitId":"xnajasho"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":147,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":148,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":149,"author":{"gitId":"xnajasho"},"content":"        @Override","lastModifiedDate":"2021-11-03"},{"lineNumber":150,"author":{"gitId":"xnajasho"},"content":"        public boolean hasEmail(Email email) {","lastModifiedDate":"2021-11-03"},{"lineNumber":151,"author":{"gitId":"xnajasho"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-11-03"},{"lineNumber":152,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":153,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":154,"author":{"gitId":"SajalVaishnav"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"SajalVaishnav"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"SajalVaishnav"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"SajalVaishnav"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"SajalVaishnav"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"SajalVaishnav"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"SajalVaishnav"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"SajalVaishnav"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-25"},{"lineNumber":166,"author":{"gitId":"SajalVaishnav"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"SajalVaishnav"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"SajalVaishnav"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonListSortedByBirthday() {","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"SajalVaishnav"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"SajalVaishnav"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"SajalVaishnav"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-25"},{"lineNumber":176,"author":{"gitId":"SajalVaishnav"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":177,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":178,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"SajalVaishnav"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"SajalVaishnav"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"SajalVaishnav"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"SajalVaishnav"},"content":"    private class ModelStubAcceptsNewUsername extends ModelStub {","lastModifiedDate":"2021-10-25"},{"lineNumber":183,"author":{"gitId":"SajalVaishnav"},"content":"        private Name name;","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"SajalVaishnav"},"content":"        ModelStubAcceptsNewUsername(Name name) {","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"SajalVaishnav"},"content":"            requireNonNull(name);","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"SajalVaishnav"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":190,"author":{"gitId":"SajalVaishnav"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":191,"author":{"gitId":"SajalVaishnav"},"content":"        public Name getUsername() {","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"SajalVaishnav"},"content":"            return this.name;","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":195,"author":{"gitId":"SajalVaishnav"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":196,"author":{"gitId":"SajalVaishnav"},"content":"        public void setUsername(Name name) {","lastModifiedDate":"2021-10-25"},{"lineNumber":197,"author":{"gitId":"SajalVaishnav"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-10-25"},{"lineNumber":198,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":199,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":200,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":201,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":202,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":203,"author":{"gitId":"SajalVaishnav"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"xnajasho":12,"pss-coder":6,"SajalVaishnav":185}},{"path":"src/test/java/seedu/friendbook/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package seedu.friendbook.logic.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.testutil.TypicalPersons.getTypicalFriendBook;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.commons.core.Messages;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.commons.core.index.Index;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.ModelManager;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.UserPrefs;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"xnajasho"},"content":"public class ViewCommandTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"xnajasho"},"content":"    private Model model \u003d new ModelManager(getTypicalFriendBook(), new UserPrefs());","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"xnajasho"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"xnajasho"},"content":"        Person personToView \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"xnajasho"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"xnajasho"},"content":"        String expectedMessage \u003d String.format(ViewCommand.MESSAGE_VIEW_PERSON_SUCCESS, personToView);","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"xnajasho"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getFriendBook(), new UserPrefs());","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"xnajasho"},"content":"        assertCommandSuccess(viewCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"xnajasho"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"xnajasho"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"xnajasho"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"xnajasho"},"content":"        assertCommandFailure(viewCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"xnajasho"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"xnajasho"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"xnajasho"},"content":"        Person personToView \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"xnajasho"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"xnajasho"},"content":"        String expectedMessage \u003d String.format(ViewCommand.MESSAGE_VIEW_PERSON_SUCCESS, personToView);","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"xnajasho"},"content":"        Model expectedModel \u003d new ModelManager(model.getFriendBook(), new UserPrefs());","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"xnajasho"},"content":"        showPersonAtIndex(expectedModel, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"xnajasho"},"content":"        assertCommandSuccess(viewCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"xnajasho"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"xnajasho"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"xnajasho"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"xnajasho"},"content":"        // ensures that outOfBoundIndex is still in bounds of friend book list","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"xnajasho"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getFriendBook().getPersonList().size());","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"xnajasho"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"xnajasho"},"content":"        assertCommandFailure(viewCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"xnajasho"},"content":"    public void equals() {","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"xnajasho"},"content":"        ViewCommand viewFirstPersonCommand \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"xnajasho"},"content":"        ViewCommand viewSecondPersonCommand \u003d new ViewCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"xnajasho"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"xnajasho"},"content":"        assertTrue(viewFirstPersonCommand.equals(viewFirstPersonCommand));","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"xnajasho"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"xnajasho"},"content":"        ViewCommand viewFirstPersonCommandCopy \u003d new ViewCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"xnajasho"},"content":"        assertTrue(viewFirstPersonCommand.equals(viewFirstPersonCommandCopy));","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"xnajasho"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"xnajasho"},"content":"        assertFalse(viewFirstPersonCommand.equals(1));","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"xnajasho"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"xnajasho"},"content":"        assertFalse(viewFirstPersonCommand.equals(null));","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"xnajasho"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"xnajasho"},"content":"        assertFalse(viewFirstPersonCommand.equals(viewSecondPersonCommand));","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"xnajasho":94}},{"path":"src/test/java/seedu/friendbook/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.AVATAR_DESC_AMY;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.AVATAR_DESC_BOB;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.BIRTHDAY_DESC_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.BIRTHDAY_DESC_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.DESCRIPTION_DESC_AMY;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"SajalVaishnav"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.DESCRIPTION_DESC_BOB;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.INVALID_AVATAR_DESC;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.INVALID_BIRTHDAY_DESC;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.INVALID_REMINDER_DESC;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.INVALID_TELEHANDLE_DESC;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.REMINDER_DESC_AMY;","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.REMINDER_DESC_BOB;","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.TELEHANDLE_DESC_AMY;","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"SajalVaishnav"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.TELEHANDLE_DESC_BOB;","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_BIRTHDAY_BOB;","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.AddCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.person.Avatar;","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.person.Birthday;","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Email;","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.person.TeleHandle;","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.reminder.Reminder;","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.testutil.PersonBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"xnajasho"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"xnajasho"},"content":"                        + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"xnajasho"},"content":"                        + DESCRIPTION_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"xnajasho"},"content":"                        + AVATAR_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"xnajasho"},"content":"                        + TELEHANDLE_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"xnajasho"},"content":"                        + REMINDER_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"SajalVaishnav"},"content":"                        + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"SajalVaishnav"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"pss-coder"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"xnajasho"},"content":"                        + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"xnajasho"},"content":"                        + DESCRIPTION_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"xnajasho"},"content":"                        + AVATAR_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"xnajasho"},"content":"                        + TELEHANDLE_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"xnajasho"},"content":"                        + REMINDER_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"SajalVaishnav"},"content":"                        + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"SajalVaishnav"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"xnajasho"},"content":"                        + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"xnajasho"},"content":"                        + DESCRIPTION_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"xnajasho"},"content":"                        + AVATAR_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"xnajasho"},"content":"                        + TELEHANDLE_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"xnajasho"},"content":"                        + REMINDER_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"SajalVaishnav"},"content":"                        + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"SajalVaishnav"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"xnajasho"},"content":"                        + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"xnajasho"},"content":"                        + DESCRIPTION_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"xnajasho"},"content":"                        + AVATAR_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"xnajasho"},"content":"                        + TELEHANDLE_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"xnajasho"},"content":"                        + REMINDER_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"SajalVaishnav"},"content":"                        + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-14"},{"lineNumber":107,"author":{"gitId":"SajalVaishnav"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":111,"author":{"gitId":"xnajasho"},"content":"                        + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"xnajasho"},"content":"                        + DESCRIPTION_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"xnajasho"},"content":"                        + AVATAR_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"xnajasho"},"content":"                        + TELEHANDLE_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"xnajasho"},"content":"                        + REMINDER_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"SajalVaishnav"},"content":"                        + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-14"},{"lineNumber":117,"author":{"gitId":"SajalVaishnav"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"SajalVaishnav"},"content":"        Person expectedPersonMultipleTags \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"SajalVaishnav"},"content":"                new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"xnajasho"},"content":"                        + TAG_DESC_HUSBAND + BIRTHDAY_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"xnajasho"},"content":"                        + DESCRIPTION_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"xnajasho"},"content":"                        + AVATAR_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"xnajasho"},"content":"                        + TELEHANDLE_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"xnajasho"},"content":"                        + REMINDER_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"SajalVaishnav"},"content":"                        + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-14"},{"lineNumber":129,"author":{"gitId":"SajalVaishnav"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2021-10-14"},{"lineNumber":130,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"xnajasho"},"content":"        // multiple birthday - last birthday accepted","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"xnajasho"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"xnajasho"},"content":"                        + BIRTHDAY_DESC_AMY + BIRTHDAY_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"xnajasho"},"content":"                        + DESCRIPTION_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"xnajasho"},"content":"                        + AVATAR_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"xnajasho"},"content":"                        + TELEHANDLE_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"xnajasho"},"content":"                        + REMINDER_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"xnajasho"},"content":"                        + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"xnajasho"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"xnajasho"},"content":"        //multiple descriptions - last description accepted","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"xnajasho"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"xnajasho"},"content":"                        + BIRTHDAY_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"xnajasho"},"content":"                        + DESCRIPTION_DESC_AMY + DESCRIPTION_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"xnajasho"},"content":"                        + AVATAR_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"xnajasho"},"content":"                        + TELEHANDLE_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"xnajasho"},"content":"                        + REMINDER_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"xnajasho"},"content":"                        + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"xnajasho"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"xnajasho"},"content":"        // multiple avatar - last avatar accepted","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"xnajasho"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"xnajasho"},"content":"                        + BIRTHDAY_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"xnajasho"},"content":"                        + DESCRIPTION_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"xnajasho"},"content":"                        + AVATAR_DESC_AMY + AVATAR_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"xnajasho"},"content":"                        + TELEHANDLE_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"xnajasho"},"content":"                        + REMINDER_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"xnajasho"},"content":"                        + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"xnajasho"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"xnajasho"},"content":"        // multiple telehandles - last telehandle accepted","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"xnajasho"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"xnajasho"},"content":"                        + BIRTHDAY_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"xnajasho"},"content":"                        + DESCRIPTION_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"xnajasho"},"content":"                        + AVATAR_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":166,"author":{"gitId":"xnajasho"},"content":"                        + TELEHANDLE_DESC_AMY + TELEHANDLE_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"xnajasho"},"content":"                        + REMINDER_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"xnajasho"},"content":"                        + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"xnajasho"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"xnajasho"},"content":"        // multiple reminder - last reminder accepted","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"xnajasho"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"xnajasho"},"content":"                        + BIRTHDAY_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"xnajasho"},"content":"                        + DESCRIPTION_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":176,"author":{"gitId":"xnajasho"},"content":"                        + AVATAR_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":177,"author":{"gitId":"xnajasho"},"content":"                        + TELEHANDLE_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":178,"author":{"gitId":"xnajasho"},"content":"                        + REMINDER_DESC_AMY + REMINDER_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"xnajasho"},"content":"                        + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"xnajasho"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"xnajasho"},"content":"        // zero tags, telehandle, description, avatar","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"xnajasho"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTeleHandle(\"\")","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"xnajasho"},"content":"                                                    .withDescription(\"\")","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"xnajasho"},"content":"                                                    .withAvatar(\"0\").withTags().build();","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"xnajasho"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-10-06"},{"lineNumber":190,"author":{"gitId":"xnajasho"},"content":"                + ADDRESS_DESC_AMY + BIRTHDAY_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":198,"author":{"gitId":"SajalVaishnav"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-14"},{"lineNumber":199,"author":{"gitId":"xnajasho"},"content":"                        + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":202,"author":{"gitId":"SajalVaishnav"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-14"},{"lineNumber":203,"author":{"gitId":"xnajasho"},"content":"                        + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":206,"author":{"gitId":"SajalVaishnav"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2021-10-14"},{"lineNumber":207,"author":{"gitId":"xnajasho"},"content":"                        + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-25"},{"lineNumber":208,"author":{"gitId":"xnajasho"},"content":"        // missing birthday prefix","lastModifiedDate":"2021-10-25"},{"lineNumber":209,"author":{"gitId":"xnajasho"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":210,"author":{"gitId":"xnajasho"},"content":"                        + VALID_BIRTHDAY_BOB, expectedMessage);","lastModifiedDate":"2021-10-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":213,"author":{"gitId":"SajalVaishnav"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB","lastModifiedDate":"2021-10-14"},{"lineNumber":214,"author":{"gitId":"xnajasho"},"content":"                        + VALID_ADDRESS_BOB + VALID_BIRTHDAY_BOB, expectedMessage);","lastModifiedDate":"2021-10-25"},{"lineNumber":215,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":221,"author":{"gitId":"SajalVaishnav"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-14"},{"lineNumber":222,"author":{"gitId":"xnajasho"},"content":"                        + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":223,"author":{"gitId":"xnajasho"},"content":"                        + DESCRIPTION_DESC_BOB + AVATAR_DESC_BOB + TELEHANDLE_DESC_BOB + REMINDER_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":224,"author":{"gitId":"xnajasho"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-25"},{"lineNumber":225,"author":{"gitId":"SajalVaishnav"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-14"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":228,"author":{"gitId":"SajalVaishnav"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-14"},{"lineNumber":229,"author":{"gitId":"xnajasho"},"content":"                        + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":230,"author":{"gitId":"xnajasho"},"content":"                        + DESCRIPTION_DESC_BOB + AVATAR_DESC_BOB + TELEHANDLE_DESC_BOB + REMINDER_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":231,"author":{"gitId":"xnajasho"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-25"},{"lineNumber":232,"author":{"gitId":"SajalVaishnav"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-14"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":235,"author":{"gitId":"SajalVaishnav"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2021-10-14"},{"lineNumber":236,"author":{"gitId":"xnajasho"},"content":"                        + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":237,"author":{"gitId":"xnajasho"},"content":"                        + DESCRIPTION_DESC_BOB + AVATAR_DESC_BOB + TELEHANDLE_DESC_BOB + REMINDER_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":238,"author":{"gitId":"xnajasho"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-25"},{"lineNumber":239,"author":{"gitId":"SajalVaishnav"},"content":"                Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-14"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":241,"author":{"gitId":"xnajasho"},"content":"        // invalid birthday","lastModifiedDate":"2021-10-25"},{"lineNumber":242,"author":{"gitId":"xnajasho"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":243,"author":{"gitId":"xnajasho"},"content":"                        + ADDRESS_DESC_BOB + INVALID_BIRTHDAY_DESC","lastModifiedDate":"2021-10-25"},{"lineNumber":244,"author":{"gitId":"xnajasho"},"content":"                        + DESCRIPTION_DESC_BOB + AVATAR_DESC_BOB + TELEHANDLE_DESC_BOB + REMINDER_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":245,"author":{"gitId":"xnajasho"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-25"},{"lineNumber":246,"author":{"gitId":"xnajasho"},"content":"                Birthday.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-25"},{"lineNumber":247,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":248,"author":{"gitId":"xnajasho"},"content":"        // invalid avatar","lastModifiedDate":"2021-10-25"},{"lineNumber":249,"author":{"gitId":"xnajasho"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":250,"author":{"gitId":"xnajasho"},"content":"                        + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":251,"author":{"gitId":"xnajasho"},"content":"                        + DESCRIPTION_DESC_BOB + INVALID_AVATAR_DESC + TELEHANDLE_DESC_BOB + REMINDER_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":252,"author":{"gitId":"xnajasho"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-25"},{"lineNumber":253,"author":{"gitId":"xnajasho"},"content":"                Avatar.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-25"},{"lineNumber":254,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":255,"author":{"gitId":"xnajasho"},"content":"        // invalid telehandle","lastModifiedDate":"2021-10-25"},{"lineNumber":256,"author":{"gitId":"xnajasho"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":257,"author":{"gitId":"xnajasho"},"content":"                        + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":258,"author":{"gitId":"xnajasho"},"content":"                        + DESCRIPTION_DESC_BOB + AVATAR_DESC_BOB + INVALID_TELEHANDLE_DESC + REMINDER_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":259,"author":{"gitId":"xnajasho"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-25"},{"lineNumber":260,"author":{"gitId":"xnajasho"},"content":"                TeleHandle.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-25"},{"lineNumber":261,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":262,"author":{"gitId":"xnajasho"},"content":"        // invalid reminder","lastModifiedDate":"2021-10-25"},{"lineNumber":263,"author":{"gitId":"xnajasho"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":264,"author":{"gitId":"xnajasho"},"content":"                        + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB","lastModifiedDate":"2021-10-25"},{"lineNumber":265,"author":{"gitId":"xnajasho"},"content":"                        + DESCRIPTION_DESC_BOB + AVATAR_DESC_BOB + TELEHANDLE_DESC_BOB + INVALID_REMINDER_DESC","lastModifiedDate":"2021-10-25"},{"lineNumber":266,"author":{"gitId":"xnajasho"},"content":"                        + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-25"},{"lineNumber":267,"author":{"gitId":"xnajasho"},"content":"                Reminder.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-25"},{"lineNumber":268,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":270,"author":{"gitId":"SajalVaishnav"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-14"},{"lineNumber":271,"author":{"gitId":"SajalVaishnav"},"content":"                        + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-14"},{"lineNumber":272,"author":{"gitId":"SajalVaishnav"},"content":"                        + BIRTHDAY_DESC_BOB + DESCRIPTION_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND,","lastModifiedDate":"2021-10-14"},{"lineNumber":273,"author":{"gitId":"SajalVaishnav"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-14"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":276,"author":{"gitId":"SajalVaishnav"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2021-11-07"},{"lineNumber":277,"author":{"gitId":"SajalVaishnav"},"content":"                + ADDRESS_DESC_BOB","lastModifiedDate":"2021-11-07"},{"lineNumber":278,"author":{"gitId":"xnajasho"},"content":"                + BIRTHDAY_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":281,"author":{"gitId":"SajalVaishnav"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-10-14"},{"lineNumber":282,"author":{"gitId":"SajalVaishnav"},"content":"                        + EMAIL_DESC_BOB","lastModifiedDate":"2021-10-14"},{"lineNumber":283,"author":{"gitId":"SajalVaishnav"},"content":"                        + ADDRESS_DESC_BOB + BIRTHDAY_DESC_BOB + DESCRIPTION_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2021-10-14"},{"lineNumber":284,"author":{"gitId":"SajalVaishnav"},"content":"                        + TAG_DESC_FRIEND,","lastModifiedDate":"2021-10-14"},{"lineNumber":285,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":287,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"RonaldTanSingWei":14,"xnajasho":149,"-":62,"pss-coder":26,"SajalVaishnav":36}},{"path":"src/test/java/seedu/friendbook/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"RonaldTanSingWei":1,"-":149}},{"path":"src/test/java/seedu/friendbook/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.Command;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"            boolean value \u003d expectedCommand.equals(command);","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"RonaldTanSingWei":3,"xnajasho":1,"-":35}},{"path":"src/test/java/seedu/friendbook/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"RonaldTanSingWei":6,"-":26}},{"path":"src/test/java/seedu/friendbook/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.AVATAR_DESC_AMY;","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.BIRTHDAY_DESC_AMY;","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.DESCRIPTION_DESC_AMY;","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.INVALID_AVATAR_DESC;","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.INVALID_BIRTHDAY_DESC;","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.INVALID_REMINDER_DESC;","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.INVALID_TELEHANDLE_DESC;","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.REMINDER_DESC_AMY;","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.TELEHANDLE_DESC_AMY;","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_AVATAR_AMY;","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_BIRTHDAY_AMY;","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_DESCRIPTION_AMY;","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_REMINDER_AMY;","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_TELEHANDLE_AMY;","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.EditCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.person.Avatar;","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.person.Birthday;","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Email;","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.person.TeleHandle;","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.reminder.Reminder;","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"xnajasho"},"content":"        assertParseFailure(parser, \"1\" + INVALID_BIRTHDAY_DESC, Birthday.MESSAGE_CONSTRAINTS); // invalid birthday","lastModifiedDate":"2021-11-08"},{"lineNumber":105,"author":{"gitId":"xnajasho"},"content":"        assertParseFailure(parser, \"1\" + INVALID_AVATAR_DESC, Avatar.MESSAGE_CONSTRAINTS); // invalid avatar","lastModifiedDate":"2021-11-08"},{"lineNumber":106,"author":{"gitId":"xnajasho"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TELEHANDLE_DESC, TeleHandle.MESSAGE_CONSTRAINTS); // invalid tele","lastModifiedDate":"2021-11-08"},{"lineNumber":107,"author":{"gitId":"xnajasho"},"content":"        assertParseFailure(parser, \"1\" + INVALID_REMINDER_DESC, Reminder.MESSAGE_CONSTRAINTS); // invalid reminder","lastModifiedDate":"2021-11-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":131,"author":{"gitId":"xnajasho"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-11-08"},{"lineNumber":132,"author":{"gitId":"xnajasho"},"content":"                + AVATAR_DESC_AMY + BIRTHDAY_DESC_AMY + DESCRIPTION_DESC_AMY + TELEHANDLE_DESC_AMY + REMINDER_DESC_AMY;","lastModifiedDate":"2021-11-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"xnajasho"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2021-11-08"},{"lineNumber":137,"author":{"gitId":"xnajasho"},"content":"                .withAvatar(VALID_AVATAR_AMY).withBirthday(VALID_BIRTHDAY_AMY).withDescription(VALID_DESCRIPTION_AMY)","lastModifiedDate":"2021-11-08"},{"lineNumber":138,"author":{"gitId":"xnajasho"},"content":"                .withTeleHandle(VALID_TELEHANDLE_AMY).withReminder(VALID_REMINDER_AMY).build();","lastModifiedDate":"2021-11-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":188,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":189,"author":{"gitId":"xnajasho"},"content":"        // birthday","lastModifiedDate":"2021-11-08"},{"lineNumber":190,"author":{"gitId":"xnajasho"},"content":"        userInput \u003d targetIndex.getOneBased() + BIRTHDAY_DESC_AMY;","lastModifiedDate":"2021-11-08"},{"lineNumber":191,"author":{"gitId":"xnajasho"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withBirthday(VALID_BIRTHDAY_AMY).build();","lastModifiedDate":"2021-11-08"},{"lineNumber":192,"author":{"gitId":"xnajasho"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-08"},{"lineNumber":193,"author":{"gitId":"xnajasho"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-11-08"},{"lineNumber":194,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":195,"author":{"gitId":"xnajasho"},"content":"        // avatar","lastModifiedDate":"2021-11-08"},{"lineNumber":196,"author":{"gitId":"xnajasho"},"content":"        userInput \u003d targetIndex.getOneBased() + AVATAR_DESC_AMY;","lastModifiedDate":"2021-11-08"},{"lineNumber":197,"author":{"gitId":"xnajasho"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAvatar(VALID_AVATAR_AMY).build();","lastModifiedDate":"2021-11-08"},{"lineNumber":198,"author":{"gitId":"xnajasho"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-08"},{"lineNumber":199,"author":{"gitId":"xnajasho"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-11-08"},{"lineNumber":200,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":201,"author":{"gitId":"xnajasho"},"content":"        // description","lastModifiedDate":"2021-11-08"},{"lineNumber":202,"author":{"gitId":"xnajasho"},"content":"        userInput \u003d targetIndex.getOneBased() + DESCRIPTION_DESC_AMY;","lastModifiedDate":"2021-11-08"},{"lineNumber":203,"author":{"gitId":"xnajasho"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withDescription(VALID_DESCRIPTION_AMY).build();","lastModifiedDate":"2021-11-08"},{"lineNumber":204,"author":{"gitId":"xnajasho"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-08"},{"lineNumber":205,"author":{"gitId":"xnajasho"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-11-08"},{"lineNumber":206,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":207,"author":{"gitId":"xnajasho"},"content":"        // TeleHandle","lastModifiedDate":"2021-11-08"},{"lineNumber":208,"author":{"gitId":"xnajasho"},"content":"        userInput \u003d targetIndex.getOneBased() + TELEHANDLE_DESC_AMY;","lastModifiedDate":"2021-11-08"},{"lineNumber":209,"author":{"gitId":"xnajasho"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTeleHandle(VALID_TELEHANDLE_AMY).build();","lastModifiedDate":"2021-11-08"},{"lineNumber":210,"author":{"gitId":"xnajasho"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-08"},{"lineNumber":211,"author":{"gitId":"xnajasho"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-11-08"},{"lineNumber":212,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":213,"author":{"gitId":"xnajasho"},"content":"        // reminder","lastModifiedDate":"2021-11-08"},{"lineNumber":214,"author":{"gitId":"xnajasho"},"content":"        userInput \u003d targetIndex.getOneBased() + REMINDER_DESC_AMY;","lastModifiedDate":"2021-11-08"},{"lineNumber":215,"author":{"gitId":"xnajasho"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withReminder(VALID_REMINDER_AMY).build();","lastModifiedDate":"2021-11-08"},{"lineNumber":216,"author":{"gitId":"xnajasho"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-11-08"},{"lineNumber":217,"author":{"gitId":"xnajasho"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-11-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"RonaldTanSingWei":38,"xnajasho":57,"-":168}},{"path":"src/test/java/seedu/friendbook/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.FindCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"RonaldTanSingWei":6,"-":28}},{"path":"src/test/java/seedu/friendbook/logic/parser/FriendBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.commons.core.Messages.MESSAGE_COMMAND_CONTAINS_UPPERCASE;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.AddCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.EditCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.FindCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.ListCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"SajalVaishnav"},"content":"import seedu.friendbook.logic.commands.ProfileCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.testutil.PersonBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.testutil.PersonUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"RonaldTanSingWei"},"content":"public class FriendBookParserTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"xnajasho"},"content":"    private static final String ADD_COMMAND_WITH_UPPERCASE \u003d \"Add\";","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"xnajasho"},"content":"    private static final String EDIT_COMMAND_WITH_UPPERCASE \u003d \"eDit\";","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"xnajasho"},"content":"    private static final String DELETE_COMMAND_WITH_UPPERCASE \u003d \"deLete\";","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"xnajasho"},"content":"    private static final String CLEAR_COMMAND_WITH_UPPERCASE \u003d \"CLEAR\";","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"xnajasho"},"content":"    private static final String FIND_COMMAND_WITH_UPPERCASE \u003d \"FiND\";","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"xnajasho"},"content":"    private static final String FINDTAG_COMMAND_WITH_UPPERCASE \u003d \"findTag\";","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"xnajasho"},"content":"    private static final String LIST_COMMAND_WITH_UPPERCASE \u003d \"List\";","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"xnajasho"},"content":"    private static final String EXIT_COMMAND_WITH_UPPERCASE \u003d \"EXIT\";","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"xnajasho"},"content":"    private static final String HELP_COMMAND_WITH_UPPERCASE \u003d \"HelP\";","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"xnajasho"},"content":"    private static final String VIEW_COMMAND_WITH_UPPERCASE \u003d \"VIew\";","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"xnajasho"},"content":"    private static final String PROFILE_COMMAND_WITH_UPPERCASE \u003d \"PROFILe\";","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"xnajasho"},"content":"    private static final String INVALID_ADD_COMMAND_WITH_UPPERCASE \u003d \"Adding\";","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"xnajasho"},"content":"    private static final String INVALID_EDIT_COMMAND_WITH_UPPERCASE \u003d \"Editing\";","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"xnajasho"},"content":"    private static final String INVALID_UNKNOWN_COMMAND_WITH_UPPERCASE \u003d \"asxvFSD\";","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"RonaldTanSingWei"},"content":"    private final FriendBookParser parser \u003d new FriendBookParser();","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"xnajasho"},"content":"    public void parseCommand_view() throws Exception {","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"xnajasho"},"content":"        ViewCommand command \u003d (ViewCommand) parser.parseCommand(","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"xnajasho"},"content":"                ViewCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"xnajasho"},"content":"        assertEquals(new ViewCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"SajalVaishnav"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"SajalVaishnav"},"content":"    public void parseCommand_profile() throws Exception {","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"SajalVaishnav"},"content":"        assertTrue(parser.parseCommand(ProfileCommand.COMMAND_WORD + \" n/me\") instanceof ProfileCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":134,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":135,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":136,"author":{"gitId":"xnajasho"},"content":"    public void parseCommand_addCommandHasUpperCase_throwsParseException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":137,"author":{"gitId":"xnajasho"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_COMMAND_CONTAINS_UPPERCASE, \"add\"), () -\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":138,"author":{"gitId":"xnajasho"},"content":"                parser.parseCommand(ADD_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":139,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":140,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":141,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":142,"author":{"gitId":"xnajasho"},"content":"    public void parseCommand_editCommandHasUpperCase_throwsParseException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":143,"author":{"gitId":"xnajasho"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_COMMAND_CONTAINS_UPPERCASE, \"edit\"), () -\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":144,"author":{"gitId":"xnajasho"},"content":"                parser.parseCommand(EDIT_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":145,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":146,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":147,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":148,"author":{"gitId":"xnajasho"},"content":"    public void parseCommand_deleteCommandHasUpperCase_throwsParseException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":149,"author":{"gitId":"xnajasho"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_COMMAND_CONTAINS_UPPERCASE, \"delete\"), () -\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":150,"author":{"gitId":"xnajasho"},"content":"                parser.parseCommand(DELETE_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":151,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":152,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":153,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":154,"author":{"gitId":"xnajasho"},"content":"    public void parseCommand_clearCommandHasUpperCase_throwsParseException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":155,"author":{"gitId":"xnajasho"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_COMMAND_CONTAINS_UPPERCASE, \"clear\"), () -\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":156,"author":{"gitId":"xnajasho"},"content":"                parser.parseCommand(CLEAR_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":157,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":158,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":159,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":160,"author":{"gitId":"xnajasho"},"content":"    public void parseCommand_findCommandHasUpperCase_throwsParseException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":161,"author":{"gitId":"xnajasho"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_COMMAND_CONTAINS_UPPERCASE, \"find\"), () -\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":162,"author":{"gitId":"xnajasho"},"content":"                parser.parseCommand(FIND_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":163,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":164,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":165,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":166,"author":{"gitId":"xnajasho"},"content":"    public void parseCommand_findtagCommandHasUpperCase_throwsParseException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":167,"author":{"gitId":"xnajasho"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_COMMAND_CONTAINS_UPPERCASE, \"findtag\"), () -\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":168,"author":{"gitId":"xnajasho"},"content":"                parser.parseCommand(FINDTAG_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":169,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":170,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":171,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":172,"author":{"gitId":"xnajasho"},"content":"    public void parseCommand_listCommandHasUpperCase_throwsParseException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":173,"author":{"gitId":"xnajasho"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_COMMAND_CONTAINS_UPPERCASE, \"list\"), () -\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":174,"author":{"gitId":"xnajasho"},"content":"                parser.parseCommand(LIST_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":175,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":176,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":177,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":178,"author":{"gitId":"xnajasho"},"content":"    public void parseCommand_exitCommandHasUpperCase_throwsParseException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":179,"author":{"gitId":"xnajasho"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_COMMAND_CONTAINS_UPPERCASE, \"exit\"), () -\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":180,"author":{"gitId":"xnajasho"},"content":"                parser.parseCommand(EXIT_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":181,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":182,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":183,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":184,"author":{"gitId":"xnajasho"},"content":"    public void parseCommand_helpCommandHasUpperCase_throwsParseException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":185,"author":{"gitId":"xnajasho"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_COMMAND_CONTAINS_UPPERCASE, \"help\"), () -\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":186,"author":{"gitId":"xnajasho"},"content":"                parser.parseCommand(HELP_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":187,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":188,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":189,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":190,"author":{"gitId":"xnajasho"},"content":"    public void parseCommand_viewCommandHasUpperCase_throwsParseException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":191,"author":{"gitId":"xnajasho"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_COMMAND_CONTAINS_UPPERCASE, \"view\"), () -\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":192,"author":{"gitId":"xnajasho"},"content":"                parser.parseCommand(VIEW_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":193,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":194,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":195,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":196,"author":{"gitId":"xnajasho"},"content":"    public void parseCommand_profileCommandHasUpperCase_throwsParseException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":197,"author":{"gitId":"xnajasho"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_COMMAND_CONTAINS_UPPERCASE, \"profile\"), () -\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":198,"author":{"gitId":"xnajasho"},"content":"                parser.parseCommand(PROFILE_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":199,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":200,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":201,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":202,"author":{"gitId":"xnajasho"},"content":"    public void parseCommand_isAValidCommand() {","lastModifiedDate":"2021-11-02"},{"lineNumber":203,"author":{"gitId":"xnajasho"},"content":"        assertTrue(FriendBookParser.isAValidCommand(ADD_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":204,"author":{"gitId":"xnajasho"},"content":"        assertTrue(FriendBookParser.isAValidCommand(EDIT_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":205,"author":{"gitId":"xnajasho"},"content":"        assertTrue(FriendBookParser.isAValidCommand(DELETE_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":206,"author":{"gitId":"xnajasho"},"content":"        assertTrue(FriendBookParser.isAValidCommand(CLEAR_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":207,"author":{"gitId":"xnajasho"},"content":"        assertTrue(FriendBookParser.isAValidCommand(FIND_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":208,"author":{"gitId":"xnajasho"},"content":"        assertTrue(FriendBookParser.isAValidCommand(FINDTAG_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":209,"author":{"gitId":"xnajasho"},"content":"        assertTrue(FriendBookParser.isAValidCommand(LIST_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":210,"author":{"gitId":"xnajasho"},"content":"        assertTrue(FriendBookParser.isAValidCommand(EXIT_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":211,"author":{"gitId":"xnajasho"},"content":"        assertTrue(FriendBookParser.isAValidCommand(HELP_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":212,"author":{"gitId":"xnajasho"},"content":"        assertTrue(FriendBookParser.isAValidCommand(VIEW_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":213,"author":{"gitId":"xnajasho"},"content":"        assertTrue(FriendBookParser.isAValidCommand(PROFILE_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":214,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":215,"author":{"gitId":"xnajasho"},"content":"        assertFalse(FriendBookParser.isAValidCommand(INVALID_ADD_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":216,"author":{"gitId":"xnajasho"},"content":"        assertFalse(FriendBookParser.isAValidCommand(INVALID_EDIT_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":217,"author":{"gitId":"xnajasho"},"content":"        assertFalse(FriendBookParser.isAValidCommand(INVALID_UNKNOWN_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":218,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":219,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":220,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":221,"author":{"gitId":"xnajasho"},"content":"    public void parseCommand_hasUpperCase() {","lastModifiedDate":"2021-11-02"},{"lineNumber":222,"author":{"gitId":"xnajasho"},"content":"        assertTrue(FriendBookParser.hasUpperCase(ADD_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":223,"author":{"gitId":"xnajasho"},"content":"        assertTrue(FriendBookParser.hasUpperCase(EDIT_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":224,"author":{"gitId":"xnajasho"},"content":"        assertTrue(FriendBookParser.hasUpperCase(DELETE_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":225,"author":{"gitId":"xnajasho"},"content":"        assertTrue(FriendBookParser.hasUpperCase(CLEAR_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":226,"author":{"gitId":"xnajasho"},"content":"        assertTrue(FriendBookParser.hasUpperCase(FIND_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":227,"author":{"gitId":"xnajasho"},"content":"        assertTrue(FriendBookParser.hasUpperCase(FINDTAG_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":228,"author":{"gitId":"xnajasho"},"content":"        assertTrue(FriendBookParser.hasUpperCase(LIST_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":229,"author":{"gitId":"xnajasho"},"content":"        assertTrue(FriendBookParser.hasUpperCase(EXIT_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":230,"author":{"gitId":"xnajasho"},"content":"        assertTrue(FriendBookParser.hasUpperCase(HELP_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":231,"author":{"gitId":"xnajasho"},"content":"        assertTrue(FriendBookParser.hasUpperCase(VIEW_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":232,"author":{"gitId":"xnajasho"},"content":"        assertTrue(FriendBookParser.hasUpperCase(PROFILE_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":233,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":234,"author":{"gitId":"xnajasho"},"content":"        assertFalse(FriendBookParser.hasUpperCase(INVALID_ADD_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":235,"author":{"gitId":"xnajasho"},"content":"        assertFalse(FriendBookParser.hasUpperCase(INVALID_EDIT_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":236,"author":{"gitId":"xnajasho"},"content":"        assertFalse(FriendBookParser.hasUpperCase(INVALID_UNKNOWN_COMMAND_WITH_UPPERCASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":237,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":238,"author":{"gitId":"xnajasho"},"content":"        assertFalse(FriendBookParser.hasUpperCase(\"add\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":239,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"RonaldTanSingWei":22,"xnajasho":133,"-":79,"SajalVaishnav":6}},{"path":"src/test/java/seedu/friendbook/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Address;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.person.Avatar;","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.person.Birthday;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.person.Description;","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Email;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.person.TeleHandle;","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.reminder.Reminder;","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"xnajasho"},"content":"    private static final String","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"xnajasho"},"content":"            INVALID_NAME_WITH_FIELDS_IN_SQUARE_BRACKETS \u003d \"Rachel [desc/DESCRIPTION] [avatar/AVATAR] [r/REMINDER]\";","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"xnajasho"},"content":"    private static final String","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"xnajasho"},"content":"            INVALID_PHONE_WITH_FIELDS_IN_SQUARE_BRACKETS \u003d \"12314 [tele/TELEHANDLE] [avatar/AVATAR] [t/TAG]\";","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"xnajasho"},"content":"    private static final String","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"xnajasho"},"content":"            INVALID_ADDRESS_WITH_FIELDS_IN_SQUARE_BRACKETS \u003d \"11 Street [tele/TELEHANDLE] [avatar/AVATAR] [t/TAG]\";","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"xnajasho"},"content":"    private static final String","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"xnajasho"},"content":"            INVALID_EMAIL_WITH_FIELDS_IN_SQUARE_BRACKETS \u003d \"test@example.com [tele/TELEHANDLE] [t/TAG]\";","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"xnajasho"},"content":"    private static final String","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"xnajasho"},"content":"            INVALID_TAG_WITH_FIELDS_IN_SQUARE_BRACKETS \u003d \"12314 [tele/TELEHANDLE] [avatar/AVATAR]\";","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"xnajasho"},"content":"    private static final String INVALID_BIRTHDAY_FORMAT \u003d \"1993/02/19\";","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"xnajasho"},"content":"    private static final String INVALID_BIRTHDAY_VALUES \u003d \"2021-09-31\";","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"xnajasho"},"content":"    private static final String INVALID_BIRTHDAY_NOT_LEAP_YEAR \u003d \"2021-02-29\";","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"xnajasho"},"content":"    private static final String","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"xnajasho"},"content":"            INVALID_BIRTHDAY_WITH_FIELDS_IN_SQUARE_BRACKETS \u003d \"12314 [desc/DESCRIPTION]\";","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"xnajasho"},"content":"    private static final String INVALID_AVATAR \u003d \"21\";","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"xnajasho"},"content":"    private static final String","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"xnajasho"},"content":"            INVALID_AVATAR_WITH_FIELDS_IN_SQUARE_BRACKETS \u003d \"1 [desc/DESCRIPTION] [t/TAG] [tele/TELEHANDLE]\";","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"xnajasho"},"content":"    private static final String INVALID_TELEHANDLE \u003d \"lol\";","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"xnajasho"},"content":"    private static final String","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"xnajasho"},"content":"            INVALID_TELEHANDLE_WITH_FIELDS_IN_SQUARE_BRACKETS \u003d \"kimberlymaz [tele/TELEHANDLE] [t/TAG]\";","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"xnajasho"},"content":"    private static final String","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"xnajasho"},"content":"            INVALID_DESCRIPTION_WITH_FIELDS_IN_SQUARE_BRACKETS \u003d \"funny guy [desc/DESCRIPTION] [t/TAG]\";","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"xnajasho"},"content":"    private static final String INVALID_REMINDER \u003d \"Onoff\";","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"xnajasho"},"content":"    private static final String","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"xnajasho"},"content":"            INVALID_REMINDER_WITH_FIELDS_IN_SQUARE_BRACKETS \u003d \"off [desc/DESCRIPTION] [t/TAG] [tele/TELEHANDLE]\";","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"xnajasho"},"content":"    private static final String VALID_BIRTHDAY \u003d \"1994-04-10\";","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"xnajasho"},"content":"    private static final String VALID_AVATAR \u003d \"5\";","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"xnajasho"},"content":"    private static final String VALID_TELEHANDLE \u003d \"sgcickenrice\";","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"xnajasho"},"content":"    private static final String VALID_DESCRIPTION \u003d \"loves to eat chicken rice\";","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"xnajasho"},"content":"    private static final String VALID_REMINDER \u003d \"off\";","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":105,"author":{"gitId":"xnajasho"},"content":"    // ------------------------------ FIELD: NAME ---------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":117,"author":{"gitId":"xnajasho"},"content":"    public void parseName_invalidValueWithFieldsInSquareBrackets_throwsParseException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":118,"author":{"gitId":"xnajasho"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME_WITH_FIELDS_IN_SQUARE_BRACKETS));","lastModifiedDate":"2021-11-01"},{"lineNumber":119,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":120,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"xnajasho"},"content":"    // ------------------------------ FIELD: PHONE ---------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"xnajasho"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone(null));","lastModifiedDate":"2021-11-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":146,"author":{"gitId":"xnajasho"},"content":"    public void parsePhone_invalidValueWithFieldsInSquareBrackets_throwsParseException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":147,"author":{"gitId":"xnajasho"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE_WITH_FIELDS_IN_SQUARE_BRACKETS));","lastModifiedDate":"2021-11-01"},{"lineNumber":148,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":149,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"xnajasho"},"content":"    // ------------------------------ FIELD: ADDRESS ---------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"xnajasho"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress(null));","lastModifiedDate":"2021-11-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":170,"author":{"gitId":"xnajasho"},"content":"    public void parseAddress_invalidValueWithFieldsInSquareBrackets_throwsParseException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":171,"author":{"gitId":"xnajasho"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":172,"author":{"gitId":"xnajasho"},"content":"                ParserUtil.parseAddress(INVALID_ADDRESS_WITH_FIELDS_IN_SQUARE_BRACKETS));","lastModifiedDate":"2021-11-01"},{"lineNumber":173,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":174,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"xnajasho"},"content":"    // ------------------------------ FIELD: EMAIL ---------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"xnajasho"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail(null));","lastModifiedDate":"2021-11-01"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":200,"author":{"gitId":"xnajasho"},"content":"    public void parseEmail_invalidValueWithFieldsInSquareBrackets_throwsParseException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":201,"author":{"gitId":"xnajasho"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL_WITH_FIELDS_IN_SQUARE_BRACKETS));","lastModifiedDate":"2021-11-01"},{"lineNumber":202,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":203,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":217,"author":{"gitId":"xnajasho"},"content":"    // ------------------------------ FIELD: BIRTHDAY ---------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":218,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":219,"author":{"gitId":"xnajasho"},"content":"    public void parseBirthday_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":220,"author":{"gitId":"xnajasho"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseBirthday(null));","lastModifiedDate":"2021-11-01"},{"lineNumber":221,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":222,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":223,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":224,"author":{"gitId":"xnajasho"},"content":"    public void parseBirthday_invalidFormat_throwsParseException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":225,"author":{"gitId":"xnajasho"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseBirthday(INVALID_BIRTHDAY_FORMAT));","lastModifiedDate":"2021-11-01"},{"lineNumber":226,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":227,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":228,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":229,"author":{"gitId":"xnajasho"},"content":"    public void parseBirthday_invalidValue_throwsParseException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":230,"author":{"gitId":"xnajasho"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseBirthday(INVALID_BIRTHDAY_VALUES));","lastModifiedDate":"2021-11-01"},{"lineNumber":231,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":232,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":233,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":234,"author":{"gitId":"xnajasho"},"content":"    public void parseBirthday_invalidValueNotLeapYear_throwsParseException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":235,"author":{"gitId":"xnajasho"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseBirthday(INVALID_BIRTHDAY_NOT_LEAP_YEAR));","lastModifiedDate":"2021-11-01"},{"lineNumber":236,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":237,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":238,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":239,"author":{"gitId":"xnajasho"},"content":"    public void parseBirthday_invalidValueWithFieldsInSquareBrackets_throwsParseException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":240,"author":{"gitId":"xnajasho"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":241,"author":{"gitId":"xnajasho"},"content":"                ParserUtil.parseBirthday(INVALID_BIRTHDAY_WITH_FIELDS_IN_SQUARE_BRACKETS));","lastModifiedDate":"2021-11-01"},{"lineNumber":242,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":243,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":244,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":245,"author":{"gitId":"xnajasho"},"content":"    public void parseBirthday_validValueWithoutWhitespace_returnsBirthday() throws Exception {","lastModifiedDate":"2021-11-01"},{"lineNumber":246,"author":{"gitId":"xnajasho"},"content":"        Birthday expectedBirthday \u003d new Birthday(VALID_BIRTHDAY);","lastModifiedDate":"2021-11-01"},{"lineNumber":247,"author":{"gitId":"xnajasho"},"content":"        assertEquals(expectedBirthday, ParserUtil.parseBirthday(VALID_BIRTHDAY));","lastModifiedDate":"2021-11-01"},{"lineNumber":248,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":249,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":250,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":251,"author":{"gitId":"xnajasho"},"content":"    public void parseBirthday_validValueWithWhitespace_returnsTrimmedBirthday() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":252,"author":{"gitId":"xnajasho"},"content":"        String birthdayWithWhitespace \u003d WHITESPACE + VALID_BIRTHDAY + WHITESPACE;","lastModifiedDate":"2021-11-01"},{"lineNumber":253,"author":{"gitId":"xnajasho"},"content":"        Birthday expectedBirthday \u003d new Birthday(VALID_BIRTHDAY);","lastModifiedDate":"2021-10-06"},{"lineNumber":254,"author":{"gitId":"xnajasho"},"content":"        assertEquals(expectedBirthday, ParserUtil.parseBirthday(birthdayWithWhitespace));","lastModifiedDate":"2021-11-01"},{"lineNumber":255,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":256,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":257,"author":{"gitId":"xnajasho"},"content":"    // ------------------------------ FIELD: AVATAR ---------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":258,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":259,"author":{"gitId":"xnajasho"},"content":"    public void parseAvatar_null_throwsNullPointerException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":260,"author":{"gitId":"xnajasho"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAvatar(null));","lastModifiedDate":"2021-11-01"},{"lineNumber":261,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":262,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":263,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":264,"author":{"gitId":"xnajasho"},"content":"    public void parseAvatar_invalidValue_throwsParseException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":265,"author":{"gitId":"xnajasho"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAvatar(INVALID_AVATAR));","lastModifiedDate":"2021-11-01"},{"lineNumber":266,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":267,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":268,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":269,"author":{"gitId":"xnajasho"},"content":"    public void parseAvatar_invalidValueWithFieldsInSquareBrackets_throwsParseException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":270,"author":{"gitId":"xnajasho"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAvatar(INVALID_AVATAR_WITH_FIELDS_IN_SQUARE_BRACKETS));","lastModifiedDate":"2021-11-01"},{"lineNumber":271,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":272,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":273,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":274,"author":{"gitId":"xnajasho"},"content":"    public void parseAvatar_validValueWithoutWhitespace_returnsAvatar() throws Exception {","lastModifiedDate":"2021-11-01"},{"lineNumber":275,"author":{"gitId":"xnajasho"},"content":"        Avatar expectedAvatar \u003d new Avatar(VALID_AVATAR);","lastModifiedDate":"2021-11-01"},{"lineNumber":276,"author":{"gitId":"xnajasho"},"content":"        assertEquals(expectedAvatar, ParserUtil.parseAvatar(VALID_AVATAR));","lastModifiedDate":"2021-11-01"},{"lineNumber":277,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":278,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":279,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":280,"author":{"gitId":"xnajasho"},"content":"    public void parseAvatar_validValueWithWhitespace_returnsTrimmedAvatar() throws Exception {","lastModifiedDate":"2021-11-01"},{"lineNumber":281,"author":{"gitId":"xnajasho"},"content":"        String avatarWithWhitespace \u003d WHITESPACE + VALID_AVATAR + WHITESPACE;","lastModifiedDate":"2021-11-01"},{"lineNumber":282,"author":{"gitId":"xnajasho"},"content":"        Avatar expectedAvatar \u003d new Avatar(VALID_AVATAR);","lastModifiedDate":"2021-11-01"},{"lineNumber":283,"author":{"gitId":"xnajasho"},"content":"        assertEquals(expectedAvatar, ParserUtil.parseAvatar(avatarWithWhitespace));","lastModifiedDate":"2021-11-01"},{"lineNumber":284,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":285,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":286,"author":{"gitId":"xnajasho"},"content":"    // ------------------------------ FIELD: TELEHANDLE ---------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":287,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":288,"author":{"gitId":"xnajasho"},"content":"    public void parseTeleHandle_null_throwsNullPointerException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":289,"author":{"gitId":"xnajasho"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTeleHandle(null));","lastModifiedDate":"2021-11-01"},{"lineNumber":290,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":291,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":292,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":293,"author":{"gitId":"xnajasho"},"content":"    public void parseTeleHandle_invalidValue_throwsParseException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":294,"author":{"gitId":"xnajasho"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTeleHandle(INVALID_TELEHANDLE));","lastModifiedDate":"2021-11-01"},{"lineNumber":295,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":296,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":297,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":298,"author":{"gitId":"xnajasho"},"content":"    public void parseTeleHandle_invalidValueWithFieldsInSquareBrackets_throwsParseException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":299,"author":{"gitId":"xnajasho"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":300,"author":{"gitId":"xnajasho"},"content":"                ParserUtil.parseTeleHandle(INVALID_TELEHANDLE_WITH_FIELDS_IN_SQUARE_BRACKETS));","lastModifiedDate":"2021-11-01"},{"lineNumber":301,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":302,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":303,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":304,"author":{"gitId":"xnajasho"},"content":"    public void parseTeleHandle_validValueWithoutWhitespace_returnsTeleHandle() throws Exception {","lastModifiedDate":"2021-11-01"},{"lineNumber":305,"author":{"gitId":"xnajasho"},"content":"        TeleHandle expectedTeleHandle \u003d new TeleHandle(VALID_TELEHANDLE);","lastModifiedDate":"2021-11-01"},{"lineNumber":306,"author":{"gitId":"xnajasho"},"content":"        assertEquals(expectedTeleHandle, ParserUtil.parseTeleHandle(VALID_TELEHANDLE));","lastModifiedDate":"2021-11-01"},{"lineNumber":307,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":308,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":309,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":310,"author":{"gitId":"xnajasho"},"content":"    public void parseTeleHandle_validValueWithWhitespace_returnsTrimmedTeleHandle() throws Exception {","lastModifiedDate":"2021-11-01"},{"lineNumber":311,"author":{"gitId":"xnajasho"},"content":"        String telehandleWithWhitespace \u003d WHITESPACE + VALID_TELEHANDLE + WHITESPACE;","lastModifiedDate":"2021-11-01"},{"lineNumber":312,"author":{"gitId":"xnajasho"},"content":"        TeleHandle expectedTeleHandle \u003d new TeleHandle(VALID_TELEHANDLE);","lastModifiedDate":"2021-11-01"},{"lineNumber":313,"author":{"gitId":"xnajasho"},"content":"        assertEquals(expectedTeleHandle, ParserUtil.parseTeleHandle(telehandleWithWhitespace));","lastModifiedDate":"2021-11-01"},{"lineNumber":314,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":315,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":316,"author":{"gitId":"xnajasho"},"content":"    // ------------------------------ FIELD: DESCRIPTION ---------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":317,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":318,"author":{"gitId":"xnajasho"},"content":"    public void parseDescription_null_throwsNullPointerException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":319,"author":{"gitId":"xnajasho"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDescription(null));","lastModifiedDate":"2021-11-01"},{"lineNumber":320,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":321,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":322,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":323,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":324,"author":{"gitId":"xnajasho"},"content":"    public void parseDescription_invalidValueWithFieldsInSquareBrackets_throwsParseException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":325,"author":{"gitId":"xnajasho"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":326,"author":{"gitId":"xnajasho"},"content":"                ParserUtil.parseDescription(INVALID_DESCRIPTION_WITH_FIELDS_IN_SQUARE_BRACKETS));","lastModifiedDate":"2021-11-01"},{"lineNumber":327,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":328,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":329,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":330,"author":{"gitId":"xnajasho"},"content":"    public void parseDescription_validValueWithoutWhitespace_returnsDescription() throws Exception {","lastModifiedDate":"2021-11-01"},{"lineNumber":331,"author":{"gitId":"xnajasho"},"content":"        Description expectedDescription \u003d new Description(VALID_DESCRIPTION);","lastModifiedDate":"2021-11-01"},{"lineNumber":332,"author":{"gitId":"xnajasho"},"content":"        assertEquals(expectedDescription, ParserUtil.parseDescription(VALID_DESCRIPTION));","lastModifiedDate":"2021-11-01"},{"lineNumber":333,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":334,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":335,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":336,"author":{"gitId":"xnajasho"},"content":"    public void parseDescription_validValueWithWhitespace_returnsTrimmedDescription() throws Exception {","lastModifiedDate":"2021-11-01"},{"lineNumber":337,"author":{"gitId":"xnajasho"},"content":"        String descriptionWithWhitespace \u003d WHITESPACE + VALID_DESCRIPTION + WHITESPACE;","lastModifiedDate":"2021-11-01"},{"lineNumber":338,"author":{"gitId":"xnajasho"},"content":"        Description expectedDescription \u003d new Description(VALID_DESCRIPTION);","lastModifiedDate":"2021-11-01"},{"lineNumber":339,"author":{"gitId":"xnajasho"},"content":"        assertEquals(expectedDescription, ParserUtil.parseDescription(descriptionWithWhitespace));","lastModifiedDate":"2021-11-01"},{"lineNumber":340,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":341,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":342,"author":{"gitId":"xnajasho"},"content":"    // ------------------------------ FIELD: REMINDER ---------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":343,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":344,"author":{"gitId":"xnajasho"},"content":"    public void parseReminder_null_throwsNullPointerException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":345,"author":{"gitId":"xnajasho"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseReminder(null));","lastModifiedDate":"2021-11-01"},{"lineNumber":346,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":347,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":348,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":349,"author":{"gitId":"xnajasho"},"content":"    public void parseReminder_invalidValue_throwsParseException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":350,"author":{"gitId":"xnajasho"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseReminder(INVALID_REMINDER));","lastModifiedDate":"2021-11-01"},{"lineNumber":351,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":352,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":353,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":354,"author":{"gitId":"xnajasho"},"content":"    public void parseReminder_invalidValueWithFieldsInSquareBrackets_throwsParseException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":355,"author":{"gitId":"xnajasho"},"content":"        assertThrows(ParseException.class, () -\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":356,"author":{"gitId":"xnajasho"},"content":"                ParserUtil.parseReminder(INVALID_REMINDER_WITH_FIELDS_IN_SQUARE_BRACKETS));","lastModifiedDate":"2021-11-01"},{"lineNumber":357,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":358,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":359,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":360,"author":{"gitId":"xnajasho"},"content":"    public void parseReminder_validValueWithoutWhitespace_returnsReminder() throws Exception {","lastModifiedDate":"2021-11-01"},{"lineNumber":361,"author":{"gitId":"xnajasho"},"content":"        Reminder expectedReminder \u003d new Reminder(VALID_REMINDER);","lastModifiedDate":"2021-11-01"},{"lineNumber":362,"author":{"gitId":"xnajasho"},"content":"        assertEquals(expectedReminder, ParserUtil.parseReminder(VALID_REMINDER));","lastModifiedDate":"2021-11-01"},{"lineNumber":363,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":364,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":365,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":366,"author":{"gitId":"xnajasho"},"content":"    public void parseReminder_validValueWithWhitespace_returnsTrimmedReminder() throws Exception {","lastModifiedDate":"2021-11-01"},{"lineNumber":367,"author":{"gitId":"xnajasho"},"content":"        String reminderWithWhitespace \u003d WHITESPACE + VALID_REMINDER + WHITESPACE;","lastModifiedDate":"2021-11-01"},{"lineNumber":368,"author":{"gitId":"xnajasho"},"content":"        Reminder expectedReminder \u003d new Reminder(VALID_REMINDER);","lastModifiedDate":"2021-11-01"},{"lineNumber":369,"author":{"gitId":"xnajasho"},"content":"        assertEquals(expectedReminder, ParserUtil.parseReminder(reminderWithWhitespace));","lastModifiedDate":"2021-11-01"},{"lineNumber":370,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":371,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":372,"author":{"gitId":"xnajasho"},"content":"    // ------------------------------ FIELD: TAG ---------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":374,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":379,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":383,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":384,"author":{"gitId":"xnajasho"},"content":"    public void parseTag_invalidValueWithFieldsInSquareBrackets_throwsParseException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":385,"author":{"gitId":"xnajasho"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG_WITH_FIELDS_IN_SQUARE_BRACKETS));","lastModifiedDate":"2021-11-01"},{"lineNumber":386,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":387,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":390,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":391,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":392,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":394,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":396,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":397,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":398,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":412,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":413,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":417,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":418,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":419,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":421,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":422,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":423,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"RonaldTanSingWei":10,"xnajasho":235,"-":178}},{"path":"src/test/java/seedu/friendbook/logic/parser/ProfileCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SajalVaishnav"},"content":"package seedu.friendbook.logic.parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"SajalVaishnav"},"content":"import static seedu.friendbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"SajalVaishnav"},"content":"import static seedu.friendbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"SajalVaishnav"},"content":"import static seedu.friendbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"SajalVaishnav"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"SajalVaishnav"},"content":"import seedu.friendbook.logic.commands.ProfileCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"SajalVaishnav"},"content":"import seedu.friendbook.model.person.Name;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"SajalVaishnav"},"content":"public class ProfileCommandParserTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"SajalVaishnav"},"content":"    private ProfileCommandParser parser \u003d new ProfileCommandParser();","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"SajalVaishnav"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"SajalVaishnav"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"SajalVaishnav"},"content":"        assertParseFailure(parser, \" \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"SajalVaishnav"},"content":"                ProfileCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"SajalVaishnav"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"SajalVaishnav"},"content":"    public void parse_validArgs_returnsProfileCommand() {","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"SajalVaishnav"},"content":"        ProfileCommand expectedProfileCommand \u003d new ProfileCommand(new Name(\"imhere\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"SajalVaishnav"},"content":"        assertParseSuccess(parser, \" n/imhere\", expectedProfileCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"SajalVaishnav"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"SajalVaishnav":28}},{"path":"src/test/java/seedu/friendbook/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package seedu.friendbook.logic.parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.logic.commands.ViewCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":" * outside of the ViewCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":" * same path through the ViewCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"xnajasho"},"content":"    private ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"xnajasho"},"content":"    public void parse_validArgs_returnsViewCommand() {","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"xnajasho"},"content":"        assertParseSuccess(parser, \"1\", new ViewCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"xnajasho"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"xnajasho"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"xnajasho":32}},{"path":"src/test/java/seedu/friendbook/model/FriendBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalPersons.getTypicalFriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.testutil.PersonBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"RonaldTanSingWei"},"content":"public class FriendBookTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"RonaldTanSingWei"},"content":"    private final FriendBook friendBook \u003d new FriendBook();","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertEquals(Collections.emptyList(), friendBook.getPersonList());","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertThrows(NullPointerException.class, () -\u003e friendBook.resetData(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void resetData_withValidReadOnlyFriendBook_replacesData() {","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"RonaldTanSingWei"},"content":"        FriendBook newData \u003d getTypicalFriendBook();","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"RonaldTanSingWei"},"content":"        friendBook.resetData(newData);","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertEquals(newData, friendBook);","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"RonaldTanSingWei"},"content":"        FriendBookStub newData \u003d new FriendBookStub(newPersons);","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e friendBook.resetData(newData));","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertThrows(NullPointerException.class, () -\u003e friendBook.hasPerson(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void hasPerson_personNotInFriendBook_returnsFalse() {","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertFalse(friendBook.hasPerson(ALICE));","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void hasPerson_personInFriendBook_returnsTrue() {","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"RonaldTanSingWei"},"content":"        friendBook.addPerson(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertTrue(friendBook.hasPerson(ALICE));","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void hasPerson_personWithSameIdentityFieldsInFriendBook_returnsTrue() {","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"RonaldTanSingWei"},"content":"        friendBook.addPerson(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertTrue(friendBook.hasPerson(editedAlice));","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e friendBook.getPersonList().remove(0));","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"RonaldTanSingWei"},"content":"     * A stub ReadOnlyFriendBook whose persons list can violate interface constraints.","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"RonaldTanSingWei"},"content":"    private static class FriendBookStub implements ReadOnlyFriendBook {","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"xnajasho"},"content":"        private final ObservableList\u003cPerson\u003e personsCopy \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"xnajasho"},"content":"        private final Comparator\u003cPerson\u003e comparator \u003d Comparator.comparingInt(Person::getDaysToRemainingBirthday);","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"RonaldTanSingWei"},"content":"        FriendBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"xnajasho"},"content":"            this.personsCopy.setAll(persons);","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"xnajasho"},"content":"            this.personsCopy.sort(comparator);","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"xnajasho"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"xnajasho"},"content":"        public ObservableList\u003cPerson\u003e getSortedPersonListByBirthday() {","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"xnajasho"},"content":"            return personsCopy;","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"xnajasho"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"RonaldTanSingWei":32,"xnajasho":10,"-":70}},{"path":"src/test/java/seedu/friendbook/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.GuiSettings;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.testutil.FriendBookBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertEquals(new FriendBook(), new FriendBook(modelManager.getFriendBook()));","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"RonaldTanSingWei"},"content":"        userPrefs.setFriendBookFilePath(Paths.get(\"friend/book/file/path\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"RonaldTanSingWei"},"content":"        userPrefs.setFriendBookFilePath(Paths.get(\"new/friend/book/file/path\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void setFriendBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setFriendBookFilePath(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void setFriendBookFilePath_validPath_setsFriendBookFilePath() {","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"RonaldTanSingWei"},"content":"        Path path \u003d Paths.get(\"friend/book/file/path\");","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"RonaldTanSingWei"},"content":"        modelManager.setFriendBookFilePath(path);","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertEquals(path, modelManager.getFriendBookFilePath());","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void hasPerson_personNotInFriendBook_returnsFalse() {","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void hasPerson_personInFriendBook_returnsTrue() {","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"xnajasho"},"content":"    public void getFilteredPersonListSortedByBirthday_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"xnajasho"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"xnajasho"},"content":"                modelManager.getFilteredPersonListSortedByBirthday().remove(0));","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"RonaldTanSingWei"},"content":"        FriendBook friendBook \u003d new FriendBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"RonaldTanSingWei"},"content":"        FriendBook differentFriendBook \u003d new FriendBook();","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"RonaldTanSingWei"},"content":"        modelManager \u003d new ModelManager(friendBook, userPrefs);","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"RonaldTanSingWei"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(friendBook, userPrefs);","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"RonaldTanSingWei"},"content":"        // different friendBook -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentFriendBook, userPrefs)));","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":128,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertFalse(modelManager.equals(new ModelManager(friendBook, userPrefs)));","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"RonaldTanSingWei"},"content":"        differentUserPrefs.setFriendBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertFalse(modelManager.equals(new ModelManager(friendBook, differentUserPrefs)));","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"RonaldTanSingWei":28,"xnajasho":6,"-":104}},{"path":"src/test/java/seedu/friendbook/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void setFriendBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setFriendBookFilePath(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"SajalVaishnav"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"SajalVaishnav"},"content":"    public void setUsername_nullUsername_throwsNullPointerException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"SajalVaishnav"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"SajalVaishnav"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setUsername(null));","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"RonaldTanSingWei":4,"-":17,"SajalVaishnav":4}},{"path":"src/test/java/seedu/friendbook/model/person/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"RonaldTanSingWei":2,"-":23}},{"path":"src/test/java/seedu/friendbook/model/person/AvatarTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pss-coder"},"content":"package seedu.friendbook.model.person;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"pss-coder"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"pss-coder"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"public class AvatarTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Avatar(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"pss-coder"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"        String invalidAvatar \u003d \"25\";","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"pss-coder"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Avatar(invalidAvatar));","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"pss-coder"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"pss-coder"},"content":"    public void isValidAvatar() {","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"pss-coder"},"content":"        // null name","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"pss-coder"},"content":"        assertThrows(NullPointerException.class, () -\u003e Avatar.isValidAvatar(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"pss-coder"},"content":"        // invalid name","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"xnajasho"},"content":"        assertFalse(Avatar.isValidAvatar(\"01\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"xnajasho"},"content":"        assertFalse(Avatar.isValidAvatar(\"24\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"xnajasho"},"content":"        assertFalse(Avatar.isValidAvatar(\"-1\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"xnajasho"},"content":"        assertFalse(Avatar.isValidAvatar(\"00\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"pss-coder"},"content":"        // valid name","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"xnajasho"},"content":"        assertTrue(Avatar.isValidAvatar(\"\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"pss-coder"},"content":"        assertTrue(Avatar.isValidAvatar(\"1\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"pss-coder"},"content":"        assertTrue(Avatar.isValidAvatar(\"12\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"pss-coder"},"content":"        assertTrue(Avatar.isValidAvatar(\"20\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"pss-coder"},"content":"        assertTrue(Avatar.isValidAvatar(\"0\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"pss-coder"},"content":"        assertTrue(Avatar.isValidAvatar(\"4\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"xnajasho":6,"pss-coder":34}},{"path":"src/test/java/seedu/friendbook/model/person/BirthdayTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package seedu.friendbook.model.person;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.person.exceptions.BirthdayHasNotOccurredException;","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"public class BirthdayTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Birthday(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"xnajasho"},"content":"    public void constructor_invalidBirthday_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"xnajasho"},"content":"        String invalidBirthday \u003d \"1993/04/20\";","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"xnajasho"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Birthday(invalidBirthday));","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"xnajasho"},"content":"    public void isValidBirthday() {","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"xnajasho"},"content":"        // null birthday","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"xnajasho"},"content":"        assertThrows(NullPointerException.class, () -\u003e Birthday.isValidFormat(null));","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"xnajasho"},"content":"        // invalid birthday formats","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"xnajasho"},"content":"        assertFalse(Birthday.isValidFormat(\"\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"xnajasho"},"content":"        assertFalse(Birthday.isValidFormat(\"1993/04/20\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"xnajasho"},"content":"        assertFalse(Birthday.isValidFormat(\"1994/20/04\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"xnajasho"},"content":"        assertFalse(Birthday.isValidFormat(\"20/04/98\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"xnajasho"},"content":"        assertFalse(Birthday.isValidFormat(\"20/04/1998\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"xnajasho"},"content":"        assertFalse(Birthday.isValidFormat(\"26 Oct 1998\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"xnajasho"},"content":"        // valid birthdays formats","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"xnajasho"},"content":"        assertTrue(Birthday.isValidFormat(\"1994-04-15\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"xnajasho"},"content":"        assertTrue(Birthday.isValidFormat(\"2021-03-25\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"xnajasho"},"content":"        assertTrue(Birthday.isValidFormat(\"2021-10-05\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"xnajasho"},"content":"        assertTrue(Birthday.isValidFormat(\"2016-04-29\")); // leap year","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"xnajasho"},"content":"    public void invalidValuesCheck() {","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"xnajasho"},"content":"        assertThrows(DateTimeException.class, () -\u003e Birthday.invalidValuesCheck(\"2010-04-34\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"xnajasho"},"content":"        assertThrows(DateTimeException.class, () -\u003e Birthday.invalidValuesCheck(\"2015-02-29\")); // not leap year","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"xnajasho"},"content":"        // invalid DoM for September, only up to 30","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"xnajasho"},"content":"        assertThrows(DateTimeException.class, () -\u003e Birthday.invalidValuesCheck(\"2021-09-31\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"xnajasho"},"content":"        // Invalid DoM field","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"xnajasho"},"content":"        assertThrows(DateTimeException.class, () -\u003e Birthday.invalidValuesCheck(\"2021-09-00\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"xnajasho"},"content":"        // invalid Month fields","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"xnajasho"},"content":"        assertThrows(DateTimeException.class, () -\u003e Birthday.invalidValuesCheck(\"2021-13-12\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"xnajasho"},"content":"        assertThrows(DateTimeException.class, () -\u003e Birthday.invalidValuesCheck(\"2021-00-12\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"xnajasho"},"content":"        // Birthday has yet to occur but Invalid values are thrown first","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"xnajasho"},"content":"        assertThrows(DateTimeException.class, () -\u003e Birthday.invalidValuesCheck(\"2022-00-12\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"xnajasho"},"content":"        assertThrows(DateTimeException.class, () -\u003e Birthday.invalidValuesCheck(\"2022-01-32\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"xnajasho"},"content":"        // invalid Birthdays as they have yet to occur","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"xnajasho"},"content":"        assertThrows(BirthdayHasNotOccurredException.class, () -\u003e Birthday.invalidValuesCheck(\"2022-04-15\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"xnajasho"},"content":"        assertThrows(BirthdayHasNotOccurredException.class, () -\u003e Birthday.invalidValuesCheck(\"2022-02-12\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"xnajasho"},"content":"        assertThrows(BirthdayHasNotOccurredException.class, () -\u003e Birthday.invalidValuesCheck(\"2023-12-30\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"xnajasho"},"content":"    public void hasBirthdayPassed() {","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":77,"author":{"gitId":"xnajasho"},"content":"        assertTrue(Birthday.hasBirthdayPassed(LocalDate.of(2021, 9, 22)));","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"xnajasho"},"content":"        assertTrue(Birthday.hasBirthdayPassed(LocalDate.of(2021, 10, 31)));","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"xnajasho"},"content":"        assertFalse(Birthday.hasBirthdayPassed(LocalDate.of(2050, 12, 31)));","lastModifiedDate":"2021-11-08"},{"lineNumber":81,"author":{"gitId":"xnajasho"},"content":"        assertFalse(Birthday.hasBirthdayPassed(LocalDate.of(2099, 2, 13)));","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"xnajasho"},"content":"        assertFalse(Birthday.hasBirthdayPassed(LocalDate.of(2050, 10, 25)));","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"xnajasho"},"content":"        assertFalse(Birthday.hasBirthdayPassed(LocalDate.of(2045, 5, 2)));","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"xnajasho"},"content":"    public void getActualDate() {","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"xnajasho"},"content":"        Birthday testBirthday \u003d new Birthday(\"2021-04-15\");","lastModifiedDate":"2021-11-01"},{"lineNumber":89,"author":{"gitId":"xnajasho"},"content":"        assertEquals(\"Apr 15 2021\", testBirthday.getActualDate());","lastModifiedDate":"2021-11-01"},{"lineNumber":90,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"xnajasho"},"content":"    public void calculateAgeTest() {","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"xnajasho"},"content":"        Birthday birthdayPassed \u003d new Birthday(\"1994-05-20\");","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"xnajasho"},"content":"        Birthday birthdayUpcoming \u003d new Birthday(\"1995-12-28\");","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"xnajasho"},"content":"        assertEquals(27, birthdayPassed.calculateAge());","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"xnajasho"},"content":"        assertEquals(25, birthdayUpcoming.calculateAge());","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"xnajasho":100}},{"path":"src/test/java/seedu/friendbook/model/person/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SajalVaishnav"},"content":"package seedu.friendbook.model.person;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"SajalVaishnav"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"SajalVaishnav"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"SajalVaishnav"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"SajalVaishnav"},"content":"public class DescriptionTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"SajalVaishnav"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"SajalVaishnav"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"SajalVaishnav"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"SajalVaishnav"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"    public void constructor_invalidDescription_throwsNullPointerException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"pss-coder"},"content":"        String invalidDescription \u003d null;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"pss-coder"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(invalidDescription));","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"SajalVaishnav"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"SajalVaishnav"},"content":"    public void isValidDescription() {","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"SajalVaishnav"},"content":"        // null description","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"SajalVaishnav"},"content":"        assertThrows(NullPointerException.class, () -\u003e Description.isValidDescription(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"SajalVaishnav"},"content":"        // valid description","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"SajalVaishnav"},"content":"        assertTrue(Description.isValidDescription(\"owes a lottta money\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"SajalVaishnav"},"content":"        assertTrue(Description.isValidDescription(\"good friend\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"SajalVaishnav"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"pss-coder":3,"SajalVaishnav":27}},{"path":"src/test/java/seedu/friendbook/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"RonaldTanSingWei":2,"-":66}},{"path":"src/test/java/seedu/friendbook/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.testutil.PersonBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"RonaldTanSingWei":2,"-":73}},{"path":"src/test/java/seedu/friendbook/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"xnajasho"},"content":"        assertFalse(Name.isValidName(\"               Jack\")); // name preceded with spaces","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"xnajasho"},"content":"        assertFalse(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"xnajasho"},"content":"        assertFalse(Name.isValidName(\"123124 John Lim\")); // names beginning with numbers","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"xnajasho"},"content":"        assertFalse(Name.isValidName(\"123124John\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"xnajasho"},"content":"        assertFalse(Name.isValidName(\"-\")); // only hyphen","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"xnajasho"},"content":"        assertFalse(Name.isValidName(\"_\")); // only underscore","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"xnajasho"},"content":"        assertFalse(Name.isValidName(\"james--\")); // two consecutive hyphens","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"xnajasho"},"content":"        assertFalse(Name.isValidName(\"james__\")); // two consecutive underscores","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"xnajasho"},"content":"        assertFalse(Name.isValidName(\"james-----------\")); // many consecutive hyphens","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"xnajasho"},"content":"        assertFalse(Name.isValidName(\"james___________\")); // many consecutive underscores","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":48,"author":{"gitId":"xnajasho"},"content":"        assertTrue(Name.isValidName(\"Peter X-VII\")); // contains hyphen","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"xnajasho"},"content":"        assertTrue(Name.isValidName(\"James X_VII\")); // contains underscore","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"xnajasho"},"content":"        assertTrue(Name.isValidName(\"a_\")); // underscore preceded with a single character","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"xnajasho"},"content":"        assertTrue(Name.isValidName(\"b-\")); // hyphen preceded with a single character","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"xnajasho"},"content":"        assertTrue(Name.isValidName(\"jamus-lim-chye-wee\")); // multiple hyphens","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"xnajasho"},"content":"        assertTrue(Name.isValidName(\"jamus_lim_chye_wee\")); // multiple underscores","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"RonaldTanSingWei":2,"xnajasho":16,"-":37}},{"path":"src/test/java/seedu/friendbook/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_AVATAR_BOB;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_BIRTHDAY_BOB;","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_REMINDER_BOB;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_TELEHANDLE_BOB;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.testutil.PersonBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"xnajasho"},"content":"    public void checkAge() {","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"xnajasho"},"content":"        assertEquals(26, ALICE.getAge());","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"xnajasho"},"content":"        assertEquals(26, BOB.getAge());","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"xnajasho"},"content":"        // same name, phone, email, birthday, all other attributes different -\u003e true","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"xnajasho"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"xnajasho"},"content":"                .withTags(VALID_TAG_HUSBAND).withTeleHandle(VALID_TELEHANDLE_BOB)","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"xnajasho"},"content":"                .withDescription(VALID_DESCRIPTION_BOB).withAvatar(VALID_AVATAR_BOB)","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"xnajasho"},"content":"                .withReminder(VALID_REMINDER_BOB).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"xnajasho"},"content":"        // same name, all other attributes different -\u003e returns false","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"xnajasho"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"xnajasho"},"content":"                .withAddress(VALID_ADDRESS_BOB).withBirthday(VALID_BIRTHDAY_BOB)","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"xnajasho"},"content":"                .withTags(VALID_TAG_HUSBAND).withTeleHandle(VALID_TELEHANDLE_BOB)","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"xnajasho"},"content":"                .withDescription(VALID_DESCRIPTION_BOB).withAvatar(VALID_AVATAR_BOB)","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"xnajasho"},"content":"                .withReminder(VALID_REMINDER_BOB).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"xnajasho"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"xnajasho"},"content":"        // same name, phone, all other attributes different -\u003e false","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"xnajasho"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-11-03"},{"lineNumber":63,"author":{"gitId":"xnajasho"},"content":"                .withBirthday(VALID_BIRTHDAY_BOB)","lastModifiedDate":"2021-11-03"},{"lineNumber":64,"author":{"gitId":"xnajasho"},"content":"                .withTags(VALID_TAG_HUSBAND).withTeleHandle(VALID_TELEHANDLE_BOB)","lastModifiedDate":"2021-11-03"},{"lineNumber":65,"author":{"gitId":"xnajasho"},"content":"                .withDescription(VALID_DESCRIPTION_BOB).withAvatar(VALID_AVATAR_BOB)","lastModifiedDate":"2021-11-03"},{"lineNumber":66,"author":{"gitId":"xnajasho"},"content":"                .withReminder(VALID_REMINDER_BOB).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":67,"author":{"gitId":"xnajasho"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-11-03"},{"lineNumber":68,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":69,"author":{"gitId":"xnajasho"},"content":"        // same name, phone, email, all other attributes different -\u003e false","lastModifiedDate":"2021-11-03"},{"lineNumber":70,"author":{"gitId":"xnajasho"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-11-03"},{"lineNumber":71,"author":{"gitId":"xnajasho"},"content":"                .withBirthday(VALID_BIRTHDAY_BOB)","lastModifiedDate":"2021-11-03"},{"lineNumber":72,"author":{"gitId":"xnajasho"},"content":"                .withTags(VALID_TAG_HUSBAND).withTeleHandle(VALID_TELEHANDLE_BOB)","lastModifiedDate":"2021-11-03"},{"lineNumber":73,"author":{"gitId":"xnajasho"},"content":"                .withDescription(VALID_DESCRIPTION_BOB).withAvatar(VALID_AVATAR_BOB)","lastModifiedDate":"2021-11-03"},{"lineNumber":74,"author":{"gitId":"xnajasho"},"content":"                .withReminder(VALID_REMINDER_BOB).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":75,"author":{"gitId":"xnajasho"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-11-03"},{"lineNumber":76,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"xnajasho"},"content":"        // different name \u0026 phone, all other attributes same -\u003e returns false","lastModifiedDate":"2021-11-03"},{"lineNumber":82,"author":{"gitId":"xnajasho"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":83,"author":{"gitId":"xnajasho"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-11-03"},{"lineNumber":84,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":85,"author":{"gitId":"xnajasho"},"content":"        // different name \u0026 phone \u0026 email, all other attributes same -\u003e returns false","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"xnajasho"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"xnajasho"},"content":"                .withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"xnajasho"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-11-03"},{"lineNumber":89,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":90,"author":{"gitId":"xnajasho"},"content":"        // different name \u0026 phone \u0026 email \u0026 birthday, all other attributes same -\u003e returns false","lastModifiedDate":"2021-11-03"},{"lineNumber":91,"author":{"gitId":"xnajasho"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-11-03"},{"lineNumber":92,"author":{"gitId":"xnajasho"},"content":"                .withEmail(VALID_EMAIL_BOB).withBirthday(VALID_BIRTHDAY_BOB).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":93,"author":{"gitId":"xnajasho"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-11-03"},{"lineNumber":94,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":95,"author":{"gitId":"xnajasho"},"content":"        // nam \u0026 email differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-11-03"},{"lineNumber":96,"author":{"gitId":"xnajasho"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase())","lastModifiedDate":"2021-11-03"},{"lineNumber":97,"author":{"gitId":"xnajasho"},"content":"                .withEmail(VALID_EMAIL_BOB.toUpperCase()).build();","lastModifiedDate":"2021-11-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":143,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":144,"author":{"gitId":"xnajasho"},"content":"        // different birthday -\u003e return false","lastModifiedDate":"2021-10-14"},{"lineNumber":145,"author":{"gitId":"xnajasho"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withBirthday(VALID_BIRTHDAY_BOB).build();","lastModifiedDate":"2021-10-14"},{"lineNumber":146,"author":{"gitId":"xnajasho"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-14"},{"lineNumber":147,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"xnajasho"},"content":"        // different avatar -\u003e return false","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"xnajasho"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAvatar(\"10\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"xnajasho"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"xnajasho"},"content":"        // different description -\u003e return false","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"xnajasho"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withDescription(\"changed description\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"xnajasho"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"xnajasho"},"content":"        // different teleHandle -\u003e return false","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"xnajasho"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTeleHandle(\"aliceinwonderland\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"xnajasho"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"xnajasho"},"content":"        // different reminder -\u003e return false","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"xnajasho"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withReminder(\"on\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"xnajasho"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"RonaldTanSingWei":10,"xnajasho":78,"-":76}},{"path":"src/test/java/seedu/friendbook/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"RonaldTanSingWei":2,"-":38}},{"path":"src/test/java/seedu/friendbook/model/person/ReminderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"xnajasho"},"content":"package seedu.friendbook.model.person;","lastModifiedDate":"2021-11-02"},{"lineNumber":2,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":3,"author":{"gitId":"xnajasho"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"xnajasho"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"xnajasho"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.reminder.Reminder;","lastModifiedDate":"2021-11-02"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"xnajasho"},"content":"public class ReminderTest {","lastModifiedDate":"2021-11-02"},{"lineNumber":12,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":13,"author":{"gitId":"xnajasho"},"content":"    private static final String VALID_ON_REMINDER_LOWER_CASE \u003d \"on\";","lastModifiedDate":"2021-11-02"},{"lineNumber":14,"author":{"gitId":"xnajasho"},"content":"    private static final String VALID_OFF_REMINDER_LOWER_CASE \u003d \"off\";","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"    private static final String VALID_ON_REMINDER_UPPER_CASE \u003d \"oN\";","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"    private static final String VALID_OFF_REMINDER_UPPER_CASE \u003d \"OFF\";","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"    private static final String INVALID_REMINDER_LOWER_CASE \u003d \"onoff\";","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"    private static final String INVALID_REMINDER_UPPER_CASE \u003d \"OnOff\";","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"xnajasho"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"xnajasho"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Reminder(null));","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"xnajasho"},"content":"    public void isValidReminder() {","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"xnajasho"},"content":"        assertTrue(Reminder.isValidReminder(VALID_ON_REMINDER_LOWER_CASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"xnajasho"},"content":"        assertTrue(Reminder.isValidReminder(VALID_OFF_REMINDER_LOWER_CASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"xnajasho"},"content":"        assertTrue(Reminder.isValidReminder(VALID_ON_REMINDER_UPPER_CASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"xnajasho"},"content":"        assertTrue(Reminder.isValidReminder(VALID_OFF_REMINDER_UPPER_CASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"xnajasho"},"content":"        assertTrue(Reminder.isValidReminder(\"\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"xnajasho"},"content":"        assertFalse(Reminder.isValidReminder(INVALID_REMINDER_LOWER_CASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"xnajasho"},"content":"        assertFalse(Reminder.isValidReminder(INVALID_REMINDER_UPPER_CASE));","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"xnajasho"},"content":"}","lastModifiedDate":"2021-11-02"}],"authorContributionMap":{"xnajasho":38}},{"path":"src/test/java/seedu/friendbook/model/person/TagContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model.person;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.testutil.PersonBuilder;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":"public class TagContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"RonaldTanSingWei"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void equals() {","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"RonaldTanSingWei"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"RonaldTanSingWei"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"RonaldTanSingWei"},"content":"        TagContainsKeywordsPredicate firstPredicate \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"RonaldTanSingWei"},"content":"        TagContainsKeywordsPredicate secondPredicate \u003d new TagContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"RonaldTanSingWei"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"RonaldTanSingWei"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"RonaldTanSingWei"},"content":"        TagContainsKeywordsPredicate firstPredicateCopy \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"RonaldTanSingWei"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"RonaldTanSingWei"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"RonaldTanSingWei"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"RonaldTanSingWei"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"RonaldTanSingWei"},"content":"        // One keyword","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"RonaldTanSingWei"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(Collections.singletonList(\"friends\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"friends\", \"owesMoney\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"RonaldTanSingWei"},"content":"        // Multiple keywords","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"RonaldTanSingWei"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"friends\", \"owesMoney\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"friends\", \"owesMoney\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"RonaldTanSingWei"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"RonaldTanSingWei"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"friends\", \"bestFriend\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"friends\", \"foodie\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"RonaldTanSingWei"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"RonaldTanSingWei"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"fRIeNdS\", \"OWESMOney\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"friends\", \"owesMoney\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"RonaldTanSingWei"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"RonaldTanSingWei"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"RonaldTanSingWei"},"content":"        TagContainsKeywordsPredicate predicate \u003d new TagContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"friends\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"RonaldTanSingWei"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"RonaldTanSingWei"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"lunchmates\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"friends\", \"lunchmate\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"RonaldTanSingWei"},"content":"        // Keywords match name phone, email and address, but does not match tags","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"RonaldTanSingWei"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"12345\",","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"RonaldTanSingWei"},"content":"                \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"RonaldTanSingWei"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"RonaldTanSingWei"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"RonaldTanSingWei":76}},{"path":"src/test/java/seedu/friendbook/model/person/TeleHandleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SajalVaishnav"},"content":"package seedu.friendbook.model.person;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"SajalVaishnav"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"SajalVaishnav"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"SajalVaishnav"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"SajalVaishnav"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":9,"author":{"gitId":"SajalVaishnav"},"content":"public class TeleHandleTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"SajalVaishnav"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"SajalVaishnav"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"SajalVaishnav"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Birthday(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"SajalVaishnav"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"xnajasho"},"content":"    public void constructor_invalidTelehandle_throwsIllegalArgumentException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"        String invalidTeleHandle \u003d \"xyz\";","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new TeleHandle(invalidTeleHandle));","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"SajalVaishnav"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"SajalVaishnav"},"content":"    public void isValidTeleHandle() {","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"SajalVaishnav"},"content":"        // null tele handle","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"SajalVaishnav"},"content":"        assertThrows(NullPointerException.class, () -\u003e TeleHandle.isValidTeleHandle(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"SajalVaishnav"},"content":"        // invalid tele handle","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"SajalVaishnav"},"content":"        assertFalse(TeleHandle.isValidTeleHandle(\"abc\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"SajalVaishnav"},"content":"        assertFalse(TeleHandle.isValidTeleHandle(\"abc@12345\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"SajalVaishnav"},"content":"        assertFalse(TeleHandle.isValidTeleHandle(\"@abc12#\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"SajalVaishnav"},"content":"        // valid tele handles","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"pss-coder"},"content":"        assertTrue(TeleHandle.isValidTeleHandle(\"\"));","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"SajalVaishnav"},"content":"        assertTrue(TeleHandle.isValidTeleHandle(\"mari12\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"SajalVaishnav"},"content":"        assertTrue(TeleHandle.isValidTeleHandle(\"baked_cookie_dough\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"SajalVaishnav"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"xnajasho":3,"pss-coder":1,"SajalVaishnav":32}},{"path":"src/test/java/seedu/friendbook/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.testutil.PersonBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"RonaldTanSingWei":9,"-":161}},{"path":"src/test/java/seedu/friendbook/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.model.tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"RonaldTanSingWei":2,"-":24}},{"path":"src/test/java/seedu/friendbook/reminder/ReminderManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pss-coder"},"content":"package seedu.friendbook.reminder;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"pss-coder"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.logic.Logic;","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.logic.LogicManager;","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.ModelManager;","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.storage.JsonFriendBookStorage;","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.storage.StorageManager;","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"pss-coder"},"content":"public class ReminderManagerTest {","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"pss-coder"},"content":"    @TempDir","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"pss-coder"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"pss-coder"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"pss-coder"},"content":"    private Reminder birthdayReminder;","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"pss-coder"},"content":"    @BeforeEach","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"pss-coder"},"content":"    public void setUp() {","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"pss-coder"},"content":"        JsonFriendBookStorage friendBookStorage \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"pss-coder"},"content":"                new JsonFriendBookStorage(temporaryFolder.resolve(\"friendBook.json\"));","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"pss-coder"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"pss-coder"},"content":"        StorageManager storage \u003d new StorageManager(friendBookStorage, userPrefsStorage);","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"pss-coder"},"content":"        Logic logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"pss-coder"},"content":"        birthdayReminder \u003d new ReminderManager(logic.getFilteredPersonListSortedByBirthday());","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"pss-coder"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"pss-coder"},"content":"    public void execute_invalidBirthdayList_throwsNullPointerException() {","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"pss-coder"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ReminderManager(null));","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"pss-coder"},"content":"    @Test","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"pss-coder"},"content":"    public void execute_invalidBirthdayReminderTask_expectNullValue() {","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"pss-coder"},"content":"        ReminderManager reminderManager \u003d","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"pss-coder"},"content":"                new ReminderManager(model.getFilteredPersonListSortedByBirthday());","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"pss-coder"},"content":"        assertNull(reminderManager.createTask().getValue());","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"pss-coder"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"pss-coder":49}},{"path":"src/test/java/seedu/friendbook/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Address;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Avatar;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Birthday;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Description;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Email;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Name;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Phone;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.TeleHandle;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.reminder.Reminder;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"xnajasho"},"content":"    private static final String INVALID_BIRTHDAY_FORMAT \u003d \"1995/09/12\";","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"xnajasho"},"content":"    private static final String INVALID_BIRTHDAY_VALUES \u003d \"2021-09-31\";","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"xnajasho"},"content":"    private static final String INVALID_BIRTHDAY_YET_TO_OCCUR \u003d \"2050-09-15\";","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"pss-coder"},"content":"    private static final String INVALID_TELEHANDLE \u003d \"@johndoe@1\";","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"pss-coder"},"content":"    private static final String INVALID_DESCRIPTION \u003d null;","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"pss-coder"},"content":"    private static final String INVALID_AVATAR \u003d \"25\";","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"xnajasho"},"content":"    private static final String INVALID_REMINDER \u003d \"onoff\";","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"xnajasho"},"content":"    private static final String VALID_BIRTHDAY \u003d BENSON.getBirthday().toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"pss-coder"},"content":"    private static final String VALID_TELEHANDLE \u003d BENSON.getTeleHandle().toString();","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"pss-coder"},"content":"    private static final String VALID_DESCRIPTION \u003d BENSON.getDescription().toString();","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"pss-coder"},"content":"    private static final String VALID_AVATAR \u003d BENSON.getAvatar().toString();","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"xnajasho"},"content":"    private static final String VALID_REMINDER \u003d BENSON.getReminder().toString();","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"pss-coder"},"content":"        assertEquals(BENSON.toString(), person.toModelType().toString());","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"xnajasho"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"xnajasho"},"content":"                        VALID_TAGS, VALID_BIRTHDAY, VALID_AVATAR, VALID_TELEHANDLE, VALID_DESCRIPTION, VALID_REMINDER);","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"xnajasho"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"xnajasho"},"content":"                VALID_TAGS, VALID_BIRTHDAY, VALID_AVATAR, VALID_TELEHANDLE, VALID_DESCRIPTION, VALID_REMINDER);","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"xnajasho"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"xnajasho"},"content":"                        VALID_TAGS, VALID_BIRTHDAY, VALID_AVATAR, VALID_TELEHANDLE, VALID_DESCRIPTION, VALID_REMINDER);","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"xnajasho"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"SajalVaishnav"},"content":"                new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"xnajasho"},"content":"                        VALID_BIRTHDAY, VALID_AVATAR, VALID_TELEHANDLE, VALID_DESCRIPTION, VALID_REMINDER);","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"xnajasho"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"xnajasho"},"content":"                        VALID_TAGS, VALID_BIRTHDAY, VALID_AVATAR, VALID_TELEHANDLE, VALID_DESCRIPTION, VALID_REMINDER);","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"xnajasho"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"SajalVaishnav"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2021-10-14"},{"lineNumber":106,"author":{"gitId":"xnajasho"},"content":"                        VALID_BIRTHDAY, VALID_AVATAR, VALID_TELEHANDLE, VALID_DESCRIPTION, VALID_REMINDER);","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"xnajasho"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"SajalVaishnav"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS,","lastModifiedDate":"2021-10-14"},{"lineNumber":114,"author":{"gitId":"xnajasho"},"content":"                        VALID_BIRTHDAY, VALID_AVATAR, VALID_TELEHANDLE, VALID_DESCRIPTION, VALID_REMINDER);","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"xnajasho"},"content":"    public void toModelType_invalidBirthdayFormat_throwsIllegalValueException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":121,"author":{"gitId":"xnajasho"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"xnajasho"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"xnajasho"},"content":"                        VALID_TAGS, VALID_AVATAR, INVALID_BIRTHDAY_FORMAT, VALID_TELEHANDLE,","lastModifiedDate":"2021-11-01"},{"lineNumber":124,"author":{"gitId":"xnajasho"},"content":"                        VALID_DESCRIPTION, VALID_REMINDER);","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"xnajasho"},"content":"        String expectedMessage \u003d Birthday.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"xnajasho"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":130,"author":{"gitId":"xnajasho"},"content":"    public void toModelType_invalidBirthdayValues_throwsIllegalValueException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":131,"author":{"gitId":"xnajasho"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-11-01"},{"lineNumber":132,"author":{"gitId":"xnajasho"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-11-01"},{"lineNumber":133,"author":{"gitId":"xnajasho"},"content":"                        VALID_TAGS, VALID_AVATAR, INVALID_BIRTHDAY_VALUES, VALID_TELEHANDLE,","lastModifiedDate":"2021-11-01"},{"lineNumber":134,"author":{"gitId":"xnajasho"},"content":"                        VALID_DESCRIPTION, VALID_REMINDER);","lastModifiedDate":"2021-11-01"},{"lineNumber":135,"author":{"gitId":"xnajasho"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2021-11-01"},{"lineNumber":136,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":137,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":138,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":139,"author":{"gitId":"xnajasho"},"content":"    public void toModelType_invalidBirthdayYetToOccur_throwsIllegalValueException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":140,"author":{"gitId":"xnajasho"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-11-01"},{"lineNumber":141,"author":{"gitId":"xnajasho"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-11-01"},{"lineNumber":142,"author":{"gitId":"xnajasho"},"content":"                        VALID_TAGS, VALID_AVATAR, INVALID_BIRTHDAY_YET_TO_OCCUR, VALID_TELEHANDLE,","lastModifiedDate":"2021-11-01"},{"lineNumber":143,"author":{"gitId":"xnajasho"},"content":"                        VALID_DESCRIPTION, VALID_REMINDER);","lastModifiedDate":"2021-11-01"},{"lineNumber":144,"author":{"gitId":"xnajasho"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2021-11-01"},{"lineNumber":145,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":146,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":147,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"xnajasho"},"content":"    public void toModelType_nullBirthday_throwsIllegalValueException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"xnajasho"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"SajalVaishnav"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2021-10-14"},{"lineNumber":151,"author":{"gitId":"xnajasho"},"content":"                        null, VALID_AVATAR, VALID_TELEHANDLE, VALID_DESCRIPTION, VALID_REMINDER);","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"xnajasho"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Birthday.class.getSimpleName());","lastModifiedDate":"2021-10-06"},{"lineNumber":153,"author":{"gitId":"xnajasho"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":155,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":156,"author":{"gitId":"SajalVaishnav"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":157,"author":{"gitId":"SajalVaishnav"},"content":"    public void toModelType_invalidTeleHandle_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":158,"author":{"gitId":"SajalVaishnav"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":159,"author":{"gitId":"SajalVaishnav"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-14"},{"lineNumber":160,"author":{"gitId":"xnajasho"},"content":"                        VALID_TAGS, VALID_BIRTHDAY, VALID_AVATAR, INVALID_TELEHANDLE,","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"xnajasho"},"content":"                        VALID_DESCRIPTION, VALID_REMINDER);","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"SajalVaishnav"},"content":"        String expectedMessage \u003d TeleHandle.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-14"},{"lineNumber":163,"author":{"gitId":"SajalVaishnav"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":164,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":165,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":166,"author":{"gitId":"SajalVaishnav"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":167,"author":{"gitId":"SajalVaishnav"},"content":"    public void toModelType_nullTeleHandle_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":168,"author":{"gitId":"SajalVaishnav"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":169,"author":{"gitId":"SajalVaishnav"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2021-10-14"},{"lineNumber":170,"author":{"gitId":"xnajasho"},"content":"                        VALID_BIRTHDAY, VALID_AVATAR, null, VALID_DESCRIPTION, VALID_REMINDER);","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"SajalVaishnav"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-14"},{"lineNumber":172,"author":{"gitId":"SajalVaishnav"},"content":"                TeleHandle.class.getSimpleName());","lastModifiedDate":"2021-10-14"},{"lineNumber":173,"author":{"gitId":"SajalVaishnav"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":174,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":175,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":176,"author":{"gitId":"SajalVaishnav"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":177,"author":{"gitId":"SajalVaishnav"},"content":"    public void toModelType_invalidDescription_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":178,"author":{"gitId":"SajalVaishnav"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":179,"author":{"gitId":"SajalVaishnav"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-14"},{"lineNumber":180,"author":{"gitId":"xnajasho"},"content":"                        VALID_TAGS, VALID_BIRTHDAY, VALID_AVATAR, VALID_TELEHANDLE,","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"xnajasho"},"content":"                        INVALID_DESCRIPTION, VALID_REMINDER);","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"pss-coder"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-24"},{"lineNumber":183,"author":{"gitId":"pss-coder"},"content":"                Description.class.getSimpleName());","lastModifiedDate":"2021-10-24"},{"lineNumber":184,"author":{"gitId":"SajalVaishnav"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":185,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":186,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":187,"author":{"gitId":"SajalVaishnav"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":188,"author":{"gitId":"SajalVaishnav"},"content":"    public void toModelType_nullDescription_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":189,"author":{"gitId":"SajalVaishnav"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":190,"author":{"gitId":"SajalVaishnav"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2021-10-14"},{"lineNumber":191,"author":{"gitId":"xnajasho"},"content":"                        VALID_BIRTHDAY, VALID_AVATAR, VALID_TELEHANDLE, null, VALID_REMINDER);","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"SajalVaishnav"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-14"},{"lineNumber":193,"author":{"gitId":"SajalVaishnav"},"content":"                Description.class.getSimpleName());","lastModifiedDate":"2021-10-14"},{"lineNumber":194,"author":{"gitId":"SajalVaishnav"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":195,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":196,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":197,"author":{"gitId":"pss-coder"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":198,"author":{"gitId":"pss-coder"},"content":"    public void toModelType_invalidAvatar_throwsIllegalValueException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"pss-coder"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":200,"author":{"gitId":"pss-coder"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-19"},{"lineNumber":201,"author":{"gitId":"xnajasho"},"content":"                        VALID_TAGS, VALID_BIRTHDAY, INVALID_AVATAR, VALID_TELEHANDLE,","lastModifiedDate":"2021-10-25"},{"lineNumber":202,"author":{"gitId":"xnajasho"},"content":"                        VALID_DESCRIPTION, VALID_REMINDER);","lastModifiedDate":"2021-10-25"},{"lineNumber":203,"author":{"gitId":"pss-coder"},"content":"        String expectedMessage \u003d Avatar.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-24"},{"lineNumber":204,"author":{"gitId":"pss-coder"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-19"},{"lineNumber":205,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":206,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":207,"author":{"gitId":"pss-coder"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":208,"author":{"gitId":"pss-coder"},"content":"    public void toModelType_nullAvatar_throwsIllegalValueException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"pss-coder"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":210,"author":{"gitId":"pss-coder"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2021-10-19"},{"lineNumber":211,"author":{"gitId":"xnajasho"},"content":"                        VALID_BIRTHDAY, null, VALID_TELEHANDLE, VALID_DESCRIPTION, VALID_REMINDER);","lastModifiedDate":"2021-10-25"},{"lineNumber":212,"author":{"gitId":"pss-coder"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-19"},{"lineNumber":213,"author":{"gitId":"pss-coder"},"content":"                Avatar.class.getSimpleName());","lastModifiedDate":"2021-10-24"},{"lineNumber":214,"author":{"gitId":"pss-coder"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-19"},{"lineNumber":215,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":216,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":222,"author":{"gitId":"xnajasho"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-06"},{"lineNumber":223,"author":{"gitId":"xnajasho"},"content":"                        invalidTags, VALID_BIRTHDAY, VALID_TELEHANDLE, VALID_DESCRIPTION, VALID_AVATAR, VALID_REMINDER);","lastModifiedDate":"2021-10-25"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":227,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":228,"author":{"gitId":"xnajasho"},"content":"    public void toModelType_invalidReminder_throwsIllegalValueException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":229,"author":{"gitId":"xnajasho"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":230,"author":{"gitId":"xnajasho"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-25"},{"lineNumber":231,"author":{"gitId":"xnajasho"},"content":"                        VALID_TAGS, VALID_BIRTHDAY, VALID_AVATAR, VALID_TELEHANDLE,","lastModifiedDate":"2021-10-25"},{"lineNumber":232,"author":{"gitId":"xnajasho"},"content":"                        VALID_DESCRIPTION, INVALID_REMINDER);","lastModifiedDate":"2021-10-25"},{"lineNumber":233,"author":{"gitId":"xnajasho"},"content":"        String expectedMessage \u003d Reminder.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-25"},{"lineNumber":234,"author":{"gitId":"xnajasho"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-25"},{"lineNumber":235,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"RonaldTanSingWei":5,"xnajasho":77,"-":83,"pss-coder":34,"SajalVaishnav":37}},{"path":"src/test/java/seedu/friendbook/storage/JsonFriendBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.FriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ReadOnlyFriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"RonaldTanSingWei"},"content":"public class JsonFriendBookStorageTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"RonaldTanSingWei"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonFriendBookStorageTest\");","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"RonaldTanSingWei"},"content":"    //@TempDir","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"RonaldTanSingWei"},"content":"    //public Path testFolder;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"RonaldTanSingWei"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void readFriendBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertThrows(NullPointerException.class, () -\u003e readFriendBook(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"RonaldTanSingWei"},"content":"    private java.util.Optional\u003cReadOnlyFriendBook\u003e readFriendBook(String filePath) throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"RonaldTanSingWei"},"content":"        return new JsonFriendBookStorage(Paths.get(filePath)).readFriendBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"RonaldTanSingWei"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"RonaldTanSingWei"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"RonaldTanSingWei"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"RonaldTanSingWei"},"content":"                : null;","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"RonaldTanSingWei"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertFalse(readFriendBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"RonaldTanSingWei"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertThrows(DataConversionException.class, () -\u003e readFriendBook(\"notJsonFormatFriendBook.json\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"RonaldTanSingWei"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void readFriendBook_invalidPersonFriendBook_throwDataConversionException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"SajalVaishnav"},"content":"        assertThrows(DataConversionException.class, () -\u003e readFriendBook(\"invalidNameInPersonFriendBook.json\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":50,"author":{"gitId":"SajalVaishnav"},"content":"        assertThrows(DataConversionException.class, () -\u003e readFriendBook(\"invalidAddressInPersonFriendBook.json\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"SajalVaishnav"},"content":"        assertThrows(DataConversionException.class, () -\u003e readFriendBook(\"invalidAvatarInPersonFriendBook.json\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"SajalVaishnav"},"content":"        assertThrows(DataConversionException.class, () -\u003e readFriendBook(\"invalidBirthdayInPersonFriendBook.json\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"SajalVaishnav"},"content":"        assertThrows(DataConversionException.class, () -\u003e readFriendBook(\"invalidEmailInPersonFriendBook.json\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"SajalVaishnav"},"content":"        assertThrows(DataConversionException.class, () -\u003e readFriendBook(\"invalidPhoneInPersonFriendBook.json\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"SajalVaishnav"},"content":"        assertThrows(DataConversionException.class, () -\u003e readFriendBook(\"invalidTagInPersonFriendBook.json\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"SajalVaishnav"},"content":"        assertThrows(DataConversionException.class, () -\u003e readFriendBook(\"invalidReminderInPersonFriendBook.json\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"SajalVaishnav"},"content":"        assertThrows(DataConversionException.class, () -\u003e readFriendBook(\"invalidTeleHandleInPersonFriendBook.json\"));","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"RonaldTanSingWei"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void readFriendBook_invalidAndValidPersonFriendBook_throwDataConversionException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertThrows(DataConversionException.class, () -\u003e readFriendBook(\"invalidAndValidPersonFriendBook.json\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"RonaldTanSingWei"},"content":"    /*@Test","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void readAndSaveFriendBook_allInOrder_success() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"RonaldTanSingWei"},"content":"        Path filePath \u003d testFolder.resolve(\"TempFriendBook.json\");","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"RonaldTanSingWei"},"content":"        FriendBook original \u003d getTypicalFriendBook();","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"RonaldTanSingWei"},"content":"        JsonFriendBookStorage jsonFriendBookStorage \u003d new JsonFriendBookStorage(filePath);","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"RonaldTanSingWei"},"content":"        // Save in new file and read back","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"RonaldTanSingWei"},"content":"        jsonFriendBookStorage.saveFriendBook(original, filePath);","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"RonaldTanSingWei"},"content":"        ReadOnlyFriendBook readBack \u003d jsonFriendBookStorage.readFriendBook(filePath).get();","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertEquals(original, new FriendBook(readBack));","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"RonaldTanSingWei"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"RonaldTanSingWei"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"RonaldTanSingWei"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"RonaldTanSingWei"},"content":"        jsonFriendBookStorage.saveFriendBook(original, filePath);","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"RonaldTanSingWei"},"content":"        readBack \u003d jsonFriendBookStorage.readFriendBook(filePath).get();","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertEquals(original, new FriendBook(readBack));","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"RonaldTanSingWei"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"RonaldTanSingWei"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"RonaldTanSingWei"},"content":"        jsonFriendBookStorage.saveFriendBook(original); // file path not specified","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"RonaldTanSingWei"},"content":"        readBack \u003d jsonFriendBookStorage.readFriendBook().get(); // file path not specified","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertEquals(original, new FriendBook(readBack));","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"RonaldTanSingWei"},"content":"    }*/","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"RonaldTanSingWei"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void saveFriendBook_nullFriendBook_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveFriendBook(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"RonaldTanSingWei"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"RonaldTanSingWei"},"content":"     * Saves {@code friendBook} at the specified {@code filePath}.","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"RonaldTanSingWei"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"RonaldTanSingWei"},"content":"    private void saveFriendBook(ReadOnlyFriendBook friendBook, String filePath) {","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"RonaldTanSingWei"},"content":"        try {","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"RonaldTanSingWei"},"content":"            new JsonFriendBookStorage(Paths.get(filePath))","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"RonaldTanSingWei"},"content":"                    .saveFriendBook(friendBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"RonaldTanSingWei"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"RonaldTanSingWei"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"RonaldTanSingWei"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"RonaldTanSingWei"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void saveFriendBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveFriendBook(new FriendBook(), null));","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"RonaldTanSingWei"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"RonaldTanSingWei":102,"SajalVaishnav":9}},{"path":"src/test/java/seedu/friendbook/storage/JsonSerializableFriendBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.util.JsonUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"RonaldTanSingWei"},"content":"public class JsonSerializableFriendBookTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"RonaldTanSingWei"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsFriendBook.json\");","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"RonaldTanSingWei"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonFriendBook.json\");","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"RonaldTanSingWei"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonFriendBook.json\");","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"xnajasho"},"content":"    private static final Path DUPLICATE_PHONE_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePhone.json\");","lastModifiedDate":"2021-11-03"},{"lineNumber":20,"author":{"gitId":"xnajasho"},"content":"    private static final Path DUPLICATE_EMAIL_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateEmail.json\");","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"RonaldTanSingWei"},"content":"    /*@Test","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"RonaldTanSingWei"},"content":"        JsonSerializableFriendBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"RonaldTanSingWei"},"content":"                JsonSerializableFriendBook.class).get();","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"RonaldTanSingWei"},"content":"        FriendBook friendBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"RonaldTanSingWei"},"content":"        FriendBook typicalPersonsFriendBook \u003d TypicalPersons.getTypicalFriendBook();","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertEquals(friendBookFromFile, typicalPersonsFriendBook);","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"RonaldTanSingWei"},"content":"    }*/","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"RonaldTanSingWei"},"content":"        JsonSerializableFriendBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"RonaldTanSingWei"},"content":"                JsonSerializableFriendBook.class).get();","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"RonaldTanSingWei"},"content":"        JsonSerializableFriendBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"RonaldTanSingWei"},"content":"                JsonSerializableFriendBook.class).get();","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableFriendBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":47,"author":{"gitId":"xnajasho"},"content":"    public void toModelType_duplicatePhone_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-11-03"},{"lineNumber":48,"author":{"gitId":"xnajasho"},"content":"        JsonSerializableFriendBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PHONE_FILE,","lastModifiedDate":"2021-11-03"},{"lineNumber":49,"author":{"gitId":"xnajasho"},"content":"                JsonSerializableFriendBook.class).get();","lastModifiedDate":"2021-11-03"},{"lineNumber":50,"author":{"gitId":"xnajasho"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableFriendBook.MESSAGE_PHONE_NUMBER_EXISTS,","lastModifiedDate":"2021-11-03"},{"lineNumber":51,"author":{"gitId":"xnajasho"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-11-03"},{"lineNumber":52,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":53,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":54,"author":{"gitId":"xnajasho"},"content":"    @Test","lastModifiedDate":"2021-11-03"},{"lineNumber":55,"author":{"gitId":"xnajasho"},"content":"    public void toModelType_duplicateEmail_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-11-03"},{"lineNumber":56,"author":{"gitId":"xnajasho"},"content":"        JsonSerializableFriendBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_EMAIL_FILE,","lastModifiedDate":"2021-11-03"},{"lineNumber":57,"author":{"gitId":"xnajasho"},"content":"                JsonSerializableFriendBook.class).get();","lastModifiedDate":"2021-11-03"},{"lineNumber":58,"author":{"gitId":"xnajasho"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableFriendBook.MESSAGE_EMAIL_EXISTS,","lastModifiedDate":"2021-11-03"},{"lineNumber":59,"author":{"gitId":"xnajasho"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-11-03"},{"lineNumber":60,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-11-03"},{"lineNumber":61,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"RonaldTanSingWei":20,"xnajasho":18,"-":24}},{"path":"src/test/java/seedu/friendbook/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.GuiSettings;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"RonaldTanSingWei"},"content":"    /*@Test","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"RonaldTanSingWei"},"content":"    }*/","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"RonaldTanSingWei"},"content":"    /*@Test","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"RonaldTanSingWei"},"content":"    }*/","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"RonaldTanSingWei"},"content":"    /*private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"RonaldTanSingWei"},"content":"        userPrefs.setFriendBookFilePath(Paths.get(\"friendbook.json\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"RonaldTanSingWei"},"content":"    }*/","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"RonaldTanSingWei":12,"-":111}},{"path":"src/test/java/seedu/friendbook/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.TypicalPersons.getTypicalFriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.GuiSettings;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.FriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.ReadOnlyFriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"RonaldTanSingWei"},"content":"        JsonFriendBookStorage friendBookStorage \u003d new JsonFriendBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"RonaldTanSingWei"},"content":"        storageManager \u003d new StorageManager(friendBookStorage, userPrefsStorage);","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void friendBookReadSave() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"RonaldTanSingWei"},"content":"         * {@link JsonFriendBookStorage} class.","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"RonaldTanSingWei"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonFriendBookStorageTest} class.","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"RonaldTanSingWei"},"content":"        FriendBook original \u003d getTypicalFriendBook();","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"RonaldTanSingWei"},"content":"        storageManager.saveFriendBook(original);","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"RonaldTanSingWei"},"content":"        ReadOnlyFriendBook retrieved \u003d storageManager.readFriendBook().get();","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertEquals(original, new FriendBook(retrieved));","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"RonaldTanSingWei"},"content":"    public void getFriendBookFilePath() {","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"RonaldTanSingWei"},"content":"        assertNotNull(storageManager.getFriendBookFilePath());","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RonaldTanSingWei":17,"-":51}},{"path":"src/test/java/seedu/friendbook/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.testutil;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"RonaldTanSingWei":1,"-":33}},{"path":"src/test/java/seedu/friendbook/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.testutil;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Address;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Avatar;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Birthday;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"SajalVaishnav"},"content":"import seedu.friendbook.model.person.Description;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Email;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Name;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Phone;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"SajalVaishnav"},"content":"import seedu.friendbook.model.person.TeleHandle;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.reminder.Reminder;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":44,"author":{"gitId":"xnajasho"},"content":"        descriptor.setBirthday(person.getBirthday());","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":46,"author":{"gitId":"SajalVaishnav"},"content":"        descriptor.setTeleHandle(person.getTeleHandle());","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"SajalVaishnav"},"content":"        descriptor.setDescription(person.getDescription());","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"xnajasho"},"content":"        descriptor.setAvatar(person.getAvatar());","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"xnajasho"},"content":"        descriptor.setReminder(person.getReminder());","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"SajalVaishnav"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"SajalVaishnav"},"content":"     * Sets the {@code TeleHandle} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"SajalVaishnav"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"SajalVaishnav"},"content":"    public EditPersonDescriptorBuilder withTeleHandle(String teleHandle) {","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"SajalVaishnav"},"content":"        descriptor.setTeleHandle(new TeleHandle(teleHandle));","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"SajalVaishnav"},"content":"        return this;","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":92,"author":{"gitId":"SajalVaishnav"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":93,"author":{"gitId":"SajalVaishnav"},"content":"     * Sets the {@code Description} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-14"},{"lineNumber":94,"author":{"gitId":"SajalVaishnav"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":95,"author":{"gitId":"SajalVaishnav"},"content":"    public EditPersonDescriptorBuilder withDescription(String description) {","lastModifiedDate":"2021-10-14"},{"lineNumber":96,"author":{"gitId":"SajalVaishnav"},"content":"        descriptor.setDescription(new Description(description));","lastModifiedDate":"2021-10-14"},{"lineNumber":97,"author":{"gitId":"SajalVaishnav"},"content":"        return this;","lastModifiedDate":"2021-10-14"},{"lineNumber":98,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":99,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":110,"author":{"gitId":"xnajasho"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"xnajasho"},"content":"     * Sets the {@code Birthday} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"xnajasho"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"xnajasho"},"content":"    public EditPersonDescriptorBuilder withBirthday(String birthday) {","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"xnajasho"},"content":"        descriptor.setBirthday(new Birthday(birthday));","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"xnajasho"},"content":"        return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":119,"author":{"gitId":"pss-coder"},"content":"     * Sets the {@code Avatar} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-24"},{"lineNumber":120,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":121,"author":{"gitId":"pss-coder"},"content":"    public EditPersonDescriptorBuilder withAvatar(String avatar) {","lastModifiedDate":"2021-10-24"},{"lineNumber":122,"author":{"gitId":"pss-coder"},"content":"        descriptor.setAvatar(new Avatar(avatar));","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"pss-coder"},"content":"        return this;","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"xnajasho"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"xnajasho"},"content":"     * Sets the {@code Reminder} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"xnajasho"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"xnajasho"},"content":"    public EditPersonDescriptorBuilder withReminder(String reminder) {","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"xnajasho"},"content":"        descriptor.setReminder(new Reminder(reminder));","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"xnajasho"},"content":"        return this;","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"RonaldTanSingWei":3,"xnajasho":20,"-":79,"pss-coder":15,"SajalVaishnav":20}},{"path":"src/test/java/seedu/friendbook/testutil/FriendBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.testutil;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.FriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"RonaldTanSingWei"},"content":" * A utility class to help with building Friendbook objects.","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":" *     {@code FriendBook ab \u003d new FriendBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"public class FriendBookBuilder {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"RonaldTanSingWei"},"content":"    private FriendBook friendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"RonaldTanSingWei"},"content":"    public FriendBookBuilder() {","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"RonaldTanSingWei"},"content":"        friendBook \u003d new FriendBook();","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"RonaldTanSingWei"},"content":"    public FriendBookBuilder(FriendBook friendBook) {","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"RonaldTanSingWei"},"content":"        this.friendBook \u003d friendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"RonaldTanSingWei"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"RonaldTanSingWei"},"content":"     * Adds a new {@code Person} to the {@code FriendBook} that we are building.","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"RonaldTanSingWei"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"RonaldTanSingWei"},"content":"    public FriendBookBuilder withPerson(Person person) {","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"RonaldTanSingWei"},"content":"        friendBook.addPerson(person);","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"RonaldTanSingWei"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"RonaldTanSingWei"},"content":"    public FriendBook build() {","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"RonaldTanSingWei"},"content":"        return friendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"RonaldTanSingWei"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"RonaldTanSingWei"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"RonaldTanSingWei":34}},{"path":"src/test/java/seedu/friendbook/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.testutil;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Address;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"import seedu.friendbook.model.person.Avatar;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.person.Birthday;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"SajalVaishnav"},"content":"import seedu.friendbook.model.person.Description;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Email;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"SajalVaishnav"},"content":"import seedu.friendbook.model.person.TeleHandle;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"xnajasho"},"content":"import seedu.friendbook.model.reminder.Reminder;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"xnajasho"},"content":"    public static final String DEFAULT_BIRTHDAY \u003d \"1994-09-12\";","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"pss-coder"},"content":"    public static final String DEFAULT_TELEHANDLE \u003d \"\";","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"pss-coder"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"\";","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"pss-coder"},"content":"    public static final String DEFAULT_AVATAR \u003d \"0\";","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"xnajasho"},"content":"    public static final String DEFAULT_REMINDER \u003d \"off\";","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"xnajasho"},"content":"    private Birthday birthday;","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"SajalVaishnav"},"content":"    private TeleHandle teleHandle;","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"SajalVaishnav"},"content":"    private Description description;","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"pss-coder"},"content":"    private Avatar avatar;","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"xnajasho"},"content":"    private Reminder reminder;","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"xnajasho"},"content":"        birthday \u003d new Birthday(DEFAULT_BIRTHDAY);","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"SajalVaishnav"},"content":"        teleHandle \u003d new TeleHandle(DEFAULT_TELEHANDLE);","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"SajalVaishnav"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"pss-coder"},"content":"        avatar \u003d new Avatar(DEFAULT_AVATAR);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"xnajasho"},"content":"        reminder \u003d new Reminder(DEFAULT_REMINDER);","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"xnajasho"},"content":"        birthday \u003d personToCopy.getBirthday();","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"pss-coder"},"content":"        avatar \u003d personToCopy.getAvatar();","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"SajalVaishnav"},"content":"        teleHandle \u003d personToCopy.getTeleHandle();","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"SajalVaishnav"},"content":"        description \u003d personToCopy.getDescription();","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"xnajasho"},"content":"        reminder \u003d personToCopy.getReminder();","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":117,"author":{"gitId":"xnajasho"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"xnajasho"},"content":"     * Sets the {@code Birthday} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"xnajasho"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"xnajasho"},"content":"    public PersonBuilder withBirthday(String birthday) {","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"xnajasho"},"content":"        this.birthday \u003d new Birthday(birthday);","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"xnajasho"},"content":"        return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"SajalVaishnav"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":126,"author":{"gitId":"SajalVaishnav"},"content":"     * Sets the {@code TeleHandle} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-14"},{"lineNumber":127,"author":{"gitId":"SajalVaishnav"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"SajalVaishnav"},"content":"    public PersonBuilder withTeleHandle(String teleHandle) {","lastModifiedDate":"2021-10-14"},{"lineNumber":129,"author":{"gitId":"SajalVaishnav"},"content":"        this.teleHandle \u003d new TeleHandle(teleHandle);","lastModifiedDate":"2021-10-14"},{"lineNumber":130,"author":{"gitId":"SajalVaishnav"},"content":"        return this;","lastModifiedDate":"2021-10-14"},{"lineNumber":131,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":132,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":133,"author":{"gitId":"SajalVaishnav"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":134,"author":{"gitId":"SajalVaishnav"},"content":"     * Sets the {@code Description} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-14"},{"lineNumber":135,"author":{"gitId":"SajalVaishnav"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":136,"author":{"gitId":"SajalVaishnav"},"content":"    public PersonBuilder withDescription(String description) {","lastModifiedDate":"2021-10-14"},{"lineNumber":137,"author":{"gitId":"SajalVaishnav"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2021-10-14"},{"lineNumber":138,"author":{"gitId":"SajalVaishnav"},"content":"        return this;","lastModifiedDate":"2021-10-14"},{"lineNumber":139,"author":{"gitId":"SajalVaishnav"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":140,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":141,"author":{"gitId":"pss-coder"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"pss-coder"},"content":"     * Sets the {@code Picture} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"pss-coder"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"pss-coder"},"content":"    public PersonBuilder withAvatar(String avatar) {","lastModifiedDate":"2021-10-24"},{"lineNumber":145,"author":{"gitId":"pss-coder"},"content":"        this.avatar \u003d new Avatar(avatar);","lastModifiedDate":"2021-10-24"},{"lineNumber":146,"author":{"gitId":"pss-coder"},"content":"        return this;","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"pss-coder"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"xnajasho"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"xnajasho"},"content":"     * Sets the {@code Reminder} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"xnajasho"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"xnajasho"},"content":"    public PersonBuilder withReminder(String reminder) {","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"xnajasho"},"content":"        this.reminder \u003d new Reminder(reminder);","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"xnajasho"},"content":"        return this;","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"xnajasho"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"xnajasho"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":158,"author":{"gitId":"xnajasho"},"content":"        return new Person(name, phone, email, address, tags, birthday, teleHandle, description, avatar, reminder);","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"RonaldTanSingWei":8,"xnajasho":27,"-":87,"pss-coder":15,"SajalVaishnav":24}},{"path":"src/test/java/seedu/friendbook/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.testutil;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_AVATAR;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_BIRTHDAY;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"SajalVaishnav"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_REMINDER;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"SajalVaishnav"},"content":"import static seedu.friendbook.logic.parser.CliSyntax.PREFIX_TELEHANDLE;","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.AddCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"RonaldTanSingWei"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"xnajasho"},"content":"        sb.append(PREFIX_BIRTHDAY + person.getBirthday().value + \" \");","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"pss-coder"},"content":"        if (!person.getAvatar().isEmpty()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"pss-coder"},"content":"            sb.append(PREFIX_AVATAR + person.getAvatar().value + \" \");","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"pss-coder"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"pss-coder"},"content":"        if (!person.getTeleHandle().isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"SajalVaishnav"},"content":"            sb.append(PREFIX_TELEHANDLE + person.getTeleHandle().value + \" \");","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"pss-coder"},"content":"        if (!person.getDescription().isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"SajalVaishnav"},"content":"            sb.append(PREFIX_DESCRIPTION + person.getDescription().value + \" \");","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"SajalVaishnav"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"xnajasho"},"content":"        sb.append(PREFIX_REMINDER + person.getReminder().getStringValue() + \" \");","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"SajalVaishnav"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value)","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"SajalVaishnav"},"content":"                .append(\" \"));","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"SajalVaishnav"},"content":"        descriptor.getBirthday().ifPresent(birthday -\u003e sb.append(PREFIX_BIRTHDAY)","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"SajalVaishnav"},"content":"                .append(birthday.value).append(\" \"));","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"xnajasho"},"content":"        descriptor.getAvatar().ifPresent(avatar -\u003e sb.append(PREFIX_AVATAR).append(avatar.value).append(\"  \"));","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"SajalVaishnav"},"content":"        descriptor.getTeleHandle().ifPresent(teleHandle -\u003e sb.append(PREFIX_TELEHANDLE)","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"SajalVaishnav"},"content":"                .append(teleHandle.value).append(\" \"));","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"SajalVaishnav"},"content":"        descriptor.getDescription().ifPresent(description -\u003e sb.append(PREFIX_DESCRIPTION)","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"SajalVaishnav"},"content":"                .append(description.value).append(\" \"));","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"xnajasho"},"content":"        descriptor.getReminder().ifPresent(reminder -\u003e sb.append(PREFIX_REMINDER)","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"xnajasho"},"content":"                .append(reminder.getStringValue()).append(\" \"));","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"RonaldTanSingWei":6,"xnajasho":6,"-":49,"pss-coder":13,"SajalVaishnav":14}},{"path":"src/test/java/seedu/friendbook/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.testutil;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RonaldTanSingWei":1,"-":71}},{"path":"src/test/java/seedu/friendbook/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.testutil;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"RonaldTanSingWei":4,"-":51}},{"path":"src/test/java/seedu/friendbook/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.testutil;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"RonaldTanSingWei":2,"-":10}},{"path":"src/test/java/seedu/friendbook/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.testutil;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_AVATAR_AMY;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_AVATAR_BOB;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_BIRTHDAY_AMY;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_BIRTHDAY_BOB;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"SajalVaishnav"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_DESCRIPTION_AMY;","lastModifiedDate":"2021-10-14"},{"lineNumber":10,"author":{"gitId":"SajalVaishnav"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BOB;","lastModifiedDate":"2021-10-14"},{"lineNumber":11,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_REMINDER_AMY;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"xnajasho"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_REMINDER_BOB;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"pss-coder"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"SajalVaishnav"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_TELEHANDLE_AMY;","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"SajalVaishnav"},"content":"import static seedu.friendbook.logic.commands.CommandTestUtil.VALID_TELEHANDLE_BOB;","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":28,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.FriendBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"SajalVaishnav"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"SajalVaishnav"},"content":"            .withPhone(\"94351253\").withBirthday(\"1995-04-14\").withTeleHandle(\"wonderalice\")","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"pss-coder"},"content":"            .withAvatar(\"1\")","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"xnajasho"},"content":"            .withDescription(\"good friend\").withReminder(\"off\").withTags(\"friends\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"SajalVaishnav"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\").withTeleHandle(\"sonofben\")","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"xnajasho"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withBirthday(\"1992-04-13\")","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"pss-coder"},"content":"            .withAvatar(\"2\")","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"xnajasho"},"content":"            .withDescription(\"good friend\").withReminder(\"off\").withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"SajalVaishnav"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withBirthday(\"1991-08-12\")","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"pss-coder"},"content":"            .withAvatar(\"4\")","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"xnajasho"},"content":"            .withDescription(\"good friend\").withTeleHandle(\"pilkington\").withReminder(\"off\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"SajalVaishnav"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTeleHandle(\"daniella\")","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"pss-coder"},"content":"            .withAvatar(\"5\")","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"xnajasho"},"content":"            .withDescription(\"good friend\").withBirthday(\"1999-02-05\").withReminder(\"off\").withTags(\"friends\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"SajalVaishnav"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withBirthday(\"1993-07-13\")","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"pss-coder"},"content":"            .withAvatar(\"6\")","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"xnajasho"},"content":"            .withDescription(\"good friend\").withTeleHandle(\"salmonella\").withReminder(\"off\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"SajalVaishnav"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withBirthday(\"1999-09-23\")","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"pss-coder"},"content":"            .withAvatar(\"17\")","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"xnajasho"},"content":"            .withDescription(\"good friend\").withTeleHandle(\"loverofshrek\").withReminder(\"off\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"SajalVaishnav"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withBirthday(\"1997-05-14\")","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"RonaldTanSingWei"},"content":"            .withAvatar(\"15\").withDescription(\"good friend\")","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"RonaldTanSingWei"},"content":"            .withTeleHandle(\"thedinosaur\").withReminder(\"off\").withTags(\"lunchmates\").build();","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"SajalVaishnav"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").withBirthday(\"1995-10-12\")","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"pss-coder"},"content":"            .withAvatar(\"15\")","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"xnajasho"},"content":"            .withDescription(\"good friend\").withTeleHandle(\"mainhunyaha\").withReminder(\"off\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"SajalVaishnav"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").withBirthday(\"1999-03-11\")","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"pss-coder"},"content":"            .withAvatar(\"16\")","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"xnajasho"},"content":"            .withDescription(\"good friend\").withTeleHandle(\"idaaaa\").withReminder(\"off\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"pss-coder"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withBirthday(VALID_BIRTHDAY_AMY)","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"SajalVaishnav"},"content":"            .withDescription(VALID_DESCRIPTION_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"pss-coder"},"content":"            .withAvatar(VALID_AVATAR_AMY)","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"xnajasho"},"content":"            .withTeleHandle(VALID_TELEHANDLE_AMY)","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"xnajasho"},"content":"            .withReminder(VALID_REMINDER_AMY).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"pss-coder"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withBirthday(VALID_BIRTHDAY_BOB)","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"SajalVaishnav"},"content":"            .withDescription(VALID_DESCRIPTION_BOB).withTeleHandle(VALID_TELEHANDLE_BOB)","lastModifiedDate":"2021-10-14"},{"lineNumber":88,"author":{"gitId":"pss-coder"},"content":"            .withAvatar(VALID_AVATAR_BOB)","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"xnajasho"},"content":"            .withReminder(VALID_REMINDER_BOB)","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"xnajasho"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"RonaldTanSingWei"},"content":"     * Returns a {@code FriendBook} with all the typical persons.","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"RonaldTanSingWei"},"content":"    public static FriendBook getTypicalFriendBook() {","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"RonaldTanSingWei"},"content":"        FriendBook ab \u003d new FriendBook();","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"RonaldTanSingWei":8,"xnajasho":15,"-":45,"pss-coder":26,"SajalVaishnav":16}},{"path":"src/test/java/seedu/friendbook/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"RonaldTanSingWei":1,"-":34}},{"path":"src/test/java/seedu/friendbook/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"RonaldTanSingWei"},"content":"package seedu.friendbook.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"RonaldTanSingWei"},"content":"import static seedu.friendbook.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"RonaldTanSingWei"},"content":"import seedu.friendbook.MainApp;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"RonaldTanSingWei":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"\u003c?import seedu.friendbook.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"RonaldTanSingWei":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"RonaldTanSingWei"},"content":"\u003cfx:root type\u003d\"seedu.friendbook.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"RonaldTanSingWei":1,"-":5}}]
