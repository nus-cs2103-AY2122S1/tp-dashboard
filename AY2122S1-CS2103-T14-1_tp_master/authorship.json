[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"# SeniorLove","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103-T14-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S1-CS2103-T14-1/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"A contact management desktop application which aims to facilitate community workers\u0027 visits to the elderly. It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Senior Love can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"* This is **a course project for Software Engineering (SE) students**.\u003cbr\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"* The project simulates an ongoing software project for a desktop application (called _SeniorLove_) used for managing contact details.","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"* It is named `SeniorLove` (`SL` for short) because it was created for community service staff working with seniors.","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"## How to use","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"User Guide can be found [here](docs/UserGuide.md) and Developer Guide can be found [here](docs/DeveloperGuide.md).","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"## About us","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"We are a group of Computer Science students who loves software engineering. More details can be found [here](docs/AboutUs.md).","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"## Credit","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org). For the detailed documentation of the original project, see the [Address Book Product Website](https://se-education.org/addressbook-level3).","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"ziqing26":17,"-":5}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"You can reach us through the following email addresses:","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"* Lua Yi Da `e0543409@u.nus.edu`","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"* Chen Yiyang `e0563851@u.nus.edu`","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"* Hong Ai Ling `ailing.hong@u.nus.edu`","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"* Hu Linglong `e0580032@u.nus.edu`","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"* Zhang Ziqing `zhangziqing@u.nus.edu`","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"### Lua Yi Da","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"\u003cimg src\u003d\"images/luayida99.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"[[github](http://github.com/luayida99)]","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"[[portfolio](team/luayida99.md)]","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"* Responsibilities: Deliverables and deadlines","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Chen-Yiyang"},"content":"### Chen Yiyang","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"ailing35"},"content":"\u003cimg src\u003d\"images/chen-yiyang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Chen-Yiyang"},"content":"[[github](https://github.com/Chen-Yiyang)]","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"Chen-Yiyang"},"content":"[[portfolio](team/chen-yiyang.md)]","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"Chen-Yiyang"},"content":"* Responsibilities: Integration","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"ailing35"},"content":"### Hong Ai Ling","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"ailing35"},"content":"\u003cimg src\u003d\"images/ailing35.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"ailing35"},"content":"[[github](https://github.com/ailing35)]","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"ailing35"},"content":"[[portfolio](team/ailing35.md)]","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"ailing35"},"content":"* Responsibilities: Code quality","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"ailing35"},"content":"### Hu Linglong","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"ailing35"},"content":"\u003cimg src\u003d\"images/huisthat.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"ailing35"},"content":"[[github](http://github.com/huisthat)] ","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"ailing35"},"content":"[[portfolio](team/huisthat.md)]","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"ailing35"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"### Zhang Ziqing","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"ailing35"},"content":"\u003cimg src\u003d\"images/ziqing26.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"ziqing26"},"content":"[[github](http://github.com/ziqing26)]","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"ailing35"},"content":"[[portfolio](team/ziqing26.md)]","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"ziqing26"},"content":"* Responsibilities: Testing","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"ziqing26"},"content":"  Hello I am a CS undergraduate from New College who like playing around with cool stuff, experienced flute player (13 years) and anime lover! Reach out to me via [email](mailto:zhangziqing@u.nus.edu).","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"luayida99":5,"ailing35":19,"ziqing26":5,"Chen-Yiyang":4,"-":34}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"luayida99"},"content":"* social worker who has a need to manage a significant number of elderly contacts with limited or no family support, and contact them regularly to check on their well-being","lastModifiedDate":"2021-09-27"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"luayida99"},"content":"**Value proposition**:  ","lastModifiedDate":"2021-09-27"},{"lineNumber":267,"author":{"gitId":"luayida99"},"content":"Since social workers need to contact many different elderly every day, we created this app to help them easily avoid missing out on any elderly while reducing the hassle of manually checking the frequency of contacts for each elderly.","lastModifiedDate":"2021-09-27"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"| Priority | As a …​                                 | I want to …​                             | So that I can…​                                                     |","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"luayida99"},"content":"| -------- | ------------------------------------------ | ------------------------------------------- | ---------------------------------------------------------------------- |","lastModifiedDate":"2021-09-27"},{"lineNumber":276,"author":{"gitId":"luayida99"},"content":"| `* * *`  | social worker                              | add entries                                 | keep track of new elderly who come under my care                       |","lastModifiedDate":"2021-09-27"},{"lineNumber":277,"author":{"gitId":"luayida99"},"content":"| `* * *`  | social worker                              | delete entries                              | keep track of elderly who are no longer under my care                  |","lastModifiedDate":"2021-09-27"},{"lineNumber":278,"author":{"gitId":"luayida99"},"content":"| `* * *`  | social worker                              | see elderlies\u0027 contacts and home address    | know how to contact them                                               |","lastModifiedDate":"2021-09-27"},{"lineNumber":279,"author":{"gitId":"luayida99"},"content":"| `* * *`  | social worker                              | add deadlines to contact a elderly          | remember to check in on them                                           |","lastModifiedDate":"2021-09-27"},{"lineNumber":280,"author":{"gitId":"luayida99"},"content":"| `* * *`  | social worker                              | add an ‘until’ date for recurring deadlines | know when to stop visiting a elderly on a recurring basis              |","lastModifiedDate":"2021-09-27"},{"lineNumber":281,"author":{"gitId":"luayida99"},"content":"| `* * *`  | social worker                              | see data from my previous session           | save time spent importing entries each session                         |","lastModifiedDate":"2021-09-27"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":286,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"Chen-Yiyang"},"content":"(For all use cases below, the **System** is `SeniorLove` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-28"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"Chen-Yiyang"},"content":"**Use case: Add a person**","lastModifiedDate":"2021-09-28"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"Chen-Yiyang"},"content":"1. User adds in a new senior’s name together with phone number, language and address","lastModifiedDate":"2021-09-28"},{"lineNumber":295,"author":{"gitId":"Chen-Yiyang"},"content":"2. SeniorLove shows a new entry for the elderly just added","lastModifiedDate":"2021-09-28"},{"lineNumber":296,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"Chen-Yiyang"},"content":"* 1a. User also inputs last visited and visit date.","lastModifiedDate":"2021-09-28"},{"lineNumber":302,"author":{"gitId":"Chen-Yiyang"},"content":"    * 1a1. SeniorLoves shows a new entry for the elderly added, with the optional details as well. ","lastModifiedDate":"2021-09-28"},{"lineNumber":303,"author":{"gitId":"Chen-Yiyang"},"content":"      ","lastModifiedDate":"2021-09-28"},{"lineNumber":304,"author":{"gitId":"Chen-Yiyang"},"content":"      Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":305,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":306,"author":{"gitId":"Chen-Yiyang"},"content":"* 2a. User inputs a name that is already inside SeniorLove’s list.","lastModifiedDate":"2021-09-28"},{"lineNumber":307,"author":{"gitId":"Chen-Yiyang"},"content":"    * 2a1. SeniorLove shows an error message notifying the user that the name already exists.","lastModifiedDate":"2021-09-28"},{"lineNumber":308,"author":{"gitId":"Chen-Yiyang"},"content":"    ","lastModifiedDate":"2021-09-28"},{"lineNumber":309,"author":{"gitId":"Chen-Yiyang"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-28"},{"lineNumber":310,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":311,"author":{"gitId":"Chen-Yiyang"},"content":"* 3a. User inputs a new senior’s name with some compulsory details missing.","lastModifiedDate":"2021-09-28"},{"lineNumber":312,"author":{"gitId":"Chen-Yiyang"},"content":"    * 3a1. SeniorLove shows an error message notifying the user about the missing details.","lastModifiedDate":"2021-09-28"},{"lineNumber":313,"author":{"gitId":"Chen-Yiyang"},"content":"      ","lastModifiedDate":"2021-09-28"},{"lineNumber":314,"author":{"gitId":"Chen-Yiyang"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-28"},{"lineNumber":315,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":316,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":318,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2021-09-28"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":320,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":322,"author":{"gitId":"Chen-Yiyang"},"content":"1. User requests to list seniors","lastModifiedDate":"2021-09-28"},{"lineNumber":323,"author":{"gitId":"Chen-Yiyang"},"content":"2. SeniorLove shows a list of seniors","lastModifiedDate":"2021-09-28"},{"lineNumber":324,"author":{"gitId":"Chen-Yiyang"},"content":"3. User requests to delete a specific senior in the list","lastModifiedDate":"2021-09-28"},{"lineNumber":325,"author":{"gitId":"Chen-Yiyang"},"content":"4. SeniorLove deletes the senior ","lastModifiedDate":"2021-09-28"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":329,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":330,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"Chen-Yiyang"},"content":"    * 3a1. SeniorLove shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":336,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":337,"author":{"gitId":"Chen-Yiyang"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":338,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":339,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":340,"author":{"gitId":"Chen-Yiyang"},"content":"**Use case: Mark a visit as done**","lastModifiedDate":"2021-09-28"},{"lineNumber":341,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":342,"author":{"gitId":"Chen-Yiyang"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":344,"author":{"gitId":"Chen-Yiyang"},"content":"1. User requests to list seniors","lastModifiedDate":"2021-09-28"},{"lineNumber":345,"author":{"gitId":"Chen-Yiyang"},"content":"2. SeniorLove shows a list of seniors","lastModifiedDate":"2021-09-28"},{"lineNumber":346,"author":{"gitId":"Chen-Yiyang"},"content":"3. User requests to mark a specific visit as done","lastModifiedDate":"2021-09-28"},{"lineNumber":347,"author":{"gitId":"Chen-Yiyang"},"content":"4. SeniorLove mark a specific visit as done","lastModifiedDate":"2021-09-28"},{"lineNumber":348,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":349,"author":{"gitId":"Chen-Yiyang"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"Chen-Yiyang"},"content":"**Extension**","lastModifiedDate":"2021-09-28"},{"lineNumber":352,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":353,"author":{"gitId":"Chen-Yiyang"},"content":"* 3a. There is no current pending visit.","lastModifiedDate":"2021-09-28"},{"lineNumber":354,"author":{"gitId":"Chen-Yiyang"},"content":"    * 3a1. SeniorLove shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":359,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"ailing35"},"content":"3.  Should be usable by a novice who has never used the system.","lastModifiedDate":"2021-09-28"},{"lineNumber":364,"author":{"gitId":"ailing35"},"content":"4.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-09-28"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"ailing35"},"content":"* **User**: A community worker using the app to manage multiple elderlies","lastModifiedDate":"2021-09-28"},{"lineNumber":369,"author":{"gitId":"ailing35"},"content":"* **Visit**: A visit to an elderly\u0027s home scheduled by the user","lastModifiedDate":"2021-09-28"},{"lineNumber":370,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"luayida99":10,"ailing35":4,"Chen-Yiyang":43,"-":366}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"**SeniorLove** is a contact management desktop app which aims to facilitate community workers\u0027 visits to the elderly. It is **optimized for use via a Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Senior Love can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"##Table of Contents","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"- [Quick start](#quick-start)","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"- [Features](#features)","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"  - [Adding elderly details](#add-elderly-details--add)","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"  - [Deleting an elderly or corresponding visit](#delete-an-elderly-or-corresponding-visit--delete)","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"  - [Listing all elderly](#listing-all-persons--list)","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"  - [Locating elderly by name](#locating-persons-by-name--find)","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"  - [Scheduling a visit to an elderly](#scheduling-a-visit-to-an-elderly--visit)","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"  - [Marking one visit as done](#marking-one-visit-as-done--done)","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"  - [Viewing help](#viewing-help--help)","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"  - [Clearing all entries](#clearing-all-entries--clear)","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"  - [Exiting the app](#exiting-the-program--exit)","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"- [FAQ](#faq)","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"- [Command summary](#command-summary)","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"2. Download the latest `seniorLove.jar` from [here](https://github.com/AY2122S1-CS2103-T14-1/tp).","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your SeniorLove.","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"   * **`add`**`n/John Doe p/98765432 l/Chinese a/John street, block 123, #01-01` : Adds an elderly contact named `John Doe` to the SeniorLove.","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"   * **`delete`**`3` : Deletes the 3rd elderly shown in the current list.","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"huisthat"},"content":"   * **`list`** : Lists all elderly.","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"   * **`find`**`Hans` : Find all elderly whose names contain Hans.","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"   * **`clear`** : Deletes all elderly.","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"7. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":"* Add elderly with contact details","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":"* Delete elderly or deadline","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"* List elderly details","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"ziqing26"},"content":"* Find an elderly","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"ziqing26"},"content":"* Schedule a visit to an elderly","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"ziqing26"},"content":"* Mark the current scheduled visit as done (update the last visited date and delete the current visit)","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"ziqing26"},"content":"* View help","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"ziqing26"},"content":"## Notes about command format:","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"luayida99"},"content":"### Add elderly details : `add`","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"luayida99"},"content":"Adds an elderly and all relevant details into SeniorLove.","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"luayida99"},"content":"Format: `add n/NAME p/PHONE_NUMBER l/LANGUAGE a/ADDRESS [lv/LAST_VISITED] [v/VISIT_DATE]`","lastModifiedDate":"2021-09-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"luayida99"},"content":"* Adds a new elderly with the following information: `NAME`, `PHONE_NUMBER`, `LANGUAGE`, `ADDRESS`, `LAST_VISITED` and `VISIT` may be optionally included.","lastModifiedDate":"2021-09-27"},{"lineNumber":97,"author":{"gitId":"luayida99"},"content":"* `NAME` is the elderly’s name. **This must be included.**","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"luayida99"},"content":"* `PHONE_NUMBER` is the elderly’s phone number. **This must be included.**","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"luayida99"},"content":"* `LANGUAGE` is the elderly’s preferred language for communication. **This must be included.**","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"luayida99"},"content":"* `ADDRESS` is the elderly’s address to be visited. **This must be included.**","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"luayida99"},"content":"* `LAST_VISITED` is the last date that the social worker has visited the elderly. **This is optional to include.**","lastModifiedDate":"2021-09-27"},{"lineNumber":102,"author":{"gitId":"luayida99"},"content":"* `VISIT_DATE` is the next scheduled date for the elderly’s visit. **This is optional to include.**","lastModifiedDate":"2021-09-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"luayida99"},"content":"Examples:","lastModifiedDate":"2021-09-27"},{"lineNumber":105,"author":{"gitId":"luayida99"},"content":"* `add n/John /p12345678 l/English a/College Avenue East 18, New College` adds an elderly and details without the `LAST_VISITED` and `VISIT_DATE`.","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"luayida99"},"content":"* `add n/Johnny /p87654321 l/Malay a/200 Toa Payoh Avenue 53  lv/2021-09-31` adds an elderly and details without the `VISIT_DATE`.","lastModifiedDate":"2021-09-27"},{"lineNumber":107,"author":{"gitId":"luayida99"},"content":"* `add n/Janet /p54860332 l/Tamil a/200 Toa Payoh Avenue 26 v/2021-10-31` adds an elderly and details without the `LAST_VISITED`.","lastModifiedDate":"2021-09-27"},{"lineNumber":108,"author":{"gitId":"luayida99"},"content":"* `add n/Jane /p54867392 l/Chinese a/200 Toa Payoh Avenue 56  lv/2021-09-31 v/2021-10-31` adds an elderly and details with `LAST_VISITED` and `VISIT_DATE`.","lastModifiedDate":"2021-09-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":111,"author":{"gitId":"luayida99"},"content":"### Delete an elderly or corresponding visit : `delete`","lastModifiedDate":"2021-09-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":113,"author":{"gitId":"luayida99"},"content":"Deletes either an elderly’s details or an elderly’s visit from SeniorLove.","lastModifiedDate":"2021-09-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"luayida99"},"content":"Format: `delete [v/] INDEX`","lastModifiedDate":"2021-09-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"luayida99"},"content":"* Deletes either the elderly’s details or the corresponding elderly’s visit at list index `INDEX`. `INDEX` is a **strictly positive integer, and must be included.**","lastModifiedDate":"2021-09-27"},{"lineNumber":118,"author":{"gitId":"luayida99"},"content":"* `v/` denotes if the item to be deleted is an elderly’s details or the elderly’s corresponding visit. **This is optional to include.** The presence of v/ indicates that it is the elderly’s visit that is to be deleted, while its exclusion indicates that it is the elderly’s details that is to be deleted.","lastModifiedDate":"2021-09-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"luayida99"},"content":"* `delete 1` deletes the elderly’s details of the elderly at list index 1.","lastModifiedDate":"2021-09-27"},{"lineNumber":122,"author":{"gitId":"luayida99"},"content":"* `delete v/ 1` deletes the elderly’s visit of the elderly at list index 1.","lastModifiedDate":"2021-09-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":143,"author":{"gitId":"huisthat"},"content":"### Listing all persons : `list`","lastModifiedDate":"2021-09-27"},{"lineNumber":144,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":145,"author":{"gitId":"ailing35"},"content":"Shows a list of all the elderly and their associated details in the address book.","lastModifiedDate":"2021-09-28"},{"lineNumber":146,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":147,"author":{"gitId":"huisthat"},"content":"Format: `list`","lastModifiedDate":"2021-09-27"},{"lineNumber":148,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":149,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Locating persons by name : `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"ailing35"},"content":"Finds elderly whose names contain any of the given keywords.","lastModifiedDate":"2021-09-28"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"ailing35"},"content":"Format: `find n/KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-09-28"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"ailing35"},"content":"* `find n/John` returns `john` and `John Doe`","lastModifiedDate":"2021-09-28"},{"lineNumber":165,"author":{"gitId":"ailing35"},"content":"* `find n/alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":166,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"huisthat"},"content":"### Scheduling a visit to an elderly : `visit`","lastModifiedDate":"2021-09-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"Chen-Yiyang"},"content":"Updates the time for the next visit to the elderly with the given index of the elderly in the address book.","lastModifiedDate":"2021-09-28"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":172,"author":{"gitId":"Chen-Yiyang"},"content":"Format: `visit INDEX  at/ VISIT_DATE`","lastModifiedDate":"2021-09-28"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":174,"author":{"gitId":"Chen-Yiyang"},"content":"* `INDEX` corresponds to the elderly’s index in the address book. It is a strictly positive integer, and must be included.","lastModifiedDate":"2021-09-28"},{"lineNumber":175,"author":{"gitId":"Chen-Yiyang"},"content":"* The visit date is in the format of `yyyy-mm-dd`, and it must be included.","lastModifiedDate":"2021-09-28"},{"lineNumber":176,"author":{"gitId":"Chen-Yiyang"},"content":"* If there is already an existing visit scheduled for the elderly, this command will schedule a new visit that overwrites the existing one.","lastModifiedDate":"2021-09-28"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":178,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-28"},{"lineNumber":179,"author":{"gitId":"Chen-Yiyang"},"content":"* `visit 1 2021-12-31` schedules a meeting to the first elderly in the address book on 31th December 2021.","lastModifiedDate":"2021-09-28"},{"lineNumber":180,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":181,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":182,"author":{"gitId":"huisthat"},"content":"### Marking one visit as done : `done`","lastModifiedDate":"2021-09-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"Chen-Yiyang"},"content":"Marks a scheduled visit to an elderly as done.","lastModifiedDate":"2021-09-28"},{"lineNumber":185,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":186,"author":{"gitId":"Chen-Yiyang"},"content":"Format: `done INDEX`","lastModifiedDate":"2021-09-28"},{"lineNumber":187,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":188,"author":{"gitId":"Chen-Yiyang"},"content":"* `INDEX` is the index of the elderly visited by the user. There must be a scheduled visit for the elderly before the visit can be marked as done.","lastModifiedDate":"2021-09-28"},{"lineNumber":189,"author":{"gitId":"Chen-Yiyang"},"content":"* Once a scheduled visit is marked as done, it will update the last visit time of the elderly, and now there is no longer a scheduled next visit for the elderly.","lastModifiedDate":"2021-09-28"},{"lineNumber":190,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":191,"author":{"gitId":"Chen-Yiyang"},"content":"Examples:","lastModifiedDate":"2021-09-28"},{"lineNumber":192,"author":{"gitId":"Chen-Yiyang"},"content":"* `done 1` marks the visit to the first elderly as done, assuming there was a scheduled visit for the elderly before running this command.","lastModifiedDate":"2021-09-28"},{"lineNumber":193,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":194,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":195,"author":{"gitId":"luayida99"},"content":"### Viewing help : `help`","lastModifiedDate":"2021-09-27"},{"lineNumber":196,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":197,"author":{"gitId":"luayida99"},"content":"Show a message linking users to the user guide.","lastModifiedDate":"2021-09-27"},{"lineNumber":198,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":199,"author":{"gitId":"luayida99"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2021-09-27"},{"lineNumber":200,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":201,"author":{"gitId":"luayida99"},"content":"Format: `help`","lastModifiedDate":"2021-09-27"},{"lineNumber":202,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":204,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":211,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":218,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":223,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"AddressBook data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-02-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-04"},{"lineNumber":229,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":231,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":232,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"ziqing26"},"content":"**add** | `add n/NAME p/PHONE_NUMBER l/LANGUAGE a/ADDRESS [lv/LAST_VISITED] [v/VISIT_DATE]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 lv/1900-11-08 1800 v/2021-11-08`","lastModifiedDate":"2021-09-27"},{"lineNumber":250,"author":{"gitId":"ziqing26"},"content":"**delete** | `delete [/v] INDEX`\u003cbr\u003e e.g., `delete 3` (delete the third senior) \u003cbr\u003e e.g., `delete v/2` (delete the scheduled visit of the second senior)","lastModifiedDate":"2021-09-27"},{"lineNumber":251,"author":{"gitId":"ziqing26"},"content":"**edit** | `visit INDEX at/ VISIT_DATE`\u003cbr\u003e e.g.,`visit 3 at/ 1900-11-08 1800`","lastModifiedDate":"2021-09-27"},{"lineNumber":252,"author":{"gitId":"ziqing26"},"content":"**find** | `find n/NAME`\u003cbr\u003e e.g., `find n/yida`","lastModifiedDate":"2021-09-27"},{"lineNumber":253,"author":{"gitId":"ziqing26"},"content":"**list** | `list`","lastModifiedDate":"2021-09-27"},{"lineNumber":254,"author":{"gitId":"ziqing26"},"content":"**clear** | `clear`","lastModifiedDate":"2021-09-27"},{"lineNumber":255,"author":{"gitId":"ziqing26"},"content":"**exit** | `exit`","lastModifiedDate":"2021-09-27"},{"lineNumber":256,"author":{"gitId":"ziqing26"},"content":"**help** | `help`","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"luayida99":33,"huisthat":25,"ailing35":11,"ziqing26":24,"Chen-Yiyang":19,"-":144}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"title: SeniorLove","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103-T14-1/tp/branch/master/graph/badge.svg?token\u003dVVNULACJXB)](https://codecov.io/gh/AY2122S1-CS2103-T14-1/tp)","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"**SeniorLove is a contact management desktop app which aims to facilitate community workers\u0027 visits to the elderly.** It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Senior Love can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"* If you are interested in using SeniorLove, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"* If you are interested about developing SeniorLove, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"luayida99":4,"-":15}},{"path":"docs/team/ailing35.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"layout: page","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"title: Hong Ai Ling\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"### Project: SeniorLove","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"SeniorLove is a contact management desktop app which aims to facilitate community workers\u0027 visits to the elderly. It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Senior Love can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"ailing35"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"ailing35"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"ailing35"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"ailing35"},"content":"* **Project management**:","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"ailing35"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"ailing35"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"ailing35"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"ailing35"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"ailing35"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"ailing35"},"content":"    * User Guide:","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"ailing35"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"ailing35"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"ailing35"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"ailing35"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"ailing35"},"content":"* **Community**:","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"ailing35"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"ailing35"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"ailing35"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"ailing35"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"ailing35"},"content":"* **Tools**:","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"ailing35"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"ailing35"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"ailing35"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"ailing35":46}},{"path":"docs/team/chen-yiyang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Chen-Yiyang"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Chen-Yiyang"},"content":"layout: page","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Chen-Yiyang"},"content":"title: Chen Yiyang\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Chen-Yiyang"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"Chen-Yiyang"},"content":"### Project: SeniorLove","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Chen-Yiyang"},"content":"SeniorLove is a desktop contact management application used for facilitating social worker\u0027s visits to the elderly. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"Chen-Yiyang"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Chen-Yiyang"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Chen-Yiyang"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Chen-Yiyang"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"Chen-Yiyang"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"Chen-Yiyang"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"Chen-Yiyang"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"Chen-Yiyang"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"Chen-Yiyang"},"content":"* **Project management**:","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"Chen-Yiyang"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"Chen-Yiyang"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"Chen-Yiyang"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"Chen-Yiyang"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"Chen-Yiyang"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"Chen-Yiyang"},"content":"    * User Guide:","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"Chen-Yiyang"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"Chen-Yiyang"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"Chen-Yiyang"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"Chen-Yiyang"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"Chen-Yiyang"},"content":"* **Community**:","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"Chen-Yiyang"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"Chen-Yiyang"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"Chen-Yiyang"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"Chen-Yiyang"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"Chen-Yiyang"},"content":"* **Tools**:","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"Chen-Yiyang"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"Chen-Yiyang"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"Chen-Yiyang"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Chen-Yiyang":46}},{"path":"docs/team/huisthat.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"layout: page","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"title: Hu Linglong\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"### Project: SeniorLove","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"SeniorLove is a desktop contact management application used for facilitating social worker\u0027s visits to the elderly. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"* **Project management**:","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"    * User Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"* **Community**:","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"* **Tools**:","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"huisthat"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"huisthat"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"huisthat":46}},{"path":"docs/team/luayida99.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"layout: page","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"title: Lua Yi Da\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":"### Project: SeniorLove","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"SeniorLove is a contact management desktop app which aims to facilitate community workers\u0027 visits to the elderly. It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Senior Love can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"* **Project management**:","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"    * User Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"luayida99"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"luayida99"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"luayida99"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"luayida99"},"content":"* **Community**:","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"luayida99"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"luayida99"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"luayida99"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"luayida99"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"luayida99"},"content":"* **Tools**:","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"luayida99"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"luayida99"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"luayida99"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"luayida99":46}},{"path":"docs/team/ziqing26.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"layout: page","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"title: Zhang Ziqing\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"### Project: SeniorLove","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"SeniorLove is a contact management desktop app which aims to facilitate community workers\u0027 visits to the elderly. It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Senior Love can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"* **Project management**:","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"  * User Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"* **Community**:","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"* **Tools**:","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"ziqing26":46}}]
