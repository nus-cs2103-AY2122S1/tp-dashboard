[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"# SeniorLove","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103-T14-1/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2122S1-CS2103-T14-1/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"A contact management desktop application which aims to facilitate community workers\u0027 visits to the elderly. It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Senior Love can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-11"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"* This is **a course project for Software Engineering (SE) students**.\u003cbr\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"* The project simulates an ongoing software project for a desktop application (called _SeniorLove_) used for managing contact details.","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"* It is named `SeniorLove` (`SL` for short) because it was created for community service staff working with seniors.","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"## How to use","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"User Guide can be found [here](docs/UserGuide.md) and Developer Guide can be found [here](docs/DeveloperGuide.md).","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"## About us","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"We are a group of Computer Science students who loves software engineering. More details can be found [here](docs/AboutUs.md).","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"## Credit","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org). For the detailed documentation of the original project, see the [Address Book Product Website](https://se-education.org/addressbook-level3).","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"ziqing26":17,"-":5}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"run {","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    archiveName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2018-04-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"luayida99":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"You can reach us through the following email addresses:","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"* Lua Yi Da `e0543409@u.nus.edu`","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"* Chen Yiyang `e0563851@u.nus.edu`","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"* Hong Ai Ling `ailing.hong@u.nus.edu`","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"* Hu Linglong `e0580032@u.nus.edu`","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"* Zhang Ziqing `zhangziqing@u.nus.edu`","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"### Lua Yi Da","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"\u003cimg src\u003d\"images/luayida99.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"[[github](http://github.com/luayida99)]","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"[[portfolio](team/luayida99.md)]","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"* Responsibilities: Deliverables and deadlines","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Chen-Yiyang"},"content":"### Chen Yiyang","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"ailing35"},"content":"\u003cimg src\u003d\"images/chen-yiyang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Chen-Yiyang"},"content":"[[github](https://github.com/Chen-Yiyang)]","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"Chen-Yiyang"},"content":"[[portfolio](team/chen-yiyang.md)]","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"Chen-Yiyang"},"content":"* Responsibilities: Integration","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"ailing35"},"content":"### Hong Ai Ling","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"ailing35"},"content":"\u003cimg src\u003d\"images/ailing35.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"ailing35"},"content":"[[github](https://github.com/ailing35)]","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"ailing35"},"content":"[[portfolio](team/ailing35.md)]","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"ailing35"},"content":"* Responsibilities: Code quality","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"ailing35"},"content":"### Hu Linglong","lastModifiedDate":"2021-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":49,"author":{"gitId":"ailing35"},"content":"\u003cimg src\u003d\"images/huisthat.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":51,"author":{"gitId":"ailing35"},"content":"[[github](http://github.com/huisthat)]","lastModifiedDate":"2021-09-28"},{"lineNumber":52,"author":{"gitId":"ailing35"},"content":"[[portfolio](team/huisthat.md)]","lastModifiedDate":"2021-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"ailing35"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2021-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"### Zhang Ziqing","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"ailing35"},"content":"\u003cimg src\u003d\"images/ziqing26.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"ziqing26"},"content":"[[github](http://github.com/ziqing26)]","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"ailing35"},"content":"[[portfolio](team/ziqing26.md)]","lastModifiedDate":"2021-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"ziqing26"},"content":"* Responsibilities: Testing","lastModifiedDate":"2021-09-27"},{"lineNumber":66,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":67,"author":{"gitId":"ziqing26"},"content":"  Hello I am a CS undergraduate from New College who like playing around with cool stuff, experienced flute player (13 years) and anime lover! Reach out to me via [email](mailto:zhangziqing@u.nus.edu).","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"luayida99":5,"ailing35":19,"ziqing26":5,"Chen-Yiyang":4,"-":34}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"Chen-Yiyang"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point).","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"Chen-Yiyang"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned from `Logic`.","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"ziqing26"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram1.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"huisthat"},"content":"### Add command","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"huisthat"},"content":"#### Implementation details","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"huisthat"},"content":"The add command is used to add a person to SeniorLove.","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"huisthat"},"content":"It makes use of polymorphism and interfaces, and is similar in implementation to other commands in SeniorLove:","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"huisthat"},"content":"- `AddCommand` extends `Command`","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"huisthat"},"content":"- `AddCommandParser` implements `Parser\u003cAddCommand\u003e`","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"huisthat"},"content":"The following activity diagram illustrates the activity flow of the add command:","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"ailing35"},"content":"![AddCommandActivityDiagram](images/AddCommandActivityDiagram.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"huisthat"},"content":"The following sequence diagram illustrates how different components of SeniorLove interact with each other:","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"huisthat"},"content":"![VisitSequenceDiagram](images/AddSequenceDiagram.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"ailing35"},"content":"Given below is an example usage scenario:","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"ailing35"},"content":"1. User inputs the add command, specifying the name, phone number, address and preferred language of the elderly to be added. They may also optionally include their health conditions, last visit, and the next scheduled visit.","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"ailing35"},"content":"2. After successfully parsing the user input, the `AddCommand#execute(Model model)` method is called.","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"ailing35"},"content":"3. The elderly that the user wants to add will be stored.","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"ailing35"},"content":"4. Upon successfully adding the elderly to address book, a `CommandResult` object is instantiated and returned to `LogicManager`.","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"ailing35"},"content":"#### Design choices","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"ailing35"},"content":"- Optional last visit and visit attributes","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":182,"author":{"gitId":"ailing35"},"content":"  Both attributes are implemented as optional to allow users the flexibility to either add them on-the-go or omit them.","lastModifiedDate":"2021-10-20"},{"lineNumber":183,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":184,"author":{"gitId":"luayida99"},"content":"### Visit command","lastModifiedDate":"2021-10-18"},{"lineNumber":185,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":186,"author":{"gitId":"luayida99"},"content":"#### Implementation details","lastModifiedDate":"2021-10-18"},{"lineNumber":187,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":188,"author":{"gitId":"luayida99"},"content":"The visit command is used to add a visit to an existing person in SeniorLove.","lastModifiedDate":"2021-10-18"},{"lineNumber":189,"author":{"gitId":"luayida99"},"content":"It makes use of polymorphism and interfaces, and is similar in implementation to other commands in SeniorLove:","lastModifiedDate":"2021-10-18"},{"lineNumber":190,"author":{"gitId":"luayida99"},"content":"- `VisitCommand` extends `Command`","lastModifiedDate":"2021-10-18"},{"lineNumber":191,"author":{"gitId":"luayida99"},"content":"- `VisitCommandParser` implements `Parser\u003cVisitCommand\u003e`","lastModifiedDate":"2021-10-18"},{"lineNumber":192,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":193,"author":{"gitId":"luayida99"},"content":"The following activity diagram illustrates the activity flow of the visit command:","lastModifiedDate":"2021-10-18"},{"lineNumber":194,"author":{"gitId":"luayida99"},"content":"![VisitCommandActivityDiagram](images/VisitCommandActivityDiagram.png)","lastModifiedDate":"2021-10-18"},{"lineNumber":195,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":196,"author":{"gitId":"huisthat"},"content":"The following sequence diagram illustrates how different components of SeniorLove interact with each other when a visit with a visitation frequency and number of occurrence specified is called:","lastModifiedDate":"2021-10-19"},{"lineNumber":197,"author":{"gitId":"huisthat"},"content":"![VisitSequenceDiagram](images/VisitSequenceDiagram.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":198,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":199,"author":{"gitId":"luayida99"},"content":"Given below is an example usage scenario:","lastModifiedDate":"2021-10-18"},{"lineNumber":200,"author":{"gitId":"luayida99"},"content":"1. User inputs the visit command, specifying the index of the elderly to visit and the datetime at which they will go for the visit. They may also optionally include the visitation frequency and number of occurrences at this specified frequency.","lastModifiedDate":"2021-10-18"},{"lineNumber":201,"author":{"gitId":"luayida99"},"content":"2. After successfully parsing the user input, the `VisitCommand#execute(Model model)` method is called.","lastModifiedDate":"2021-10-18"},{"lineNumber":202,"author":{"gitId":"luayida99"},"content":"3. The visit that the user wants to add to the elderly will be stored, and it will be converted into a separate format for displaying on the GUI.","lastModifiedDate":"2021-10-18"},{"lineNumber":203,"author":{"gitId":"luayida99"},"content":"4. Upon successfully adding the visit to the corresponding elderly, a `CommandResult` object is instantiated and returned to `LogicManager`.","lastModifiedDate":"2021-10-18"},{"lineNumber":204,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":205,"author":{"gitId":"luayida99"},"content":"#### Design choices","lastModifiedDate":"2021-10-18"},{"lineNumber":206,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":207,"author":{"gitId":"luayida99"},"content":"- Overloading `edit` to add/change visit:","lastModifiedDate":"2021-10-18"},{"lineNumber":208,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":209,"author":{"gitId":"luayida99"},"content":"  The `visit` command is similar to the `edit` command in the sense that they both alter the person\u0027s attributes, and it is possible to implement similar functionality without a new command.","lastModifiedDate":"2021-10-18"},{"lineNumber":210,"author":{"gitId":"luayida99"},"content":"  However, we chose to implement the `visit` command since a visit can be added without having any visit previously, and overloading the `edit` command can make it confusing to use.","lastModifiedDate":"2021-10-18"},{"lineNumber":211,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":212,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":213,"author":{"gitId":"ailing35"},"content":"- Replacing the existing person with a new instance with the visit changed:","lastModifiedDate":"2021-10-20"},{"lineNumber":214,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":215,"author":{"gitId":"huisthat"},"content":"  We want to keep the data safe by ensuring immutability of Person objects. Therefore, we create an instance of Person with modified visit to replace the previous Person object.","lastModifiedDate":"2021-10-19"},{"lineNumber":216,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":217,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":218,"author":{"gitId":"luayida99"},"content":"- Implementing recurring visits with an occurrence counter and frequency attribute:","lastModifiedDate":"2021-10-18"},{"lineNumber":219,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":220,"author":{"gitId":"luayida99"},"content":"  Both methods can achieve the intended effect of implementing the recurring visits. However, we chose to go with an occurrence counter and frequency attribute because it requires less resources.","lastModifiedDate":"2021-10-18"},{"lineNumber":221,"author":{"gitId":"luayida99"},"content":"  We were concerned that the recurring visits could have many occurrences and at a high frequency, and this could lead to extra overhead in storing and accessing these arrays.","lastModifiedDate":"2021-10-18"},{"lineNumber":222,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":223,"author":{"gitId":"ziqing26"},"content":"### Delete command","lastModifiedDate":"2021-10-19"},{"lineNumber":224,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":225,"author":{"gitId":"ziqing26"},"content":"#### Implementation details","lastModifiedDate":"2021-10-19"},{"lineNumber":226,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":227,"author":{"gitId":"luayida99"},"content":"Delete command is used to delete an existing person or the next visit of a person in SeniorLove. It makes use of polymorphism and is similar to the other commands in SeniorLove:","lastModifiedDate":"2021-10-19"},{"lineNumber":228,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":229,"author":{"gitId":"ziqing26"},"content":"* `DeleteCommand` extends `Command`","lastModifiedDate":"2021-10-19"},{"lineNumber":230,"author":{"gitId":"ziqing26"},"content":"* `DeleteCommandParser` implements `Parser\u003cDeleteCommand\u003e`","lastModifiedDate":"2021-10-19"},{"lineNumber":231,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":232,"author":{"gitId":"ziqing26"},"content":"The following activity diagram illustrates the activity flow of the delete command:","lastModifiedDate":"2021-10-19"},{"lineNumber":233,"author":{"gitId":"ziqing26"},"content":"![DeleteCommandActivityDiagram](images/DeleteCommandActivityDiagram.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":234,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":235,"author":{"gitId":"ziqing26"},"content":"The following sequence diagram illustrate how the components interact with each other:","lastModifiedDate":"2021-10-19"},{"lineNumber":236,"author":{"gitId":"ziqing26"},"content":"![DeleteSequenceDiagram2](images/DeleteSequenceDiagram2.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":237,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":238,"author":{"gitId":"ziqing26"},"content":"Given below is an example usage scenario:","lastModifiedDate":"2021-10-19"},{"lineNumber":239,"author":{"gitId":"ziqing26"},"content":"1. User inputs the delete command, specifying the visit flag and the index of the elderly to be removed visit from. (If user wants to remove the entry of the elderly entirely instead of only removing the visit, she/he only needs to specify the index without the visit flag.)","lastModifiedDate":"2021-10-19"},{"lineNumber":240,"author":{"gitId":"ziqing26"},"content":"2. After successfully parsing the user input, the `DeleteCommand#execute(Model model)` method is called.","lastModifiedDate":"2021-10-19"},{"lineNumber":241,"author":{"gitId":"ziqing26"},"content":"3. The person which the user wants to delete visit from will be replaced by a new entry of a copy of person without the existing next visit.","lastModifiedDate":"2021-10-19"},{"lineNumber":242,"author":{"gitId":"ziqing26"},"content":"4Upon successfully deleting the visit from the corresponding elderly, a `CommandResult` object is instantiated and returned to `LogicManager`.","lastModifiedDate":"2021-10-19"},{"lineNumber":243,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":244,"author":{"gitId":"ziqing26"},"content":"#### Design choices","lastModifiedDate":"2021-10-19"},{"lineNumber":245,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":246,"author":{"gitId":"ziqing26"},"content":"- Overloading `delete` to remove visit:","lastModifiedDate":"2021-10-19"},{"lineNumber":247,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":248,"author":{"gitId":"ziqing26"},"content":"  Deleting person and deleting visits are overlapping functionalities dealing with removing information. It is possible to overload the `delete` command to achieve both functionalities without creating new command.","lastModifiedDate":"2021-10-19"},{"lineNumber":249,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":250,"author":{"gitId":"ailing35"},"content":"- Replace the existing person with a new instance (if deleting a visit):","lastModifiedDate":"2021-10-20"},{"lineNumber":251,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":252,"author":{"gitId":"ailing35"},"content":"  We want to keep the data safe by ensuring immutability of Person objects. Therefore, we create an instance of Person with visit removed to replace the previous Person object.","lastModifiedDate":"2021-10-20"},{"lineNumber":253,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":254,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":255,"author":{"gitId":"Chen-Yiyang"},"content":"### Done Command","lastModifiedDate":"2021-10-19"},{"lineNumber":256,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":257,"author":{"gitId":"Chen-Yiyang"},"content":"#### Implementation details","lastModifiedDate":"2021-10-19"},{"lineNumber":258,"author":{"gitId":"Chen-Yiyang"},"content":"The done command is used to mark a person\u0027s existing visit as done, and update the person\u0027s `LastVisit` datetime value with that of the completed `Visit`. ","lastModifiedDate":"2021-10-19"},{"lineNumber":259,"author":{"gitId":"Chen-Yiyang"},"content":"The `Visit` field will also be updated or deleted depending on the `Occurrence` field\u0027s value.","lastModifiedDate":"2021-10-19"},{"lineNumber":260,"author":{"gitId":"Chen-Yiyang"},"content":"It makes use of polymorphism and interfaces, and is similar in implementation to other commands in SeniorLove:","lastModifiedDate":"2021-10-19"},{"lineNumber":261,"author":{"gitId":"Chen-Yiyang"},"content":"- `DoneCommand` extends `Command`","lastModifiedDate":"2021-10-19"},{"lineNumber":262,"author":{"gitId":"Chen-Yiyang"},"content":"- `DoneCommandParser` implements `Parser\u003cDoneCommand\u003e`","lastModifiedDate":"2021-10-19"},{"lineNumber":263,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":264,"author":{"gitId":"Chen-Yiyang"},"content":"The following activity diagram illustrates the activity flow of the done command:","lastModifiedDate":"2021-10-19"},{"lineNumber":265,"author":{"gitId":"Chen-Yiyang"},"content":"![DoneCommandActivityDiagram](images/DoneCommandActivityDiagram.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":266,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":267,"author":{"gitId":"Chen-Yiyang"},"content":"#### Design choices","lastModifiedDate":"2021-10-19"},{"lineNumber":268,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":269,"author":{"gitId":"Chen-Yiyang"},"content":"- Overloading `edit` to change person:","lastModifiedDate":"2021-10-19"},{"lineNumber":270,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":271,"author":{"gitId":"Chen-Yiyang"},"content":"    The `done` command makes use of the `edit` command to get a new copy of the `Person` object with the `Visit` and `LastVisit` fields being updated.","lastModifiedDate":"2021-10-19"},{"lineNumber":272,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":273,"author":{"gitId":"Chen-Yiyang"},"content":"- Defensive Programming used:","lastModifiedDate":"2021-10-19"},{"lineNumber":274,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":275,"author":{"gitId":"Chen-Yiyang"},"content":"    Execution of the `done` command makes use of defensive programming techniques to handle situations where `Visit` or its related `Frequency` and `Occurrence` fields are empty.","lastModifiedDate":"2021-10-19"},{"lineNumber":276,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":277,"author":{"gitId":"Chen-Yiyang"},"content":"### Datetime for Visit and LastVisit","lastModifiedDate":"2021-10-19"},{"lineNumber":278,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":279,"author":{"gitId":"Chen-Yiyang"},"content":"#### Implementation details","lastModifiedDate":"2021-10-19"},{"lineNumber":280,"author":{"gitId":"Chen-Yiyang"},"content":"Static class `DateTimeUtil` uses the library `java.time.LocalDateTime` and `java.time.format.DateTimeFormatter` to handle all datetime-related parsing and operations for `Visit` and `LastVisit` timings.","lastModifiedDate":"2021-10-19"},{"lineNumber":281,"author":{"gitId":"Chen-Yiyang"},"content":"The datetime is stored and displayed differently in the system for both efficiency and readability:","lastModifiedDate":"2021-10-19"},{"lineNumber":282,"author":{"gitId":"Chen-Yiyang"},"content":"- It is stored as `yyyy-MM-dd HH:mm` in the system and for parsing of commands.","lastModifiedDate":"2021-10-19"},{"lineNumber":283,"author":{"gitId":"Chen-Yiyang"},"content":"- It is displayed as `dd LLL yyyy HH:mm` on the GUI.","lastModifiedDate":"2021-10-19"},{"lineNumber":284,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":285,"author":{"gitId":"Chen-Yiyang"},"content":"For example, time at two o\u0027clock in the afternoon of 1st November 2021 will be stored or parsed as `2021-11-01 14:00` and displayed as `01 Nov 2021 14:00`","lastModifiedDate":"2021-10-19"},{"lineNumber":286,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":287,"author":{"gitId":"luayida99"},"content":"### Find command","lastModifiedDate":"2021-10-19"},{"lineNumber":288,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":289,"author":{"gitId":"luayida99"},"content":"#### Implementation details","lastModifiedDate":"2021-10-19"},{"lineNumber":290,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":291,"author":{"gitId":"luayida99"},"content":"The find command carries out a AND search on the attributes of all elderly in SeniorLove, and shows a list of elderly who match the find parameters. The find parameters are strings that are non-empty.","lastModifiedDate":"2021-10-19"},{"lineNumber":292,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":293,"author":{"gitId":"luayida99"},"content":"It makes use of polymorphism and interfaces, and is similar in implementation to other commands in SeniorLove:","lastModifiedDate":"2021-10-19"},{"lineNumber":294,"author":{"gitId":"luayida99"},"content":"- `FindCommand` extends `Command`","lastModifiedDate":"2021-10-19"},{"lineNumber":295,"author":{"gitId":"luayida99"},"content":"- `FindCommandParser` implements `Parser\u003cFindCommand\u003e`","lastModifiedDate":"2021-10-19"},{"lineNumber":296,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":297,"author":{"gitId":"luayida99"},"content":"The following activity diagram illustrates the activity flow of the visit command:","lastModifiedDate":"2021-10-19"},{"lineNumber":298,"author":{"gitId":"luayida99"},"content":"![FindCommandActivityDiagram](images/FindCommandActivityDiagram.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":299,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":300,"author":{"gitId":"luayida99"},"content":"The following sequence diagram shows how different components of SeniorLove interact with each other when executing a find command with a non-empty keyword:","lastModifiedDate":"2021-10-19"},{"lineNumber":301,"author":{"gitId":"luayida99"},"content":"![FindSequenceDiagram](images/FindSequenceDiagram.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":302,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":303,"author":{"gitId":"luayida99"},"content":"Given below is an example usage scenario:","lastModifiedDate":"2021-10-19"},{"lineNumber":304,"author":{"gitId":"luayida99"},"content":"1. User inputs the find command, specifying the keyword(s) to find.","lastModifiedDate":"2021-10-19"},{"lineNumber":305,"author":{"gitId":"luayida99"},"content":"2. After successfully parsing the user input, the `FindCommand#execute(Model model)` method is called.","lastModifiedDate":"2021-10-19"},{"lineNumber":306,"author":{"gitId":"luayida99"},"content":"3. Attributes of all elderly in the list are searched, and all elderly who satisfy the AND search will be returned.","lastModifiedDate":"2021-10-19"},{"lineNumber":307,"author":{"gitId":"luayida99"},"content":"4. `CommandResult` object is instantiated and returned to `LogicManager`.","lastModifiedDate":"2021-10-19"},{"lineNumber":308,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":309,"author":{"gitId":"luayida99"},"content":"#### Design choices","lastModifiedDate":"2021-10-19"},{"lineNumber":310,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":311,"author":{"gitId":"luayida99"},"content":"- Searching by specified attributes:","lastModifiedDate":"2021-10-19"},{"lineNumber":312,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":313,"author":{"gitId":"luayida99"},"content":"    This is a possible solution, but we chose to do a search across all attributes because we have many different flags and formatting, and it makes `find` harder to use if each attribute has to be specified.","lastModifiedDate":"2021-10-19"},{"lineNumber":314,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":315,"author":{"gitId":"luayida99"},"content":"- AND search:","lastModifiedDate":"2021-10-19"},{"lineNumber":316,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":317,"author":{"gitId":"luayida99"},"content":"    We chose to implement this over OR search because we want each new keyword to narrow the search space, so that it is easy to find elderly that match all the given attributes.","lastModifiedDate":"2021-10-19"},{"lineNumber":318,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":319,"author":{"gitId":"luayida99"},"content":"- Substring match:","lastModifiedDate":"2021-10-19"},{"lineNumber":320,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":321,"author":{"gitId":"luayida99"},"content":"    Matching by substring was implemented because it makes it easier to search for an elderly without having to remember their full attributes.","lastModifiedDate":"2021-10-19"},{"lineNumber":322,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":413,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":414,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":415,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":416,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"luayida99"},"content":"* social worker who has a need to manage a significant number of elderly contacts with limited or no family support, and contact them regularly to check on their well-being","lastModifiedDate":"2021-09-27"},{"lineNumber":427,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":430,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"luayida99"},"content":"**Value proposition**:","lastModifiedDate":"2021-09-27"},{"lineNumber":433,"author":{"gitId":"luayida99"},"content":"Since social workers need to contact many different elderly every day, we created this app to help them easily avoid missing out on any elderly while reducing the hassle of manually checking the frequency of contacts for each elderly.","lastModifiedDate":"2021-09-27"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"| Priority | As a …​                                 | I want to …​                             | So that I can…​                                                     |","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"luayida99"},"content":"| -------- | ------------------------------------------ | ------------------------------------------- | ---------------------------------------------------------------------- |","lastModifiedDate":"2021-09-27"},{"lineNumber":442,"author":{"gitId":"luayida99"},"content":"| `* * *`  | social worker                              | add entries                                 | keep track of new elderly who come under my care                       |","lastModifiedDate":"2021-09-27"},{"lineNumber":443,"author":{"gitId":"luayida99"},"content":"| `* * *`  | social worker                              | delete entries                              | keep track of elderly who are no longer under my care                  |","lastModifiedDate":"2021-09-27"},{"lineNumber":444,"author":{"gitId":"luayida99"},"content":"| `* * *`  | social worker                              | see elderlies\u0027 contacts and home address    | know how to contact them                                               |","lastModifiedDate":"2021-09-27"},{"lineNumber":445,"author":{"gitId":"luayida99"},"content":"| `* * *`  | social worker                              | add deadlines to contact a elderly          | remember to check in on them                                           |","lastModifiedDate":"2021-09-27"},{"lineNumber":446,"author":{"gitId":"luayida99"},"content":"| `* * *`  | social worker                              | add an ‘until’ date for recurring deadlines | know when to stop visiting a elderly on a recurring basis              |","lastModifiedDate":"2021-09-27"},{"lineNumber":447,"author":{"gitId":"luayida99"},"content":"| `* * *`  | social worker                              | see data from my previous session           | save time spent importing entries each session                         |","lastModifiedDate":"2021-09-27"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":452,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"Chen-Yiyang"},"content":"(For all use cases below, the **System** is `SeniorLove` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-28"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"Chen-Yiyang"},"content":"**Use case: UC01 - Add a person**","lastModifiedDate":"2021-09-29"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"Chen-Yiyang"},"content":"1. User adds in a new senior’s name together with phone number, language and address","lastModifiedDate":"2021-09-28"},{"lineNumber":461,"author":{"gitId":"Chen-Yiyang"},"content":"2. SeniorLove shows a new entry for the elderly just added","lastModifiedDate":"2021-09-28"},{"lineNumber":462,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":465,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":466,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":467,"author":{"gitId":"Chen-Yiyang"},"content":"* 1a. User also inputs last visited and visit date.","lastModifiedDate":"2021-09-28"},{"lineNumber":468,"author":{"gitId":"Chen-Yiyang"},"content":"    * 1a1. SeniorLoves shows a new entry for the elderly added, with the optional details as well.","lastModifiedDate":"2021-09-28"},{"lineNumber":469,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":470,"author":{"gitId":"Chen-Yiyang"},"content":"      Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":471,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":472,"author":{"gitId":"Chen-Yiyang"},"content":"* 2a. User inputs a name that is already inside SeniorLove’s list.","lastModifiedDate":"2021-09-28"},{"lineNumber":473,"author":{"gitId":"Chen-Yiyang"},"content":"    * 2a1. SeniorLove shows an error message notifying the user that the name already exists.","lastModifiedDate":"2021-09-28"},{"lineNumber":474,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":475,"author":{"gitId":"Chen-Yiyang"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-28"},{"lineNumber":476,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":477,"author":{"gitId":"Chen-Yiyang"},"content":"* 3a. User inputs a new senior’s name with some compulsory details missing.","lastModifiedDate":"2021-09-28"},{"lineNumber":478,"author":{"gitId":"Chen-Yiyang"},"content":"    * 3a1. SeniorLove shows an error message notifying the user about the missing details.","lastModifiedDate":"2021-09-28"},{"lineNumber":479,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":480,"author":{"gitId":"Chen-Yiyang"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-09-28"},{"lineNumber":481,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":482,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":483,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":484,"author":{"gitId":"Chen-Yiyang"},"content":"**Use case: UC02 - Delete a person**","lastModifiedDate":"2021-09-29"},{"lineNumber":485,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":486,"author":{"gitId":"Chen-Yiyang"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":487,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":488,"author":{"gitId":"Chen-Yiyang"},"content":"1. User requests to list seniors","lastModifiedDate":"2021-09-28"},{"lineNumber":489,"author":{"gitId":"Chen-Yiyang"},"content":"2. SeniorLove shows a list of seniors","lastModifiedDate":"2021-09-28"},{"lineNumber":490,"author":{"gitId":"Chen-Yiyang"},"content":"3. User requests to delete a specific senior in the list","lastModifiedDate":"2021-09-28"},{"lineNumber":491,"author":{"gitId":"Chen-Yiyang"},"content":"4. SeniorLove deletes the senior","lastModifiedDate":"2021-09-28"},{"lineNumber":492,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":493,"author":{"gitId":"Chen-Yiyang"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":494,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":495,"author":{"gitId":"Chen-Yiyang"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":496,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":498,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":500,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":501,"author":{"gitId":"Chen-Yiyang"},"content":"    * 3a1. SeniorLove shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":502,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":503,"author":{"gitId":"Chen-Yiyang"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":505,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":506,"author":{"gitId":"Chen-Yiyang"},"content":"**Use case: UC03 - Mark a visit as done**","lastModifiedDate":"2021-09-29"},{"lineNumber":507,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":508,"author":{"gitId":"Chen-Yiyang"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":509,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":510,"author":{"gitId":"Chen-Yiyang"},"content":"1. User requests to list seniors","lastModifiedDate":"2021-09-28"},{"lineNumber":511,"author":{"gitId":"Chen-Yiyang"},"content":"2. SeniorLove shows a list of seniors","lastModifiedDate":"2021-09-28"},{"lineNumber":512,"author":{"gitId":"Chen-Yiyang"},"content":"3. User requests to mark a specific visit as done","lastModifiedDate":"2021-09-28"},{"lineNumber":513,"author":{"gitId":"Chen-Yiyang"},"content":"4. SeniorLove mark a specific visit as done","lastModifiedDate":"2021-09-28"},{"lineNumber":514,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":515,"author":{"gitId":"Chen-Yiyang"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"Chen-Yiyang"},"content":"**Extension**","lastModifiedDate":"2021-09-28"},{"lineNumber":518,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":519,"author":{"gitId":"Chen-Yiyang"},"content":"* 3a. There is no current pending visit.","lastModifiedDate":"2021-09-28"},{"lineNumber":520,"author":{"gitId":"Chen-Yiyang"},"content":"    * 3a1. SeniorLove shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":525,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"ailing35"},"content":"3.  Should be usable by a novice who has never used the system.","lastModifiedDate":"2021-09-28"},{"lineNumber":530,"author":{"gitId":"ailing35"},"content":"4.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-09-28"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"ziqing26"},"content":"* **User**: Refers to Social Worker, a community worker using the app to manage multiple elderlies.","lastModifiedDate":"2021-09-30"},{"lineNumber":535,"author":{"gitId":"ziqing26"},"content":"* **Social Worker**: Workers at community centres to provide supports for needy seniors. They manage multiple elderlies and visit them regularly.","lastModifiedDate":"2021-09-30"},{"lineNumber":536,"author":{"gitId":"ziqing26"},"content":"* **Elderly**: The seniors who need social support due to limited family support. They are managed by social workers.","lastModifiedDate":"2021-09-30"},{"lineNumber":537,"author":{"gitId":"ziqing26"},"content":"* **Visit**: A visit to an elderly\u0027s home scheduled by the user.","lastModifiedDate":"2021-09-30"},{"lineNumber":538,"author":{"gitId":"ziqing26"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X.","lastModifiedDate":"2021-09-30"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"luayida99":78,"huisthat":24,"ailing35":15,"ziqing26":34,"Chen-Yiyang":87,"-":353}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"**SeniorLove** is a contact management desktop app which aims to facilitate community workers\u0027 visits to the elderly. It is **optimized for use via a Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Senior Love can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"##Table of Contents","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"- [Quick start](#quick-start)","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"- [Features](#features)","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"  - [Adding elderly details](#add-elderly-details--add)","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"  - [Deleting an elderly or corresponding visit](#delete-an-elderly-or-corresponding-visit--delete)","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"  - [Listing all elderly](#listing-all-persons--list)","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"  - [Locating elderly by attribute](#locating-elderly-by-attribute--find)","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"  - [Scheduling a visit to an elderly](#scheduling-a-visit-to-an-elderly--visit)","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"  - [Marking one visit as done](#marking-one-visit-as-done--done)","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"  - [Viewing help](#viewing-help--help)","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"  - [Clearing all entries](#clearing-all-entries--clear)","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"  - [Exiting the app](#exiting-the-program--exit)","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"- [FAQ](#faq)","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"- [Command summary](#command-summary)","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"2. Download the latest `seniorLove.jar` from [here](https://github.com/AY2122S1-CS2103-T14-1/tp).","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your SeniorLove.","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"   * **`add`**`n/John Doe p/98765432 l/Chinese a/John street, block 123, #01-01` : Adds an elderly contact named `John Doe` to the SeniorLove.","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"   * **`delete`**`3` : Deletes the 3rd elderly shown in the current list.","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"huisthat"},"content":"   * **`list`** : Lists all elderly.","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"luayida99"},"content":"   * **`find`**`Hans` : Find all elderly whose attributes start with Hans.(Case insensitive)","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"   * **`clear`** : Deletes all elderly.","lastModifiedDate":"2021-09-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"7. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":"* Add elderly with contact details","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":"* Delete elderly or deadline","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"* List elderly details","lastModifiedDate":"2021-09-27"},{"lineNumber":58,"author":{"gitId":"ziqing26"},"content":"* Find an elderly","lastModifiedDate":"2021-09-27"},{"lineNumber":59,"author":{"gitId":"ziqing26"},"content":"* Schedule a visit to an elderly","lastModifiedDate":"2021-09-27"},{"lineNumber":60,"author":{"gitId":"ziqing26"},"content":"* Mark the current scheduled visit as done (update the last visited date and delete the current visit)","lastModifiedDate":"2021-09-27"},{"lineNumber":61,"author":{"gitId":"ziqing26"},"content":"* View help","lastModifiedDate":"2021-09-27"},{"lineNumber":62,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":63,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":64,"author":{"gitId":"ziqing26"},"content":"## Notes about command format:","lastModifiedDate":"2021-09-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"huisthat"},"content":"  e.g `n/NAME [h/HEALTH_CONDITION]` can be used as `n/John Doe h/dementia` or as `n/John Doe`.","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"huisthat"},"content":"  e.g. `[h/HEALTH_CONDITION]…​` can be used as ` ` (i.e. 0 times), `h/dementia`, `h/dementia h/diabetes` etc.","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"luayida99"},"content":"### Add elderly details : `add`","lastModifiedDate":"2021-09-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"luayida99"},"content":"Adds an elderly and all relevant details into SeniorLove.","lastModifiedDate":"2021-09-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"huisthat"},"content":"Format: `add n/NAME p/PHONE_NUMBER l/LANGUAGE a/ADDRESS [lv/LAST_VISIT] [v/VISIT] [h/HEALTH_CONDITION]`","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"huisthat"},"content":"* Adds a new elderly with the following information: `NAME`, `PHONE_NUMBER`, `LANGUAGE`, `ADDRESS`, `LAST_VISITED`, `VISIT` and `HEALTH_CONDITION` may be optionally included.","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"luayida99"},"content":"* `NAME` is the elderly’s name. **This must be included.**","lastModifiedDate":"2021-09-27"},{"lineNumber":98,"author":{"gitId":"luayida99"},"content":"* `PHONE_NUMBER` is the elderly’s phone number. **This must be included.**","lastModifiedDate":"2021-09-27"},{"lineNumber":99,"author":{"gitId":"luayida99"},"content":"* `LANGUAGE` is the elderly’s preferred language for communication. **This must be included.**","lastModifiedDate":"2021-09-27"},{"lineNumber":100,"author":{"gitId":"luayida99"},"content":"* `ADDRESS` is the elderly’s address to be visited. **This must be included.**","lastModifiedDate":"2021-09-27"},{"lineNumber":101,"author":{"gitId":"luayida99"},"content":"* `LAST_VISIT` is the last datetime that the user has visited the elderly. **This is optional to include.**","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"luayida99"},"content":"* `VISIT` is the next scheduled datetime for the elderly’s visit. **This is optional to include.**","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"huisthat"},"content":"* `HEALTH_CONDITION` is the elderly\u0027s health condition. **This is optional to include.**","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"luayida99"},"content":"Examples:","lastModifiedDate":"2021-09-27"},{"lineNumber":106,"author":{"gitId":"huisthat"},"content":"* `add n/John p/12345678 l/English a/College Avenue East 18, New College` adds an elderly and details without the `LAST_VISITED`, `VISIT` and `HEALTH_CONDITION`.","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"huisthat"},"content":"* `add n/Johnny p/87654321 l/Malay a/200 Toa Payoh Avenue 53  lv/2021-09-31 17:00 h/dementia` adds an elderly and details without the `VISIT`.","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"huisthat"},"content":"* `add n/Janet p/54860332 l/Tamil a/200 Toa Payoh Avenue 26 v/2021-10-31 09:00 h/dementia` adds an elderly and details without the `LAST_VISITED`.","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"huisthat"},"content":"* `add n/Jane p/54867392 l/Chinese a/200 Toa Payoh Avenue 56  lv/2021-09-31 10:00 v/2021-10-31 16:00` adds an elderly and details without the `HEALTH_CONDITION`.","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"huisthat"},"content":"* `add n/Johnny p/87654321 l/Malay a/200 Toa Payoh Avenue 53  lv/2021-09-31 17:00` adds an elderly and details without the `VISIT` and `HEALTH_CONDITION`.","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"huisthat"},"content":"* `add n/Janet p/54860332 l/Tamil a/200 Toa Payoh Avenue 26 v/2021-10-31 09:00` adds an elderly and details without the `LAST_VISITED` and `HEALTH_CONDITION`.","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"huisthat"},"content":"* `add n/Janet p/54860332 l/Tamil a/200 Toa Payoh Avenue 26 h/diabetes` adds an elderly and details without the `VISIT` and `LAST_VISITED`.","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"huisthat"},"content":"* `add n/Jane p/54867392 l/Chinese a/200 Toa Payoh Avenue 56  lv/2021-09-31 10:00 v/2021-10-31 16:00 h/dementia` adds an elderly and details with `LAST_VISITED`, `VISIT` and `HEALTH_CONDITION`.","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":116,"author":{"gitId":"luayida99"},"content":"### Delete an elderly or corresponding visit : `delete`","lastModifiedDate":"2021-09-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":118,"author":{"gitId":"luayida99"},"content":"Deletes either an elderly’s details or an elderly’s visit from SeniorLove.","lastModifiedDate":"2021-09-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":120,"author":{"gitId":"luayida99"},"content":"Format: `delete [v/] INDEX`","lastModifiedDate":"2021-09-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":122,"author":{"gitId":"luayida99"},"content":"* Deletes either the elderly’s details or the corresponding elderly’s visit at list index `INDEX`. `INDEX` is a **strictly positive integer, and must be included.**","lastModifiedDate":"2021-09-27"},{"lineNumber":123,"author":{"gitId":"luayida99"},"content":"* `v/` denotes if the item to be deleted is an elderly’s details or the elderly’s corresponding visit. **This is optional to include.** The presence of v/ indicates that it is the elderly’s visit that is to be deleted, while its exclusion indicates that it is the elderly’s details that is to be deleted.","lastModifiedDate":"2021-09-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"luayida99"},"content":"* `delete 1` deletes the elderly’s details of the elderly at list index 1.","lastModifiedDate":"2021-09-27"},{"lineNumber":127,"author":{"gitId":"luayida99"},"content":"* `delete v/ 1` deletes the elderly’s visit of the elderly at list index 1.","lastModifiedDate":"2021-09-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"### Editing a person : `edit`","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"huisthat"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [h/HEALTH_CONDITION]…​`","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"huisthat"},"content":"* When editing health conditions, the existing health conditions of the person will be removed i.e adding of health conditions is not cumulative.","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"huisthat"},"content":"* You can remove all the person’s health conditions by typing `h/` without","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"huisthat"},"content":"    specifying any health conditions after it.","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"huisthat"},"content":"*  `edit 2 n/Betsy Crower h/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing health conditions.","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":148,"author":{"gitId":"huisthat"},"content":"### Listing all persons : `list`","lastModifiedDate":"2021-09-27"},{"lineNumber":149,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":150,"author":{"gitId":"ailing35"},"content":"Shows a list of all the elderly and their associated details in the address book.","lastModifiedDate":"2021-09-28"},{"lineNumber":151,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":152,"author":{"gitId":"huisthat"},"content":"Format: `list`","lastModifiedDate":"2021-09-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":155,"author":{"gitId":"luayida99"},"content":"### Locating elderly by attribute : `find`","lastModifiedDate":"2021-10-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"ailing35"},"content":"Finds elderly whose names contain any of the given keywords.","lastModifiedDate":"2021-09-28"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-10-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"luayida99"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will not match `Bo Hans`","lastModifiedDate":"2021-10-15"},{"lineNumber":163,"author":{"gitId":"luayida99"},"content":"* All attributes are searched (`NAME`, `PHONE`, `LANGUAGE`, `ADDRESS`, `VISIT`, `LAST_VISIT`)","lastModifiedDate":"2021-10-15"},{"lineNumber":164,"author":{"gitId":"luayida99"},"content":"* Partial words will be matched, and will return any person who has the partial word as a substring of any attribute e.g. `Han` will match `Hans Bo` and `Rohan Tan`","lastModifiedDate":"2021-10-15"},{"lineNumber":165,"author":{"gitId":"luayida99"},"content":"* `VISIT` and `LAST_VISIT` are in the `yyyy-MM-dd HH:mm` format.","lastModifiedDate":"2021-10-15"},{"lineNumber":166,"author":{"gitId":"luayida99"},"content":"* Persons matching all given keywords will be returned (i.e. `AND` search).","lastModifiedDate":"2021-10-15"},{"lineNumber":167,"author":{"gitId":"luayida99"},"content":"  e.g. `Hans English` will return `Hans Gruber`, `Hanson Lim`, both of which have `LANGUAGE` English","lastModifiedDate":"2021-10-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2021-10-15"},{"lineNumber":171,"author":{"gitId":"luayida99"},"content":"* `find alex English` returns `Alex Yeoh`, `Alex Lim`, both with `LANGUAGE` English.\u003cbr\u003e","lastModifiedDate":"2021-10-15"},{"lineNumber":172,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"huisthat"},"content":"### Scheduling a visit to an elderly : `visit`","lastModifiedDate":"2021-09-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"Chen-Yiyang"},"content":"Updates the time for the next visit to the elderly with the given index of the elderly in the address book.","lastModifiedDate":"2021-09-28"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":178,"author":{"gitId":"luayida99"},"content":"Format: `visit INDEX  at/VISIT [f/FREQUENCY o/OCCURRENCE]`","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":180,"author":{"gitId":"luayida99"},"content":"* `INDEX` corresponds to the elderly’s index in the address book. It is a **strictly positive integer, and must be included.**","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"luayida99"},"content":"* The `VISIT` is in the format of `yyyy-mm-dd HH:mm`, and it must be included.","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"luayida99"},"content":"* The `FREQUENCY` and `OCCURRENCE` are optional parameters, and must both be included or excluded.","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"luayida99"},"content":"* `FREQUENCY` has to take on one of the following values: `Daily`, `Weekly`, `Biweekly`, `Monthly` and `Quarterly`.","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"luayida99"},"content":"* `OCCURRENCE` is a **strictly positive integer**.","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"Chen-Yiyang"},"content":"* If there is already an existing visit scheduled for the elderly, this command will schedule a new visit that overwrites the existing one.","lastModifiedDate":"2021-09-28"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-28"},{"lineNumber":188,"author":{"gitId":"luayida99"},"content":"* `visit 1 at/2021-12-31 17:00` schedules a meeting to the first elderly in the address book on 31th December 2021, 5PM.","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":190,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":191,"author":{"gitId":"huisthat"},"content":"### Marking one visit as done : `done`","lastModifiedDate":"2021-09-27"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"Chen-Yiyang"},"content":"Marks a scheduled visit to an elderly as done.","lastModifiedDate":"2021-09-28"},{"lineNumber":194,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":195,"author":{"gitId":"Chen-Yiyang"},"content":"Format: `done INDEX`","lastModifiedDate":"2021-09-28"},{"lineNumber":196,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":197,"author":{"gitId":"luayida99"},"content":"* `INDEX` is the index of the elderly visited by the user. It is a **strictly positive integer, and must be included.** There must be a scheduled visit for the elderly before the visit can be marked as done.","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"luayida99"},"content":"* Once a scheduled visit is marked as done, it will update the last visited time of the elderly, and now there is no longer a scheduled next visit for the elderly.","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":200,"author":{"gitId":"Chen-Yiyang"},"content":"Examples:","lastModifiedDate":"2021-09-28"},{"lineNumber":201,"author":{"gitId":"Chen-Yiyang"},"content":"* `done 1` marks the visit to the first elderly as done, assuming there was a scheduled visit for the elderly before running this command.","lastModifiedDate":"2021-09-28"},{"lineNumber":202,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":203,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":204,"author":{"gitId":"luayida99"},"content":"### Viewing help : `help`","lastModifiedDate":"2021-09-27"},{"lineNumber":205,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":206,"author":{"gitId":"luayida99"},"content":"Show a message linking users to the user guide.","lastModifiedDate":"2021-09-27"},{"lineNumber":207,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":208,"author":{"gitId":"luayida99"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2021-09-27"},{"lineNumber":209,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":210,"author":{"gitId":"luayida99"},"content":"Format: `help`","lastModifiedDate":"2021-09-27"},{"lineNumber":211,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":213,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Clears all entries from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":220,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":227,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":232,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"AddressBook data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-02-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":240,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":241,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"luayida99"},"content":"**add** | `add n/NAME p/PHONE_NUMBER l/LANGUAGE a/ADDRESS [lv/LAST_VISIT] [v/VISIT]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 lv/1900-11-08 18:00 v/2021-11-08 17:00`","lastModifiedDate":"2021-10-12"},{"lineNumber":259,"author":{"gitId":"ziqing26"},"content":"**delete** | `delete [v/] INDEX`\u003cbr\u003e e.g., `delete 3` (delete the third senior) \u003cbr\u003e e.g., `delete v/2` (delete the scheduled visit of the second senior)","lastModifiedDate":"2021-10-05"},{"lineNumber":260,"author":{"gitId":"luayida99"},"content":"**visit** | `visit INDEX at/VISIT [f/FREQUENCY o/OCCURRENCE]`\u003cbr\u003e e.g.,`visit 3 at/1900-11-08 f/Weekly o/2`","lastModifiedDate":"2021-10-12"},{"lineNumber":261,"author":{"gitId":"huisthat"},"content":"**edit** | `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [h/HEALTH_CONDITION]…​`\u003cbr\u003e e.g.,`edit 3 n/James`","lastModifiedDate":"2021-10-19"},{"lineNumber":262,"author":{"gitId":"luayida99"},"content":"**find** | `find KEYWORD [MORE_KEYWORDS]` \u003cbr\u003e e.g., `find alex english`","lastModifiedDate":"2021-10-15"},{"lineNumber":263,"author":{"gitId":"ziqing26"},"content":"**list** | `list`","lastModifiedDate":"2021-09-27"},{"lineNumber":264,"author":{"gitId":"ziqing26"},"content":"**clear** | `clear`","lastModifiedDate":"2021-09-27"},{"lineNumber":265,"author":{"gitId":"ziqing26"},"content":"**exit** | `exit`","lastModifiedDate":"2021-09-27"},{"lineNumber":266,"author":{"gitId":"ziqing26"},"content":"**help** | `help`","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"luayida99":48,"huisthat":42,"ailing35":8,"ziqing26":21,"Chen-Yiyang":13,"-":134}},{"path":"docs/diagrams/AddCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"start","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":":User inputs add command;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":":Logic executes add command;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":":AddCommandParser parses the command;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"if() then ([Input arguments are valid])","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"    if() then([Person\u0027s name does not exist in the address book])","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"        :addPerson;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"    else ([else])","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"        :Throw CommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"    endif;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"else ([else])","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"    :Throw ParseException;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"ailing35"},"content":"endif;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"ailing35"},"content":"stop","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"ailing35"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"ailing35":19}},{"path":"docs/diagrams/AddSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"!include style.puml","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"participant \":AddCommandParser\" as AddCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"participant \"a:AddCommand\" as AddCommand LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"participant \":Person\" as Person MODEL_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"[-\u003e LogicManager : execute(\"add n/John Doe p/98765432 l/English a/311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"activate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"add n/John Doe p/98765432 l/English a/311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"activate AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"create AddCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"AddressBookParser -\u003e AddCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"activate AddCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"AddCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"deactivate AddCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"AddressBookParser -\u003e AddCommandParser : parse(\"n/John Doe p/98765432 l/English a/311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"activate AddCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"create Person","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"AddCommandParser -\u003e Person","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"activate Person","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"Person --\u003e AddCommandParser: toAdd","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"deactivate Person","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"create AddCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"AddCommandParser -\u003e AddCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"activate AddCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"huisthat"},"content":"AddCommand --\u003e AddCommandParser : a","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"deactivate AddCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"AddCommandParser --\u003e AddressBookParser : a","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"huisthat"},"content":"deactivate AddCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"huisthat"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"huisthat"},"content":"AddCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"huisthat"},"content":"destroy AddCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"huisthat"},"content":"AddressBookParser --\u003e LogicManager : a","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"huisthat"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"huisthat"},"content":"LogicManager -\u003e AddCommand : execute()","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"huisthat"},"content":"activate AddCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"huisthat"},"content":"AddCommand -\u003e Model: addPerson(toAdd)","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"huisthat"},"content":"activate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"huisthat"},"content":"Model --\u003e AddCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"huisthat"},"content":"deactivate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"huisthat"},"content":"create CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"huisthat"},"content":"AddCommand -\u003e CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"huisthat"},"content":"activate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"huisthat"},"content":"CommandResult --\u003e AddCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"huisthat"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"huisthat"},"content":"AddCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"huisthat"},"content":"deactivate AddCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"huisthat"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"huisthat"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"huisthat"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"huisthat":77}},{"path":"docs/diagrams/DeleteCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"start","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":":User inputs delete command;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":":Logic executes delete command;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":":DeleteCommandParser parses the command;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"if () then ([Delete index is with in the valid range])","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"    if() then ([Visit flag is present])","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"        if() then ([Person at specified index has a next visit])","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"            :deleteVisit;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"        else ([else])","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"            :Throw CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"        endif","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"    else ([else])","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"        :deletePerson;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"    endif","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"else ([else])","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"    :Throw ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"endif","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"stop","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"ziqing26":26}},{"path":"docs/diagrams/DeleteSequenceDiagram2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"!include style.puml","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"participant \":Person\" as Person MODEL_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"[-\u003e LogicManager : execute(\"delete v/1\")","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"activate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete v/1\")","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"activate AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"create DeleteCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"activate DeleteCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\" v/1\")","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"activate DeleteCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"create DeleteCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"activate DeleteCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"deactivate DeleteCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"alt no visit flag \"v/\" is present","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"    LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"    activate DeleteCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"    DeleteCommand -\u003e DeleteCommand : deletePerson(1)","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":"    activate DeleteCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":"    DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"    activate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"ziqing26"},"content":"    Model --\u003e DeleteCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"ziqing26"},"content":"    deactivate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"ziqing26"},"content":"    create CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"ziqing26"},"content":"    DeleteCommand -\u003e CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"ziqing26"},"content":"    activate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"ziqing26"},"content":"    CommandResult --\u003e DeleteCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"ziqing26"},"content":"    deactivate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"ziqing26"},"content":"    DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"ziqing26"},"content":"    deactivate DeleteCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"ziqing26"},"content":"else visit flag \"v/\" is present","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"ziqing26"},"content":"    LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"ziqing26"},"content":"    activate DeleteCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"ziqing26"},"content":"    DeleteCommand -\u003e DeleteCommand : deleteVisit(1)","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"ziqing26"},"content":"    activate DeleteCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"ziqing26"},"content":"    create Person","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"ziqing26"},"content":"    DeleteCommand -\u003e Person","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"ziqing26"},"content":"    activate Person","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"ziqing26"},"content":"    Person --\u003e DeleteCommand: editedPerson","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"ziqing26"},"content":"    deactivate Person","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"ziqing26"},"content":"    DeleteCommand -\u003e Model: setPerson(1, editedPerson)","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"ziqing26"},"content":"    activate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"ziqing26"},"content":"    Model --\u003e DeleteCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"ziqing26"},"content":"    deactivate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"ziqing26"},"content":"    create CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"ziqing26"},"content":"    DeleteCommand -\u003e CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"ziqing26"},"content":"    activate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"ziqing26"},"content":"    CommandResult --\u003e DeleteCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"ziqing26"},"content":"    deactivate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"ziqing26"},"content":"    DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"ziqing26"},"content":"    deactivate DeleteCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"ziqing26"},"content":"end","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"ziqing26"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"ziqing26"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"ziqing26"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"ziqing26":105}},{"path":"docs/diagrams/DoneCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Chen-Yiyang"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"Chen-Yiyang"},"content":"start","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Chen-Yiyang"},"content":":user inputs done command;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Chen-Yiyang"},"content":":Logic executes done command;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Chen-Yiyang"},"content":":DoneCommandParser parses the command;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Chen-Yiyang"},"content":"if () then ([Visit date is specified in correct format])","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Chen-Yiyang"},"content":"    if () then ([Index is the valid])","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Chen-Yiyang"},"content":"        if () then ([There is an existing visit for the person])","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"Chen-Yiyang"},"content":"            :executes DoneCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"Chen-Yiyang"},"content":"        else ([else])","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"Chen-Yiyang"},"content":"            :Throw CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"Chen-Yiyang"},"content":"        endif","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"Chen-Yiyang"},"content":"    else ([else])","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"Chen-Yiyang"},"content":"        :Throw CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"Chen-Yiyang"},"content":"    endif","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"Chen-Yiyang"},"content":"else ([else])","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Chen-Yiyang"},"content":"    :Throw ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Chen-Yiyang"},"content":"endif","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"Chen-Yiyang"},"content":"stop","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"Chen-Yiyang"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"Chen-Yiyang":25}},{"path":"docs/diagrams/FindCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"start","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":":user inputs find command;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":":Logic executes find command;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":":FindCommandParser parses the command;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":"    if () then ([keywords to search are present])","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"        :executes FindCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"    else ([else])","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"    :throw ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"    endif","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"stop","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"luayida99":16}},{"path":"docs/diagrams/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"!include style.puml","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"participant \"command :FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"[-\u003e LogicManager : execute(\"find attribute\")","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"activate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"find attribute\")","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"activate AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"create FindCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"AddressBookParser -\u003e FindCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"activate FindCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"FindCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"deactivate FindCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"AddressBookParser -\u003e FindCommandParser : parse(\"attribute\")","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"activate FindCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"luayida99"},"content":"create FindCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"luayida99"},"content":"FindCommandParser -\u003e FindCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"luayida99"},"content":"activate FindCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"luayida99"},"content":"FindCommand --\u003e FindCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"luayida99"},"content":"deactivate FindCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"luayida99"},"content":"FindCommandParser --\u003e AddressBookParser : command","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"luayida99"},"content":"deactivate FindCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"luayida99"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"luayida99"},"content":"FindCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"luayida99"},"content":"destroy FindCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"luayida99"},"content":"AddressBookParser --\u003e LogicManager : command","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"luayida99"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"luayida99"},"content":"LogicManager -\u003e FindCommand : execute()","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"luayida99"},"content":"activate FindCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"luayida99"},"content":"FindCommand -\u003e Model : updateFilteredPersonList(predicate)","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"luayida99"},"content":"activate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"luayida99"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"luayida99"},"content":"deactivate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"luayida99"},"content":"create CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"luayida99"},"content":"FindCommand -\u003e CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"luayida99"},"content":"activate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"luayida99"},"content":"CommandResult --\u003e FindCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"luayida99"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"luayida99"},"content":"FindCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"luayida99"},"content":"deactivate FindCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"luayida99"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"luayida99"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"luayida99"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"luayida99":70}},{"path":"docs/diagrams/VisitCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"@startuml","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"start","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":":user inputs visit command;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":":Logic executes visit command;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":":VisitCommandParser parses the command;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":"if () then ([Visit date is specified in correct format])","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"    if() then ([Frequency and occurrence both present])","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"        if() then ([Both frequency and occurrence are correctly specified])","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"            :execute VisitCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"        else ([else])","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"            :Throw ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"        endif","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"    else ([else])","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"        if() then ([Neither frequency nor occurrence present])","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"            :execute VisitCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"        else ([else])","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"            :Throw ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"        endif","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"    endif","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"else ([else])","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"    :Throw ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"endif","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"stop","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"@enduml","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"luayida99":29}},{"path":"docs/diagrams/VisitSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"!include style.puml","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"participant \":VisitCommandParser\" as VisitCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"participant \"v:VisitCommand\" as VisitCommand LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"participant \":Person\" as Person MODEL_COLOR","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"end box","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"[-\u003e LogicManager : execute(\"visit 1 at/2020-11-12 12:00 f/Weekly o/2\")","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"activate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"visit 1 at/2020-11-12 12:00 f/Weekly o/2\")","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"activate AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"create VisitCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"AddressBookParser -\u003e VisitCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"activate VisitCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"VisitCommandParser --\u003e AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"deactivate VisitCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"AddressBookParser -\u003e VisitCommandParser : parse(\"1 at/2020-11-12 12:00 f/Weekly o/2\")","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"activate VisitCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"create VisitCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"VisitCommandParser -\u003e VisitCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"activate VisitCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"VisitCommand --\u003e VisitCommandParser : v","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"deactivate VisitCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"VisitCommandParser --\u003e AddressBookParser : v","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"deactivate VisitCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"huisthat"},"content":"VisitCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"huisthat"},"content":"destroy VisitCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"AddressBookParser --\u003e LogicManager : v","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"deactivate AddressBookParser","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"huisthat"},"content":"LogicManager -\u003e VisitCommand : execute()","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"huisthat"},"content":"activate VisitCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"huisthat"},"content":"create Person","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"huisthat"},"content":"VisitCommand -\u003e Person","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"huisthat"},"content":"activate Person","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"huisthat"},"content":"Person --\u003e VisitCommand: editedPerson","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"huisthat"},"content":"deactivate Person","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"huisthat"},"content":"VisitCommand -\u003e Model: setPerson(1, editedPerson)","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"huisthat"},"content":"activate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"huisthat"},"content":"Model --\u003e VisitCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"huisthat"},"content":"deactivate Model","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"huisthat"},"content":"create CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"huisthat"},"content":"VisitCommand -\u003e CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"huisthat"},"content":"activate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"huisthat"},"content":"CommandResult --\u003e VisitCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"huisthat"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"huisthat"},"content":"VisitCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"huisthat"},"content":"deactivate VisitCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"huisthat"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"huisthat"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"huisthat"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"huisthat":78}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"title: SeniorLove","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103-T14-1/tp/branch/master/graph/badge.svg?token\u003dVVNULACJXB)](https://codecov.io/gh/AY2122S1-CS2103-T14-1/tp)","lastModifiedDate":"2021-09-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"**SeniorLove is a contact management desktop app which aims to facilitate community workers\u0027 visits to the elderly.** It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Senior Love can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"* If you are interested in using SeniorLove, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"* If you are interested about developing SeniorLove, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"luayida99":4,"-":15}},{"path":"docs/team/ailing35.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"layout: page","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"title: Hong Ai Ling\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"### Project: SeniorLove","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"SeniorLove is a contact management desktop app which aims to facilitate community workers\u0027 visits to the elderly. It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Senior Love can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"ailing35"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"ailing35"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"ailing35"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"ailing35"},"content":"* **Project management**:","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"ailing35"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"ailing35"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"ailing35"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"ailing35"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"ailing35"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"ailing35"},"content":"    * User Guide:","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"ailing35"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"ailing35"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"ailing35"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"ailing35"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"ailing35"},"content":"* **Community**:","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"ailing35"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"ailing35"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"ailing35"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"ailing35"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"ailing35"},"content":"* **Tools**:","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"ailing35"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"ailing35"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"ailing35"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"ailing35":46}},{"path":"docs/team/chen-yiyang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Chen-Yiyang"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"Chen-Yiyang"},"content":"layout: page","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"Chen-Yiyang"},"content":"title: Chen Yiyang\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"Chen-Yiyang"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"Chen-Yiyang"},"content":"### Project: SeniorLove","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Chen-Yiyang"},"content":"SeniorLove is a desktop contact management application used for facilitating social worker\u0027s visits to the elderly. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"Chen-Yiyang"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"Chen-Yiyang"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Chen-Yiyang"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Chen-Yiyang"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"Chen-Yiyang"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"Chen-Yiyang"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-28"},{"lineNumber":17,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":18,"author":{"gitId":"Chen-Yiyang"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-28"},{"lineNumber":19,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":20,"author":{"gitId":"Chen-Yiyang"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-28"},{"lineNumber":21,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":22,"author":{"gitId":"Chen-Yiyang"},"content":"* **Project management**:","lastModifiedDate":"2021-09-28"},{"lineNumber":23,"author":{"gitId":"Chen-Yiyang"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-28"},{"lineNumber":24,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":25,"author":{"gitId":"Chen-Yiyang"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"Chen-Yiyang"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"Chen-Yiyang"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-28"},{"lineNumber":28,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"Chen-Yiyang"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-28"},{"lineNumber":30,"author":{"gitId":"Chen-Yiyang"},"content":"    * User Guide:","lastModifiedDate":"2021-09-28"},{"lineNumber":31,"author":{"gitId":"Chen-Yiyang"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-28"},{"lineNumber":32,"author":{"gitId":"Chen-Yiyang"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"Chen-Yiyang"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-28"},{"lineNumber":34,"author":{"gitId":"Chen-Yiyang"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"Chen-Yiyang"},"content":"* **Community**:","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"Chen-Yiyang"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-28"},{"lineNumber":38,"author":{"gitId":"Chen-Yiyang"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"Chen-Yiyang"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"Chen-Yiyang"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"Chen-Yiyang"},"content":"* **Tools**:","lastModifiedDate":"2021-09-28"},{"lineNumber":43,"author":{"gitId":"Chen-Yiyang"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"Chen-Yiyang"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-28"},{"lineNumber":45,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"Chen-Yiyang"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Chen-Yiyang":46}},{"path":"docs/team/huisthat.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"layout: page","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"title: Hu Linglong\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"### Project: SeniorLove","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"SeniorLove is a desktop contact management application used for facilitating social worker\u0027s visits to the elderly. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"* **Project management**:","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"    * User Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"* **Community**:","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"* **Tools**:","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"huisthat"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"huisthat"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"huisthat":46}},{"path":"docs/team/luayida99.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"layout: page","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"title: Lua Yi Da\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":"### Project: SeniorLove","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"SeniorLove is a contact management desktop app which aims to facilitate community workers\u0027 visits to the elderly. It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Senior Love can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"* **Project management**:","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"    * User Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"luayida99"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"luayida99"},"content":"    * Developer Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"luayida99"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"luayida99"},"content":"* **Community**:","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"luayida99"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"luayida99"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"luayida99"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"luayida99"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"luayida99"},"content":"* **Tools**:","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"luayida99"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"luayida99"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"luayida99"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"luayida99":46}},{"path":"docs/team/ziqing26.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"layout: page","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"title: Zhang Ziqing\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"### Project: SeniorLove","lastModifiedDate":"2021-09-27"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"SeniorLove is a contact management desktop app which aims to facilitate community workers\u0027 visits to the elderly. It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Senior Love can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2021-09-27"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2021-09-27"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2021-09-27"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"* **Project management**:","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2021-09-27"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-09-27"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-27"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"  * User Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2021-09-27"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2021-09-27"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"* **Community**:","lastModifiedDate":"2021-09-27"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-09-27"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-09-27"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-09-27"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"* **Tools**:","lastModifiedDate":"2021-09-27"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2021-09-27"},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2021-09-27"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2021-09-27"}],"authorContributionMap":{"ziqing26":46}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"Chen-Yiyang"},"content":"    public static final String MESSAGE_NO_EXISTING_VISIT \u003d \"No Existing Visit for Person: %1$s\";","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Chen-Yiyang":1,"-":13}},{"path":"src/main/java/seedu/address/commons/util/DateTimeUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":" * Helper functions for handling datetime","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"public class DateTimeUtil {","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"    private static final String YEAR_REGEX \u003d \"\\\\d{4}\";","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"    private static final String MONTH_REGEX \u003d \"(0[1-9]|1[0-2])\";","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"    private static final String DAY_REGEX \u003d \"(0[1-9]|[12][0-9]|3[01])\";","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"    private static final String HOUR_REGEX \u003d \"([01][0-9]|2[0-4])\";","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"    private static final String MINUTE_REGEX \u003d \"([0-5][0-9]|60)\";","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"ailing35"},"content":"    private static final String VALIDATION_REGEX \u003d \"^\" + YEAR_REGEX + \"-\" + MONTH_REGEX + \"-\" + DAY_REGEX","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"ailing35"},"content":"                                                      + \" \" + HOUR_REGEX + \":\" + MINUTE_REGEX + \"$\";","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"ailing35"},"content":"    private static final String DATETIME_PARSE_FORMAT \u003d \"uuuu-MM-dd HH:mm\";","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"ailing35"},"content":"     * Standardised datetime formatter which rejects invalid date and time.","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"ailing35"},"content":"    public static final DateTimeFormatter FORMATTER \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"ailing35"},"content":"        DateTimeFormatter.ofPattern(DATETIME_PARSE_FORMAT).withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"ailing35"},"content":"     * Returns true if {@code test} is in the datetime format yyyy-MM-dd HH:mm.","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"ailing35"},"content":"    public static boolean matchDateTimeRegex(String test) {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"ailing35"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"ailing35"},"content":"     * Returns true if the datetime {@code test} is in the future.","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"ailing35"},"content":"    public static boolean isFuture(LocalDateTime test) {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"ailing35"},"content":"        return test.isAfter(LocalDateTime.now());","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"ailing35"},"content":"     * Returns true if the datetime {@code test} is in the past.","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"ailing35"},"content":"    public static boolean isPast(LocalDateTime test) {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"ailing35"},"content":"        return test.isBefore(LocalDateTime.now());","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"ailing35":48}},{"path":"src/main/java/seedu/address/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"luayida99"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"luayida99"},"content":"     *   Ignores case, a full word match is not required.","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"luayida99"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"luayida99"},"content":"     *       containsPartialWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"luayida99"},"content":"     *       containsPartialWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"luayida99"},"content":"     *       containsPartialWordIgnoreCase(\"A Bc def\", \"A B\") \u003d\u003d true //full word match not required","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"luayida99"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"luayida99"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"luayida99"},"content":"     * @param word cannot be null, cannot be empty, can be partial word","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"luayida99"},"content":"    public static boolean containsPartialWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"luayida99"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"luayida99"},"content":"        requireNonNull(word);","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"luayida99"},"content":"        String preppedWord \u003d word;","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"luayida99"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word cannot be empty!\");","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"luayida99"},"content":"        return sentence.toLowerCase().contains(word.toLowerCase());","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"luayida99":21,"-":68}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEALTH_CONDITION;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LANGUAGE;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAST_VISIT;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VISIT;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"            + PREFIX_LANGUAGE + \"LANGUAGE \"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"ailing35"},"content":"            + \"[\" + PREFIX_LAST_VISIT + \"LAST_VISIT] \"","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"            + \"[\" + PREFIX_VISIT + \"VISIT] \"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"            + \"[\" + PREFIX_HEALTH_CONDITION + \"HEALTH_CONDITION]...\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"            + PREFIX_LANGUAGE + \"English \"","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"Chen-Yiyang"},"content":"            + PREFIX_LAST_VISIT + \"2021-07-28 12:00 \"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Chen-Yiyang"},"content":"            + PREFIX_VISIT + \"2021-07-30 18:30 \"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"            + PREFIX_HEALTH_CONDITION + \"diabetes \"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"            + PREFIX_HEALTH_CONDITION + \"dementia\";","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"luayida99":2,"huisthat":7,"ailing35":2,"Chen-Yiyang":2,"-":60}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Chen-Yiyang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NO_EXISTING_VISIT;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VISIT;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Frequency;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Occurrence;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"import seedu.address.model.person.Visit;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list. \"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"            + \"Or delete the visit of that person using optional flag \" + PREFIX_VISIT + \".\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"            + \"Parameters: [\" + PREFIX_VISIT + \"] INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \" + \"or \" + COMMAND_WORD + \" v/1\";","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"    public static final String MESSAGE_DELETE_VISIT_SUCCESS \u003d \"Deleted Visit for Person: %1$s\";","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"luayida99"},"content":"    private static final Optional\u003cVisit\u003e EMPTY_VISIT \u003d Optional.ofNullable(new Visit(\"\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"    private final boolean isVisit;","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"     * @param targetIndex of the person in the filtered person list to delete","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"        this.isVisit \u003d false;","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"     * @param targetIndex of the person in the filtered person list to delete (the visit)","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"     * @param isVisit indicates if the command is to delete the person or the visit","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"    public DeleteCommand(Index targetIndex, boolean isVisit) {","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":"        this.isVisit \u003d isVisit;","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"ziqing26"},"content":"        if (isVisit) {","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"ziqing26"},"content":"            return deleteVisit(model, personToDelete);","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"ziqing26"},"content":"        } else {","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"ziqing26"},"content":"            return deletePerson(model, personToDelete);","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"ziqing26"},"content":"    private CommandResult deleteVisit(Model model, Person personToDelete) throws CommandException {","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"ziqing26"},"content":"        if (personToDelete.getVisit().equals(EMPTY_VISIT)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"ziqing26"},"content":"            throw new CommandException(String.format(MESSAGE_NO_EXISTING_VISIT, personToDelete));","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"huisthat"},"content":"        // if frequency and occurrence are not empty, delete visit will delete rest of the recurring","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"huisthat"},"content":"        // visits, resets frequency and occurrence","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"ziqing26"},"content":"        Person editedPerson \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"huisthat"},"content":"                new Person(personToDelete.getName(), personToDelete.getPhone(), personToDelete.getLanguage(),","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"huisthat"},"content":"                personToDelete.getAddress(), personToDelete.getLastVisit(), EMPTY_VISIT, Optional.of(Frequency.EMPTY),","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"huisthat"},"content":"                        Optional.of(new Occurrence(1)), personToDelete.getHealthConditions());","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"ziqing26"},"content":"        model.setPerson(personToDelete, editedPerson);","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"ziqing26"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_VISIT_SUCCESS, personToDelete));","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"ziqing26"},"content":"    private CommandResult deletePerson(Model model, Person personToDelete) {","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"luayida99":2,"huisthat":8,"ziqing26":41,"Chen-Yiyang":1,"-":50}},{"path":"src/main/java/seedu/address/logic/commands/DoneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chen-Yiyang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Chen-Yiyang"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Chen-Yiyang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NO_EXISTING_VISIT;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"Chen-Yiyang"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Chen-Yiyang"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Chen-Yiyang"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Chen-Yiyang"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Chen-Yiyang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Chen-Yiyang"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Chen-Yiyang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Frequency;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Chen-Yiyang"},"content":"import seedu.address.model.person.LastVisit;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Occurrence;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"Chen-Yiyang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Chen-Yiyang"},"content":"import seedu.address.model.person.Visit;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Chen-Yiyang"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Chen-Yiyang"},"content":" * Marks as done the visit for person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Chen-Yiyang"},"content":" * There must be a visit scheduled for the person.","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Chen-Yiyang"},"content":" * When a person\u0027s visit is marked as done, the visit is deleted and the field last visited is updated.","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Chen-Yiyang"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Chen-Yiyang"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Chen-Yiyang"},"content":"    public static final String COMMAND_WORD \u003d \"done\";","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Chen-Yiyang"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Chen-Yiyang"},"content":"            + \": Marks as done the visit for the person \"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"Chen-Yiyang"},"content":"            + \"identified by the index number used in the displayed person list. \"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Chen-Yiyang"},"content":"            + \"There must be a visit scheduled for the person\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Chen-Yiyang"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Chen-Yiyang"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Chen-Yiyang"},"content":"    public static final String MESSAGE_DONE_PERSON_SUCCESS \u003d \"Mark visit as done for Person: %1$s\";","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"Chen-Yiyang"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"Chen-Yiyang"},"content":"    public DoneCommand(Index targetIndex) {","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"Chen-Yiyang"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"Chen-Yiyang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"Chen-Yiyang"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"Chen-Yiyang"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"Chen-Yiyang"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"Chen-Yiyang"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"Chen-Yiyang"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"Chen-Yiyang"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"Chen-Yiyang"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"Chen-Yiyang"},"content":"        Person personToDone \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"Chen-Yiyang"},"content":"        if (!personToDone.hasVisit()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"Chen-Yiyang"},"content":"            throw new CommandException(String.format(MESSAGE_NO_EXISTING_VISIT, personToDone));","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"Chen-Yiyang"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"Chen-Yiyang"},"content":"        String newLastVisitedDate \u003d personToDone.getVisit().orElse(new Visit(\"\")).toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"huisthat"},"content":"        Visit newLastVisit \u003d personToDone.getVisit().get();","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"Chen-Yiyang"},"content":"        Optional\u003cLastVisit\u003e newLastVisited \u003d Optional.of(new LastVisit(newLastVisitedDate));","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"Chen-Yiyang"},"content":"        Occurrence currentOccurrence \u003d personToDone.getOccurrence().orElse(Occurrence.EMPTY_OCCURENCE);","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"Chen-Yiyang"},"content":"        Frequency currentFrequency \u003d personToDone.getFrequency().orElse(Frequency.EMPTY);","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"huisthat"},"content":"        Optional\u003cOccurrence\u003e newOccurrence;","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"huisthat"},"content":"        Optional\u003cVisit\u003e newVisit;","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"Chen-Yiyang"},"content":"        if (currentOccurrence.value \u003d\u003d 1 || currentFrequency.isEmpty()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"huisthat"},"content":"            newOccurrence \u003d Optional.of(new Occurrence(1));","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"huisthat"},"content":"            newVisit \u003d Optional.ofNullable(new Visit(\"\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"huisthat"},"content":"        } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"huisthat"},"content":"            newOccurrence \u003d Optional.of(currentOccurrence.getNext());","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"huisthat"},"content":"            newVisit \u003d Optional.ofNullable(currentFrequency.nextVisit(newLastVisit));","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"Chen-Yiyang"},"content":"        Person donePerson \u003d new Person(personToDone.getName(), personToDone.getPhone(), personToDone.getLanguage(),","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"huisthat"},"content":"                personToDone.getAddress(), newLastVisited, newVisit,","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"huisthat"},"content":"                personToDone.getFrequency(), newOccurrence, personToDone.getHealthConditions());","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"Chen-Yiyang"},"content":"        model.setPerson(personToDone, donePerson);","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"Chen-Yiyang"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"Chen-Yiyang"},"content":"        return new CommandResult(String.format(","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"Chen-Yiyang"},"content":"                MESSAGE_DONE_PERSON_SUCCESS, personToDone));","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"Chen-Yiyang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"Chen-Yiyang"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"Chen-Yiyang"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"Chen-Yiyang"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"Chen-Yiyang"},"content":"                || (other instanceof DoneCommand // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"Chen-Yiyang"},"content":"                \u0026\u0026 targetIndex.equals(((DoneCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"Chen-Yiyang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"Chen-Yiyang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"huisthat":15,"Chen-Yiyang":80}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEALTH_CONDITION;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LANGUAGE;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.healthcondition.HealthCondition;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Frequency;","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Language;","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"ailing35"},"content":"import seedu.address.model.person.LastVisit;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Occurrence;","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"import seedu.address.model.person.Visit;","lastModifiedDate":"2021-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"            + \"[\" + PREFIX_LANGUAGE + \"LANGUAGE] \"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"huisthat"},"content":"            + \"[\" + PREFIX_HEALTH_CONDITION + \"HEALTH_CONDITION]...\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"huisthat"},"content":"            + PREFIX_LANGUAGE + \"English\";","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"huisthat"},"content":"        Language updatedLanguage \u003d editPersonDescriptor.getLanguage().orElse(personToEdit.getLanguage());","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"ailing35"},"content":"        // edit command does not allow editing last visits","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"ailing35"},"content":"        Optional\u003cLastVisit\u003e updatedLastVisit \u003d personToEdit.getLastVisit();","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"ailing35"},"content":"        // edit command does not allow editing visits","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"luayida99"},"content":"        Optional\u003cVisit\u003e updatedVisit \u003d personToEdit.getVisit();","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"huisthat"},"content":"        // edit command does not allow editing frequency","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"huisthat"},"content":"        Optional\u003cFrequency\u003e updatedFrequency \u003d personToEdit.getFrequency();","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"huisthat"},"content":"        // edit command does not allow editing occurrence","lastModifiedDate":"2021-10-09"},{"lineNumber":111,"author":{"gitId":"huisthat"},"content":"        Optional\u003cOccurrence\u003e updatedOccurrence \u003d personToEdit.getOccurrence();","lastModifiedDate":"2021-10-09"},{"lineNumber":112,"author":{"gitId":"huisthat"},"content":"        Set\u003cHealthCondition\u003e updatedHealthConditions \u003d editPersonDescriptor.getHealthConditions()","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"huisthat"},"content":"                .orElse(personToEdit.getHealthConditions());","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"ailing35"},"content":"        return new Person(updatedName, updatedPhone, updatedLanguage, updatedAddress,","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"huisthat"},"content":"                updatedLastVisit, updatedVisit, updatedFrequency, updatedOccurrence, updatedHealthConditions);","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"huisthat"},"content":"        private Language language;","lastModifiedDate":"2021-10-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":146,"author":{"gitId":"huisthat"},"content":"        private Set\u003cHealthCondition\u003e healthConditions;","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"huisthat"},"content":"         * A defensive copy of {@code healthConditions} is used internally.","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":157,"author":{"gitId":"huisthat"},"content":"            setLanguage(toCopy.language);","lastModifiedDate":"2021-10-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":159,"author":{"gitId":"huisthat"},"content":"            setHealthConditions(toCopy.healthConditions);","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"huisthat"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, language, address, healthConditions);","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"huisthat"},"content":"        public void setLanguage(Language language) {","lastModifiedDate":"2021-10-06"},{"lineNumber":186,"author":{"gitId":"huisthat"},"content":"            this.language \u003d language;","lastModifiedDate":"2021-10-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"huisthat"},"content":"        public Optional\u003cLanguage\u003e getLanguage() {","lastModifiedDate":"2021-10-06"},{"lineNumber":190,"author":{"gitId":"huisthat"},"content":"            return Optional.ofNullable(language);","lastModifiedDate":"2021-10-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"huisthat"},"content":"         * Sets {@code healthConditions} to this object\u0027s {@code healthConditions}.","lastModifiedDate":"2021-10-19"},{"lineNumber":203,"author":{"gitId":"huisthat"},"content":"         * A defensive copy of {@code healthConditions} is used internally.","lastModifiedDate":"2021-10-19"},{"lineNumber":204,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"huisthat"},"content":"        public void setHealthConditions(Set\u003cHealthCondition\u003e healthConditions) {","lastModifiedDate":"2021-10-19"},{"lineNumber":206,"author":{"gitId":"huisthat"},"content":"            this.healthConditions \u003d (healthConditions !\u003d null) ? new HashSet\u003c\u003e(healthConditions) : null;","lastModifiedDate":"2021-10-19"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":210,"author":{"gitId":"huisthat"},"content":"         * Returns an unmodifiable healthCondition set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-19"},{"lineNumber":211,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"huisthat"},"content":"         * Returns {@code Optional#empty()} if {@code healthConditions} is null.","lastModifiedDate":"2021-10-19"},{"lineNumber":213,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"huisthat"},"content":"        public Optional\u003cSet\u003cHealthCondition\u003e\u003e getHealthConditions() {","lastModifiedDate":"2021-10-19"},{"lineNumber":215,"author":{"gitId":"huisthat"},"content":"            return (healthConditions !\u003d null)","lastModifiedDate":"2021-10-19"},{"lineNumber":216,"author":{"gitId":"huisthat"},"content":"                    ? Optional.of(Collections.unmodifiableSet(healthConditions)) : Optional.empty();","lastModifiedDate":"2021-10-19"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":236,"author":{"gitId":"huisthat"},"content":"                    \u0026\u0026 getLanguage().equals(e.getLanguage())","lastModifiedDate":"2021-10-06"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":238,"author":{"gitId":"huisthat"},"content":"                    \u0026\u0026 getHealthConditions().equals(e.getHealthConditions());","lastModifiedDate":"2021-10-19"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"luayida99":2,"huisthat":38,"ailing35":5,"-":196}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"import seedu.address.model.person.PersonAttributesContainsKeywordsPredicate;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose attributes start with all of \"","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"            + \"Parameters: KEYWORD\\n\"","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"            + \"Example: \" + COMMAND_WORD + \" alex English\"","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"            + \"\\nSearches for any person with alex and English as a substring of their attributes\";","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"    private final PersonAttributesContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"    public FindCommand(PersonAttributesContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"luayida99":9,"-":35}},{"path":"src/main/java/seedu/address/logic/commands/VisitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FREQUENCY;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OCCURRENCE;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"import java.util.List;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Frequency;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Occurrence;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"import seedu.address.model.person.Visit;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":" * Changes the visit of an existing person in the address book.","lastModifiedDate":"2021-10-01"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"public class VisitCommand extends Command {","lastModifiedDate":"2021-10-01"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"    public static final String COMMAND_WORD \u003d \"visit\";","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the visit of the person identified \"","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"            + \"Existing visit will be overwritten by the input.\"","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"            + \"Or add a recurring visit using optional flags for frequency and occurrence\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"luayida99"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"            + PREFIX_DATE + \"VISIT_DATE \"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"            + \"[\" + PREFIX_FREQUENCY + \"FREQUENCY \"","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"            + PREFIX_OCCURRENCE + \"OCCURRENCE]\\n\"","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"luayida99"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"Chen-Yiyang"},"content":"            + PREFIX_DATE + \"2020-11-12 12:00 \"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"            + \"or \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Chen-Yiyang"},"content":"            + PREFIX_DATE + \"2020-11-12 12:00 \"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"            + PREFIX_FREQUENCY + \"Weekly \"","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"            + PREFIX_OCCURRENCE + \"2\";","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":43,"author":{"gitId":"luayida99"},"content":"    public static final String MESSAGE_ADD_VISIT_SUCCESS \u003d \"Added visit to Person: %1$s\";","lastModifiedDate":"2021-10-01"},{"lineNumber":44,"author":{"gitId":"luayida99"},"content":"    public static final String MESSAGE_DELETE_VISIT_SUCCESS \u003d \"Removed visit from Person: %1$s\";","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"    public static final String MESSAGE_ADD_RECURRING_VISIT_SUCCESS \u003d \"Added recurring visit to Person: %1$s\";","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"    public static final String MESSAGE_INVALID_OPTIONAL_FLAG \u003d \"Frequency cannot be empty for multiple occurrence.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"luayida99"},"content":"    private final Index index;","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"luayida99"},"content":"    private final Optional\u003cVisit\u003e visit;","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"huisthat"},"content":"    private final Optional\u003cFrequency\u003e frequency;","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"huisthat"},"content":"    private final Optional\u003cOccurrence\u003e occurrence;","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"luayida99"},"content":"     * @param index of the person in the filtered person list to edit the visit","lastModifiedDate":"2021-10-01"},{"lineNumber":55,"author":{"gitId":"luayida99"},"content":"     * @param visit of the person to be updated to","lastModifiedDate":"2021-10-01"},{"lineNumber":56,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"huisthat"},"content":"    public VisitCommand(Index index, Optional\u003cVisit\u003e visit,","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"huisthat"},"content":"                        Optional\u003cFrequency\u003e frequency, Optional\u003cOccurrence\u003e occurrence) {","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"luayida99"},"content":"        requireAllNonNull(index, visit);","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":61,"author":{"gitId":"luayida99"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-09-30"},{"lineNumber":62,"author":{"gitId":"luayida99"},"content":"        this.visit \u003d visit;","lastModifiedDate":"2021-10-01"},{"lineNumber":63,"author":{"gitId":"huisthat"},"content":"        this.frequency \u003d frequency;","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"huisthat"},"content":"        this.occurrence \u003d occurrence;","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":66,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":67,"author":{"gitId":"luayida99"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":68,"author":{"gitId":"luayida99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-30"},{"lineNumber":69,"author":{"gitId":"luayida99"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":71,"author":{"gitId":"luayida99"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":72,"author":{"gitId":"luayida99"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"ziqing26"},"content":"        if (occurrence.get().isMoreThan(1) \u0026\u0026 frequency.get().equals(Frequency.EMPTY)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"ziqing26"},"content":"            throw new CommandException(MESSAGE_INVALID_OPTIONAL_FLAG);","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"luayida99"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"huisthat"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), personToEdit.getLanguage(),","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"huisthat"},"content":"                personToEdit.getAddress(), personToEdit.getLastVisit(), visit,","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"huisthat"},"content":"                frequency, occurrence, personToEdit.getHealthConditions());","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":85,"author":{"gitId":"luayida99"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-09-30"},{"lineNumber":86,"author":{"gitId":"luayida99"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"luayida99"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"luayida99"},"content":"     * Generates a command execution success message based on whether the visit is added to or removed from","lastModifiedDate":"2021-10-01"},{"lineNumber":93,"author":{"gitId":"luayida99"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"luayida99"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"ziqing26"},"content":"        String message;","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"ziqing26"},"content":"        if (visit.get().value.isEmpty()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"ziqing26"},"content":"            // if the visit is empty","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"ziqing26"},"content":"            message \u003d MESSAGE_DELETE_VISIT_SUCCESS;","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"ziqing26"},"content":"        } else if (frequency.get().isEmpty()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"ziqing26"},"content":"            // if the visit is not a recurring visit","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"ziqing26"},"content":"            message \u003d MESSAGE_ADD_VISIT_SUCCESS;","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"ziqing26"},"content":"        } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"ziqing26"},"content":"            // if the visit is a recurring visit","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"ziqing26"},"content":"            message \u003d MESSAGE_ADD_RECURRING_VISIT_SUCCESS;","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"luayida99"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2021-09-30"},{"lineNumber":109,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"luayida99"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"luayida99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-30"},{"lineNumber":113,"author":{"gitId":"luayida99"},"content":"        // short circuit if same object","lastModifiedDate":"2021-09-30"},{"lineNumber":114,"author":{"gitId":"luayida99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-30"},{"lineNumber":115,"author":{"gitId":"luayida99"},"content":"            return true;","lastModifiedDate":"2021-09-30"},{"lineNumber":116,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":117,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":118,"author":{"gitId":"luayida99"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"luayida99"},"content":"        if (!(other instanceof VisitCommand)) {","lastModifiedDate":"2021-10-01"},{"lineNumber":120,"author":{"gitId":"luayida99"},"content":"            return false;","lastModifiedDate":"2021-09-30"},{"lineNumber":121,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":122,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":123,"author":{"gitId":"luayida99"},"content":"        // state check","lastModifiedDate":"2021-09-30"},{"lineNumber":124,"author":{"gitId":"luayida99"},"content":"        VisitCommand e \u003d (VisitCommand) other;","lastModifiedDate":"2021-10-01"},{"lineNumber":125,"author":{"gitId":"luayida99"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-09-30"},{"lineNumber":126,"author":{"gitId":"luayida99"},"content":"                \u0026\u0026 visit.equals(e.visit);","lastModifiedDate":"2021-10-01"},{"lineNumber":127,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":128,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"luayida99":85,"huisthat":23,"ziqing26":18,"Chen-Yiyang":2}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEALTH_CONDITION;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LANGUAGE;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAST_VISIT;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VISIT;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.healthcondition.HealthCondition;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Frequency;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Language;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"ailing35"},"content":"import seedu.address.model.person.LastVisit;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Occurrence;","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"import seedu.address.model.person.Visit;","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"ailing35"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_LANGUAGE, PREFIX_ADDRESS,","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"                        PREFIX_VISIT, PREFIX_LAST_VISIT, PREFIX_HEALTH_CONDITION);","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"huisthat"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_LANGUAGE)","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"huisthat"},"content":"        Language language \u003d ParserUtil.parseLanguage(argMultimap.getValue(PREFIX_LANGUAGE).get());","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"huisthat"},"content":"        Optional\u003cLastVisit\u003e lastVisit \u003d ParserUtil.parseLastVisit(argMultimap.getValue(PREFIX_LAST_VISIT)","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"huisthat"},"content":"                .orElse(\"\"));","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"luayida99"},"content":"        Optional\u003cVisit\u003e visit \u003d ParserUtil.parseVisitForAdd(argMultimap.getValue(PREFIX_VISIT).orElse(\"\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"huisthat"},"content":"        Optional\u003cFrequency\u003e frequency \u003d Optional.empty();","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"huisthat"},"content":"        Optional\u003cOccurrence\u003e occurrence \u003d Optional.empty();","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"huisthat"},"content":"        Set\u003cHealthCondition\u003e healthConditionList \u003d ParserUtil","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"huisthat"},"content":"                .parseHealthConditions(argMultimap.getAllValues(PREFIX_HEALTH_CONDITION));","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"huisthat"},"content":"        Person person \u003d new Person(name, phone, language, address, lastVisit, visit, frequency,","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"huisthat"},"content":"                occurrence, healthConditionList);","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"luayida99":3,"huisthat":17,"ailing35":4,"-":51}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"Chen-Yiyang"},"content":"import seedu.address.logic.commands.DoneCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"import seedu.address.logic.commands.VisitCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"Chen-Yiyang"},"content":"        case DoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"Chen-Yiyang"},"content":"            return new DoneCommandParser().parse(arguments);","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"luayida99"},"content":"        case VisitCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-01"},{"lineNumber":68,"author":{"gitId":"luayida99"},"content":"            return new VisitCommandParser().parse(arguments);","lastModifiedDate":"2021-10-01"},{"lineNumber":69,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"luayida99":4,"Chen-Yiyang":4,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"luayida99"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"luayida99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"luayida99"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"luayida99"},"content":"                || (other instanceof ArgumentMultimap","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"luayida99"},"content":"                \u0026\u0026 argMultimap.equals(((ArgumentMultimap) other).argMultimap));","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"luayida99":7,"-":60}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"    public static final Prefix PREFIX_LANGUAGE \u003d new Prefix(\"l/\");","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"    public static final Prefix PREFIX_HEALTH_CONDITION \u003d new Prefix(\"h/\");","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"    public static final Prefix PREFIX_LAST_VISIT \u003d new Prefix(\"lv/\");","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"    public static final Prefix PREFIX_VISIT \u003d new Prefix(\"v/\");","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"at/\");","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"    public static final Prefix PREFIX_FREQUENCY \u003d new Prefix(\"f/\");","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"    public static final Prefix PREFIX_OCCURRENCE \u003d new Prefix(\"o/\");","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"huisthat":4,"ailing35":1,"ziqing26":2,"-":13}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VISIT;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_VISIT);","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"        Index index;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"            if (argMultimap.getValue(PREFIX_VISIT).isPresent()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"                index \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_VISIT).get());","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"                return new DeleteCommand(index, true);","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"            } else {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"                index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"ziqing26":12,"-":28}},{"path":"src/main/java/seedu/address/logic/parser/DoneCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Chen-Yiyang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Chen-Yiyang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Chen-Yiyang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Chen-Yiyang"},"content":"import seedu.address.logic.commands.DoneCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Chen-Yiyang"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Chen-Yiyang"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Chen-Yiyang"},"content":" * Parses input arguments and creates a new DoneCommand object.","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Chen-Yiyang"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Chen-Yiyang"},"content":"public class DoneCommandParser implements Parser\u003cDoneCommand\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Chen-Yiyang"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Chen-Yiyang"},"content":"     * Parses the given {@code String} of arguments in the context of the DoneCommand","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Chen-Yiyang"},"content":"     * and returns a DoneCommand object for execution.","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Chen-Yiyang"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Chen-Yiyang"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Chen-Yiyang"},"content":"    public DoneCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Chen-Yiyang"},"content":"        try {","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Chen-Yiyang"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Chen-Yiyang"},"content":"            return new DoneCommand(index);","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Chen-Yiyang"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Chen-Yiyang"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Chen-Yiyang"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DoneCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Chen-Yiyang"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Chen-Yiyang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Chen-Yiyang"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Chen-Yiyang":29}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEALTH_CONDITION;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LANGUAGE;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.healthcondition.HealthCondition;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"                        PREFIX_LANGUAGE, PREFIX_ADDRESS, PREFIX_HEALTH_CONDITION);","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"huisthat"},"content":"        if (argMultimap.getValue(PREFIX_LANGUAGE).isPresent()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"huisthat"},"content":"            editPersonDescriptor.setLanguage(ParserUtil.parseLanguage(argMultimap.getValue(PREFIX_LANGUAGE).get()));","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"huisthat"},"content":"        parseHealthConditionsForEdit(argMultimap.getAllValues(PREFIX_HEALTH_CONDITION))","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"huisthat"},"content":"                .ifPresent(editPersonDescriptor::setHealthConditions);","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"huisthat"},"content":"     * Parses {@code Collection\u003cString\u003e healthConditions} into a {@code Set\u003cHealthCondition\u003e} if","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"huisthat"},"content":"     * {@code healthConditions} is non-empty. If {@code healthConditions} contain only one element which is an","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"huisthat"},"content":"     * empty string, it will be parsed into a {@code Set\u003cHealthCondition\u003e} containing zero healthConditions.","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"huisthat"},"content":"    private Optional\u003cSet\u003cHealthCondition\u003e\u003e parseHealthConditionsForEdit(Collection\u003cString\u003e healthConditions)","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"huisthat"},"content":"            throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"huisthat"},"content":"        assert healthConditions !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"huisthat"},"content":"        if (healthConditions.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"huisthat"},"content":"        Collection\u003cString\u003e healthConditionSet \u003d healthConditions.size() \u003d\u003d 1 \u0026\u0026 healthConditions.contains(\"\")","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"huisthat"},"content":"                ? Collections.emptySet() : healthConditions;","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"huisthat"},"content":"        return Optional.of(ParserUtil.parseHealthConditions(healthConditionSet));","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"huisthat":19,"-":67}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":"import seedu.address.model.person.PersonAttributesContainsKeywordsPredicate;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"        String refactoredArgs \u003d args.trim().replaceAll(\"\\\\s+\", \" \");","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(refactoredArgs);","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"        if (refactoredArgs.isEmpty()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"        return new FindCommand(new PersonAttributesContainsKeywordsPredicate(argMultimap));","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"luayida99":7,"-":23}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Chen-Yiyang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.healthcondition.HealthCondition;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Frequency;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Language;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"ailing35"},"content":"import seedu.address.model.person.LastVisit;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Occurrence;","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"import seedu.address.model.person.Visit;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"Chen-Yiyang"},"content":"    public static final String DATETIME_DISPLAY_FORMAT \u003d \"dd LLL yyyy HH:mm\";","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"ailing35"},"content":"    public static final String MESSAGE_INVALID_DATE \u003d \"Date is invalid.\";","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"ailing35"},"content":"    public static final String MESSAGE_INVALID_LAST_VISIT_DATE \u003d \"Last visit date should be in the past.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"ailing35"},"content":"    public static final String MESSAGE_INVALID_VISIT_DATE \u003d \"Visit date should be in the future.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"    public static final String MESSAGE_INVALID_FREQUENCY \u003d \"Frequency can only be daily, weekly, \"","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"            + \"biweekly, monthly or quarterly.\";","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"    public static final String MESSAGE_INVALID_OCCURRENCE \u003d \"Occurrence should be a positive number.\";","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"huisthat"},"content":"     * Parses a {@code String language} into an {@code Language}.","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"huisthat"},"content":"     * @throws ParseException if the given {@code language} is invalid.","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"huisthat"},"content":"    public static Language parseLanguage(String language) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"huisthat"},"content":"        requireNonNull(language);","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"huisthat"},"content":"        String trimmedLanguage \u003d language.trim();","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"huisthat"},"content":"        if (!Language.isValidLanguage(trimmedLanguage)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"huisthat"},"content":"            throw new ParseException(Language.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"huisthat"},"content":"        return new Language(trimmedLanguage);","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"huisthat"},"content":"     * Parses a {@code String healthCondition} into a {@code HealthCondition}.","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"huisthat"},"content":"     * @throws ParseException if the given {@code healthCondition} is invalid.","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"huisthat"},"content":"    public static HealthCondition parseHealthCondition(String healthCondition) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"huisthat"},"content":"        requireNonNull(healthCondition);","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"huisthat"},"content":"        String trimmedHealthCondition \u003d healthCondition.trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"huisthat"},"content":"        if (!HealthCondition.isValidHealthCondition(trimmedHealthCondition)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"huisthat"},"content":"            throw new ParseException(HealthCondition.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"huisthat"},"content":"        return new HealthCondition(trimmedHealthCondition);","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"huisthat"},"content":"     * Parses {@code Collection\u003cString\u003e healthConditions} into a {@code Set\u003cHealthCondition\u003e}.","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"huisthat"},"content":"    public static Set\u003cHealthCondition\u003e parseHealthConditions(Collection\u003cString\u003e healthConditions)","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"huisthat"},"content":"            throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"huisthat"},"content":"        requireNonNull(healthConditions);","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"huisthat"},"content":"        final Set\u003cHealthCondition\u003e healthConditionSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"huisthat"},"content":"        for (String healthConditionName : healthConditions) {","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"huisthat"},"content":"            healthConditionSet.add(parseHealthCondition(healthConditionName));","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"huisthat"},"content":"        return healthConditionSet;","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"ailing35"},"content":"     * Parses a {@code String lastVisit} into an {@code LastVisit}.","lastModifiedDate":"2021-10-06"},{"lineNumber":145,"author":{"gitId":"ailing35"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"ailing35"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"ailing35"},"content":"     * @throws ParseException if the given {@code lastVisit} is invalid.","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"ailing35"},"content":"    public static Optional\u003cLastVisit\u003e parseLastVisit(String lastVisit) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"ailing35"},"content":"        requireNonNull(lastVisit);","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"ailing35"},"content":"        String trimmedLastVisit \u003d lastVisit.trim();","lastModifiedDate":"2021-10-06"},{"lineNumber":152,"author":{"gitId":"ailing35"},"content":"        if (lastVisit.isEmpty()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":153,"author":{"gitId":"ailing35"},"content":"            return Optional.ofNullable(new LastVisit(trimmedLastVisit));","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":155,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":156,"author":{"gitId":"ailing35"},"content":"        if (!LastVisit.isValidLastVisit(trimmedLastVisit)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":157,"author":{"gitId":"ailing35"},"content":"            throw new ParseException(LastVisit.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":158,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":159,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":160,"author":{"gitId":"ailing35"},"content":"        LocalDateTime parsedLastVisit;","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"ailing35"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":162,"author":{"gitId":"ailing35"},"content":"            parsedLastVisit \u003d LocalDateTime.parse(trimmedLastVisit, DateTimeUtil.FORMATTER);","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"ailing35"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":164,"author":{"gitId":"ailing35"},"content":"            throw new ParseException(MESSAGE_INVALID_DATE);","lastModifiedDate":"2021-10-06"},{"lineNumber":165,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":166,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":167,"author":{"gitId":"ailing35"},"content":"        if (DateTimeUtil.isFuture(parsedLastVisit)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"ailing35"},"content":"            throw new ParseException(MESSAGE_INVALID_LAST_VISIT_DATE);","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"ailing35"},"content":"        return Optional.ofNullable(new LastVisit(trimmedLastVisit));","lastModifiedDate":"2021-10-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":175,"author":{"gitId":"luayida99"},"content":"     * Parses a {@code String Visit} into an {@code Visit}.","lastModifiedDate":"2021-10-07"},{"lineNumber":176,"author":{"gitId":"luayida99"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-07"},{"lineNumber":177,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":178,"author":{"gitId":"luayida99"},"content":"     * @throws ParseException if the given {@code Visit} is invalid.","lastModifiedDate":"2021-10-07"},{"lineNumber":179,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":180,"author":{"gitId":"luayida99"},"content":"    public static Optional\u003cVisit\u003e parseVisit(String visit) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":181,"author":{"gitId":"luayida99"},"content":"        requireNonNull(visit);","lastModifiedDate":"2021-10-07"},{"lineNumber":182,"author":{"gitId":"luayida99"},"content":"        String trimmedVisit \u003d visit.trim();","lastModifiedDate":"2021-10-08"},{"lineNumber":183,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":184,"author":{"gitId":"luayida99"},"content":"        if (!Visit.isValidVisit(trimmedVisit)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":185,"author":{"gitId":"luayida99"},"content":"            throw new ParseException(Visit.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":186,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":187,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":188,"author":{"gitId":"ailing35"},"content":"        LocalDateTime parsedVisit;","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"luayida99"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":190,"author":{"gitId":"ailing35"},"content":"            parsedVisit \u003d LocalDateTime.parse(trimmedVisit, DateTimeUtil.FORMATTER);","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"luayida99"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":192,"author":{"gitId":"luayida99"},"content":"            throw new ParseException(MESSAGE_INVALID_DATE);","lastModifiedDate":"2021-10-07"},{"lineNumber":193,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":194,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":195,"author":{"gitId":"ailing35"},"content":"        if (DateTimeUtil.isPast(parsedVisit)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"ailing35"},"content":"            throw new ParseException(MESSAGE_INVALID_VISIT_DATE);","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"luayida99"},"content":"        return Optional.ofNullable(new Visit(trimmedVisit));","lastModifiedDate":"2021-10-08"},{"lineNumber":200,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":201,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":202,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":203,"author":{"gitId":"luayida99"},"content":"     * Parses a {@code String Visit} into an {@code Visit} for the add command.","lastModifiedDate":"2021-10-09"},{"lineNumber":204,"author":{"gitId":"luayida99"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-09"},{"lineNumber":205,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":206,"author":{"gitId":"luayida99"},"content":"     * @throws ParseException if the given {@code Visit} is invalid.","lastModifiedDate":"2021-10-09"},{"lineNumber":207,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":208,"author":{"gitId":"luayida99"},"content":"    public static Optional\u003cVisit\u003e parseVisitForAdd(String visit) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":209,"author":{"gitId":"luayida99"},"content":"        requireNonNull(visit);","lastModifiedDate":"2021-10-09"},{"lineNumber":210,"author":{"gitId":"luayida99"},"content":"        String trimmedVisit \u003d visit.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":211,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":212,"author":{"gitId":"luayida99"},"content":"        if (trimmedVisit.isEmpty()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":213,"author":{"gitId":"luayida99"},"content":"            return Optional.ofNullable(new Visit(\"\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":214,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":215,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":216,"author":{"gitId":"luayida99"},"content":"        if (!Visit.isValidVisit(trimmedVisit)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":217,"author":{"gitId":"luayida99"},"content":"            throw new ParseException(Visit.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":218,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":219,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":220,"author":{"gitId":"ailing35"},"content":"        LocalDateTime parsedVisit;","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"luayida99"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":222,"author":{"gitId":"ailing35"},"content":"            parsedVisit \u003d LocalDateTime.parse(trimmedVisit, DateTimeUtil.FORMATTER);","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"luayida99"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-09"},{"lineNumber":224,"author":{"gitId":"luayida99"},"content":"            throw new ParseException(MESSAGE_INVALID_DATE);","lastModifiedDate":"2021-10-09"},{"lineNumber":225,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":226,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":227,"author":{"gitId":"ailing35"},"content":"        if (DateTimeUtil.isPast(parsedVisit)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"ailing35"},"content":"            throw new ParseException(MESSAGE_INVALID_VISIT_DATE);","lastModifiedDate":"2021-10-12"},{"lineNumber":229,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"luayida99"},"content":"        return Optional.ofNullable(new Visit(trimmedVisit));","lastModifiedDate":"2021-10-09"},{"lineNumber":232,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":233,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":234,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":235,"author":{"gitId":"huisthat"},"content":"     * Parses {@code frequency} into a {@code frequency} and returns it.","lastModifiedDate":"2021-10-09"},{"lineNumber":236,"author":{"gitId":"huisthat"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-09"},{"lineNumber":237,"author":{"gitId":"huisthat"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":238,"author":{"gitId":"huisthat"},"content":"     * @throws ParseException if the specified frequency is invalid.","lastModifiedDate":"2021-10-09"},{"lineNumber":239,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":240,"author":{"gitId":"huisthat"},"content":"    public static Optional\u003cFrequency\u003e parseFrequency(String frequency) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":241,"author":{"gitId":"huisthat"},"content":"        String trimmedFrequency \u003d frequency.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":242,"author":{"gitId":"huisthat"},"content":"        if (!Frequency.isValidFrequency(trimmedFrequency)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":243,"author":{"gitId":"huisthat"},"content":"            throw new ParseException(MESSAGE_INVALID_FREQUENCY);","lastModifiedDate":"2021-10-09"},{"lineNumber":244,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":245,"author":{"gitId":"huisthat"},"content":"        return Optional.ofNullable(Frequency.find(trimmedFrequency));","lastModifiedDate":"2021-10-09"},{"lineNumber":246,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":247,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":248,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":249,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":250,"author":{"gitId":"huisthat"},"content":"     * Parses {@code occurrence} into a {@code occurrence} and returns it.","lastModifiedDate":"2021-10-09"},{"lineNumber":251,"author":{"gitId":"huisthat"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-09"},{"lineNumber":252,"author":{"gitId":"huisthat"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":253,"author":{"gitId":"huisthat"},"content":"     * @throws ParseException if the specified occurrence is invalid.","lastModifiedDate":"2021-10-09"},{"lineNumber":254,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":255,"author":{"gitId":"huisthat"},"content":"    public static Optional\u003cOccurrence\u003e parseOccurrence(String occurrence) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":256,"author":{"gitId":"huisthat"},"content":"        requireNonNull(occurrence);","lastModifiedDate":"2021-10-09"},{"lineNumber":257,"author":{"gitId":"huisthat"},"content":"        String trimmedOccurrence \u003d occurrence.trim();","lastModifiedDate":"2021-10-09"},{"lineNumber":258,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":259,"author":{"gitId":"huisthat"},"content":"        if (!Occurrence.isValidOccurrence(trimmedOccurrence)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":260,"author":{"gitId":"huisthat"},"content":"            throw new ParseException(MESSAGE_INVALID_OCCURRENCE);","lastModifiedDate":"2021-10-09"},{"lineNumber":261,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":262,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":263,"author":{"gitId":"huisthat"},"content":"        int convertedOccurrence \u003d Integer.parseInt(trimmedOccurrence);","lastModifiedDate":"2021-10-09"},{"lineNumber":264,"author":{"gitId":"huisthat"},"content":"        return Optional.ofNullable(new Occurrence(convertedOccurrence));","lastModifiedDate":"2021-10-09"},{"lineNumber":265,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":266,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":267,"author":{"gitId":"Chen-Yiyang"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":268,"author":{"gitId":"Chen-Yiyang"},"content":"     * Format {@code storedDateString} into a {@code displayedDateString} to be displayed on Person Card.","lastModifiedDate":"2021-10-11"},{"lineNumber":269,"author":{"gitId":"Chen-Yiyang"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":270,"author":{"gitId":"Chen-Yiyang"},"content":"     * @param storedDateString datetime string of pattern dd yyyy-MM-dd HH:mm","lastModifiedDate":"2021-10-11"},{"lineNumber":271,"author":{"gitId":"Chen-Yiyang"},"content":"     * @return displayedDateString formatted datetime string of pattern dd LLL yyyy HH:mm","lastModifiedDate":"2021-10-11"},{"lineNumber":272,"author":{"gitId":"Chen-Yiyang"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":273,"author":{"gitId":"Chen-Yiyang"},"content":"    public static String parseDisplayedDatetime(String storedDateString) {","lastModifiedDate":"2021-10-11"},{"lineNumber":274,"author":{"gitId":"Chen-Yiyang"},"content":"        String displayedDateString;","lastModifiedDate":"2021-10-11"},{"lineNumber":275,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":276,"author":{"gitId":"Chen-Yiyang"},"content":"        DateTimeFormatter displayFormat \u003d DateTimeFormatter.ofPattern(DATETIME_DISPLAY_FORMAT);","lastModifiedDate":"2021-10-11"},{"lineNumber":277,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":278,"author":{"gitId":"Chen-Yiyang"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":279,"author":{"gitId":"ailing35"},"content":"            LocalDateTime date \u003d LocalDateTime.parse(storedDateString, DateTimeUtil.FORMATTER);","lastModifiedDate":"2021-10-12"},{"lineNumber":280,"author":{"gitId":"Chen-Yiyang"},"content":"            displayedDateString \u003d displayFormat.format(date);","lastModifiedDate":"2021-10-11"},{"lineNumber":281,"author":{"gitId":"Chen-Yiyang"},"content":"        } catch (DateTimeParseException ive) {","lastModifiedDate":"2021-10-11"},{"lineNumber":282,"author":{"gitId":"Chen-Yiyang"},"content":"            // TODO: handle exception to display","lastModifiedDate":"2021-10-11"},{"lineNumber":283,"author":{"gitId":"Chen-Yiyang"},"content":"            return storedDateString;","lastModifiedDate":"2021-10-11"},{"lineNumber":284,"author":{"gitId":"Chen-Yiyang"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":285,"author":{"gitId":"Chen-Yiyang"},"content":"        return displayedDateString;","lastModifiedDate":"2021-10-11"},{"lineNumber":286,"author":{"gitId":"Chen-Yiyang"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":287,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":288,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":289,"author":{"gitId":"luayida99"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-13"},{"lineNumber":290,"author":{"gitId":"luayida99"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-13"},{"lineNumber":291,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":292,"author":{"gitId":"luayida99"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-13"},{"lineNumber":293,"author":{"gitId":"luayida99"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-13"},{"lineNumber":294,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":295,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"luayida99":58,"huisthat":65,"ailing35":49,"ziqing26":1,"Chen-Yiyang":22,"-":101}},{"path":"src/main/java/seedu/address/logic/parser/VisitCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FREQUENCY;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OCCURRENCE;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"import static seedu.address.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-01"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"import seedu.address.logic.commands.VisitCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Frequency;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Occurrence;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"import seedu.address.model.person.Visit;","lastModifiedDate":"2021-10-01"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":" * Parses input arguments and creates a new {@code VisitCommand} object","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"public class VisitCommandParser implements Parser\u003cVisitCommand\u003e {","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code VisitCommand}","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"     * and returns a {@code VisitCommand} object for execution.","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"    public VisitCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DATE,","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"                PREFIX_FREQUENCY, PREFIX_OCCURRENCE);","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":34,"author":{"gitId":"luayida99"},"content":"        Index index;","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"luayida99"},"content":"        try {","lastModifiedDate":"2021-09-30"},{"lineNumber":36,"author":{"gitId":"luayida99"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"luayida99"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-09-30"},{"lineNumber":38,"author":{"gitId":"luayida99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, VisitCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2021-10-01"},{"lineNumber":39,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":40,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"luayida99"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DATE)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"luayida99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, VisitCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"        if (!areOptionalPrefixesValid(argMultimap)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, VisitCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"        String visit \u003d argMultimap.getValue(PREFIX_DATE).orElse(\"\");","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"luayida99"},"content":"        Optional\u003cVisit\u003e convertedVisit \u003d ParserUtil.parseVisit(visit);","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"huisthat"},"content":"        String frequency \u003d argMultimap.getValue(PREFIX_FREQUENCY).orElse(\"\");","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"huisthat"},"content":"        Optional\u003cFrequency\u003e convertedFrequency \u003d ParserUtil.parseFrequency(frequency);","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"huisthat"},"content":"        String occurrence \u003d argMultimap.getValue(PREFIX_OCCURRENCE).orElse(\"1\");","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"huisthat"},"content":"        Optional\u003cOccurrence\u003e convertedOccurrence \u003d ParserUtil.parseOccurrence(occurrence);","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"huisthat"},"content":"        return new VisitCommand(index, convertedVisit, convertedFrequency, convertedOccurrence);","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"ziqing26"},"content":"    private static boolean areOptionalPrefixesValid(ArgumentMultimap argumentMultimap) {","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"ziqing26"},"content":"        boolean isEitherTrue \u003d arePrefixesPresent(argumentMultimap, PREFIX_FREQUENCY)","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"ziqing26"},"content":"                || arePrefixesPresent(argumentMultimap, PREFIX_OCCURRENCE);","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"ziqing26"},"content":"        if (arePrefixesPresent(argumentMultimap, PREFIX_FREQUENCY, PREFIX_OCCURRENCE)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"ziqing26"},"content":"            return true;","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"ziqing26"},"content":"        } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"ziqing26"},"content":"            return !isEitherTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"luayida99":42,"huisthat":13,"ziqing26":16}},{"path":"src/main/java/seedu/address/model/healthcondition/HealthCondition.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package seedu.address.model.healthcondition;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":" * Represents a HealthCondition in the address book.","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidHealthCondition(String)}","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"public class HealthCondition {","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Health conditions should only contain alphanumeric \"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"            + \"characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"    public final String healthCondition;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"     * Constructs a {@code HealthCondition}.","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"     * @param healthCondition A valid health condition.","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"    public HealthCondition(String healthCondition) {","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"        requireNonNull(healthCondition);","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"        checkArgument(isValidHealthCondition(healthCondition), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"        this.healthCondition \u003d healthCondition;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"    public static boolean isValidHealthCondition(String test) {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"                || (other instanceof HealthCondition // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"                \u0026\u0026 healthCondition.equals(((HealthCondition) other).healthCondition)); // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"huisthat"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"huisthat"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"        return healthCondition.hashCode();","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"huisthat"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"huisthat"},"content":"    public String toString() {","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"huisthat"},"content":"        return \u0027[\u0027 + healthCondition + \u0027]\u0027;","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"huisthat":55}},{"path":"src/main/java/seedu/address/model/person/Frequency.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"Chen-Yiyang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":" * Represents frequency of visits for each person.","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"public enum Frequency {","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"    EMPTY(\"\"),","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"    DAILY(\"daily\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"    WEEKLY(\"weekly\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"    BIWEEKLY(\"biweekly\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"    MONTHLY(\"monthly\"),","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"    QUARTERLY(\"quarterly\");","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"            \"Frequency should be either daily, weekly, biweekly, monthly or quarterly.\";","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"    public final String value;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"    Frequency(String value) {","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"     * Returns if a given string is a valid frequency.","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"    public static boolean isValidFrequency(String value) {","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"        requireNonNull(value);","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"        for (Frequency f : Frequency.values()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"            if (value.toLowerCase().equals(f.value)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"                return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"        return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"     * Check if the frequency is empty.","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"     * @return true if the frequency is empty, otherwise false.","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"        return Objects.equals(this.value, \"\");","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"     * Finds the matching Frequency of a string.","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":"     * @param value The string of frequency.","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":"     * @return The corresponding Frequency to the string.","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"ziqing26"},"content":"    public static Frequency find(String value) {","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"ziqing26"},"content":"        checkArgument(isValidFrequency(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"ziqing26"},"content":"        for (Frequency f : Frequency.values()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"ziqing26"},"content":"            if (value.toLowerCase().equals(f.value)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"ziqing26"},"content":"                return f;","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"ziqing26"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"ziqing26"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"ziqing26"},"content":"        throw new NullPointerException();","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"huisthat"},"content":"     * Finds the next visit with the frequency","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"huisthat"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"huisthat"},"content":"     * @param visit The current visit.","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"huisthat"},"content":"     * @return The next visit with the current visit and frequency.","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"huisthat"},"content":"    public Visit nextVisit(Visit visit) {","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"huisthat"},"content":"        String currentStringVisit \u003d visit.value;","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"ailing35"},"content":"        LocalDateTime currentDateTime \u003d LocalDateTime.parse(currentStringVisit, DateTimeUtil.FORMATTER);","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"Chen-Yiyang"},"content":"        LocalDateTime nextDateTime \u003d null;","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"huisthat"},"content":"        switch (this) {","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"huisthat"},"content":"        case DAILY:","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"huisthat"},"content":"            nextDateTime \u003d currentDateTime.plusDays(1);","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"huisthat"},"content":"            break;","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"huisthat"},"content":"        case WEEKLY:","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"huisthat"},"content":"            nextDateTime \u003d currentDateTime.plusWeeks(1);","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"huisthat"},"content":"            break;","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"huisthat"},"content":"        case BIWEEKLY:","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"huisthat"},"content":"            nextDateTime \u003d currentDateTime.plusWeeks(2);","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"huisthat"},"content":"            break;","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"huisthat"},"content":"        case MONTHLY:","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"huisthat"},"content":"            nextDateTime \u003d currentDateTime.plusMonths(1);","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"huisthat"},"content":"            break;","lastModifiedDate":"2021-10-09"},{"lineNumber":93,"author":{"gitId":"huisthat"},"content":"        case QUARTERLY:","lastModifiedDate":"2021-10-09"},{"lineNumber":94,"author":{"gitId":"huisthat"},"content":"            nextDateTime \u003d currentDateTime.plusMonths(3);","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"huisthat"},"content":"            break;","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"huisthat"},"content":"        default:","lastModifiedDate":"2021-10-09"},{"lineNumber":97,"author":{"gitId":"huisthat"},"content":"            break;","lastModifiedDate":"2021-10-09"},{"lineNumber":98,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"huisthat"},"content":"        if (this \u003d\u003d EMPTY) {","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"huisthat"},"content":"            return new Visit(\"\");","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"huisthat"},"content":"        } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"ailing35"},"content":"            String newStringVisit \u003d nextDateTime.format(DateTimeUtil.FORMATTER);","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"huisthat"},"content":"            return new Visit(newStringVisit);","lastModifiedDate":"2021-10-09"},{"lineNumber":104,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":105,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":106,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":107,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"ziqing26"},"content":"    public String toString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"ziqing26"},"content":"        return value;","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"huisthat":41,"ailing35":3,"ziqing26":66,"Chen-Yiyang":2}},{"path":"src/main/java/seedu/address/model/person/Language.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":" * Represents a Person\u0027s language in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLanguage(String)}","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"public class Language {","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"    /*","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"    public final String value;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"     * Constructs an {@code Language}.","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"     * @param language A valid language address.","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"    public Language(String language) {","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"        requireNonNull(language);","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"        checkArgument(isValidLanguage(language), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"        value \u003d language;","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"     * Returns if a given string is a valid language.","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"    public static boolean isValidLanguage(String test) {","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"        return value;","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"huisthat"},"content":"                || (other instanceof Language // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"huisthat"},"content":"                \u0026\u0026 value.equals(((Language) other).value)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"huisthat"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"huisthat"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"huisthat"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"huisthat":57}},{"path":"src/main/java/seedu/address/model/person/LastVisit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":" * Represents a Person\u0027s last visit in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"public class LastVisit {","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"Chen-Yiyang"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Last visit date should be of the format yyyy-MM-dd HH:mm\";","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"    public final String value;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"ailing35"},"content":"     * Constructs an {@code Visit}.","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"ailing35"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"ailing35"},"content":"     * @param lastVisit A valid last visit.","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"ailing35"},"content":"    public LastVisit(String lastVisit) {","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"ailing35"},"content":"        requireNonNull(lastVisit);","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"ailing35"},"content":"        value \u003d lastVisit;","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"ailing35"},"content":"     * Returns true if a given string is a valid last visit.","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"ailing35"},"content":"    public static boolean isValidLastVisit(String test) {","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"ailing35"},"content":"        return DateTimeUtil.matchDateTimeRegex(test);","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"ailing35"},"content":"     * Returns formatted last visit date.","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"Chen-Yiyang"},"content":"    public String getFormatted() {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"ailing35"},"content":"        if (value.isEmpty()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"ailing35"},"content":"            return \"-\";","lastModifiedDate":"2021-10-16"},{"lineNumber":40,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"Chen-Yiyang"},"content":"        return ParserUtil.parseDisplayedDatetime(value);","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"ailing35"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"ailing35"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"ailing35"},"content":"        return value;","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"ailing35"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"ailing35"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"ailing35"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"ailing35"},"content":"                   || (other instanceof LastVisit // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"ailing35"},"content":"                   \u0026\u0026 value.equals(((LastVisit) other).value)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"ailing35"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"ailing35"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"ailing35"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"ailing35":58,"Chen-Yiyang":3}},{"path":"src/main/java/seedu/address/model/person/Occurrence.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":" * Represents a Visit\u0027s occurrence.","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"public class Occurrence {","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"            \"Occurrence should be positive number.\";","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"Chen-Yiyang"},"content":"    public static final Occurrence EMPTY_OCCURENCE \u003d new Occurrence(1);","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"    public final int value;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"     * Constructs a {@code Occurrence}.","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"     * @param occurrence A valid occurrence.","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"    public Occurrence(int occurrence) {","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"        checkArgument(isValidOccurrence(occurrence), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"        value \u003d occurrence;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"     * Get the next number of occurrence for the visit.","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"     * @return The next occurrence for the visit.","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"    public Occurrence getNext() {","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"        return new Occurrence(value - 1);","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"     * Returns true if a given int is a valid occurrence.","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"luayida99"},"content":"    public static boolean isValidOccurrence(int occurrence) {","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"luayida99"},"content":"        return occurrence \u003e 0;","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"ziqing26"},"content":"     * Returns true if a given string is a valid occurrence.","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"huisthat"},"content":"    public static boolean isValidOccurrence(String occurrence) {","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"huisthat"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"            Integer.parseInt(occurrence);","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"            return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"huisthat"},"content":"        int intOccurrence \u003d Integer.parseInt(occurrence);","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"huisthat"},"content":"        return Occurrence.isValidOccurrence(intOccurrence);","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":"     * Checks if the occurrence is more than a certain value.","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":"     * @param floor The floor value.","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":"     * @return true if occurrence is more than the given value, otherwise false.","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"ziqing26"},"content":"    public boolean isMoreThan(int floor) {","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"ziqing26"},"content":"        return value \u003e floor;","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"ziqing26"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"ziqing26"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"ziqing26"},"content":"                || (other instanceof Occurrence","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"ziqing26"},"content":"                \u0026\u0026 value \u003d\u003d (((Occurrence) other).value)); // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"ziqing26"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"ziqing26"},"content":"    public String toString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"ziqing26"},"content":"        return Integer.toString(value);","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"luayida99":6,"huisthat":13,"ziqing26":53,"Chen-Yiyang":1}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.healthcondition.HealthCondition;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"    private final Language language;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"    private final Optional\u003cFrequency\u003e frequency;","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"ailing35"},"content":"    private final Optional\u003cLastVisit\u003e lastVisit;","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"    private final Optional\u003cOccurrence\u003e occurrence;","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"    private final Optional\u003cVisit\u003e visit;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"    private final Set\u003cHealthCondition\u003e healthConditions \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"    public Person(Name name, Phone phone, Language language, Address address, Optional\u003cLastVisit\u003e lastVisit,","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"                  Optional\u003cVisit\u003e visit, Optional\u003cFrequency\u003e frequency, Optional\u003cOccurrence\u003e occurrence,","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"                  Set\u003cHealthCondition\u003e healthConditions) {","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"        requireAllNonNull(name, phone, language, address, healthConditions);","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"        this.language \u003d language;","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"ailing35"},"content":"        this.lastVisit \u003d lastVisit;","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"luayida99"},"content":"        this.visit \u003d visit;","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"        this.frequency \u003d frequency;","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"        this.occurrence \u003d occurrence;","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"        this.healthConditions.addAll(healthConditions);","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"huisthat"},"content":"    public Language getLanguage() {","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"huisthat"},"content":"        return language;","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":67,"author":{"gitId":"ailing35"},"content":"    public Optional\u003cLastVisit\u003e getLastVisit() {","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"ailing35"},"content":"        return lastVisit;","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"luayida99"},"content":"    public Optional\u003cVisit\u003e getVisit() {","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"luayida99"},"content":"        return visit;","lastModifiedDate":"2021-10-01"},{"lineNumber":73,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":74,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"luayida99"},"content":"    public Optional\u003cFrequency\u003e getFrequency() {","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"luayida99"},"content":"        return frequency;","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"luayida99"},"content":"    public Optional\u003cOccurrence\u003e getOccurrence() {","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"luayida99"},"content":"        return occurrence;","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"huisthat"},"content":"     * Returns an immutable healthCondition set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":87,"author":{"gitId":"huisthat"},"content":"    public Set\u003cHealthCondition\u003e getHealthConditions() {","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"huisthat"},"content":"        return Collections.unmodifiableSet(healthConditions);","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"Chen-Yiyang"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"Chen-Yiyang"},"content":"     * Returns true if the person has a scheduled visit.","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"Chen-Yiyang"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"Chen-Yiyang"},"content":"    public boolean hasVisit() {","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"luayida99"},"content":"        return (this.visit.get().hasVisit());","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"Chen-Yiyang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"Chen-Yiyang"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"Chen-Yiyang"},"content":"     * Returns if the person has an existing visit that is overdue.","lastModifiedDate":"2021-10-17"},{"lineNumber":113,"author":{"gitId":"Chen-Yiyang"},"content":"     * Only the immediate visit will be examined, not the recurring ones that follow.","lastModifiedDate":"2021-10-17"},{"lineNumber":114,"author":{"gitId":"Chen-Yiyang"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"Chen-Yiyang"},"content":"    public boolean isVisitOverdue() {","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"Chen-Yiyang"},"content":"        if (this.visit.isEmpty()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"Chen-Yiyang"},"content":"            return false;","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"Chen-Yiyang"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"Chen-Yiyang"},"content":"        return this.visit.get().isOverdue();","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"Chen-Yiyang"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":140,"author":{"gitId":"huisthat"},"content":"                \u0026\u0026 otherPerson.getLanguage().equals(getLanguage())","lastModifiedDate":"2021-10-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":142,"author":{"gitId":"ailing35"},"content":"                \u0026\u0026 otherPerson.getLastVisit().equals(getLastVisit())","lastModifiedDate":"2021-10-06"},{"lineNumber":143,"author":{"gitId":"ailing35"},"content":"                \u0026\u0026 otherPerson.getVisit().equals(getVisit())","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"huisthat"},"content":"                \u0026\u0026 otherPerson.getHealthConditions().equals(getHealthConditions());","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"huisthat"},"content":"        return Objects.hash(name, phone, language, address, visit, lastVisit, healthConditions);","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"huisthat"},"content":"                .append(\"; Language: \")","lastModifiedDate":"2021-10-06"},{"lineNumber":160,"author":{"gitId":"huisthat"},"content":"                .append(getLanguage())","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":162,"author":{"gitId":"luayida99"},"content":"                .append(getAddress())","lastModifiedDate":"2021-09-30"},{"lineNumber":163,"author":{"gitId":"ailing35"},"content":"                .append(\"; Last Visit: \")","lastModifiedDate":"2021-10-06"},{"lineNumber":164,"author":{"gitId":"Chen-Yiyang"},"content":"                .append(getLastVisit().orElse(new LastVisit(\"\")))","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"luayida99"},"content":"                .append(\"; Visit: \")","lastModifiedDate":"2021-10-01"},{"lineNumber":166,"author":{"gitId":"luayida99"},"content":"                .append(getVisit().get());","lastModifiedDate":"2021-10-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":168,"author":{"gitId":"huisthat"},"content":"        Set\u003cHealthCondition\u003e healthConditions \u003d getHealthConditions();","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"huisthat"},"content":"        if (!healthConditions.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"huisthat"},"content":"            builder.append(\"; Health Conditions: \");","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"huisthat"},"content":"            healthConditions.forEach(builder::append);","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":176,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":177,"author":{"gitId":"ailing35"},"content":"     * Returns the visit formatted with frequency as well as occurrence.","lastModifiedDate":"2021-10-16"},{"lineNumber":178,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":179,"author":{"gitId":"ailing35"},"content":"    public String getFormattedVisit() {","lastModifiedDate":"2021-10-16"},{"lineNumber":180,"author":{"gitId":"ailing35"},"content":"        if (this.getVisit().isEmpty()) {","lastModifiedDate":"2021-10-16"},{"lineNumber":181,"author":{"gitId":"ailing35"},"content":"            return new Visit(\"\").getFormatted();","lastModifiedDate":"2021-10-16"},{"lineNumber":182,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":183,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":184,"author":{"gitId":"ailing35"},"content":"        String visit \u003d this.getVisit().get().getFormatted();","lastModifiedDate":"2021-10-16"},{"lineNumber":185,"author":{"gitId":"ailing35"},"content":"        if (this.getFrequency().isEmpty() || this.getOccurrence().get().value \u003d\u003d 1) {","lastModifiedDate":"2021-10-16"},{"lineNumber":186,"author":{"gitId":"ailing35"},"content":"            return visit;","lastModifiedDate":"2021-10-16"},{"lineNumber":187,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":188,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":189,"author":{"gitId":"ailing35"},"content":"        String frequency \u003d this.getFrequency().get().toString();","lastModifiedDate":"2021-10-16"},{"lineNumber":190,"author":{"gitId":"ailing35"},"content":"        int occurrence \u003d this.getOccurrence().get().getNext().value;","lastModifiedDate":"2021-10-16"},{"lineNumber":191,"author":{"gitId":"ailing35"},"content":"        String formattedVisit \u003d visit + \" (repeats \" + frequency + \", for \" + occurrence + \" more time(s))\";","lastModifiedDate":"2021-10-16"},{"lineNumber":192,"author":{"gitId":"ailing35"},"content":"        return formattedVisit;","lastModifiedDate":"2021-10-16"},{"lineNumber":193,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":194,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"luayida99":16,"huisthat":30,"ailing35":29,"Chen-Yiyang":19,"-":101}},{"path":"src/main/java/seedu/address/model/person/PersonAttributesContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"import static seedu.address.commons.util.StringUtil.containsPartialWordIgnoreCase;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"/**","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":" * Tests that a {@code Person}\u0027s attributes matches any of the keywords given.","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":" */","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"public class PersonAttributesContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"    private final ArgumentMultimap keywords;","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"    public PersonAttributesContainsKeywordsPredicate(ArgumentMultimap keywords) {","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"        String[] generalKeywords \u003d keywords.getPreamble().split(\" \");","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"        boolean isMatching \u003d Arrays.stream(generalKeywords).allMatch(attribute -\u003e {","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"            boolean isAnyAttributePresent \u003d Stream.of(person.getName().fullName, person.getPhone().value,","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"                    person.getLanguage().value, person.getAddress().value, person.getVisit().get().value,","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"                    person.getLastVisit().get().value)","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"                    .anyMatch(matching -\u003e containsPartialWordIgnoreCase(matching, attribute));","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"            boolean isAnyHealthConditionPresent \u003d person.getHealthConditions().stream()","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"                    .anyMatch(matching -\u003e containsPartialWordIgnoreCase(matching.healthCondition, attribute));","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"            return isAnyAttributePresent || isAnyHealthConditionPresent;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"luayida99"},"content":"        });","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"luayida99"},"content":"        return isMatching;","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"luayida99"},"content":"    @Override","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"luayida99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"luayida99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"luayida99"},"content":"                || (other instanceof PersonAttributesContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"luayida99"},"content":"                \u0026\u0026 keywords.equals(((PersonAttributesContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"luayida99":43,"huisthat":3}},{"path":"src/main/java/seedu/address/model/person/Visit.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"Chen-Yiyang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"Chen-Yiyang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Chen-Yiyang"},"content":"import seedu.address.commons.util.DateTimeUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"Chen-Yiyang"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":" * Represents a Person\u0027s visit in the address book.","lastModifiedDate":"2021-10-01"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"public class Visit {","lastModifiedDate":"2021-10-01"},{"lineNumber":16,"author":{"gitId":"Chen-Yiyang"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Visit date should be of the format yyyy-MM-dd HH:mm\";","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"    public final String value;","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"     * Constructs an {@code Visit}.","lastModifiedDate":"2021-10-01"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"     *","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"     * @param visit A valid visit.","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"    public Visit(String visit) {","lastModifiedDate":"2021-10-01"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"        requireNonNull(visit);","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"        value \u003d visit;","lastModifiedDate":"2021-10-01"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"     * Returns true if a given string is a valid visit.","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"luayida99"},"content":"    public static boolean isValidVisit(String test) {","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"ailing35"},"content":"        return DateTimeUtil.matchDateTimeRegex(test);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Chen-Yiyang"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"Chen-Yiyang"},"content":"     * Determines whether the visit is empty based on value","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Chen-Yiyang"},"content":"     * @return whether the visit is empty","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"Chen-Yiyang"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"Chen-Yiyang"},"content":"    public boolean hasVisit() {","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"Chen-Yiyang"},"content":"        return !(this.value \u003d\u003d null || this.value.isEmpty());","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"Chen-Yiyang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"Chen-Yiyang"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"Chen-Yiyang"},"content":"     * Returns if the visit exists and is overdue.","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"Chen-Yiyang"},"content":"     * Compared against today\u0027s date.","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"Chen-Yiyang"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"Chen-Yiyang"},"content":"    public boolean isOverdue() {","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"Chen-Yiyang"},"content":"        if (!hasVisit()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"Chen-Yiyang"},"content":"            return false;","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"Chen-Yiyang"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"Chen-Yiyang"},"content":"        LocalDateTime visitTime;","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"Chen-Yiyang"},"content":"        try {","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"Chen-Yiyang"},"content":"            visitTime \u003d LocalDateTime.parse(value, DateTimeUtil.FORMATTER);","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"Chen-Yiyang"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"Chen-Yiyang"},"content":"            return false;","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"Chen-Yiyang"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"Chen-Yiyang"},"content":"        return DateTimeUtil.isPast(visitTime);","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"Chen-Yiyang"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"Chen-Yiyang"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"Chen-Yiyang"},"content":"     * Returns formatted last visit date.","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"Chen-Yiyang"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"Chen-Yiyang"},"content":"    public String getFormatted() {","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"Chen-Yiyang"},"content":"        if (!hasVisit()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"ailing35"},"content":"            return \"-\";","lastModifiedDate":"2021-10-16"},{"lineNumber":70,"author":{"gitId":"Chen-Yiyang"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"Chen-Yiyang"},"content":"        return ParserUtil.parseDisplayedDatetime(value);","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"Chen-Yiyang"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"luayida99"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"luayida99"},"content":"    public String toString() {","lastModifiedDate":"2021-09-30"},{"lineNumber":78,"author":{"gitId":"luayida99"},"content":"        return value;","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"luayida99"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"luayida99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"luayida99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-09-30"},{"lineNumber":84,"author":{"gitId":"luayida99"},"content":"                || (other instanceof Visit // instanceof handles nulls","lastModifiedDate":"2021-10-01"},{"lineNumber":85,"author":{"gitId":"luayida99"},"content":"                \u0026\u0026 value.equals(((Visit) other).value)); // state check","lastModifiedDate":"2021-10-01"},{"lineNumber":86,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":87,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"luayida99"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":89,"author":{"gitId":"luayida99"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"luayida99"},"content":"        return value.hashCode();","lastModifiedDate":"2021-09-30"},{"lineNumber":91,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"luayida99":45,"ailing35":2,"Chen-Yiyang":45}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.healthcondition.HealthCondition;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Language;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"import seedu.address.model.person.LastVisit;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"import seedu.address.model.person.Visit;","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"    public static final Optional\u003cVisit\u003e EXAMPLE_VISIT \u003d Optional.ofNullable(new Visit(\"2021-10-01\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"ailing35"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Language(\"English\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"ailing35"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), Optional.of(new LastVisit(\"2021-03-25\")),","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"                EXAMPLE_VISIT, Optional.empty(), Optional.empty(), getHealthConditionSet(\"friends\")),","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"ailing35"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Language(\"Chinese\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"ailing35"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), Optional.of(new LastVisit(\"2021-04-27\")),","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"                EXAMPLE_VISIT, Optional.empty(), Optional.empty(), getHealthConditionSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"ailing35"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Language(\"English\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"ailing35"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), Optional.of(new LastVisit(\"2021-05-11\")),","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"                    EXAMPLE_VISIT, Optional.empty(), Optional.empty(), getHealthConditionSet(\"neighbours\")),","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"ailing35"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Language(\"English\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"ailing35"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), Optional.of(new LastVisit(\"2021-08-23\")),","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"                EXAMPLE_VISIT, Optional.empty(), Optional.empty(), getHealthConditionSet(\"family\")),","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"ailing35"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Language(\"Malay\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"ailing35"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), Optional.of(new LastVisit(\"2021-09-01\")),","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"                EXAMPLE_VISIT, Optional.empty(), Optional.empty(), getHealthConditionSet(\"classmates\")),","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"ailing35"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Language(\"Tamil\"),","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"ailing35"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), Optional.of(new LastVisit(\"2021-09-28\")),","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"                EXAMPLE_VISIT, Optional.empty(), Optional.empty(), getHealthConditionSet(\"colleagues\"))","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"huisthat"},"content":"     * Returns a healthCondition set containing the list of strings given.","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"huisthat"},"content":"    public static Set\u003cHealthCondition\u003e getHealthConditionSet(String... strings) {","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":62,"author":{"gitId":"huisthat"},"content":"                .map(HealthCondition::new)","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"luayida99":4,"huisthat":11,"ailing35":14,"-":37}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedHealthCondition.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.healthcondition.HealthCondition;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":" * Jackson-friendly version of {@link HealthCondition}.","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"class JsonAdaptedHealthCondition {","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"    private final String healthCondition;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"     * Constructs a {@code JsonAdaptedHealthCondition} with the given {@code healthCondition}.","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"    public JsonAdaptedHealthCondition(String healthCondition) {","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"        this.healthCondition \u003d healthCondition;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"     * Converts a given {@code HealthCondition} into this class for Jackson use.","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"    public JsonAdaptedHealthCondition(HealthCondition source) {","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"        healthCondition \u003d source.healthCondition;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"    @JsonValue","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"    public String getHealthCondition() {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"        return healthCondition;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"     * Converts this Jackson-friendly adapted healthCondition object into the model\u0027s {@code HealthCondition} object.","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted healthCondition.","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"    public HealthCondition toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"        if (!HealthCondition.isValidHealthCondition(healthCondition)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"huisthat"},"content":"            throw new IllegalValueException(HealthCondition.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"        return new HealthCondition(healthCondition);","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"huisthat":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.healthcondition.HealthCondition;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Frequency;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Language;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"ailing35"},"content":"import seedu.address.model.person.LastVisit;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Occurrence;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"import seedu.address.model.person.Visit;","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"    private final String language;","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"ailing35"},"content":"    private final String lastVisit;","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"luayida99"},"content":"    private final String visit;","lastModifiedDate":"2021-10-01"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"    private final String frequency;","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"    private final String occurrence;","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"    private final List\u003cJsonAdaptedHealthCondition\u003e healthConditions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"            @JsonProperty(\"language\") String language, @JsonProperty(\"address\") String address,","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"ailing35"},"content":"            @JsonProperty(\"lastVisit\") String lastVisit, @JsonProperty(\"visit\") String visit,","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"huisthat"},"content":"            @JsonProperty(\"frequency\") String frequency, @JsonProperty(\"occurrence\") String occurrence,","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"huisthat"},"content":"            @JsonProperty(\"healthConditions\") List\u003cJsonAdaptedHealthCondition\u003e healthConditions) {","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"huisthat"},"content":"        this.language \u003d language;","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"ailing35"},"content":"        this.lastVisit \u003d lastVisit;","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"luayida99"},"content":"        this.visit \u003d visit;","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"huisthat"},"content":"        this.frequency \u003d frequency;","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"huisthat"},"content":"        this.occurrence \u003d occurrence;","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"huisthat"},"content":"        if (healthConditions !\u003d null) {","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"huisthat"},"content":"            this.healthConditions.addAll(healthConditions);","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"huisthat"},"content":"        language \u003d source.getLanguage().value;","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"ailing35"},"content":"        lastVisit \u003d source.getLastVisit().orElse(new LastVisit(\"\")).value;","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"luayida99"},"content":"        visit \u003d source.getVisit().orElse(new Visit(\"\")).value;","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"huisthat"},"content":"        frequency \u003d source.getFrequency().orElse(Frequency.EMPTY).value;","lastModifiedDate":"2021-10-09"},{"lineNumber":75,"author":{"gitId":"huisthat"},"content":"        occurrence \u003d String.valueOf(source.getOccurrence().orElse(new Occurrence(1)).value);","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"huisthat"},"content":"        healthConditions.addAll(source.getHealthConditions().stream()","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"huisthat"},"content":"                .map(JsonAdaptedHealthCondition::new)","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"huisthat"},"content":"        final List\u003cHealthCondition\u003e personHealthConditions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"huisthat"},"content":"        for (JsonAdaptedHealthCondition healthCondition : healthConditions) {","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"huisthat"},"content":"            personHealthConditions.add(healthCondition.toModelType());","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"huisthat"},"content":"        if (language \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"huisthat"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"huisthat"},"content":"                    Language.class.getSimpleName()));","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"huisthat"},"content":"        if (!Language.isValidLanguage(language)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"huisthat"},"content":"            throw new IllegalValueException(Language.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"huisthat"},"content":"        final Language modelLanguage \u003d new Language(language);","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"ailing35"},"content":"        if (lastVisit \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"ailing35"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Visit.class.getSimpleName()));","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"ailing35"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"ailing35"},"content":"        final Optional\u003cLastVisit\u003e modelLastVisit \u003d Optional.ofNullable(new LastVisit(lastVisit));","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"luayida99"},"content":"        if (visit \u003d\u003d null) {","lastModifiedDate":"2021-10-01"},{"lineNumber":131,"author":{"gitId":"luayida99"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Visit.class.getSimpleName()));","lastModifiedDate":"2021-10-01"},{"lineNumber":132,"author":{"gitId":"luayida99"},"content":"        }","lastModifiedDate":"2021-09-30"},{"lineNumber":133,"author":{"gitId":"luayida99"},"content":"        final Optional\u003cVisit\u003e modelVisit \u003d Optional.ofNullable(new Visit(visit));","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":135,"author":{"gitId":"huisthat"},"content":"        if (frequency \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"huisthat"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"huisthat"},"content":"                    Frequency.class.getSimpleName()));","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"huisthat"},"content":"        if (!Frequency.isValidFrequency(frequency)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"huisthat"},"content":"            throw new IllegalValueException(Frequency.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":141,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"huisthat"},"content":"        final Optional\u003cFrequency\u003e modelFrequency \u003d Optional.ofNullable(Frequency.find(frequency));","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"huisthat"},"content":"        if (occurrence \u003d\u003d null) {","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"huisthat"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"huisthat"},"content":"                    Occurrence.class.getSimpleName()));","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":148,"author":{"gitId":"huisthat"},"content":"        if (!Occurrence.isValidOccurrence(occurrence)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":149,"author":{"gitId":"huisthat"},"content":"            throw new IllegalValueException(Frequency.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"huisthat"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":151,"author":{"gitId":"huisthat"},"content":"        // TODO: abstract all convert occurrence from string to int into a method","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"huisthat"},"content":"        int convertedOccurrence \u003d Integer.parseInt(occurrence);","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"huisthat"},"content":"        final Optional\u003cOccurrence\u003e modelOccurrence \u003d Optional.ofNullable(new Occurrence(convertedOccurrence));","lastModifiedDate":"2021-10-09"},{"lineNumber":154,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":155,"author":{"gitId":"huisthat"},"content":"        final Set\u003cHealthCondition\u003e modelHealthConditions \u003d new HashSet\u003c\u003e(personHealthConditions);","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"huisthat"},"content":"        return new Person(modelName, modelPhone, modelLanguage, modelAddress, modelLastVisit, modelVisit,","lastModifiedDate":"2021-10-09"},{"lineNumber":157,"author":{"gitId":"huisthat"},"content":"                modelFrequency, modelOccurrence, modelHealthConditions);","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"luayida99":9,"huisthat":53,"ailing35":11,"-":87}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103-t14-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"luayida99":1,"-":101}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"Chen-Yiyang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"import seedu.address.model.person.LastVisit;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"Chen-Yiyang"},"content":"    public static final String OVERDUE_STYLE_CLASS \u003d \"overdue\";","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"ailing35"},"content":"    private static final String DISPLAY_LAST_VISIT \u003d \"Last visit: \";","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"    private static final String DISPLAY_NEXT_VISIT \u003d \"Next visit: \";","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"    private Label language;","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"huisthat"},"content":"    private FlowPane healthConditions;","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"luayida99"},"content":"    @FXML","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"ailing35"},"content":"    private Label lastVisit;","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"luayida99"},"content":"    private Label visit;","lastModifiedDate":"2021-10-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"huisthat"},"content":"        language.setText(person.getLanguage().value);","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"Chen-Yiyang"},"content":"        lastVisit.setText(DISPLAY_LAST_VISIT + person.getLastVisit().orElse(new LastVisit(\"\")).getFormatted());","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"ailing35"},"content":"        visit.setText(DISPLAY_NEXT_VISIT + person.getFormattedVisit());","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"huisthat"},"content":"        person.getHealthConditions().stream()","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"huisthat"},"content":"                .sorted(Comparator.comparing(healthCondition -\u003e healthCondition.healthCondition))","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"huisthat"},"content":"                .forEach(healthCondition -\u003e healthConditions.getChildren()","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"huisthat"},"content":"                        .add(new Label(healthCondition.healthCondition)));","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"Chen-Yiyang"},"content":"        setVisitOverdueStyle(person.isVisitOverdue());","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"Chen-Yiyang"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"Chen-Yiyang"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"Chen-Yiyang"},"content":"     * Updates the PersonCard visit field\u0027s style based on if it is overdue.","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"Chen-Yiyang"},"content":"     * Defensive programming involved here.","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"Chen-Yiyang"},"content":"     * @param isOverdue whether the visit is overdue","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"Chen-Yiyang"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"Chen-Yiyang"},"content":"    private void setVisitOverdueStyle(boolean isOverdue) {","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"Chen-Yiyang"},"content":"        ObservableList\u003cString\u003e styles \u003d visit.getStyleClass();","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"Chen-Yiyang"},"content":"        if (!isOverdue) {","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"Chen-Yiyang"},"content":"            styles.remove(OVERDUE_STYLE_CLASS);","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"Chen-Yiyang"},"content":"        } else {","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"Chen-Yiyang"},"content":"            if (!styles.contains(OVERDUE_STYLE_CLASS)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"Chen-Yiyang"},"content":"                styles.add(OVERDUE_STYLE_CLASS);","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"Chen-Yiyang"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"Chen-Yiyang"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"luayida99":2,"huisthat":8,"ailing35":4,"Chen-Yiyang":22,"-":72}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"huisthat"},"content":"#healthConditions {","lastModifiedDate":"2021-10-19"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"huisthat"},"content":"#healthConditions .label {","lastModifiedDate":"2021-10-19"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"huisthat"},"content":"    -fx-background-color: #E75155;","lastModifiedDate":"2021-10-19"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"huisthat":3,"-":349}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-background: #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"Chen-Yiyang"},"content":".overdue {","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"Chen-Yiyang"},"content":"    -fx-text-fill: #FF0000 !important;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"Chen-Yiyang"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"Chen-Yiyang":4,"-":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"         title\u003d\"SeniorLove\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"luayida99":1,"-":60}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"ailing35"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"ailing35"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"ailing35"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"      \u003cFlowPane fx:id\u003d\"healthConditions\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"      \u003cLabel fx:id\u003d\"language\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$language\" /\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"luayida99"},"content":"      \u003cLabel fx:id\u003d\"visit\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$visit\" /\u003e","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"      \u003cLabel fx:id\u003d\"lastVisit\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$lastVisit\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"ailing35"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"ailing35"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"ailing35"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"luayida99":1,"huisthat":5,"ailing35":7,"-":31}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"    \"language\": \"Malay\",","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"name\": \"Person With Invalid Phone Field\",","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"    \"language\": \"Malay\",","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"huisthat":2,"-":11}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"    \"language\": \"Malay\",","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"huisthat":1,"-":7}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"    \"language\": \"English\",","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"    \"lastVisit\": \"\",","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"    \"visit\" : \"\",","lastModifiedDate":"2021-10-01"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"    \"frequency\" : \"\",","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"    \"occurrence\" : \"1\",","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"    \"healthConditions\": [ \"diabetes\" ]","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"    \"language\": \"English\",","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"ailing35"},"content":"    \"lastVisit\": \"\",","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"    \"frequency\" : \"\",","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"    \"occurrence\" : \"1\",","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"    \"visit\" : \"\"","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"luayida99":3,"huisthat":7,"ailing35":2,"-":10}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"    \"language\": \" \",","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"    \"frequency\" : \"\",","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"    \"occurrence\" : \"1\"","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"huisthat":4,"-":6}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"    \"language\" : \"English\",","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"Chen-Yiyang"},"content":"    \"lastVisit\": \"2021-07-07 12:00\",","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Chen-Yiyang"},"content":"    \"visit\" : \"2021-10-10 12:00\",","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"    \"frequency\": \"\",","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"    \"occurrence\": \"1\",","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"    \"healthConditions\" : [ \"diabetes\" ]","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"    \"language\" : \"French\",","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"Chen-Yiyang"},"content":"    \"lastVisit\": \"2021-08-08 12:00\",","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"    \"visit\" : \"\",","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"    \"frequency\" : \"\",","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"    \"occurrence\" : \"1\",","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"    \"healthConditions\" : [ \"dementia\", \"diabetes\" ]","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"    \"language\" : \"English\",","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"Chen-Yiyang"},"content":"    \"lastVisit\": \"2021-01-01 12:00\",","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"    \"visit\" : \"\",","lastModifiedDate":"2021-10-01"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"    \"frequency\" : \"\",","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"    \"occurrence\" : \"1\",","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"    \"healthConditions\" : [ ]","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"    \"language\" : \"Chinese\",","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"Chen-Yiyang"},"content":"    \"lastVisit\": \"2021-01-01 12:00\",","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"luayida99"},"content":"    \"visit\" : \"\",","lastModifiedDate":"2021-10-01"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"    \"frequency\" : \"\",","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"    \"occurrence\" : \"1\",","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"    \"healthConditions\" : [ \"high blood pressure\" ]","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"    \"language\" : \"English\",","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"Chen-Yiyang"},"content":"    \"lastVisit\": \"2021-01-01 12:00\",","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"luayida99"},"content":"    \"visit\" : \"\",","lastModifiedDate":"2021-10-01"},{"lineNumber":50,"author":{"gitId":"huisthat"},"content":"    \"frequency\" : \"\",","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"huisthat"},"content":"    \"occurrence\" : \"1\",","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"huisthat"},"content":"    \"healthConditions\" : [ ]","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"huisthat"},"content":"    \"language\" : \"Hokkien\",","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"Chen-Yiyang"},"content":"    \"lastVisit\": \"2021-01-01 12:00\",","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"luayida99"},"content":"    \"visit\" : \"\",","lastModifiedDate":"2021-10-01"},{"lineNumber":60,"author":{"gitId":"huisthat"},"content":"    \"frequency\" : \"\",","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"huisthat"},"content":"    \"occurrence\" : \"1\",","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"huisthat"},"content":"    \"healthConditions\" : [ ]","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"huisthat"},"content":"    \"language\" : \"Cantonese\",","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"Chen-Yiyang"},"content":"    \"lastVisit\": \"2021-01-01 12:00\",","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"luayida99"},"content":"    \"visit\" : \"\",","lastModifiedDate":"2021-10-01"},{"lineNumber":70,"author":{"gitId":"huisthat"},"content":"    \"frequency\" : \"\",","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"huisthat"},"content":"    \"occurrence\" : \"1\",","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"huisthat"},"content":"    \"healthConditions\" : [ ]","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"luayida99":6,"huisthat":28,"Chen-Yiyang":8,"-":32}},{"path":"src/test/java/seedu/address/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":144,"author":{"gitId":"luayida99"},"content":"    public void containsPartialWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":145,"author":{"gitId":"luayida99"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsPartialWordIgnoreCase(null, \"a\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":146,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":147,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":148,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":149,"author":{"gitId":"luayida99"},"content":"    public void containsPartialWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":150,"author":{"gitId":"luayida99"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsPartialWordIgnoreCase(\"a\", null));","lastModifiedDate":"2021-10-15"},{"lineNumber":151,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":152,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":153,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":154,"author":{"gitId":"luayida99"},"content":"    public void containsPartialWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":155,"author":{"gitId":"luayida99"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e StringUtil.containsPartialWordIgnoreCase(\"a\", \"\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":156,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":157,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":158,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":159,"author":{"gitId":"luayida99"},"content":"    public void containsPartialWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2021-10-15"},{"lineNumber":160,"author":{"gitId":"luayida99"},"content":"        //match with empty","lastModifiedDate":"2021-10-15"},{"lineNumber":161,"author":{"gitId":"luayida99"},"content":"        assertFalse(StringUtil.containsPartialWordIgnoreCase(\"\", \"aaa\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":162,"author":{"gitId":"luayida99"},"content":"        //match with wrong word","lastModifiedDate":"2021-10-15"},{"lineNumber":163,"author":{"gitId":"luayida99"},"content":"        assertFalse(StringUtil.containsPartialWordIgnoreCase(\"abc\", \"g\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":164,"author":{"gitId":"luayida99"},"content":"        //match with exact starting word","lastModifiedDate":"2021-10-15"},{"lineNumber":165,"author":{"gitId":"luayida99"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"abc\", \"a\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":166,"author":{"gitId":"luayida99"},"content":"        //match with word that is not at start","lastModifiedDate":"2021-10-15"},{"lineNumber":167,"author":{"gitId":"luayida99"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"abc\", \"bc\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":168,"author":{"gitId":"luayida99"},"content":"        //match different capitalisations","lastModifiedDate":"2021-10-15"},{"lineNumber":169,"author":{"gitId":"luayida99"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"abcDEF\", \"aBcd\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":170,"author":{"gitId":"luayida99"},"content":"        // match with spaces","lastModifiedDate":"2021-10-15"},{"lineNumber":171,"author":{"gitId":"luayida99"},"content":"        assertTrue(StringUtil.containsPartialWordIgnoreCase(\"a b c d\", \"a b\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":172,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":173,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"luayida99":31,"-":143}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LANGUAGE_DESC_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LAST_VISIT_DESC_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"huisthat"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + LANGUAGE_DESC_AMY","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"ailing35"},"content":"                + ADDRESS_DESC_AMY + LAST_VISIT_DESC_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"huisthat"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withHealthConditions().build();","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"huisthat":3,"ailing35":2,"-":158}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEALTH_CONDITION;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LANGUAGE;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAST_VISIT;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VISIT;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"ailing35"},"content":"import seedu.address.testutil.DateTimeUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"    public static final String VALID_LANGUAGE_AMY \u003d \"English\";","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"    public static final String VALID_LANGUAGE_BOB \u003d \"Chinese\";","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"Chen-Yiyang"},"content":"    public static final String VALID_LAST_VISIT_AMY \u003d \"2021-01-01 12:00\";","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Chen-Yiyang"},"content":"    public static final String VALID_LAST_VISIT_BOB \u003d \"2021-01-02 13:00\";","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"ailing35"},"content":"    public static final String VALID_VISIT_AMY \u003d DateTimeUtil.getValidVisitString();","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"ailing35"},"content":"    public static final String VALID_VISIT_BOB \u003d DateTimeUtil.getValidVisitString2();","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"huisthat"},"content":"    public static final String VALID_HEALTH_CONDITION_DIABETES \u003d \"diabetes\";","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"    public static final String VALID_HEALTH_CONDITION_DEMENTIA \u003d \"dementia\";","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"huisthat"},"content":"    public static final String LANGUAGE_DESC_AMY \u003d \" \" + PREFIX_LANGUAGE + VALID_LANGUAGE_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"huisthat"},"content":"    public static final String LANGUAGE_DESC_BOB \u003d \" \" + PREFIX_LANGUAGE + VALID_LANGUAGE_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"luayida99"},"content":"    public static final String VISIT_DESC_AMY \u003d \" \" + PREFIX_VISIT + VALID_VISIT_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"luayida99"},"content":"    public static final String VISIT_DESC_BOB \u003d \" \" + PREFIX_VISIT + VALID_VISIT_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"ailing35"},"content":"    public static final String LAST_VISIT_DESC_AMY \u003d \" \" + PREFIX_LAST_VISIT + VALID_LAST_VISIT_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"ailing35"},"content":"    public static final String LAST_VISIT_DESC_BOB \u003d \" \" + PREFIX_LAST_VISIT + VALID_LAST_VISIT_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"huisthat"},"content":"    public static final String HEALTH_CONDITION_DESC_DIABETES \u003d \" \" + PREFIX_HEALTH_CONDITION","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"huisthat"},"content":"            + VALID_HEALTH_CONDITION_DIABETES;","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"huisthat"},"content":"    public static final String HEALTH_CONDITION_DESC_DEMENTIA \u003d \" \" + PREFIX_HEALTH_CONDITION","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"huisthat"},"content":"            + VALID_HEALTH_CONDITION_DEMENTIA;","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"huisthat"},"content":"    public static final String INVALID_LANGUAGE_DESC \u003d \" \" + PREFIX_LANGUAGE; // empty string not allowed for languages","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"huisthat"},"content":"    // \u0027*\u0027 not allowed in healthConditions","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"huisthat"},"content":"    public static final String INVALID_HEALTH_CONDITION_DESC \u003d \" \" + PREFIX_HEALTH_CONDITION + \"heartCondition*\";","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"huisthat"},"content":"                .withPhone(VALID_PHONE_AMY).withLanguage(VALID_LANGUAGE_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"huisthat"},"content":"                .withHealthConditions(VALID_HEALTH_CONDITION_DIABETES).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"huisthat"},"content":"                .withPhone(VALID_PHONE_BOB).withLanguage(VALID_LANGUAGE_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"huisthat"},"content":"                .withHealthConditions(VALID_HEALTH_CONDITION_DEMENTIA, VALID_HEALTH_CONDITION_DIABETES).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"luayida99":3,"huisthat":19,"ailing35":6,"Chen-Yiyang":2,"-":112}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"ziqing26"},"content":"    public void execute_deleteVisitValidIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"ziqing26"},"content":"        Person personToDeleteVisit \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"ziqing26"},"content":"        Person editedPerson \u003d new PersonBuilder(personToDeleteVisit).withVisit(\"\").build();","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"ziqing26"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON, true);","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_VISIT_SUCCESS, personToDeleteVisit);","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"ziqing26"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"ziqing26"},"content":"        expectedModel.setPerson(personToDeleteVisit, editedPerson);","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"ziqing26"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"ziqing26"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"ziqing26"},"content":"    public void execute_deleteVisitInvalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"ziqing26"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"ziqing26"},"content":"        DeleteCommand deleteVisitCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"ziqing26"},"content":"        assertCommandFailure(deleteVisitCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"ziqing26"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"ziqing26"},"content":"    public void execute_deleteVisitValidIndexFilteredList_success() {","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"ziqing26"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"ziqing26"},"content":"        Person personToDeleteVisit \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"ziqing26"},"content":"        Person editedPerson \u003d new PersonBuilder(personToDeleteVisit).withVisit(\"\").build();","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"ziqing26"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON, true);","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"ziqing26"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_VISIT_SUCCESS, personToDeleteVisit);","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"ziqing26"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"ziqing26"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"ziqing26"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(editedPerson.getName().toString());","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"ziqing26"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"ziqing26"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"ziqing26"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"ziqing26"},"content":"    public void execute_deleteVisitInvalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"ziqing26"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"ziqing26"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"ziqing26"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"ziqing26"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"ziqing26"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex, true);","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"ziqing26"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"ziqing26"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"ziqing26"},"content":"    public void deleteVisit_noExistingVisitPerson_throwsCommandException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"ziqing26"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"ziqing26"},"content":"        Person personToDeleteVisit \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"ziqing26"},"content":"        Person editedPerson \u003d new PersonBuilder(personToDeleteVisit).withVisit(\"\").build();","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"ziqing26"},"content":"        model.setPerson(personToDeleteVisit, editedPerson);","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"ziqing26"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON, true);","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"Chen-Yiyang"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_NO_EXISTING_VISIT, editedPerson);","lastModifiedDate":"2021-10-17"},{"lineNumber":149,"author":{"gitId":"ziqing26"},"content":"        assertCommandFailure(deleteCommand, model, expectedMessage);","lastModifiedDate":"2021-10-05"},{"lineNumber":150,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":151,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":182,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":183,"author":{"gitId":"ziqing26"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":184,"author":{"gitId":"ziqing26"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-05"},{"lineNumber":185,"author":{"gitId":"ziqing26"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":186,"author":{"gitId":"ziqing26"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-05"},{"lineNumber":187,"author":{"gitId":"ziqing26"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-05"},{"lineNumber":188,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"ziqing26":79,"Chen-Yiyang":1,"-":109}},{"path":"src/test/java/seedu/address/logic/commands/DoneCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chen-Yiyang"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Chen-Yiyang"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"Chen-Yiyang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"Chen-Yiyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"Chen-Yiyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"Chen-Yiyang"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"Chen-Yiyang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"Chen-Yiyang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"Chen-Yiyang"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Chen-Yiyang"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Chen-Yiyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"Chen-Yiyang"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"Chen-Yiyang"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"Chen-Yiyang"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"Chen-Yiyang"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"Chen-Yiyang"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"Chen-Yiyang"},"content":"import seedu.address.model.person.LastVisit;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Chen-Yiyang"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"Chen-Yiyang"},"content":"import seedu.address.model.person.Visit;","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Chen-Yiyang"},"content":"public class DoneCommandTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"Chen-Yiyang"},"content":"    private static final String VISIT_STUB \u003d \"2021-11-11 12:00\";","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"    private static final Optional\u003cVisit\u003e EMPTY_VISIT \u003d Optional.ofNullable(new Visit(\"\"));","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"Chen-Yiyang"},"content":"    // TODO: add in integration testing with delete command and last visited field","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"Chen-Yiyang"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"Chen-Yiyang"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"Chen-Yiyang"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"Chen-Yiyang"},"content":"        Person personToDone \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"Chen-Yiyang"},"content":"        String personNewLastVisitedDate \u003d personToDone.getVisit().orElse(new Visit(\"\")).toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Chen-Yiyang"},"content":"        Optional\u003cLastVisit\u003e personNewLastVisited \u003d Optional.of(new LastVisit(personNewLastVisitedDate));","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"Chen-Yiyang"},"content":"        Person donePerson \u003d new Person(personToDone.getName(), personToDone.getPhone(), personToDone.getLanguage(),","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"                personToDone.getAddress(), personNewLastVisited, EMPTY_VISIT,","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"                personToDone.getFrequency(), personToDone.getOccurrence(), personToDone.getHealthConditions());","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"Chen-Yiyang"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"Chen-Yiyang"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"Chen-Yiyang"},"content":"                DoneCommand.MESSAGE_DONE_PERSON_SUCCESS, personToDone);","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"Chen-Yiyang"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"Chen-Yiyang"},"content":"        expectedModel.setPerson(personToDone, donePerson);","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"Chen-Yiyang"},"content":"        assertCommandSuccess(doneCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"Chen-Yiyang"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"Chen-Yiyang"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"Chen-Yiyang"},"content":"    public void execute_noScheduledVisit_throwsCommandException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"Chen-Yiyang"},"content":"        Person personToDone \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"Chen-Yiyang"},"content":"        Person personToDoneNoVisit \u003d new Person(personToDone.getName(), personToDone.getPhone(),","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"Chen-Yiyang"},"content":"                personToDone.getLanguage(), personToDone.getAddress(),","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"huisthat"},"content":"                personToDone.getLastVisit(), EMPTY_VISIT, personToDone.getFrequency(),","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"huisthat"},"content":"                personToDone.getOccurrence(), personToDone.getHealthConditions());","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"Chen-Yiyang"},"content":"        ModelManager newModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"Chen-Yiyang"},"content":"        newModel.setPerson(personToDone, personToDoneNoVisit);","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"Chen-Yiyang"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"Chen-Yiyang"},"content":"        assertCommandFailure(doneCommand, newModel,","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"Chen-Yiyang"},"content":"                String.format(Messages.MESSAGE_NO_EXISTING_VISIT, personToDoneNoVisit));","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"Chen-Yiyang"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"Chen-Yiyang"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"Chen-Yiyang"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"Chen-Yiyang"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"Chen-Yiyang"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"Chen-Yiyang"},"content":"        assertCommandFailure(doneCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"Chen-Yiyang"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"Chen-Yiyang"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"Chen-Yiyang"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"Chen-Yiyang"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"Chen-Yiyang"},"content":"        Person personToDone \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"Chen-Yiyang"},"content":"        String personNewLastVisitedDate \u003d personToDone.getVisit().orElse(new Visit(\"\")).toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"Chen-Yiyang"},"content":"        Optional\u003cLastVisit\u003e personNewLastVisited \u003d Optional.of(new LastVisit(personNewLastVisitedDate));","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"Chen-Yiyang"},"content":"        Person donePerson \u003d new Person(personToDone.getName(), personToDone.getPhone(), personToDone.getLanguage(),","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"huisthat"},"content":"                personToDone.getAddress(), personNewLastVisited, EMPTY_VISIT,","lastModifiedDate":"2021-10-09"},{"lineNumber":88,"author":{"gitId":"huisthat"},"content":"                personToDone.getFrequency(), personToDone.getOccurrence(), personToDone.getHealthConditions());","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"Chen-Yiyang"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"Chen-Yiyang"},"content":"        String expectedMessage \u003d String.format(","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"Chen-Yiyang"},"content":"                DoneCommand.MESSAGE_DONE_PERSON_SUCCESS, personToDone);","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"Chen-Yiyang"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"Chen-Yiyang"},"content":"        expectedModel.setPerson(personToDone, donePerson);","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"Chen-Yiyang"},"content":"        assertCommandSuccess(doneCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"Chen-Yiyang"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"Chen-Yiyang"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"Chen-Yiyang"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"Chen-Yiyang"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"Chen-Yiyang"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"Chen-Yiyang"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"Chen-Yiyang"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"Chen-Yiyang"},"content":"        DoneCommand doneCommand \u003d new DoneCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"Chen-Yiyang"},"content":"        assertCommandFailure(doneCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"Chen-Yiyang"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"Chen-Yiyang"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"Chen-Yiyang"},"content":"    public void equals() {","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"Chen-Yiyang"},"content":"        DoneCommand doneFirstCommand \u003d new DoneCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"Chen-Yiyang"},"content":"        DoneCommand doneSecondCommand \u003d new DoneCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"Chen-Yiyang"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"Chen-Yiyang"},"content":"        assertTrue(doneFirstCommand.equals(doneFirstCommand));","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"Chen-Yiyang"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"Chen-Yiyang"},"content":"        DoneCommand doneFirstCommandCopy \u003d new DoneCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"Chen-Yiyang"},"content":"        assertTrue(doneFirstCommand.equals(doneFirstCommandCopy));","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"Chen-Yiyang"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(doneFirstCommand.equals(3));","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"Chen-Yiyang"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(doneFirstCommand.equals(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"Chen-Yiyang"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(doneFirstCommand.equals(doneSecondCommand));","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"Chen-Yiyang"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"Chen-Yiyang"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"luayida99":1,"huisthat":6,"Chen-Yiyang":129}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HEALTH_CONDITION_DEMENTIA;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"Chen-Yiyang"},"content":"        Person editedPerson \u003d new PersonBuilder().withVisit(\"2021-10-10 12:00\")","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Chen-Yiyang"},"content":"                .withLastVisit(\"2021-07-07 12:00\").build();","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"huisthat"},"content":"                .withHealthConditions(VALID_HEALTH_CONDITION_DEMENTIA).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"huisthat"},"content":"                .withPhone(VALID_PHONE_BOB).withHealthConditions(VALID_HEALTH_CONDITION_DEMENTIA).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"huisthat":3,"Chen-Yiyang":2,"-":169}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HEALTH_CONDITION_DEMENTIA;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LANGUAGE_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"        // different language -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withLanguage(VALID_LANGUAGE_BOB).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"huisthat"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withHealthConditions(VALID_HEALTH_CONDITION_DEMENTIA)","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"huisthat"},"content":"                .build();","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"huisthat":6,"-":53}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"import seedu.address.model.person.PersonAttributesContainsKeywordsPredicate;","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"import seedu.address.testutil.Assert;","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"luayida99"},"content":"        PersonAttributesContainsKeywordsPredicate firstPredicate \u003d preparePredicate(\"alex\");","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"luayida99"},"content":"        PersonAttributesContainsKeywordsPredicate secondPredicate \u003d preparePredicate(\"bernice\");","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"luayida99"},"content":"    public void execute_noKeywords_throwsException() {","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"luayida99"},"content":"        PersonAttributesContainsKeywordsPredicate predicate \u003d preparePredicate(\"\");","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"luayida99"},"content":"        FindCommand findCommand \u003d new FindCommand(predicate);","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"luayida99"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e findCommand.execute(model));","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":63,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"luayida99"},"content":"    public void execute_oneKeyword_personFound() {","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"luayida99"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"luayida99"},"content":"        PersonAttributesContainsKeywordsPredicate predicate \u003d preparePredicate(\"carl\");","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"luayida99"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"luayida99"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"luayida99"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"luayida99"},"content":"        assertEquals(Arrays.asList(CARL), model.getFilteredPersonList());","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"luayida99"},"content":"    public void execute_multipleKeywords_personFound() {","lastModifiedDate":"2021-10-15"},{"lineNumber":75,"author":{"gitId":"luayida99"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"luayida99"},"content":"        PersonAttributesContainsKeywordsPredicate predicate \u003d preparePredicate(\"carl 9535\");","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"luayida99"},"content":"        assertEquals(Arrays.asList(CARL), model.getFilteredPersonList());","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"luayida99"},"content":"        PersonAttributesContainsKeywordsPredicate predicate \u003d preparePredicate(\"english\");","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"luayida99"},"content":"        assertEquals(Arrays.asList(ALICE, CARL, ELLE), model.getFilteredPersonList());","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":96,"author":{"gitId":"luayida99"},"content":"    private PersonAttributesContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"luayida99"},"content":"        return new PersonAttributesContainsKeywordsPredicate(ArgumentTokenizer.tokenize(userInput));","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"luayida99":30,"-":69}},{"path":"src/test/java/seedu/address/logic/commands/VisitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_VISIT_AMY;","lastModifiedDate":"2021-10-01"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_VISIT_BOB;","lastModifiedDate":"2021-10-01"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-09-30"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Frequency;","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Occurrence;","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"import seedu.address.model.person.Visit;","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"ailing35"},"content":"import seedu.address.testutil.DateTimeUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":32,"author":{"gitId":"luayida99"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":33,"author":{"gitId":"luayida99"},"content":" * Contains integration tests (interaction with the Model) and unit tests for VisitCommand.","lastModifiedDate":"2021-10-01"},{"lineNumber":34,"author":{"gitId":"luayida99"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":35,"author":{"gitId":"luayida99"},"content":"public class VisitCommandTest {","lastModifiedDate":"2021-10-01"},{"lineNumber":36,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":37,"author":{"gitId":"ailing35"},"content":"    private static final String VISIT_STUB \u003d DateTimeUtil.getValidVisitString();","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"ziqing26"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":41,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":42,"author":{"gitId":"luayida99"},"content":"    public void execute_addVisitUnfilteredList_success() {","lastModifiedDate":"2021-10-01"},{"lineNumber":43,"author":{"gitId":"luayida99"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"luayida99"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withVisit(VISIT_STUB).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":45,"author":{"gitId":"ziqing26"},"content":"        Optional\u003cVisit\u003e visit \u003d Optional.of(new Visit(editedPerson.getVisit().get().value));","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"ziqing26"},"content":"        Optional\u003cFrequency\u003e frequency \u003d Optional.of(Frequency.EMPTY);","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"ziqing26"},"content":"        Optional\u003cOccurrence\u003e occurrence \u003d Optional.of(new Occurrence(1));","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"huisthat"},"content":"        VisitCommand visitCommand \u003d new VisitCommand(INDEX_FIRST_PERSON, visit, frequency, occurrence);","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"luayida99"},"content":"        String expectedMessage \u003d String.format(VisitCommand.MESSAGE_ADD_VISIT_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-01"},{"lineNumber":52,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"luayida99"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-09-30"},{"lineNumber":54,"author":{"gitId":"luayida99"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"luayida99"},"content":"        assertCommandSuccess(visitCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-01"},{"lineNumber":57,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":58,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":60,"author":{"gitId":"ziqing26"},"content":"    public void execute_addRecurringVisitUnfilteredList_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"ziqing26"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"ziqing26"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withVisit(VISIT_STUB).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"ziqing26"},"content":"        Optional\u003cVisit\u003e visit \u003d Optional.of(new Visit(editedPerson.getVisit().get().value));","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"ziqing26"},"content":"        Optional\u003cFrequency\u003e frequency \u003d Optional.of(Frequency.WEEKLY);","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"ziqing26"},"content":"        Optional\u003cOccurrence\u003e occurrence \u003d Optional.of(new Occurrence(2));","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"ziqing26"},"content":"        VisitCommand visitCommand \u003d new VisitCommand(INDEX_FIRST_PERSON, visit, frequency, occurrence);","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"ziqing26"},"content":"        String expectedMessage \u003d String.format(VisitCommand.MESSAGE_ADD_RECURRING_VISIT_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"ziqing26"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"ziqing26"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"ziqing26"},"content":"        assertCommandSuccess(visitCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"ziqing26"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"ziqing26"},"content":"    public void execute_addVisitFilteredList_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"luayida99"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":81,"author":{"gitId":"luayida99"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-09-30"},{"lineNumber":82,"author":{"gitId":"luayida99"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2021-09-30"},{"lineNumber":83,"author":{"gitId":"luayida99"},"content":"                .withVisit(VISIT_STUB).build();","lastModifiedDate":"2021-10-01"},{"lineNumber":84,"author":{"gitId":"ziqing26"},"content":"        Optional\u003cVisit\u003e visit \u003d Optional.of(new Visit(editedPerson.getVisit().get().value));","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"ziqing26"},"content":"        Optional\u003cFrequency\u003e frequency \u003d Optional.of(Frequency.EMPTY);","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"ziqing26"},"content":"        Optional\u003cOccurrence\u003e occurrence \u003d Optional.of(new Occurrence(1));","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":88,"author":{"gitId":"huisthat"},"content":"        VisitCommand visitCommand \u003d new VisitCommand(INDEX_FIRST_PERSON, visit, frequency, occurrence);","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":90,"author":{"gitId":"luayida99"},"content":"        String expectedMessage \u003d String.format(VisitCommand.MESSAGE_ADD_VISIT_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-01"},{"lineNumber":91,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":92,"author":{"gitId":"luayida99"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"luayida99"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"luayida99"},"content":"        assertCommandSuccess(visitCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-01"},{"lineNumber":96,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":97,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":98,"author":{"gitId":"ziqing26"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"ziqing26"},"content":"    public void execute_addRecurringVisitFilteredList_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"ziqing26"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"ziqing26"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"ziqing26"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"ziqing26"},"content":"                .withVisit(VISIT_STUB).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"ziqing26"},"content":"        Optional\u003cVisit\u003e visit \u003d Optional.of(new Visit(editedPerson.getVisit().get().value));","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"ziqing26"},"content":"        Optional\u003cFrequency\u003e frequency \u003d Optional.of(Frequency.WEEKLY);","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"ziqing26"},"content":"        Optional\u003cOccurrence\u003e occurrence \u003d Optional.of(new Occurrence(2));","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"ziqing26"},"content":"        VisitCommand visitCommand \u003d new VisitCommand(INDEX_FIRST_PERSON, visit, frequency, occurrence);","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"ziqing26"},"content":"        String expectedMessage \u003d String.format(VisitCommand.MESSAGE_ADD_RECURRING_VISIT_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"ziqing26"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"ziqing26"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"ziqing26"},"content":"        assertCommandSuccess(visitCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"ziqing26"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"ziqing26"},"content":"    public void execute_addInvalidRecurringVisitFilteredList_throwCommandException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"ziqing26"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"ziqing26"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"ziqing26"},"content":"                .withVisit(VISIT_STUB).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"ziqing26"},"content":"        Optional\u003cVisit\u003e visit \u003d Optional.of(new Visit(editedPerson.getVisit().get().value));","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"ziqing26"},"content":"        Optional\u003cFrequency\u003e frequency \u003d Optional.of(Frequency.EMPTY);","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"ziqing26"},"content":"        Optional\u003cOccurrence\u003e occurrence \u003d Optional.of(new Occurrence(2));","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"ziqing26"},"content":"        VisitCommand visitCommand \u003d new VisitCommand(INDEX_FIRST_PERSON, visit, frequency, occurrence);","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"ziqing26"},"content":"        assertCommandFailure(visitCommand, model, VisitCommand.MESSAGE_INVALID_OPTIONAL_FLAG);","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":135,"author":{"gitId":"luayida99"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2021-09-30"},{"lineNumber":136,"author":{"gitId":"luayida99"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-09-30"},{"lineNumber":137,"author":{"gitId":"ziqing26"},"content":"        Optional\u003cVisit\u003e visit \u003d Optional.of(new Visit(VALID_VISIT_BOB));","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"ziqing26"},"content":"        Optional\u003cFrequency\u003e frequency \u003d Optional.of(Frequency.EMPTY);","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"ziqing26"},"content":"        Optional\u003cOccurrence\u003e occurrence \u003d Optional.of(new Occurrence(1));","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"huisthat"},"content":"        VisitCommand visitCommand \u003d new VisitCommand(outOfBoundIndex, visit, frequency, occurrence);","lastModifiedDate":"2021-10-09"},{"lineNumber":141,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":142,"author":{"gitId":"luayida99"},"content":"        assertCommandFailure(visitCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-01"},{"lineNumber":143,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":144,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":145,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":146,"author":{"gitId":"luayida99"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-09-30"},{"lineNumber":147,"author":{"gitId":"luayida99"},"content":"     * but smaller than size of address book","lastModifiedDate":"2021-09-30"},{"lineNumber":148,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":149,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":150,"author":{"gitId":"luayida99"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2021-09-30"},{"lineNumber":151,"author":{"gitId":"luayida99"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-09-30"},{"lineNumber":152,"author":{"gitId":"luayida99"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-09-30"},{"lineNumber":153,"author":{"gitId":"ziqing26"},"content":"        Optional\u003cVisit\u003e visit \u003d Optional.of(new Visit(VALID_VISIT_BOB));","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"ziqing26"},"content":"        Optional\u003cFrequency\u003e frequency \u003d Optional.of(Frequency.EMPTY);","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"ziqing26"},"content":"        Optional\u003cOccurrence\u003e occurrence \u003d Optional.of(new Occurrence(1));","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"luayida99"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-09-30"},{"lineNumber":157,"author":{"gitId":"luayida99"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-09-30"},{"lineNumber":158,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":159,"author":{"gitId":"huisthat"},"content":"        VisitCommand visitCommand \u003d new VisitCommand(outOfBoundIndex, visit, frequency, occurrence);","lastModifiedDate":"2021-10-09"},{"lineNumber":160,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":161,"author":{"gitId":"luayida99"},"content":"        assertCommandFailure(visitCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-01"},{"lineNumber":162,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":163,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":164,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":165,"author":{"gitId":"luayida99"},"content":"    public void equals() {","lastModifiedDate":"2021-09-30"},{"lineNumber":166,"author":{"gitId":"ziqing26"},"content":"        Optional\u003cVisit\u003e visit \u003d Optional.of(new Visit(VALID_VISIT_AMY));","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"ziqing26"},"content":"        Optional\u003cVisit\u003e differentVisit \u003d Optional.of(new Visit(VALID_VISIT_BOB));","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"ziqing26"},"content":"        Optional\u003cFrequency\u003e frequency \u003d Optional.of(Frequency.EMPTY);","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"ziqing26"},"content":"        Optional\u003cOccurrence\u003e occurrence \u003d Optional.of(new Occurrence(1));","lastModifiedDate":"2021-10-10"},{"lineNumber":170,"author":{"gitId":"huisthat"},"content":"        final VisitCommand standardCommand \u003d new VisitCommand(INDEX_FIRST_PERSON, visit, frequency, occurrence);","lastModifiedDate":"2021-10-09"},{"lineNumber":171,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":172,"author":{"gitId":"luayida99"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-09-30"},{"lineNumber":173,"author":{"gitId":"huisthat"},"content":"        VisitCommand commandWithSameValues \u003d new VisitCommand(INDEX_FIRST_PERSON, visit, frequency, occurrence);","lastModifiedDate":"2021-10-09"},{"lineNumber":174,"author":{"gitId":"ziqing26"},"content":"        assertEquals(standardCommand, commandWithSameValues);","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":176,"author":{"gitId":"luayida99"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-30"},{"lineNumber":177,"author":{"gitId":"ziqing26"},"content":"        assertEquals(standardCommand, standardCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":178,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":179,"author":{"gitId":"luayida99"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-30"},{"lineNumber":180,"author":{"gitId":"ziqing26"},"content":"        assertNotEquals(null, standardCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":181,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":182,"author":{"gitId":"luayida99"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-09-30"},{"lineNumber":183,"author":{"gitId":"ziqing26"},"content":"        assertNotEquals(standardCommand, new ClearCommand());","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":185,"author":{"gitId":"luayida99"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-09-30"},{"lineNumber":186,"author":{"gitId":"ziqing26"},"content":"        assertNotEquals(standardCommand, new VisitCommand(INDEX_SECOND_PERSON, visit, frequency, occurrence));","lastModifiedDate":"2021-10-10"},{"lineNumber":187,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":188,"author":{"gitId":"luayida99"},"content":"        // different visit -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":189,"author":{"gitId":"ziqing26"},"content":"        assertNotEquals(standardCommand, new VisitCommand(INDEX_FIRST_PERSON, differentVisit,","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"ziqing26"},"content":"                frequency, occurrence));","lastModifiedDate":"2021-10-10"},{"lineNumber":191,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":192,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"luayida99":101,"huisthat":8,"ailing35":2,"ziqing26":81}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HEALTH_CONDITION_DESC_DEMENTIA;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HEALTH_CONDITION_DESC_DIABETES;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_HEALTH_CONDITION_DESC;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_LANGUAGE_DESC;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LANGUAGE_DESC_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LANGUAGE_DESC_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LAST_VISIT_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"ailing35"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LAST_VISIT_DESC_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HEALTH_CONDITION_DEMENTIA;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HEALTH_CONDITION_DIABETES;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LANGUAGE_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LAST_VISIT_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_VISIT_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VISIT_DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.healthcondition.HealthCondition;","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Language;","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":53,"author":{"gitId":"huisthat"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withHealthConditions(VALID_HEALTH_CONDITION_DIABETES).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"huisthat"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + LANGUAGE_DESC_BOB","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"huisthat"},"content":"                + ADDRESS_DESC_BOB + LAST_VISIT_DESC_BOB + HEALTH_CONDITION_DESC_DIABETES,","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"huisthat"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"huisthat"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + LANGUAGE_DESC_BOB","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"huisthat"},"content":"                + ADDRESS_DESC_BOB + LAST_VISIT_DESC_BOB + HEALTH_CONDITION_DESC_DIABETES,","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"huisthat"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"huisthat"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + LANGUAGE_DESC_BOB","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"huisthat"},"content":"                + ADDRESS_DESC_BOB + LAST_VISIT_DESC_BOB + HEALTH_CONDITION_DESC_DIABETES,","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"huisthat"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"huisthat"},"content":"        // multiple languages - last language accepted","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"huisthat"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + LANGUAGE_DESC_AMY + LANGUAGE_DESC_BOB","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"huisthat"},"content":"                + ADDRESS_DESC_BOB + LAST_VISIT_DESC_BOB + HEALTH_CONDITION_DESC_DIABETES,","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"huisthat"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"huisthat"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + LANGUAGE_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"huisthat"},"content":"                + ADDRESS_DESC_BOB + LAST_VISIT_DESC_BOB + HEALTH_CONDITION_DESC_DIABETES,","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"huisthat"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"huisthat"},"content":"        // multiple healthConditions - all accepted","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"huisthat"},"content":"        Person expectedPersonMultipleHealthConditions \u003d new PersonBuilder(BOB)","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"huisthat"},"content":"                .withHealthConditions(VALID_HEALTH_CONDITION_DIABETES, VALID_HEALTH_CONDITION_DEMENTIA).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"huisthat"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + LANGUAGE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"huisthat"},"content":"                + LAST_VISIT_DESC_BOB + HEALTH_CONDITION_DESC_DEMENTIA + HEALTH_CONDITION_DESC_DIABETES,","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"huisthat"},"content":"                new AddCommand(expectedPersonMultipleHealthConditions));","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"huisthat"},"content":"        // zero health condition, no visit, no last visit","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"huisthat"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withVisit(\"\").withLastVisit(\"\").withHealthConditions().build();","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"huisthat"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + LANGUAGE_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"luayida99"},"content":"    public void parse_optionalVisitPresent_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"huisthat"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withVisit(VALID_VISIT_AMY).withLastVisit(\"\")","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"huisthat"},"content":"                .withHealthConditions().build();","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"luayida99"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + LANGUAGE_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"luayida99"},"content":"                        + VISIT_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"luayida99"},"content":"    public void parse_optionalLastVisitPresent_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"luayida99"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withVisit(\"\").withLastVisit(VALID_LAST_VISIT_AMY)","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"huisthat"},"content":"                .withHealthConditions().build();","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"luayida99"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + LANGUAGE_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"luayida99"},"content":"                        + LAST_VISIT_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"luayida99"},"content":"    public void parse_visitAndLastVisitPresent_success() {","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"luayida99"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withVisit(VALID_VISIT_AMY).withLastVisit(VALID_LAST_VISIT_AMY)","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"huisthat"},"content":"                .withHealthConditions().build();","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"luayida99"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + LANGUAGE_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"luayida99"},"content":"                + VISIT_DESC_AMY + LAST_VISIT_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"huisthat"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + LANGUAGE_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"huisthat"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + LANGUAGE_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"huisthat"},"content":"        // missing language prefix","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"huisthat"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_LANGUAGE_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":137,"author":{"gitId":"huisthat"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + LANGUAGE_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"huisthat"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_LANGUAGE_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"huisthat"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + LANGUAGE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"huisthat"},"content":"                + HEALTH_CONDITION_DESC_DEMENTIA + HEALTH_CONDITION_DESC_DIABETES, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":152,"author":{"gitId":"huisthat"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + LANGUAGE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-06"},{"lineNumber":153,"author":{"gitId":"huisthat"},"content":"                + HEALTH_CONDITION_DESC_DEMENTIA + HEALTH_CONDITION_DESC_DIABETES, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"huisthat"},"content":"        // invalid language","lastModifiedDate":"2021-10-06"},{"lineNumber":156,"author":{"gitId":"huisthat"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_LANGUAGE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-06"},{"lineNumber":157,"author":{"gitId":"huisthat"},"content":"                + HEALTH_CONDITION_DESC_DEMENTIA + HEALTH_CONDITION_DESC_DIABETES, Language.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"huisthat"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + LANGUAGE_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"huisthat"},"content":"                + HEALTH_CONDITION_DESC_DEMENTIA + HEALTH_CONDITION_DESC_DIABETES, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"huisthat"},"content":"        // invalid health condition","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"huisthat"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + LANGUAGE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-06"},{"lineNumber":165,"author":{"gitId":"huisthat"},"content":"                + INVALID_HEALTH_CONDITION_DESC + VALID_HEALTH_CONDITION_DIABETES, HealthCondition.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":168,"author":{"gitId":"huisthat"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + LANGUAGE_DESC_BOB","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"huisthat"},"content":"                + INVALID_ADDRESS_DESC,","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":173,"author":{"gitId":"huisthat"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + LANGUAGE_DESC_BOB","lastModifiedDate":"2021-10-06"},{"lineNumber":174,"author":{"gitId":"huisthat"},"content":"                + ADDRESS_DESC_BOB + HEALTH_CONDITION_DESC_DEMENTIA + HEALTH_CONDITION_DESC_DIABETES,","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"luayida99":24,"huisthat":63,"ailing35":1,"-":89}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"import seedu.address.logic.commands.DoneCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"import seedu.address.logic.commands.VisitCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Frequency;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Occurrence;","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"import seedu.address.model.person.PersonAttributesContainsKeywordsPredicate;","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"import seedu.address.model.person.Visit;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"ailing35"},"content":"import seedu.address.testutil.DateTimeUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"luayida99"},"content":"    public void parseCommand_done() throws Exception {","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"luayida99"},"content":"        DoneCommand command \u003d (DoneCommand) parser.parseCommand(DoneCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"luayida99"},"content":"            + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"luayida99"},"content":"        assertEquals(new DoneCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"luayida99"},"content":"    public void parseCommand_visit() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"ailing35"},"content":"        String date \u003d DateTimeUtil.getValidVisitString();","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"ailing35"},"content":"        final Visit visit \u003d new Visit(date);","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"luayida99"},"content":"        VisitCommand command \u003d (VisitCommand) parser.parseCommand(VisitCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"luayida99"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_DATE + visit.value);","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"luayida99"},"content":"        Optional\u003cVisit\u003e expectedVisit \u003d Optional.ofNullable(visit);","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"huisthat"},"content":"        Optional\u003cFrequency\u003e frequency \u003d Optional.ofNullable(Frequency.EMPTY);","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"huisthat"},"content":"        Optional\u003cOccurrence\u003e occurrence \u003d Optional.ofNullable(new Occurrence(1));","lastModifiedDate":"2021-10-09"},{"lineNumber":57,"author":{"gitId":"huisthat"},"content":"        assertEquals(new VisitCommand(INDEX_FIRST_PERSON, expectedVisit, frequency, occurrence), command);","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"luayida99"},"content":"        String keywords \u003d \"foo bar baz\";","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"luayida99"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(FindCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"luayida99"},"content":"                + keywords);","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"luayida99"},"content":"        assertEquals(new FindCommand(new PersonAttributesContainsKeywordsPredicate(","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"luayida99"},"content":"                ArgumentTokenizer.tokenize(keywords))), command);","lastModifiedDate":"2021-10-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"luayida99":25,"huisthat":5,"ailing35":3,"-":93}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentMultimapTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"public class ArgumentMultimapTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"    public void equalsMethod() {","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"        ArgumentMultimap argMap \u003d ArgumentTokenizer.tokenize(\"\");","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"        ArgumentMultimap otherArgMap \u003d ArgumentTokenizer.tokenize(\"\");","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"        ArgumentMultimap differentArgMap \u003d ArgumentTokenizer.tokenize(\"v/\");","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"        assertEquals(argMap, argMap);","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"        assertEquals(argMap, otherArgMap);","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"        assertNotEquals(argMap, differentArgMap);","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"luayida99":20}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"huisthat"},"content":"        String argsString \u003d \"  some random string /h health condition with leading and trailing spaces \";","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"huisthat":1,"-":149}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VISIT;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"Chen-Yiyang"},"content":"    private final DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"        assertParseSuccess(parser, \" \" + PREFIX_VISIT + \"1\", new DeleteCommand(INDEX_FIRST_PERSON, true));","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"ziqing26":2,"Chen-Yiyang":1,"-":31}},{"path":"src/test/java/seedu/address/logic/parser/DoneCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Chen-Yiyang"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Chen-Yiyang"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"Chen-Yiyang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"Chen-Yiyang"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"Chen-Yiyang"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"Chen-Yiyang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"Chen-Yiyang"},"content":"import seedu.address.logic.commands.DoneCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Chen-Yiyang"},"content":"public class DoneCommandParserTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"Chen-Yiyang"},"content":"    private final DoneCommandParser parser \u003d new DoneCommandParser();","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"Chen-Yiyang"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"Chen-Yiyang"},"content":"    public void parse_validArgs_returnsDoneCommand() {","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Chen-Yiyang"},"content":"        assertParseSuccess(parser, \"1\", new DoneCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Chen-Yiyang"},"content":"        assertParseSuccess(parser, \" 1 \", new DoneCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"Chen-Yiyang"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"Chen-Yiyang"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"Chen-Yiyang"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"Chen-Yiyang"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"Chen-Yiyang"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DoneCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"Chen-Yiyang"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"Chen-Yiyang"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Chen-Yiyang":26}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HEALTH_CONDITION_DESC_DEMENTIA;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.HEALTH_CONDITION_DESC_DIABETES;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_HEALTH_CONDITION_DESC;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_LANGUAGE_DESC;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LANGUAGE_DESC_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.LANGUAGE_DESC_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HEALTH_CONDITION_DEMENTIA;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HEALTH_CONDITION_DIABETES;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LANGUAGE_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LANGUAGE_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEALTH_CONDITION;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.healthcondition.HealthCondition;","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Language;","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"huisthat"},"content":"    private static final String HEALTH_CONDITION_EMPTY \u003d \" \" + PREFIX_HEALTH_CONDITION;","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"huisthat"},"content":"        assertParseFailure(parser, \"1\" + INVALID_LANGUAGE_DESC,","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"huisthat"},"content":"                Language.MESSAGE_CONSTRAINTS); // invalid LANGUAGE","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"huisthat"},"content":"        // invalid health condition","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"huisthat"},"content":"        assertParseFailure(parser, \"1\" + INVALID_HEALTH_CONDITION_DESC, HealthCondition.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"huisthat"},"content":"        // invalid phone followed by valid language","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"huisthat"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + LANGUAGE_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"huisthat"},"content":"        // while parsing {@code PREFIX_HEALTH_CONDITION} alone will reset the health conditions of the {@code Person}","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"huisthat"},"content":"        // being edited, parsing it together with a valid health condition results in error","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"huisthat"},"content":"        assertParseFailure(parser, \"1\" + HEALTH_CONDITION_DESC_DIABETES + HEALTH_CONDITION_DESC_DEMENTIA","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"huisthat"},"content":"                        + HEALTH_CONDITION_EMPTY,","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"huisthat"},"content":"                HealthCondition.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"huisthat"},"content":"        assertParseFailure(parser, \"1\" + HEALTH_CONDITION_DESC_DIABETES + HEALTH_CONDITION_EMPTY","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"huisthat"},"content":"                        + HEALTH_CONDITION_DESC_DEMENTIA,","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"huisthat"},"content":"                HealthCondition.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"huisthat"},"content":"        assertParseFailure(parser, \"1\" + HEALTH_CONDITION_EMPTY + HEALTH_CONDITION_DESC_DIABETES","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"huisthat"},"content":"                        + HEALTH_CONDITION_DESC_DEMENTIA,","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"huisthat"},"content":"                HealthCondition.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"huisthat"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_LANGUAGE_DESC","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"huisthat"},"content":"                        + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":120,"author":{"gitId":"huisthat"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + HEALTH_CONDITION_DESC_DEMENTIA","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"huisthat"},"content":"                + LANGUAGE_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + HEALTH_CONDITION_DESC_DIABETES;","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"huisthat"},"content":"                .withPhone(VALID_PHONE_BOB).withLanguage(VALID_LANGUAGE_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"huisthat"},"content":"                .withHealthConditions(VALID_HEALTH_CONDITION_DEMENTIA, VALID_HEALTH_CONDITION_DIABETES).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":134,"author":{"gitId":"huisthat"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + LANGUAGE_DESC_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"huisthat"},"content":"                .withLanguage(VALID_LANGUAGE_AMY).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"huisthat"},"content":"        // language","lastModifiedDate":"2021-10-06"},{"lineNumber":159,"author":{"gitId":"huisthat"},"content":"        userInput \u003d targetIndex.getOneBased() + LANGUAGE_DESC_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":160,"author":{"gitId":"huisthat"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withLanguage(VALID_LANGUAGE_AMY).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"huisthat"},"content":"        // health conditions","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"huisthat"},"content":"        userInput \u003d targetIndex.getOneBased() + HEALTH_CONDITION_DESC_DIABETES;","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"huisthat"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withHealthConditions(VALID_HEALTH_CONDITION_DIABETES).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":180,"author":{"gitId":"huisthat"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + LANGUAGE_DESC_AMY","lastModifiedDate":"2021-10-06"},{"lineNumber":181,"author":{"gitId":"huisthat"},"content":"                + HEALTH_CONDITION_DESC_DIABETES + PHONE_DESC_AMY + ADDRESS_DESC_AMY + LANGUAGE_DESC_AMY","lastModifiedDate":"2021-10-19"},{"lineNumber":182,"author":{"gitId":"huisthat"},"content":"                + HEALTH_CONDITION_DESC_DIABETES + PHONE_DESC_BOB + ADDRESS_DESC_BOB + LANGUAGE_DESC_BOB","lastModifiedDate":"2021-10-19"},{"lineNumber":183,"author":{"gitId":"huisthat"},"content":"                + HEALTH_CONDITION_DESC_DEMENTIA;","lastModifiedDate":"2021-10-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"huisthat"},"content":"                .withLanguage(VALID_LANGUAGE_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-10-06"},{"lineNumber":187,"author":{"gitId":"huisthat"},"content":"                .withHealthConditions(VALID_HEALTH_CONDITION_DIABETES, VALID_HEALTH_CONDITION_DEMENTIA).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"huisthat"},"content":"        userInput \u003d targetIndex.getOneBased() + LANGUAGE_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2021-10-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"huisthat"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withLanguage(VALID_LANGUAGE_BOB)","lastModifiedDate":"2021-10-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"huisthat"},"content":"    public void parse_resetHealthConditions_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":214,"author":{"gitId":"huisthat"},"content":"        String userInput \u003d targetIndex.getOneBased() + HEALTH_CONDITION_EMPTY;","lastModifiedDate":"2021-10-19"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"huisthat"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withHealthConditions().build();","lastModifiedDate":"2021-10-19"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"huisthat":56,"-":165}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"import seedu.address.model.person.PersonAttributesContainsKeywordsPredicate;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"        assertParseFailure(parser, \"     \", expectedMessage);","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"        FindCommand expectedFindCommand \u003d new FindCommand(new PersonAttributesContainsKeywordsPredicate(","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"                ArgumentTokenizer.tokenize(\"Alice English\")));","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"        assertParseSuccess(parser, \" \" + \"Alice English\", expectedFindCommand);","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"        assertParseSuccess(parser, \" \" + \" \\n Alice \\n \\t English  \\t\", expectedFindCommand);","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"luayida99":7,"-":26}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAST_VISIT;","lastModifiedDate":"2021-10-15"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_VISIT;","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"import static seedu.address.logic.parser.ParserUtil.arePrefixesPresent;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"import static seedu.address.logic.parser.ParserUtil.parseLastVisit;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"import static seedu.address.logic.parser.ParserUtil.parseVisit;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"import static seedu.address.logic.parser.ParserUtil.parseVisitForAdd;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.healthcondition.HealthCondition;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Language;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"import seedu.address.model.person.LastVisit;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"import seedu.address.model.person.Visit;","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"ailing35"},"content":"import seedu.address.testutil.DateTimeUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"    private static final String INVALID_LANGUAGE \u003d \" \";","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"    private static final String INVALID_HEALTH_CONDITION \u003d \"#friend\";","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"ailing35"},"content":"    private static final String INVALID_DATETIME \u003d \"2021-02-30 12:00\";","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"ailing35"},"content":"    private static final String INVALID_DATETIME_FORMAT \u003d \"2020-111-11 12:00\";","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"ailing35"},"content":"    private static final String INVALID_VISIT_DATETIME \u003d DateTimeUtil.getInvalidVisitString();","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"ailing35"},"content":"    private static final String INVALID_LAST_VISIT_DATETIME \u003d DateTimeUtil.getInvalidLastVisitString();","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"    private static final String VALID_LANGUAGE \u003d \"English\";","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"huisthat"},"content":"    private static final String VALID_HEALTH_CONDITION_1 \u003d \"high blood pressure\";","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"huisthat"},"content":"    private static final String VALID_HEALTH_CONDITION_2 \u003d \"dementia\";","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"ailing35"},"content":"    private static final String VALID_VISIT_DATETIME \u003d DateTimeUtil.getValidVisitString();","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"ailing35"},"content":"    private static final String VALID_LAST_VISIT_DATETIME \u003d DateTimeUtil.getValidLastVisitString();","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"huisthat"},"content":"    public void parseLanguage_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"huisthat"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLanguage((String) null));","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"huisthat"},"content":"    public void parseLanguage_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"huisthat"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLanguage(INVALID_LANGUAGE));","lastModifiedDate":"2021-10-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"huisthat"},"content":"    public void parseLanguage_validValueWithoutWhitespace_returnsLanguage() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":156,"author":{"gitId":"huisthat"},"content":"        Language expectedLanguage \u003d new Language(VALID_LANGUAGE);","lastModifiedDate":"2021-10-06"},{"lineNumber":157,"author":{"gitId":"huisthat"},"content":"        assertEquals(expectedLanguage, ParserUtil.parseLanguage(VALID_LANGUAGE));","lastModifiedDate":"2021-10-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"huisthat"},"content":"    public void parseLanguage_validValueWithWhitespace_returnsTrimmedLanguage() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":162,"author":{"gitId":"huisthat"},"content":"        String languageWithWhitespace \u003d WHITESPACE + VALID_LANGUAGE + WHITESPACE;","lastModifiedDate":"2021-10-06"},{"lineNumber":163,"author":{"gitId":"huisthat"},"content":"        Language expectedLanguage \u003d new Language(VALID_LANGUAGE);","lastModifiedDate":"2021-10-06"},{"lineNumber":164,"author":{"gitId":"huisthat"},"content":"        assertEquals(expectedLanguage, ParserUtil.parseLanguage(languageWithWhitespace));","lastModifiedDate":"2021-10-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"huisthat"},"content":"    public void parseHealthCondition_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"huisthat"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseHealthCondition(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"huisthat"},"content":"    public void parseHealthCondition_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"huisthat"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseHealthCondition(INVALID_HEALTH_CONDITION));","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"huisthat"},"content":"    public void parseHealthCondition_validValueWithoutWhitespace_returnsHealthCondition() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"huisthat"},"content":"        HealthCondition expectedHealthCondition \u003d new HealthCondition(VALID_HEALTH_CONDITION_1);","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"huisthat"},"content":"        assertEquals(expectedHealthCondition, ParserUtil.parseHealthCondition(VALID_HEALTH_CONDITION_1));","lastModifiedDate":"2021-10-19"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"huisthat"},"content":"    public void parseHealthCondition_validValueWithWhitespace_returnsTrimmedHealthCondition() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"huisthat"},"content":"        String healthConditionWithWhitespace \u003d WHITESPACE + VALID_HEALTH_CONDITION_1 + WHITESPACE;","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"huisthat"},"content":"        HealthCondition expectedHealthCondition \u003d new HealthCondition(VALID_HEALTH_CONDITION_1);","lastModifiedDate":"2021-10-19"},{"lineNumber":187,"author":{"gitId":"huisthat"},"content":"        assertEquals(expectedHealthCondition, ParserUtil.parseHealthCondition(healthConditionWithWhitespace));","lastModifiedDate":"2021-10-19"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"huisthat"},"content":"    public void parseHealthConditions_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"huisthat"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseHealthConditions(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"huisthat"},"content":"    public void parseHealthConditions_collectionWithInvalidHealthConditions_throwsParseException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":197,"author":{"gitId":"huisthat"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil","lastModifiedDate":"2021-10-19"},{"lineNumber":198,"author":{"gitId":"huisthat"},"content":"                .parseHealthConditions(Arrays.asList(VALID_HEALTH_CONDITION_1, INVALID_HEALTH_CONDITION)));","lastModifiedDate":"2021-10-19"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"huisthat"},"content":"    public void parseHealthConditions_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":203,"author":{"gitId":"huisthat"},"content":"        assertTrue(ParserUtil.parseHealthConditions(Collections.emptyList()).isEmpty());","lastModifiedDate":"2021-10-19"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"huisthat"},"content":"    public void parseHealthConditions_collectionWithValidHealthConditions_returnsHealthConditionSet() throws Exception {","lastModifiedDate":"2021-10-19"},{"lineNumber":208,"author":{"gitId":"huisthat"},"content":"        Set\u003cHealthCondition\u003e actualHealthConditionSet \u003d ParserUtil","lastModifiedDate":"2021-10-19"},{"lineNumber":209,"author":{"gitId":"huisthat"},"content":"                .parseHealthConditions(Arrays.asList(VALID_HEALTH_CONDITION_1, VALID_HEALTH_CONDITION_2));","lastModifiedDate":"2021-10-19"},{"lineNumber":210,"author":{"gitId":"huisthat"},"content":"        Set\u003cHealthCondition\u003e expectedHealthConditionSet \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":211,"author":{"gitId":"huisthat"},"content":"                new HashSet\u003cHealthCondition\u003e(Arrays.asList(new HealthCondition(VALID_HEALTH_CONDITION_1),","lastModifiedDate":"2021-10-19"},{"lineNumber":212,"author":{"gitId":"huisthat"},"content":"                        new HealthCondition(VALID_HEALTH_CONDITION_2)));","lastModifiedDate":"2021-10-19"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"huisthat"},"content":"        assertEquals(expectedHealthConditionSet, actualHealthConditionSet);","lastModifiedDate":"2021-10-19"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":216,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":217,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":218,"author":{"gitId":"luayida99"},"content":"    public void parseVisit_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":219,"author":{"gitId":"luayida99"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseVisit((String) null));","lastModifiedDate":"2021-10-06"},{"lineNumber":220,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":221,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":222,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":223,"author":{"gitId":"ailing35"},"content":"    public void parseVisit_invalidFormat_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"ailing35"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseVisit(INVALID_DATETIME_FORMAT));","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"ailing35"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"ailing35"},"content":"    public void parseVisit_invalidDateTime_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":229,"author":{"gitId":"ailing35"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseVisit(INVALID_DATETIME));","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"ailing35"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"ailing35"},"content":"    public void parseVisit_invalidPastDateTime_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"ailing35"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseVisit(INVALID_VISIT_DATETIME));","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":236,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":237,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":238,"author":{"gitId":"luayida99"},"content":"    public void parseVisit_validValueWithoutWhitespace_returnsVisit() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":239,"author":{"gitId":"Chen-Yiyang"},"content":"        Optional\u003cVisit\u003e expectedVisit \u003d parseVisit(VALID_VISIT_DATETIME);","lastModifiedDate":"2021-10-11"},{"lineNumber":240,"author":{"gitId":"Chen-Yiyang"},"content":"        assertEquals(expectedVisit, ParserUtil.parseVisit(VALID_VISIT_DATETIME));","lastModifiedDate":"2021-10-11"},{"lineNumber":241,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":243,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":244,"author":{"gitId":"luayida99"},"content":"    public void parseVisit_validValueWithWhitespace_returnsTrimmedVisit() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":245,"author":{"gitId":"Chen-Yiyang"},"content":"        String visitWithWhitespace \u003d WHITESPACE + VALID_VISIT_DATETIME + WHITESPACE;","lastModifiedDate":"2021-10-11"},{"lineNumber":246,"author":{"gitId":"Chen-Yiyang"},"content":"        Optional\u003cVisit\u003e expectedVisit \u003d parseVisit(VALID_VISIT_DATETIME);","lastModifiedDate":"2021-10-11"},{"lineNumber":247,"author":{"gitId":"luayida99"},"content":"        assertEquals(expectedVisit, ParserUtil.parseVisit(visitWithWhitespace));","lastModifiedDate":"2021-10-06"},{"lineNumber":248,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":249,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":250,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":251,"author":{"gitId":"luayida99"},"content":"    public void parseVisitForAdd_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":252,"author":{"gitId":"luayida99"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseVisitForAdd((String) null));","lastModifiedDate":"2021-10-09"},{"lineNumber":253,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":254,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":255,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":256,"author":{"gitId":"ailing35"},"content":"    public void parseVisitForAdd_invalidFormat_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":257,"author":{"gitId":"ailing35"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseVisitForAdd(INVALID_DATETIME_FORMAT));","lastModifiedDate":"2021-10-12"},{"lineNumber":258,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":259,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":260,"author":{"gitId":"ailing35"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":261,"author":{"gitId":"ailing35"},"content":"    public void parseVisitForAdd_invalidDateTime_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":262,"author":{"gitId":"ailing35"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseVisitForAdd(INVALID_DATETIME));","lastModifiedDate":"2021-10-12"},{"lineNumber":263,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":264,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":265,"author":{"gitId":"ailing35"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":266,"author":{"gitId":"ailing35"},"content":"    public void parseVisitForAdd_invalidPastDateTime_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":267,"author":{"gitId":"ailing35"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseVisitForAdd(INVALID_VISIT_DATETIME));","lastModifiedDate":"2021-10-12"},{"lineNumber":268,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":269,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":270,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":271,"author":{"gitId":"luayida99"},"content":"    public void parseVisitForAdd_validValueWithoutWhitespace_returnsVisit() throws Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":272,"author":{"gitId":"Chen-Yiyang"},"content":"        Optional\u003cVisit\u003e expectedVisit \u003d parseVisitForAdd(VALID_VISIT_DATETIME);","lastModifiedDate":"2021-10-11"},{"lineNumber":273,"author":{"gitId":"Chen-Yiyang"},"content":"        assertEquals(expectedVisit, ParserUtil.parseVisitForAdd(VALID_VISIT_DATETIME));","lastModifiedDate":"2021-10-11"},{"lineNumber":274,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":275,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":276,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":277,"author":{"gitId":"luayida99"},"content":"    public void parseVisitForAdd_validValueWithWhitespace_returnsTrimmedVisit() throws Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":278,"author":{"gitId":"Chen-Yiyang"},"content":"        String visitWithWhitespace \u003d WHITESPACE + VALID_VISIT_DATETIME + WHITESPACE;","lastModifiedDate":"2021-10-11"},{"lineNumber":279,"author":{"gitId":"Chen-Yiyang"},"content":"        Optional\u003cVisit\u003e expectedVisit \u003d parseVisitForAdd(VALID_VISIT_DATETIME);","lastModifiedDate":"2021-10-11"},{"lineNumber":280,"author":{"gitId":"luayida99"},"content":"        assertEquals(expectedVisit, ParserUtil.parseVisitForAdd(visitWithWhitespace));","lastModifiedDate":"2021-10-09"},{"lineNumber":281,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":282,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":283,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":284,"author":{"gitId":"luayida99"},"content":"    public void parseLastVisit_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":285,"author":{"gitId":"luayida99"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLastVisit((String) null));","lastModifiedDate":"2021-10-09"},{"lineNumber":286,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":287,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":288,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":289,"author":{"gitId":"ailing35"},"content":"    public void parseLastVisit_invalidFormat_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":290,"author":{"gitId":"ailing35"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLastVisit(INVALID_DATETIME_FORMAT));","lastModifiedDate":"2021-10-12"},{"lineNumber":291,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":292,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":293,"author":{"gitId":"ailing35"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":294,"author":{"gitId":"ailing35"},"content":"    public void parseLastVisit_invalidDateTime_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":295,"author":{"gitId":"ailing35"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLastVisit(INVALID_DATETIME));","lastModifiedDate":"2021-10-12"},{"lineNumber":296,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":297,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":298,"author":{"gitId":"ailing35"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":299,"author":{"gitId":"ailing35"},"content":"    public void parseLastVisit_invalidPastDateTime_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":300,"author":{"gitId":"ailing35"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLastVisit(INVALID_LAST_VISIT_DATETIME));","lastModifiedDate":"2021-10-12"},{"lineNumber":301,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":302,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":303,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":304,"author":{"gitId":"luayida99"},"content":"    public void parseLastVisit_validValueWithoutWhitespace_returnsVisit() throws Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":305,"author":{"gitId":"ailing35"},"content":"        Optional\u003cLastVisit\u003e expectedLastVisit \u003d parseLastVisit(VALID_LAST_VISIT_DATETIME);","lastModifiedDate":"2021-10-12"},{"lineNumber":306,"author":{"gitId":"ailing35"},"content":"        assertEquals(expectedLastVisit, ParserUtil.parseLastVisit(VALID_LAST_VISIT_DATETIME));","lastModifiedDate":"2021-10-12"},{"lineNumber":307,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":308,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":309,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":310,"author":{"gitId":"luayida99"},"content":"    public void parseLastVisit_validValueWithWhitespace_returnsTrimmedVisit() throws Exception {","lastModifiedDate":"2021-10-09"},{"lineNumber":311,"author":{"gitId":"ailing35"},"content":"        String visitWithWhitespace \u003d WHITESPACE + VALID_LAST_VISIT_DATETIME + WHITESPACE;","lastModifiedDate":"2021-10-12"},{"lineNumber":312,"author":{"gitId":"ailing35"},"content":"        Optional\u003cLastVisit\u003e expectedLastVisit \u003d parseLastVisit(VALID_LAST_VISIT_DATETIME);","lastModifiedDate":"2021-10-12"},{"lineNumber":313,"author":{"gitId":"luayida99"},"content":"        assertEquals(expectedLastVisit, parseLastVisit(visitWithWhitespace));","lastModifiedDate":"2021-10-09"},{"lineNumber":314,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":315,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":316,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":317,"author":{"gitId":"Chen-Yiyang"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":318,"author":{"gitId":"Chen-Yiyang"},"content":"    public void parseDisplayedDatetime() {","lastModifiedDate":"2021-10-11"},{"lineNumber":319,"author":{"gitId":"Chen-Yiyang"},"content":"        // parse datetime valid","lastModifiedDate":"2021-10-11"},{"lineNumber":320,"author":{"gitId":"Chen-Yiyang"},"content":"        String storedDate \u003d \"2021-02-01 23:59\";","lastModifiedDate":"2021-10-11"},{"lineNumber":321,"author":{"gitId":"Chen-Yiyang"},"content":"        String displayedDate \u003d \"01 Feb 2021 23:59\";","lastModifiedDate":"2021-10-11"},{"lineNumber":322,"author":{"gitId":"Chen-Yiyang"},"content":"        assertEquals(displayedDate, ParserUtil.parseDisplayedDatetime(storedDate));","lastModifiedDate":"2021-10-11"},{"lineNumber":323,"author":{"gitId":"Chen-Yiyang"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":324,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":325,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":326,"author":{"gitId":"luayida99"},"content":"    public void arePrefixesPresent_validPrefix_success() {","lastModifiedDate":"2021-10-15"},{"lineNumber":327,"author":{"gitId":"luayida99"},"content":"        ArgumentMultimap argMap \u003d ArgumentTokenizer.tokenize(\"v/\" + VALID_VISIT_DATETIME, PREFIX_VISIT);","lastModifiedDate":"2021-10-15"},{"lineNumber":328,"author":{"gitId":"luayida99"},"content":"        assertTrue(arePrefixesPresent(argMap));","lastModifiedDate":"2021-10-15"},{"lineNumber":329,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":330,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":331,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":332,"author":{"gitId":"luayida99"},"content":"    public void arePrefixesPresent_validPrefixes_success() {","lastModifiedDate":"2021-10-15"},{"lineNumber":333,"author":{"gitId":"luayida99"},"content":"        ArgumentMultimap argMap \u003d ArgumentTokenizer.tokenize(\"v/ lv/\" + VALID_VISIT_DATETIME,","lastModifiedDate":"2021-10-15"},{"lineNumber":334,"author":{"gitId":"luayida99"},"content":"                PREFIX_VISIT, PREFIX_LAST_VISIT);","lastModifiedDate":"2021-10-15"},{"lineNumber":335,"author":{"gitId":"luayida99"},"content":"        assertTrue(arePrefixesPresent(argMap));","lastModifiedDate":"2021-10-15"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"luayida99":71,"huisthat":43,"ailing35":47,"Chen-Yiyang":17,"-":159}},{"path":"src/test/java/seedu/address/logic/parser/VisitCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"luayida99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_VISIT_AMY;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FREQUENCY;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_OCCURRENCE;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_OCCURRENCE;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"luayida99"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"import seedu.address.logic.commands.VisitCommand;","lastModifiedDate":"2021-10-01"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"import seedu.address.model.person.Frequency;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"import seedu.address.model.person.Occurrence;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"import seedu.address.model.person.Visit;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"ailing35"},"content":"import seedu.address.testutil.DateTimeUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"public class VisitCommandParserTest {","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"ailing35"},"content":"    private static final String VALID_VISIT_DATETIME \u003d DateTimeUtil.getValidVisitString();","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"    private VisitCommandParser parser \u003d new VisitCommandParser();","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"luayida99"},"content":"    public void parser_compulsoryFieldsPresent_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"ailing35"},"content":"        Optional\u003cVisit\u003e visit \u003d Optional.of(new Visit(VALID_VISIT_DATETIME));","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"luayida99"},"content":"        Optional\u003cFrequency\u003e frequency \u003d Optional.of(Frequency.EMPTY);","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"luayida99"},"content":"        Optional\u003cOccurrence\u003e occurrence \u003d Optional.of(new Occurrence(1));","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"luayida99"},"content":"        VisitCommand command \u003d new VisitCommand(INDEX_FIRST_PERSON, visit, frequency, occurrence);","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"ailing35"},"content":"        assertParseSuccess(parser, String.format(\"%s %s%s\", \"1\", PREFIX_DATE, VALID_VISIT_DATETIME), command);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"luayida99"},"content":"    public void parser_optionalFieldsPresent_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"ailing35"},"content":"        Optional\u003cVisit\u003e visit \u003d Optional.of(new Visit(VALID_VISIT_DATETIME));","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"luayida99"},"content":"        Optional\u003cFrequency\u003e frequency \u003d Optional.of(Frequency.WEEKLY);","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"luayida99"},"content":"        Optional\u003cOccurrence\u003e occurrence \u003d Optional.of(new Occurrence(2));","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"luayida99"},"content":"        VisitCommand command \u003d new VisitCommand(INDEX_FIRST_PERSON, visit, frequency, occurrence);","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"ailing35"},"content":"        String userInput \u003d String.format(\"%s %s%s %s%s %s%s\", \"1\", PREFIX_DATE, VALID_VISIT_DATETIME, PREFIX_FREQUENCY,","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"ailing35"},"content":"                \"Weekly\", PREFIX_OCCURRENCE, 2);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"luayida99"},"content":"        assertParseSuccess(parser, userInput, command);","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"luayida99"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"luayida99"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, VisitCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-01"},{"lineNumber":51,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":52,"author":{"gitId":"luayida99"},"content":"        // no parameters","lastModifiedDate":"2021-09-30"},{"lineNumber":53,"author":{"gitId":"ziqing26"},"content":"        assertParseFailure(parser, \"\", expectedMessage);","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":55,"author":{"gitId":"luayida99"},"content":"        // no index","lastModifiedDate":"2021-09-30"},{"lineNumber":56,"author":{"gitId":"ailing35"},"content":"        assertParseFailure(parser, \" \" + PREFIX_DATE + VALID_VISIT_DATETIME, expectedMessage);","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":59,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"ziqing26"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"ziqing26"},"content":"    public void parse_invalidOptionalField_failure() {","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"ziqing26"},"content":"        String invalidRecurringVisit \u003d String.format(","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"ziqing26"},"content":"                \"%s %s%s %s%s %s%s\", \"1\", PREFIX_DATE, VALID_VISIT_AMY, PREFIX_FREQUENCY, \"\", PREFIX_OCCURRENCE, \"a\");","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"ziqing26"},"content":"        String missingFrequencyFlag \u003d String.format(\"%s %s%s\", \"1\", PREFIX_OCCURRENCE, \"5\");","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"ziqing26"},"content":"        String missingOccurrenceFlag \u003d String.format(\"%s %s%s\", \"1\", PREFIX_FREQUENCY, \"weekly\");","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"ziqing26"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, VisitCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"ziqing26"},"content":"        // empty frequency for multiple occurrence","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"ziqing26"},"content":"        assertParseFailure(parser, invalidRecurringVisit, MESSAGE_INVALID_OCCURRENCE);","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"ziqing26"},"content":"        // missing one of optional flags","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"ziqing26"},"content":"        assertParseFailure(parser, missingFrequencyFlag, expectedMessage);","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"ziqing26"},"content":"        assertParseFailure(parser, missingOccurrenceFlag, expectedMessage);","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"luayida99":45,"ailing35":8,"ziqing26":24}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HEALTH_CONDITION_DEMENTIA;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"huisthat"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"huisthat"},"content":"                .withHealthConditions(VALID_HEALTH_CONDITION_DEMENTIA).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"huisthat"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"huisthat"},"content":"                .withHealthConditions(VALID_HEALTH_CONDITION_DEMENTIA).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"huisthat":5,"-":97}},{"path":"src/test/java/seedu/address/model/healthcondition/HealthConditionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package seedu.address.model.healthcondition;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"public class HealthConditionTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"        assertThrows(NullPointerException.class, () -\u003e new HealthCondition(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"    public void constructor_invalidHealthCondition_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"        String invalidHealthCondition \u003d \"\";","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new HealthCondition(invalidHealthCondition));","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"    public void isValidHealthCondition() {","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"        // null tag name","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"        assertThrows(NullPointerException.class, () -\u003e HealthCondition.isValidHealthCondition(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"huisthat":26}},{"path":"src/test/java/seedu/address/model/person/FrequencyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"public class FrequencyTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"    private Visit visit \u003d new Visit(\"2022-01-01 12:00\");","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"    public void find_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"        assertThrows(NullPointerException.class, () -\u003e Frequency.find(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"    public void find_invalidFrequency_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"        String invalidLanguage \u003d \"random\";","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Frequency.find(invalidLanguage));","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"    public void isValidFrequency() {","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"        // null frequency","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"        assertThrows(NullPointerException.class, () -\u003e Frequency.isValidFrequency(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"        // invalid frequency","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"        assertFalse(Frequency.isValidFrequency(\" \")); // spaces only","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"        // valid frequency","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"        assertTrue(Frequency.isValidFrequency(\"daily\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"ziqing26"},"content":"        assertTrue(Frequency.isValidFrequency(\"weekly\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"ziqing26"},"content":"        assertTrue(Frequency.isValidFrequency(\"biweekly\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"ziqing26"},"content":"        assertTrue(Frequency.isValidFrequency(\"monthly\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"ziqing26"},"content":"        assertTrue(Frequency.isValidFrequency(\"quarterly\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"ailing35"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"ailing35"},"content":"    public void nextVisit_daily() {","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"ailing35"},"content":"        Frequency f \u003d Frequency.DAILY;","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"ailing35"},"content":"        Visit nextVisit \u003d new Visit(\"2022-01-02 12:00\");","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"ailing35"},"content":"        assertEquals(f.nextVisit(visit), nextVisit);","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"ailing35"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"ailing35"},"content":"    public void nextVisit_weekly() {","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"ailing35"},"content":"        Frequency f \u003d Frequency.WEEKLY;","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"ailing35"},"content":"        Visit nextVisit \u003d new Visit(\"2022-01-08 12:00\");","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"ailing35"},"content":"        assertEquals(f.nextVisit(visit), nextVisit);","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"ailing35"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"ailing35"},"content":"    public void nextVisit_biweekly() {","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"ailing35"},"content":"        Frequency f \u003d Frequency.BIWEEKLY;","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"ailing35"},"content":"        Visit nextVisit \u003d new Visit(\"2022-01-15 12:00\");","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"ailing35"},"content":"        assertEquals(f.nextVisit(visit), nextVisit);","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"ailing35"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"ailing35"},"content":"    public void nextVisit_monthly() {","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"ailing35"},"content":"        Frequency f \u003d Frequency.MONTHLY;","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"ailing35"},"content":"        Visit nextVisit \u003d new Visit(\"2022-02-01 12:00\");","lastModifiedDate":"2021-10-14"},{"lineNumber":65,"author":{"gitId":"ailing35"},"content":"        assertEquals(f.nextVisit(visit), nextVisit);","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"ailing35"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"ailing35"},"content":"    public void nextVisit_quarterly() {","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"ailing35"},"content":"        Frequency f \u003d Frequency.QUARTERLY;","lastModifiedDate":"2021-10-14"},{"lineNumber":71,"author":{"gitId":"ailing35"},"content":"        Visit nextVisit \u003d new Visit(\"2022-04-01 12:00\");","lastModifiedDate":"2021-10-14"},{"lineNumber":72,"author":{"gitId":"ailing35"},"content":"        assertEquals(f.nextVisit(visit), nextVisit);","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"ailing35"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":76,"author":{"gitId":"ailing35"},"content":"    public void nextVisit_empty() {","lastModifiedDate":"2021-10-14"},{"lineNumber":77,"author":{"gitId":"ailing35"},"content":"        Frequency f \u003d Frequency.EMPTY;","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"ailing35"},"content":"        Visit nextVisit \u003d new Visit(\"\");","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"ailing35"},"content":"        assertEquals(f.nextVisit(visit), nextVisit);","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"ailing35":45,"ziqing26":36}},{"path":"src/test/java/seedu/address/model/person/LanguageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"huisthat"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"huisthat"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"public class LanguageTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"huisthat"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"huisthat"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Language(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"huisthat"},"content":"    public void constructor_invalidLanguage_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"huisthat"},"content":"        String invalidLanguage \u003d \"\";","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"huisthat"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Language(invalidLanguage));","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"huisthat"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"huisthat"},"content":"    public void isValidLanguage() {","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"        // null language","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"        assertThrows(NullPointerException.class, () -\u003e Language.isValidLanguage(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"huisthat"},"content":"        // blank language","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"        assertFalse(Language.isValidLanguage(\"\")); // empty string","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"        assertFalse(Language.isValidLanguage(\" \")); // spaces only","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"huisthat"},"content":"        // valid addresses","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"huisthat"},"content":"        assertTrue(Language.isValidLanguage(\"Tamil\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"        assertTrue(Language.isValidLanguage(\"-\")); // one character","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"        assertTrue(Language.isValidLanguage(\"Cantonese\")); // dialects","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"huisthat":36}},{"path":"src/test/java/seedu/address/model/person/LastVisitTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Chen-Yiyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"public class LastVisitTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"    public void equals() {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Chen-Yiyang"},"content":"        LastVisit lastVisit \u003d new LastVisit(\"2021-11-11 12:00\");","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"        assertTrue(lastVisit.equals(lastVisit));","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"ailing35"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"ailing35"},"content":"        LastVisit visitCopy \u003d new LastVisit(lastVisit.value);","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"ailing35"},"content":"        assertTrue(lastVisit.equals(visitCopy));","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"ailing35"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"ailing35"},"content":"        assertFalse(lastVisit.equals(1));","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"ailing35"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"ailing35"},"content":"        assertFalse(lastVisit.equals(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"ailing35"},"content":"        // different visit -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"Chen-Yiyang"},"content":"        LastVisit differentVisit \u003d new LastVisit(\"2021-10-01 12:00\");","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"ailing35"},"content":"        assertFalse(lastVisit.equals(differentVisit));","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Chen-Yiyang"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"Chen-Yiyang"},"content":"    public void isValidLastVisit() {","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Chen-Yiyang"},"content":"        // correct time regex -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"Chen-Yiyang"},"content":"        assertTrue(LastVisit.isValidLastVisit(\"2021-01-02 12:00\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Chen-Yiyang"},"content":"        // correct time regex for 24hr HH -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Chen-Yiyang"},"content":"        assertTrue(LastVisit.isValidLastVisit(\"2021-01-02 23:59\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Chen-Yiyang"},"content":"        // incorrect date format -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(LastVisit.isValidLastVisit(\"20210304 12:34\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Chen-Yiyang"},"content":"        // incorrect time format -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(LastVisit.isValidLastVisit(\"2021-04-05 0654\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"Chen-Yiyang"},"content":"        // incorrect datetime format -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(LastVisit.isValidLastVisit(\"2021-04-0515:43\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"Chen-Yiyang"},"content":"        // incorrect regex no time -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(LastVisit.isValidLastVisit(\"2021-01-02\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"Chen-Yiyang"},"content":"        // incorrect regex no date -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(LastVisit.isValidLastVisit(\"12:01\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"Chen-Yiyang"},"content":"        // incorrect year range regex -\u003e return false","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(LastVisit.isValidLastVisit(\"20211-01-02 12:00\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"Chen-Yiyang"},"content":"        // incorrect year range regex -\u003e return false","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(LastVisit.isValidLastVisit(\"20211-01-02 12:00\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"Chen-Yiyang"},"content":"        // incorrect month range regex -\u003e return false","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(LastVisit.isValidLastVisit(\"2021-13-02 12:00\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"Chen-Yiyang"},"content":"        // incorrect day range regex -\u003e return false","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(LastVisit.isValidLastVisit(\"2021-01-32 12:00\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"Chen-Yiyang"},"content":"        // incorrect hour range regex -\u003e return false","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(LastVisit.isValidLastVisit(\"2021-01-02 25:00\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"Chen-Yiyang"},"content":"        // incorrect minute range regex -\u003e return false","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(LastVisit.isValidLastVisit(\"2021-01-02 12:99\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"Chen-Yiyang"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"Chen-Yiyang"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"Chen-Yiyang"},"content":"    public void getFormatted() {","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"Chen-Yiyang"},"content":"        // format displayed date","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"Chen-Yiyang"},"content":"        String expectedDate \u003d \"01 Feb 2021 23:59\";","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"Chen-Yiyang"},"content":"        assertEquals(expectedDate, new LastVisit(\"2021-02-01 23:59\").getFormatted());","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"Chen-Yiyang"},"content":"        // format displayed date for empty visit","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"ailing35"},"content":"        assertEquals(\"-\", new LastVisit(\"\").getFormatted());","lastModifiedDate":"2021-10-16"},{"lineNumber":82,"author":{"gitId":"Chen-Yiyang"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"ailing35":29,"Chen-Yiyang":54}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"huisthat"},"content":"        // Keywords match phone, language and address, but does not match name","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"huisthat"},"content":"                .withLanguage(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"huisthat":2,"-":73}},{"path":"src/test/java/seedu/address/model/person/OccurrenceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ziqing26"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"ziqing26"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"ziqing26"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"ziqing26"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"ziqing26"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"ziqing26"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"ziqing26"},"content":"public class OccurrenceTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"ziqing26"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"ziqing26"},"content":"    public void constructor_invalidOccurrence_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"ziqing26"},"content":"        int invalidOccurrence \u003d -1;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"ziqing26"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Occurrence(invalidOccurrence));","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"ziqing26"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"ziqing26"},"content":"    public void getNext_validOccurrence_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"ziqing26"},"content":"        Occurrence test \u003d new Occurrence(3);","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"ziqing26"},"content":"        Occurrence expected \u003d new Occurrence(2);","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"ziqing26"},"content":"        assertEquals(expected, test.getNext());","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"ziqing26"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"ziqing26"},"content":"    public void isValidOccurrence() {","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"ziqing26"},"content":"        // invalid occurrence","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"ziqing26"},"content":"        assertFalse(Occurrence.isValidOccurrence(-1));","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"ziqing26"},"content":"        assertFalse(Occurrence.isValidOccurrence(0));","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"ziqing26"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"ziqing26"},"content":"        // valid occurrence","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"ziqing26"},"content":"        assertTrue(Occurrence.isValidOccurrence(1));","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"ziqing26"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"ziqing26"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"ziqing26":33}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HEALTH_CONDITION_DEMENTIA;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LANGUAGE_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getHealthConditions().remove(0));","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withLanguage(VALID_LANGUAGE_BOB)","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"                .withAddress(VALID_ADDRESS_BOB).withHealthConditions(VALID_HEALTH_CONDITION_DEMENTIA).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"Chen-Yiyang"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"Chen-Yiyang"},"content":"    public void hasVisit() {","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"Chen-Yiyang"},"content":"        // Alice has a non-empty visit -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"Chen-Yiyang"},"content":"        assertTrue(ALICE.hasVisit());","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"Chen-Yiyang"},"content":"        // new person has an empty visit -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"Chen-Yiyang"},"content":"        Person noVisitAlice \u003d new PersonBuilder(ALICE).withVisit(\"\").build();","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(noVisitAlice.hasVisit());","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"Chen-Yiyang"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"huisthat"},"content":"        // different language -\u003e returns false","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"huisthat"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withLanguage(VALID_LANGUAGE_BOB).build();","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":99,"author":{"gitId":"huisthat"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withHealthConditions(VALID_HEALTH_CONDITION_DEMENTIA).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"ailing35"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"ailing35"},"content":"    public void getFormattedVisit() {","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"ailing35"},"content":"        // without frequency and occurrence","lastModifiedDate":"2021-10-16"},{"lineNumber":106,"author":{"gitId":"ailing35"},"content":"        String visit \u003d ALICE.getVisit().get().getFormatted();","lastModifiedDate":"2021-10-16"},{"lineNumber":107,"author":{"gitId":"ailing35"},"content":"        assertEquals(ALICE.getFormattedVisit(), visit);","lastModifiedDate":"2021-10-16"},{"lineNumber":108,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":109,"author":{"gitId":"ailing35"},"content":"        // with frequency and occurrence \u003d 1","lastModifiedDate":"2021-10-16"},{"lineNumber":110,"author":{"gitId":"ailing35"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withFrequency(Frequency.DAILY.toString())","lastModifiedDate":"2021-10-16"},{"lineNumber":111,"author":{"gitId":"ailing35"},"content":"                                 .withOccurrence(1).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":112,"author":{"gitId":"ailing35"},"content":"        assertEquals(editedAlice.getFormattedVisit(), visit);","lastModifiedDate":"2021-10-16"},{"lineNumber":113,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":114,"author":{"gitId":"ailing35"},"content":"        // with frequency and occurrence \u003e 1","lastModifiedDate":"2021-10-16"},{"lineNumber":115,"author":{"gitId":"ailing35"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withFrequency(Frequency.WEEKLY.toString()).withOccurrence(2).build();","lastModifiedDate":"2021-10-16"},{"lineNumber":116,"author":{"gitId":"ailing35"},"content":"        visit \u003d visit + \" (repeats \" + Frequency.WEEKLY.toString() + \", for \" + 1 + \" more time(s))\";","lastModifiedDate":"2021-10-16"},{"lineNumber":117,"author":{"gitId":"ailing35"},"content":"        assertEquals(editedAlice.getFormattedVisit(), visit);","lastModifiedDate":"2021-10-16"},{"lineNumber":118,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":119,"author":{"gitId":"ailing35"},"content":"        // without visit","lastModifiedDate":"2021-10-16"},{"lineNumber":120,"author":{"gitId":"ailing35"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withVisit(\"\").build();","lastModifiedDate":"2021-10-16"},{"lineNumber":121,"author":{"gitId":"ailing35"},"content":"        assertEquals(editedAlice.getFormattedVisit(), \"-\");","lastModifiedDate":"2021-10-16"},{"lineNumber":122,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":123,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"Chen-Yiyang"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"Chen-Yiyang"},"content":"    public void isVisitOverdue() {","lastModifiedDate":"2021-10-17"},{"lineNumber":126,"author":{"gitId":"Chen-Yiyang"},"content":"        // no existing visit","lastModifiedDate":"2021-10-17"},{"lineNumber":127,"author":{"gitId":"Chen-Yiyang"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withVisit(\"\").build();","lastModifiedDate":"2021-10-17"},{"lineNumber":128,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(editedAlice.isVisitOverdue());","lastModifiedDate":"2021-10-17"},{"lineNumber":129,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":130,"author":{"gitId":"Chen-Yiyang"},"content":"        // overdue as of this module\u0027s time","lastModifiedDate":"2021-10-17"},{"lineNumber":131,"author":{"gitId":"Chen-Yiyang"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withVisit(\"2000-01-01 08:00\").build();","lastModifiedDate":"2021-10-17"},{"lineNumber":132,"author":{"gitId":"Chen-Yiyang"},"content":"        assertTrue(editedAlice.isVisitOverdue());","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"Chen-Yiyang"},"content":"        // not overdue in around 100 years","lastModifiedDate":"2021-10-17"},{"lineNumber":135,"author":{"gitId":"Chen-Yiyang"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withVisit(\"2103-01-01 08:00\").build();","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(editedAlice.isVisitOverdue());","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"Chen-Yiyang"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"huisthat":8,"ailing35":22,"Chen-Yiyang":25,"-":83}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HEALTH_CONDITION_DEMENTIA;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"huisthat"},"content":"                .withHealthConditions(VALID_HEALTH_CONDITION_DEMENTIA).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"huisthat"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"huisthat"},"content":"                .withHealthConditions(VALID_HEALTH_CONDITION_DEMENTIA).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"huisthat":5,"-":165}},{"path":"src/test/java/seedu/address/model/person/VisitTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luayida99"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-09-30"},{"lineNumber":2,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"Chen-Yiyang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"luayida99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-09-30"},{"lineNumber":5,"author":{"gitId":"luayida99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-09-30"},{"lineNumber":6,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"luayida99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"luayida99"},"content":"public class VisitTest {","lastModifiedDate":"2021-10-01"},{"lineNumber":10,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"luayida99"},"content":"    @Test","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"luayida99"},"content":"    public void equals() {","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"Chen-Yiyang"},"content":"        Visit visit \u003d new Visit(\"2021-11-11 12:00\");","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"luayida99"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"        assertTrue(visit.equals(visit));","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"luayida99"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"luayida99"},"content":"        Visit visitCopy \u003d new Visit(visit.value);","lastModifiedDate":"2021-10-01"},{"lineNumber":20,"author":{"gitId":"luayida99"},"content":"        assertTrue(visit.equals(visitCopy));","lastModifiedDate":"2021-10-01"},{"lineNumber":21,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":22,"author":{"gitId":"luayida99"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"luayida99"},"content":"        assertFalse(visit.equals(1));","lastModifiedDate":"2021-10-01"},{"lineNumber":24,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":25,"author":{"gitId":"luayida99"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"luayida99"},"content":"        assertFalse(visit.equals(null));","lastModifiedDate":"2021-10-01"},{"lineNumber":27,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":28,"author":{"gitId":"luayida99"},"content":"        // different visit -\u003e returns false","lastModifiedDate":"2021-10-01"},{"lineNumber":29,"author":{"gitId":"Chen-Yiyang"},"content":"        Visit differentVisit \u003d new Visit(\"2021-10-01 12:00\");","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"luayida99"},"content":"        assertFalse(visit.equals(differentVisit));","lastModifiedDate":"2021-10-01"},{"lineNumber":31,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Chen-Yiyang"},"content":"        // non-empty visit -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Chen-Yiyang"},"content":"        assertTrue(visit.hasVisit());","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Chen-Yiyang"},"content":"        // empty visit -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"Chen-Yiyang"},"content":"        Visit emptyVisit \u003d new Visit(\"\");","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(emptyVisit.hasVisit());","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":39,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Chen-Yiyang"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Chen-Yiyang"},"content":"    public void isValidVisit() {","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Chen-Yiyang"},"content":"        // correct time regex -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Chen-Yiyang"},"content":"        assertTrue(Visit.isValidVisit(\"2021-01-02 12:00\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"Chen-Yiyang"},"content":"        // correct time regex for 24hr HH -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"Chen-Yiyang"},"content":"        assertTrue(Visit.isValidVisit(\"2021-01-02 23:59\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Chen-Yiyang"},"content":"        // incorrect date format -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(Visit.isValidVisit(\"20210304 12:34\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Chen-Yiyang"},"content":"        // incorrect time format -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(Visit.isValidVisit(\"2021-04-05 0654\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"Chen-Yiyang"},"content":"        // incorrect datetime format -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(Visit.isValidVisit(\"2021-04-0515:43\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"Chen-Yiyang"},"content":"        // incorrect regex no time -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(Visit.isValidVisit(\"2021-01-02\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"Chen-Yiyang"},"content":"        // incorrect regex no date -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(Visit.isValidVisit(\"12:01\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"Chen-Yiyang"},"content":"        // incorrect year range regex -\u003e return false","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(Visit.isValidVisit(\"20211-01-02 12:00\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"Chen-Yiyang"},"content":"        // incorrect year range regex -\u003e return false","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(Visit.isValidVisit(\"20211-01-02 12:00\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"Chen-Yiyang"},"content":"        // incorrect month range regex -\u003e return false","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(Visit.isValidVisit(\"2021-13-02 12:00\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"Chen-Yiyang"},"content":"        // incorrect day range regex -\u003e return false","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(Visit.isValidVisit(\"2021-01-32 12:00\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"Chen-Yiyang"},"content":"        // incorrect hour range regex -\u003e return false","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(Visit.isValidVisit(\"2021-01-02 25:00\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"Chen-Yiyang"},"content":"        // incorrect minute range regex -\u003e return false","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(Visit.isValidVisit(\"2021-01-02 12:99\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"Chen-Yiyang"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"Chen-Yiyang"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"Chen-Yiyang"},"content":"    public void getFormatted() {","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"Chen-Yiyang"},"content":"        // format displayed date","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"Chen-Yiyang"},"content":"        String expectedDate \u003d \"01 Feb 2021 23:59\";","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"Chen-Yiyang"},"content":"        assertEquals(expectedDate, new Visit(\"2021-02-01 23:59\").getFormatted());","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"Chen-Yiyang"},"content":"        // format displayed date for empty visit","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"ailing35"},"content":"        assertEquals(\"-\", new Visit(\"\").getFormatted());","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"Chen-Yiyang"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"Chen-Yiyang"},"content":"    @Test","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"Chen-Yiyang"},"content":"    public void isOverdue() {","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"Chen-Yiyang"},"content":"        // no existing visit","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(new Visit(\"\").isOverdue());","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"Chen-Yiyang"},"content":"        // overdue as of this module\u0027s time","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"Chen-Yiyang"},"content":"        assertTrue(new Visit(\"2000-01-01 08:00\").isOverdue());","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"Chen-Yiyang"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"Chen-Yiyang"},"content":"        // not overdue in around 100 years","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"Chen-Yiyang"},"content":"        assertFalse(new Visit(\"2103-01-01 08:00\").isOverdue());","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"Chen-Yiyang"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"luayida99"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"luayida99":29,"ailing35":1,"Chen-Yiyang":73}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Language;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"huisthat"},"content":"    private static final String INVALID_LANGUAGE \u003d \" \";","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"huisthat"},"content":"    private static final String INVALID_HEALTH_CONDITION \u003d \"#diabetes\";","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"huisthat"},"content":"    private static final String VALID_LANGUAGE \u003d BENSON.getLanguage().toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"ailing35"},"content":"    private static final String VALID_LAST_VISIT \u003d BENSON.getLastVisit().toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"luayida99"},"content":"    private static final String VALID_VISIT \u003d BENSON.getVisit().toString();","lastModifiedDate":"2021-10-01"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"    private static final String VALID_FREQUENCY \u003d BENSON.getFrequency().toString();","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"    private static final String VALID_OCCURRENCE \u003d BENSON.getOccurrence().toString();","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"huisthat"},"content":"    private static final List\u003cJsonAdaptedHealthCondition\u003e VALID_HEALTH_CONDITIONS \u003d BENSON.getHealthConditions()","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"            .stream().map(JsonAdaptedHealthCondition::new)","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"ailing35"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_LANGUAGE, VALID_ADDRESS, VALID_LAST_VISIT,","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"huisthat"},"content":"                        VALID_VISIT, VALID_FREQUENCY, VALID_OCCURRENCE, VALID_HEALTH_CONDITIONS);","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"luayida99"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-30"},{"lineNumber":57,"author":{"gitId":"ailing35"},"content":"                new JsonAdaptedPerson(null, VALID_PHONE, VALID_LANGUAGE, VALID_ADDRESS, VALID_LAST_VISIT,","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"huisthat"},"content":"                        VALID_VISIT, VALID_FREQUENCY, VALID_OCCURRENCE, VALID_HEALTH_CONDITIONS);","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"ailing35"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_LANGUAGE, VALID_ADDRESS, VALID_LAST_VISIT,","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"huisthat"},"content":"                        VALID_VISIT, VALID_FREQUENCY, VALID_OCCURRENCE, VALID_HEALTH_CONDITIONS);","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"luayida99"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"ailing35"},"content":"                new JsonAdaptedPerson(VALID_NAME, null, VALID_LANGUAGE, VALID_ADDRESS, VALID_LAST_VISIT,","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"huisthat"},"content":"                        VALID_VISIT, VALID_FREQUENCY, VALID_OCCURRENCE, VALID_HEALTH_CONDITIONS);","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"huisthat"},"content":"    public void toModelType_invalidLanguage_throwsIllegalValueException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"ailing35"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_LANGUAGE, VALID_ADDRESS, VALID_LAST_VISIT,","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"huisthat"},"content":"                        VALID_VISIT, VALID_FREQUENCY, VALID_OCCURRENCE, VALID_HEALTH_CONDITIONS);","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"huisthat"},"content":"        String expectedMessage \u003d Language.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"huisthat"},"content":"    public void toModelType_nullLanguage_throwsIllegalValueException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"luayida99"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-30"},{"lineNumber":93,"author":{"gitId":"ailing35"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_LAST_VISIT,","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"huisthat"},"content":"                        VALID_VISIT, VALID_FREQUENCY, VALID_OCCURRENCE, VALID_HEALTH_CONDITIONS);","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"huisthat"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Language.class.getSimpleName());","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"ailing35"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_LANGUAGE, INVALID_ADDRESS, VALID_LAST_VISIT,","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"huisthat"},"content":"                        VALID_VISIT, VALID_FREQUENCY, VALID_OCCURRENCE, VALID_HEALTH_CONDITIONS);","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"luayida99"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"ailing35"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_LANGUAGE, null, VALID_LAST_VISIT,","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"huisthat"},"content":"                        VALID_VISIT, VALID_FREQUENCY, VALID_OCCURRENCE, VALID_HEALTH_CONDITIONS);","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"huisthat"},"content":"    public void toModelType_invalidHealthConditions_throwsIllegalValueException() {","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"huisthat"},"content":"        List\u003cJsonAdaptedHealthCondition\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_HEALTH_CONDITIONS);","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"huisthat"},"content":"        invalidTags.add(new JsonAdaptedHealthCondition(INVALID_HEALTH_CONDITION));","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"ailing35"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_LANGUAGE, VALID_ADDRESS, VALID_LAST_VISIT,","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"huisthat"},"content":"                        VALID_VISIT, VALID_FREQUENCY, VALID_OCCURRENCE, invalidTags);","lastModifiedDate":"2021-10-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"luayida99":5,"huisthat":24,"ailing35":10,"-":88}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"        AddressBook typicalPersonsAddressBook \u003d getTypicalAddressBook();","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"huisthat":2,"-":45}},{"path":"src/test/java/seedu/address/testutil/DateTimeUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ailing35"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"ailing35"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"ailing35"},"content":" * A utility class for DateTime.","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"ailing35"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"public class DateTimeUtil {","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"     * Returns a valid visit datetime string with a future date.","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"ailing35"},"content":"    public static String getValidVisitString() {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"ailing35"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"uuuu-MM-dd HH:mm\");","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"        LocalDateTime futureDateTime \u003d LocalDateTime.now().plusDays(7);","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"ailing35"},"content":"        return futureDateTime.format(formatter);","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"ailing35"},"content":"     * Returns a valid visit datetime string with a future date different from getValidVisitString().","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"ailing35"},"content":"    public static String getValidVisitString2() {","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"ailing35"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"uuuu-MM-dd HH:mm\");","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"ailing35"},"content":"        LocalDateTime futureDateTime \u003d LocalDateTime.now().plusDays(8);","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"ailing35"},"content":"        return futureDateTime.format(formatter);","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"ailing35"},"content":"     * Returns a valid last visit datetime string with a past date.","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"ailing35"},"content":"    public static String getValidLastVisitString() {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"ailing35"},"content":"        return \"2021-10-10 12:00\";","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"ailing35"},"content":"     * Returns an invalid visit datetime string with a past date.","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"ailing35"},"content":"    public static String getInvalidVisitString() {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"ailing35"},"content":"        return getValidLastVisitString();","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"ailing35"},"content":"     * Returns an invalid last visit datetime string with a future date.","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"ailing35"},"content":"    public static String getInvalidLastVisitString() {","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"ailing35"},"content":"        return getValidVisitString();","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"ailing35"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"ailing35":48}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.healthcondition.HealthCondition;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Language;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"        descriptor.setLanguage(person.getLanguage());","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"        descriptor.setHealthConditions(person.getHealthConditions());","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"huisthat"},"content":"     * Sets the {@code Language} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"huisthat"},"content":"    public EditPersonDescriptorBuilder withLanguage(String language) {","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"huisthat"},"content":"        descriptor.setLanguage(new Language(language));","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"huisthat"},"content":"     * Parses the {@code healthConditions} into a {@code Set\u003cHealthCondition\u003e}","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"huisthat"},"content":"     * and set it to the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"huisthat"},"content":"    public EditPersonDescriptorBuilder withHealthConditions(String... healthConditions) {","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"huisthat"},"content":"        Set\u003cHealthCondition\u003e healthConditionSet \u003d Stream.of(healthConditions).map(HealthCondition::new)","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"huisthat"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"huisthat"},"content":"        descriptor.setHealthConditions(healthConditionSet);","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"huisthat":13,"-":75}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"ailing35"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.healthcondition.HealthCondition;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Frequency;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Language;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"ailing35"},"content":"import seedu.address.model.person.LastVisit;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.person.Occurrence;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"luayida99"},"content":"import seedu.address.model.person.Visit;","lastModifiedDate":"2021-10-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"huisthat"},"content":"    public static final String DEFAULT_LANGUAGE \u003d \"English\";","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"Chen-Yiyang"},"content":"    public static final String DEFAULT_LAST_VISIT \u003d \"2021-01-01 12:00\";","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"ailing35"},"content":"    public static final String DEFAULT_VISIT \u003d \"\";","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"huisthat"},"content":"    private Language language;","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"ailing35"},"content":"    private Optional\u003cLastVisit\u003e lastVisit;","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"luayida99"},"content":"    private Optional\u003cVisit\u003e visit;","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"    private Optional\u003cFrequency\u003e frequency;","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"    private Optional\u003cOccurrence\u003e occurrence;","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"    private Set\u003cHealthCondition\u003e healthConditions;","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"huisthat"},"content":"        language \u003d new Language(DEFAULT_LANGUAGE);","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"ailing35"},"content":"        lastVisit \u003d Optional.ofNullable(new LastVisit(DEFAULT_LAST_VISIT));","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"luayida99"},"content":"        visit \u003d Optional.ofNullable(new Visit(DEFAULT_VISIT));","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"huisthat"},"content":"        frequency \u003d Optional.ofNullable(Frequency.EMPTY);","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"huisthat"},"content":"        occurrence \u003d Optional.ofNullable(new Occurrence(1));","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"huisthat"},"content":"        healthConditions \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"huisthat"},"content":"        language \u003d personToCopy.getLanguage();","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"ailing35"},"content":"        lastVisit \u003d personToCopy.getLastVisit();","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"luayida99"},"content":"        visit \u003d personToCopy.getVisit();","lastModifiedDate":"2021-10-01"},{"lineNumber":66,"author":{"gitId":"huisthat"},"content":"        frequency \u003d personToCopy.getFrequency();","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"huisthat"},"content":"        occurrence \u003d personToCopy.getOccurrence();","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"huisthat"},"content":"        healthConditions \u003d new HashSet\u003c\u003e(personToCopy.getHealthConditions());","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"huisthat"},"content":"     * Parses the {@code healthConditions} into a {@code Set\u003cHealthCondition\u003e}","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"huisthat"},"content":"     * and set it to the {@code Person} that we are building.","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"huisthat"},"content":"    public PersonBuilder withHealthConditions(String ... healthConditions) {","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"huisthat"},"content":"        this.healthConditions \u003d SampleDataUtil.getHealthConditionSet(healthConditions);","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"ailing35"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"ailing35"},"content":"     * Sets the {@code LastVisit} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"ailing35"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"ailing35"},"content":"    public PersonBuilder withLastVisit(String lastVisit) {","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"ailing35"},"content":"        this.lastVisit \u003d Optional.ofNullable(new LastVisit(lastVisit));","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"ailing35"},"content":"        return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"ailing35"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"ailing35"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"luayida99"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":105,"author":{"gitId":"luayida99"},"content":"     * Sets the {@code Visit} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-01"},{"lineNumber":106,"author":{"gitId":"luayida99"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":107,"author":{"gitId":"luayida99"},"content":"    public PersonBuilder withVisit(String visit) {","lastModifiedDate":"2021-10-01"},{"lineNumber":108,"author":{"gitId":"luayida99"},"content":"        this.visit \u003d Optional.ofNullable(new Visit(visit));","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"luayida99"},"content":"        return this;","lastModifiedDate":"2021-09-30"},{"lineNumber":110,"author":{"gitId":"luayida99"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":111,"author":{"gitId":"luayida99"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":121,"author":{"gitId":"huisthat"},"content":"     * Sets the {@code Language} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":123,"author":{"gitId":"huisthat"},"content":"    public PersonBuilder withLanguage(String language) {","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"huisthat"},"content":"        this.language \u003d new Language(language);","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":128,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":129,"author":{"gitId":"huisthat"},"content":"     * Sets the {@code Frequency} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"huisthat"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"huisthat"},"content":"    public PersonBuilder withFrequency(String frequency) {","lastModifiedDate":"2021-10-09"},{"lineNumber":132,"author":{"gitId":"huisthat"},"content":"        this.frequency \u003d Optional.ofNullable(Frequency.find(frequency));","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"huisthat"},"content":"        return this;","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"huisthat"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":135,"author":{"gitId":"huisthat"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"huisthat"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"huisthat"},"content":"     * Sets the {@code Occurrence} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"huisthat"},"content":"    public PersonBuilder withOccurrence(int occurrence) {","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"huisthat"},"content":"        this.occurrence \u003d Optional.ofNullable(new Occurrence(occurrence));","lastModifiedDate":"2021-10-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":145,"author":{"gitId":"huisthat"},"content":"        return new Person(name, phone, language, address, lastVisit, visit, frequency, occurrence, healthConditions);","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"luayida99":12,"huisthat":37,"ailing35":14,"Chen-Yiyang":1,"-":84}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HEALTH_CONDITION;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LANGUAGE;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"ailing35"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LAST_VISIT;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"huisthat"},"content":"import seedu.address.model.healthcondition.HealthCondition;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"ailing35"},"content":"import seedu.address.model.person.LastVisit;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"huisthat"},"content":"        sb.append(PREFIX_LANGUAGE + person.getLanguage().value + \" \");","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"ailing35"},"content":"        sb.append(PREFIX_LAST_VISIT + person.getLastVisit().orElse(new LastVisit(\"\")).value + \" \");","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"huisthat"},"content":"        person.getHealthConditions().stream().forEach(","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"            s -\u003e sb.append(PREFIX_HEALTH_CONDITION + s.healthCondition + \" \")","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"huisthat"},"content":"        descriptor.getLanguage().ifPresent(language -\u003e sb.append(PREFIX_LANGUAGE).append(language.value).append(\" \"));","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"huisthat"},"content":"        if (descriptor.getHealthConditions().isPresent()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"huisthat"},"content":"            Set\u003cHealthCondition\u003e tags \u003d descriptor.getHealthConditions().get();","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"huisthat"},"content":"                sb.append(PREFIX_HEALTH_CONDITION);","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"huisthat"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_HEALTH_CONDITION).append(s.healthCondition).append(\" \"));","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"huisthat":11,"ailing35":3,"-":51}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HEALTH_CONDITION_DEMENTIA;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_HEALTH_CONDITION_DIABETES;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LANGUAGE_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"huisthat"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LANGUAGE_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"ailing35"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_LAST_VISIT_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"huisthat"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withLanguage(\"English\")","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"Chen-Yiyang"},"content":"            .withPhone(\"94351253\").withVisit(\"2021-10-10 12:00\").withLastVisit(\"2021-07-07 12:00\")","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"huisthat"},"content":"            .withFrequency(\"\").withOccurrence(1).withHealthConditions(\"diabetes\").build();","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":33,"author":{"gitId":"Chen-Yiyang"},"content":"            .withLanguage(\"French\").withPhone(\"98765432\").withLastVisit(\"2021-08-08 12:00\")","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"huisthat"},"content":"            .withFrequency(\"\").withOccurrence(1).withHealthConditions(\"dementia\", \"diabetes\").build();","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"huisthat"},"content":"            .withFrequency(\"\").withOccurrence(1).withLanguage(\"English\").withAddress(\"wall street\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"huisthat"},"content":"            .withFrequency(\"\").withOccurrence(1).withLanguage(\"Chinese\")","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"huisthat"},"content":"            .withAddress(\"10th street\").withHealthConditions(\"high blood pressure\").build();","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"huisthat"},"content":"            .withFrequency(\"\").withOccurrence(1).withLanguage(\"English\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"huisthat"},"content":"            .withFrequency(\"\").withOccurrence(1).withLanguage(\"Hokkien\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"huisthat"},"content":"            .withFrequency(\"\").withOccurrence(1).withLanguage(\"Cantonese\").withAddress(\"4th street\").build();","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"huisthat"},"content":"            .withLanguage(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"huisthat"},"content":"            .withLanguage(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"ailing35"},"content":"            .withLanguage(VALID_LANGUAGE_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"huisthat"},"content":"            .withHealthConditions(VALID_HEALTH_CONDITION_DIABETES).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"ailing35"},"content":"            .withLanguage(VALID_LANGUAGE_BOB).withAddress(VALID_ADDRESS_BOB).withLastVisit(VALID_LAST_VISIT_BOB)","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"huisthat"},"content":"            .withHealthConditions(VALID_HEALTH_CONDITION_DEMENTIA, VALID_HEALTH_CONDITION_DIABETES).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"huisthat":17,"ailing35":3,"Chen-Yiyang":2,"-":57}}]
