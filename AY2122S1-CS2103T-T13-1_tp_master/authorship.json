[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"NUS ModBook","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"SHEZADHASSAN22"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-T13-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-T13-1/tp/actions)","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"NUS ModBook is a **desktop app for managing modules, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, ModBook can help you organise modules faster than traditional GUI apps.","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"SHEZADHASSAN22":1,"-":3,"rohit0718":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jdk8\u0027, version: \u00272.12.2\u0027","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    archiveName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2018-04-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"luminousleek":1,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"### Isaac Lee","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"\u003cimg src\u003d\"images/luminousleek.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"[[github](https://github.com/luminousleek)]","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"SHEZADHASSAN22"},"content":"### Shezad Hassan","lastModifiedDate":"2021-09-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"SHEZADHASSAN22"},"content":"\u003cimg src\u003d\"images/shezadhassan22.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"SHEZADHASSAN22"},"content":"[[github](https://github.com/shezadhassan22)]","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"SHEZADHASSAN22"},"content":"* Role: Testing","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"rohit0718"},"content":"### Rohit Rajesh Bhat","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"rohit0718"},"content":"\u003cimg src\u003d\"images/rohit0718.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"rohit0718"},"content":"[[github](https://github.com/rohit0718)]","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"rohit0718"},"content":"* Role: Documentation","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"bentanjunrong"},"content":"### TAN JUN RONG, BENJAMIN","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"bentanjunrong"},"content":"\u003cimg src\u003d\"images/bentanjunrong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"bentanjunrong"},"content":"[[github](https://github.com/bentanjunrong)]","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"bentanjunrong"},"content":"* Role: Code Quality","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":44,"author":{"gitId":"itzblim"},"content":"### Benjamin Lim","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"itzblim"},"content":"\u003cimg src\u003d\"images/itzblim.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":48,"author":{"gitId":"itzblim"},"content":"[[github](https://github.com/itzblim)]","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"itzblim"},"content":"* Role: Deliverables and deadlines","lastModifiedDate":"2021-09-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"luminousleek":3,"SHEZADHASSAN22":4,"itzblim":4,"bentanjunrong":4,"-":32,"rohit0718":4}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"rohit0718"},"content":"**Target user profile:**","lastModifiedDate":"2021-09-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"rohit0718"},"content":"* has a need to manage modules and lessons related to the modules","lastModifiedDate":"2021-09-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"rohit0718"},"content":"**Value proposition**: manage modules faster NUSMods","lastModifiedDate":"2021-09-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `***`, Medium (nice to have) - `**`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"rohit0718"},"content":"| Priority | As a...     | I want to...                        | So that I can                                          |","lastModifiedDate":"2021-09-29"},{"lineNumber":271,"author":{"gitId":"rohit0718"},"content":"| -------- | ----------- | ----------------------------------- | ------------------------------------------------------ |","lastModifiedDate":"2021-09-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"| `***`    | new user    | see usage instructions              | refer to instructions when I forget how to use the App |","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"rohit0718"},"content":"| `***`    | NUS student | add modules to a module list            | keep track of my daily schedule                        |","lastModifiedDate":"2021-09-29"},{"lineNumber":274,"author":{"gitId":"rohit0718"},"content":"| `***`    | NUS student | edit my modules             | update changes in my curriculum plan                   |","lastModifiedDate":"2021-09-29"},{"lineNumber":275,"author":{"gitId":"rohit0718"},"content":"| `***`    | NUS student | delete modules  | update any withdrawal from modules  |","lastModifiedDate":"2021-09-29"},{"lineNumber":276,"author":{"gitId":"rohit0718"},"content":"| `***`    | NUS student | see a list of my modules | have an overview of all my schoolwork |","lastModifiedDate":"2021-09-29"},{"lineNumber":277,"author":{"gitId":"rohit0718"},"content":"| `***`    | NUS student | add lessons to a lesson list | keep track of my lesson schedule   |","lastModifiedDate":"2021-09-29"},{"lineNumber":278,"author":{"gitId":"rohit0718"},"content":"| `***`    | NUS student | edit my lessons             | update changes in the lesson schedule                   |","lastModifiedDate":"2021-09-29"},{"lineNumber":279,"author":{"gitId":"rohit0718"},"content":"| `***`    | NUS student | delete my lessons             | update if any lessons are cancelled                |","lastModifiedDate":"2021-09-29"},{"lineNumber":280,"author":{"gitId":"rohit0718"},"content":"| `***`    | NUS student | see a list of upcoming lessons      | plan my week ahead                                     |","lastModifiedDate":"2021-09-29"},{"lineNumber":281,"author":{"gitId":"rohit0718"},"content":"| `***`    | NUS student | add examinations to a examination list | keep track of my examination schedule   |","lastModifiedDate":"2021-09-29"},{"lineNumber":282,"author":{"gitId":"rohit0718"},"content":"| `***`    | NUS student | edit my examinations  | update any changes in the examinations  |","lastModifiedDate":"2021-09-29"},{"lineNumber":283,"author":{"gitId":"rohit0718"},"content":"| `***`    | NUS student | delete my examinations | update if any examinations are cancelled   |","lastModifiedDate":"2021-09-29"},{"lineNumber":284,"author":{"gitId":"rohit0718"},"content":"| `***`    | NUS student | see a list of upcoming examinations | plan my revision nearing the examination period        |","lastModifiedDate":"2021-09-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"rohit0718"},"content":"(For all use cases below, the **System** is the `ModBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"rohit0718"},"content":"**Use case: Add a module**","lastModifiedDate":"2021-09-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"rohit0718"},"content":"1. User types in code and name of module","lastModifiedDate":"2021-09-29"},{"lineNumber":295,"author":{"gitId":"rohit0718"},"content":"2. ModBook adds that module into the list","lastModifiedDate":"2021-09-29"},{"lineNumber":296,"author":{"gitId":"rohit0718"},"content":"3. ModBook displays the added module","lastModifiedDate":"2021-09-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"rohit0718"},"content":"Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":299,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":300,"author":{"gitId":"rohit0718"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":301,"author":{"gitId":"rohit0718"},"content":"1a. User types in a wrong parameter  ","lastModifiedDate":"2021-09-29"},{"lineNumber":302,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a1. ModBook outputs error message indicating parameter which has an error  ","lastModifiedDate":"2021-09-29"},{"lineNumber":303,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a2. User enters new data  ","lastModifiedDate":"2021-09-29"},{"lineNumber":304,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a3. Use case resumes from step 1","lastModifiedDate":"2021-09-29"},{"lineNumber":305,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":306,"author":{"gitId":"rohit0718"},"content":"**Use case: Add a lesson**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":309,"author":{"gitId":"rohit0718"},"content":"1. User types in module code, day of week, start time, end time, and optionally link and venue details","lastModifiedDate":"2021-09-29"},{"lineNumber":310,"author":{"gitId":"rohit0718"},"content":"2. ModBook adds the lesson to the specified module","lastModifiedDate":"2021-09-29"},{"lineNumber":311,"author":{"gitId":"rohit0718"},"content":"3. ModBook displays the added lesson","lastModifiedDate":"2021-09-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"**Extensions**  ","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"rohit0718"},"content":"1a. User types in a wrong parameter  ","lastModifiedDate":"2021-09-29"},{"lineNumber":317,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a1. ModBook outputs error message indicating parameter which has an error  ","lastModifiedDate":"2021-09-29"},{"lineNumber":318,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a2. User enters new data  ","lastModifiedDate":"2021-09-29"},{"lineNumber":319,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a3. Use case resumes from step 1  ","lastModifiedDate":"2021-09-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"rohit0718"},"content":"**Use case: Add an exam**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":323,"author":{"gitId":"rohit0718"},"content":"**MSS**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":324,"author":{"gitId":"rohit0718"},"content":"1. User types in exam code, name, time and optionally link and venue","lastModifiedDate":"2021-09-29"},{"lineNumber":325,"author":{"gitId":"rohit0718"},"content":"2. ModBook adds the exam to the specified module","lastModifiedDate":"2021-09-29"},{"lineNumber":326,"author":{"gitId":"rohit0718"},"content":"3. ModBook displays the added exam","lastModifiedDate":"2021-09-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"rohit0718"},"content":"**Extensions**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":331,"author":{"gitId":"rohit0718"},"content":"1a. User types in a wrong parameter  ","lastModifiedDate":"2021-09-29"},{"lineNumber":332,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a1. ModBook outputs error message indicating parameter which has an error  ","lastModifiedDate":"2021-09-29"},{"lineNumber":333,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a2. User enters new data  ","lastModifiedDate":"2021-09-29"},{"lineNumber":334,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a3. Use case resumes from step 1  ","lastModifiedDate":"2021-09-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"rohit0718"},"content":"**Use case: List all modules**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":338,"author":{"gitId":"rohit0718"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":339,"author":{"gitId":"rohit0718"},"content":"1. User requests to see a list of all modules","lastModifiedDate":"2021-09-29"},{"lineNumber":340,"author":{"gitId":"rohit0718"},"content":"2. ModBook displays a list of all modules","lastModifiedDate":"2021-09-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"rohit0718"},"content":"Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"rohit0718"},"content":"**Extensions**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":345,"author":{"gitId":"rohit0718"},"content":"1a. User types in a wrong parameter  ","lastModifiedDate":"2021-09-29"},{"lineNumber":346,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a1. ModBook outputs error message indicating parameter which has an error  ","lastModifiedDate":"2021-09-29"},{"lineNumber":347,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a2. User enters new data  ","lastModifiedDate":"2021-09-29"},{"lineNumber":348,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a3. Use case resumes from step 1  ","lastModifiedDate":"2021-09-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"rohit0718"},"content":"**Use case: List all lessons across modules**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":352,"author":{"gitId":"rohit0718"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":353,"author":{"gitId":"rohit0718"},"content":"1. User requests to see a list of all lessons","lastModifiedDate":"2021-09-29"},{"lineNumber":354,"author":{"gitId":"rohit0718"},"content":"2. ModBook displays a list of all lessons, sorted by Day and Time","lastModifiedDate":"2021-09-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"rohit0718"},"content":"Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"rohit0718"},"content":"**Extensions**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":359,"author":{"gitId":"rohit0718"},"content":"1a. User types in a wrong parameter  ","lastModifiedDate":"2021-09-29"},{"lineNumber":360,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a1. ModBook outputs error message indicating parameter which has an error  ","lastModifiedDate":"2021-09-29"},{"lineNumber":361,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a2. User enters new data  ","lastModifiedDate":"2021-09-29"},{"lineNumber":362,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a3. Use case resumes from step 1  ","lastModifiedDate":"2021-09-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"rohit0718"},"content":"**Use case: List all exams across modules**","lastModifiedDate":"2021-09-29"},{"lineNumber":365,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":366,"author":{"gitId":"rohit0718"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":367,"author":{"gitId":"rohit0718"},"content":"1. User requests to see a list of all exams","lastModifiedDate":"2021-09-29"},{"lineNumber":368,"author":{"gitId":"rohit0718"},"content":"2. ModBook displays a list of all exams, sorted by Date and Time","lastModifiedDate":"2021-09-29"},{"lineNumber":369,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":370,"author":{"gitId":"rohit0718"},"content":"Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":371,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":372,"author":{"gitId":"rohit0718"},"content":"**Extensions**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":373,"author":{"gitId":"rohit0718"},"content":"1a. User types in a wrong parameter  ","lastModifiedDate":"2021-09-29"},{"lineNumber":374,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a1. ModBook outputs error message indicating parameter which has an error  ","lastModifiedDate":"2021-09-29"},{"lineNumber":375,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a2. User enters new data  ","lastModifiedDate":"2021-09-29"},{"lineNumber":376,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a3. Use case resumes from step 1  ","lastModifiedDate":"2021-09-29"},{"lineNumber":377,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":378,"author":{"gitId":"rohit0718"},"content":"**Use case: List lessons and exams for one module**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":379,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":380,"author":{"gitId":"rohit0718"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":381,"author":{"gitId":"rohit0718"},"content":"1. User requests to see list of all lessons and exams of the specified module","lastModifiedDate":"2021-09-29"},{"lineNumber":382,"author":{"gitId":"rohit0718"},"content":"2. ModBook displays a list of all Exams and Lessons of the specified module","lastModifiedDate":"2021-09-29"},{"lineNumber":383,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":384,"author":{"gitId":"rohit0718"},"content":"Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":385,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":386,"author":{"gitId":"rohit0718"},"content":"**Extensions**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":387,"author":{"gitId":"rohit0718"},"content":"1a. User types in a wrong parameter  ","lastModifiedDate":"2021-09-29"},{"lineNumber":388,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a1. ModBook outputs error message indicating parameter which has an error  ","lastModifiedDate":"2021-09-29"},{"lineNumber":389,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a2. User enters new data  ","lastModifiedDate":"2021-09-29"},{"lineNumber":390,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a3. Use case resumes from step 1","lastModifiedDate":"2021-09-29"},{"lineNumber":391,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":392,"author":{"gitId":"rohit0718"},"content":"**Use case: Delete a module**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":393,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":394,"author":{"gitId":"rohit0718"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":395,"author":{"gitId":"rohit0718"},"content":"1. User requests to delete a module","lastModifiedDate":"2021-09-29"},{"lineNumber":396,"author":{"gitId":"rohit0718"},"content":"2. ModBook deletes the module and returns success","lastModifiedDate":"2021-09-29"},{"lineNumber":397,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":398,"author":{"gitId":"rohit0718"},"content":"Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":399,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":400,"author":{"gitId":"rohit0718"},"content":"**Extensions**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":401,"author":{"gitId":"rohit0718"},"content":"1a. User types in a wrong parameter  ","lastModifiedDate":"2021-09-29"},{"lineNumber":402,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a1. ModBook outputs error message indicating parameter which has an error  ","lastModifiedDate":"2021-09-29"},{"lineNumber":403,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a2. User enters new data  ","lastModifiedDate":"2021-09-29"},{"lineNumber":404,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a3. Use case resumes from step 1  ","lastModifiedDate":"2021-09-29"},{"lineNumber":405,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":406,"author":{"gitId":"rohit0718"},"content":"**Use case: Delete a lesson**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":407,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":408,"author":{"gitId":"rohit0718"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":409,"author":{"gitId":"rohit0718"},"content":"1. User requests to delete a lesson","lastModifiedDate":"2021-09-29"},{"lineNumber":410,"author":{"gitId":"rohit0718"},"content":"2. ModBook deletes the module and returns success","lastModifiedDate":"2021-09-29"},{"lineNumber":411,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":412,"author":{"gitId":"rohit0718"},"content":"Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":414,"author":{"gitId":"rohit0718"},"content":"**Use case: Delete an exam**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":416,"author":{"gitId":"rohit0718"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":417,"author":{"gitId":"rohit0718"},"content":"1. User requests to delete an exam associated with a module","lastModifiedDate":"2021-09-29"},{"lineNumber":418,"author":{"gitId":"rohit0718"},"content":"2. ModBook deletes the module and returns success","lastModifiedDate":"2021-09-29"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"rohit0718"},"content":"**Extensions**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":421,"author":{"gitId":"rohit0718"},"content":"1a. User types in a wrong parameter  ","lastModifiedDate":"2021-09-29"},{"lineNumber":422,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a1. ModBook outputs error message indicating parameter which has an error  ","lastModifiedDate":"2021-09-29"},{"lineNumber":423,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a2. User enters new data  ","lastModifiedDate":"2021-09-29"},{"lineNumber":424,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a3. Use case resumes from step 1  ","lastModifiedDate":"2021-09-29"},{"lineNumber":425,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":426,"author":{"gitId":"rohit0718"},"content":"Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":427,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":428,"author":{"gitId":"rohit0718"},"content":"**Use case: Edit a module**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":429,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":430,"author":{"gitId":"rohit0718"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":431,"author":{"gitId":"rohit0718"},"content":"1. User requests to edit a module","lastModifiedDate":"2021-09-29"},{"lineNumber":432,"author":{"gitId":"rohit0718"},"content":"2. ModBook edits the module at the specified index","lastModifiedDate":"2021-09-29"},{"lineNumber":433,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":434,"author":{"gitId":"rohit0718"},"content":"**Extensions**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":435,"author":{"gitId":"rohit0718"},"content":"1a. User types in a wrong parameter  ","lastModifiedDate":"2021-09-29"},{"lineNumber":436,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a1. ModBook outputs error message indicating parameter which has an error  ","lastModifiedDate":"2021-09-29"},{"lineNumber":437,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a2. User enters new data  ","lastModifiedDate":"2021-09-29"},{"lineNumber":438,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a3. Use case resumes from step 1  ","lastModifiedDate":"2021-09-29"},{"lineNumber":439,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":440,"author":{"gitId":"rohit0718"},"content":"Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":441,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":442,"author":{"gitId":"rohit0718"},"content":"**Use case: Edit a lesson**","lastModifiedDate":"2021-09-29"},{"lineNumber":443,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":444,"author":{"gitId":"rohit0718"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":445,"author":{"gitId":"rohit0718"},"content":"1. User requests to edit a lesson","lastModifiedDate":"2021-09-29"},{"lineNumber":446,"author":{"gitId":"rohit0718"},"content":"2. Modbook edits the lesson and returns success message","lastModifiedDate":"2021-09-29"},{"lineNumber":447,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":448,"author":{"gitId":"rohit0718"},"content":"**Extensions**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":449,"author":{"gitId":"rohit0718"},"content":"1a. User types in a wrong parameter  ","lastModifiedDate":"2021-09-29"},{"lineNumber":450,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a1. ModBook outputs error message indicating parameter which has an error  ","lastModifiedDate":"2021-09-29"},{"lineNumber":451,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a2. User enters new data  ","lastModifiedDate":"2021-09-29"},{"lineNumber":452,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a3. Use case resumes from step 1  ","lastModifiedDate":"2021-09-29"},{"lineNumber":453,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":454,"author":{"gitId":"rohit0718"},"content":"Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":455,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":456,"author":{"gitId":"rohit0718"},"content":"**Use case: Edit an exam**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":457,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":458,"author":{"gitId":"rohit0718"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":459,"author":{"gitId":"rohit0718"},"content":"1. User requests to edit an exam","lastModifiedDate":"2021-09-29"},{"lineNumber":460,"author":{"gitId":"rohit0718"},"content":"2. ModBook edits the exam and returns success message","lastModifiedDate":"2021-09-29"},{"lineNumber":461,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":462,"author":{"gitId":"rohit0718"},"content":"**Extensions**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":463,"author":{"gitId":"rohit0718"},"content":"1a. User types in a wrong parameter  ","lastModifiedDate":"2021-09-29"},{"lineNumber":464,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a1. ModBook outputs error message indicating parameter which has an error  ","lastModifiedDate":"2021-09-29"},{"lineNumber":465,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a2. User enters new data  ","lastModifiedDate":"2021-09-29"},{"lineNumber":466,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a3. Use case resumes from step 1  ","lastModifiedDate":"2021-09-29"},{"lineNumber":467,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":468,"author":{"gitId":"rohit0718"},"content":"Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":469,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":470,"author":{"gitId":"rohit0718"},"content":"**Use case: Display help**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":471,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":472,"author":{"gitId":"rohit0718"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":473,"author":{"gitId":"rohit0718"},"content":"1. User requests for help","lastModifiedDate":"2021-09-29"},{"lineNumber":474,"author":{"gitId":"rohit0718"},"content":"2. ModBook presents a link to a help page","lastModifiedDate":"2021-09-29"},{"lineNumber":475,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":476,"author":{"gitId":"rohit0718"},"content":"**Extensions**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":477,"author":{"gitId":"rohit0718"},"content":"1a. User types in a wrong parameter  ","lastModifiedDate":"2021-09-29"},{"lineNumber":478,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a1. ModBook outputs error message indicating parameter which has an error  ","lastModifiedDate":"2021-09-29"},{"lineNumber":479,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a2. User enters new data  ","lastModifiedDate":"2021-09-29"},{"lineNumber":480,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a3. Use case resumes from step 1  ","lastModifiedDate":"2021-09-29"},{"lineNumber":481,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":482,"author":{"gitId":"rohit0718"},"content":"Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"rohit0718"},"content":"**Use case: Clear all modules**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":485,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":486,"author":{"gitId":"rohit0718"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":487,"author":{"gitId":"rohit0718"},"content":"1. User requests to clear all modules","lastModifiedDate":"2021-09-29"},{"lineNumber":488,"author":{"gitId":"rohit0718"},"content":"2. ModBook clears all modules","lastModifiedDate":"2021-09-29"},{"lineNumber":489,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":490,"author":{"gitId":"rohit0718"},"content":"**Extensions**  ","lastModifiedDate":"2021-09-29"},{"lineNumber":491,"author":{"gitId":"rohit0718"},"content":"1a. User types in a wrong parameter  ","lastModifiedDate":"2021-09-29"},{"lineNumber":492,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a1. ModBook outputs error message indicating parameter which has an error  ","lastModifiedDate":"2021-09-29"},{"lineNumber":493,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a2. User enters new data  ","lastModifiedDate":"2021-09-29"},{"lineNumber":494,"author":{"gitId":"rohit0718"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp; 1a3. Use case resumes from step 1  ","lastModifiedDate":"2021-09-29"},{"lineNumber":495,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":496,"author":{"gitId":"rohit0718"},"content":"Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":497,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":498,"author":{"gitId":"rohit0718"},"content":"### Non-Functional Requirements","lastModifiedDate":"2021-09-29"},{"lineNumber":499,"author":{"gitId":"rohit0718"},"content":"1. Should work on any *mainstream OS* as long as it has **`Java 11`** or above installed.","lastModifiedDate":"2021-09-29"},{"lineNumber":500,"author":{"gitId":"rohit0718"},"content":"1. Should be able to hold up to 1000 modules without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-09-29"},{"lineNumber":501,"author":{"gitId":"rohit0718"},"content":"1. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-09-29"},{"lineNumber":502,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":503,"author":{"gitId":"rohit0718"},"content":"### Glossary","lastModifiedDate":"2021-09-29"},{"lineNumber":504,"author":{"gitId":"rohit0718"},"content":"* **Mainstream OS**: Windows, Linux, Unix, macOS","lastModifiedDate":"2021-09-29"},{"lineNumber":505,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":509,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"luminousleek":9,"-":351,"rohit0718":196}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"User Guide","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"NUS ModBook is a **desktop app for managing modules, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, ModBook can help you organise modules faster than traditional GUI apps.","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"## Table of Contents","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"1. [Quick Start](#Quick-start)","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"1. [Features](#Features)","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"    * [Modules](#Modules)","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"        * [Adding a module](#Adding-a-module-add-mod)","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"        * [Listing all modules](#Listing-all-modules--list-mod)","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"        * [Show details of a module](#Show-details-of-a-module-detail)","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"        * [Editing a module](#Editing-a-module-edit-mod)","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"        * [Deleting a module](#Delete-a-module-delete-mod)","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"    * [Lessons](#Lessons)","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"        * [Adding a lesson](#Adding-a-lesson-add-lesson)","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"        * [Listing all lessons](#Listing-all-lessons--list-lesson)","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"        * [Editing a lesson](#Editing-a-lesson-edit-lesson)","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"        * [Deleting a lesson](#Deleting-a-lesson-delete-lesson)","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"rohit0718"},"content":"    * [Exams](#Exams)","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"rohit0718"},"content":"        * [Adding an exam](#Adding-an-exam-add-exam)","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"rohit0718"},"content":"        * [Listing all exam](#Listing-all-Exams-list-exam)","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"rohit0718"},"content":"        * [Editing an exam](#Editing-an-Exam-edit-exam)","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"rohit0718"},"content":"        * [Deleting a exam](#Deleting-an-Exam--delete-exam)","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"rohit0718"},"content":"    * [Miscellaneous](#Miscellaneous)","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"rohit0718"},"content":"        * [Viewing help](#Viewing-help--help)","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"rohit0718"},"content":"        * [Clearing all entries](#Clearing-all-entries--clear)","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"rohit0718"},"content":"        * [Exiting the program](#Exiting-the-program--exit)","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"rohit0718"},"content":"        * [Saving the data](#Saving-the-data)","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"rohit0718"},"content":"        * [Editing the data file](#Editing-the-data-file)","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"rohit0718"},"content":"1. [FAQ](#FAQ)","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"rohit0718"},"content":"1. [Command Summary](#Command-Summary)","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"rohit0718"},"content":"    * [By Action](#Command-Summary-by-Action)","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"rohit0718"},"content":"    * [By Object](#Command-Summary-by-Object)","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"rohit0718"},"content":"## Quick Start","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"rohit0718"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"rohit0718"},"content":"1. Download the latest modbook.jar from here.","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"rohit0718"},"content":"1. Copy the file to the folder you want to use as the home folder for your ModBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"rohit0718"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"rohit0718"},"content":"1. Try out some example commands:","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"rohit0718"},"content":"* `list mod`: Lists all modules.","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"rohit0718"},"content":"* `add mod c/CS2103T n/Software Engineering`: Adds a module with code CS2103T, named Software Engineering.","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"rohit0718"},"content":"* `delete mod 1`: Deletes the 1st module shown in the module list.","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"rohit0718"},"content":"* `clear`: Deletes all modules.","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"rohit0718"},"content":"* `exit`: Exits the app.","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"rohit0718"},"content":"1. Refer to the Features below for details of each command.","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"rohit0718"},"content":"#### Notes about the command format:","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"rohit0718"},"content":"* Words in UPPER_CASE are the parameters to be supplied by the user.","lastModifiedDate":"2021-09-29"},{"lineNumber":54,"author":{"gitId":"rohit0718"},"content":"  e.g. in add `c/CODE`, `CODE` is a parameter which can be used as `add mod c/CS2103T`.","lastModifiedDate":"2021-09-29"},{"lineNumber":55,"author":{"gitId":"rohit0718"},"content":"* Items in square brackets are optional.","lastModifiedDate":"2021-09-29"},{"lineNumber":56,"author":{"gitId":"rohit0718"},"content":"  e.g `c/CODE [n/NAME]` can be used as `c/CS2103T` or as `c/CS2103T n/Software Engineering`.","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"rohit0718"},"content":"* Parameters can be in any order.","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"rohit0718"},"content":"  e.g. if the command specifies `c/CODE n/NAME`, `n/NAME c/CODE` is also acceptable.","lastModifiedDate":"2021-09-29"},{"lineNumber":59,"author":{"gitId":"rohit0718"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":61,"author":{"gitId":"rohit0718"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `exit` and `clear`) will be ignored.","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":64,"author":{"gitId":"rohit0718"},"content":"### Modules","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"rohit0718"},"content":"#### Adding a module: `add mod`","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"rohit0718"},"content":"Adds a module to the ModBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"rohit0718"},"content":"Format: `add mod c/CODE [n/NAME]`","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"rohit0718"},"content":"* Example: `add mod c/CS2103T n/Software Engineering` : Adds a module with code CS2103T, named Software Engineering.","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"rohit0718"},"content":"#### Listing all modules : `list mod`","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"rohit0718"},"content":"Shows a list of all modules in the ModBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"rohit0718"},"content":"Format: `list mod`","lastModifiedDate":"2021-09-29"},{"lineNumber":73,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":74,"author":{"gitId":"rohit0718"},"content":"#### Show details of a module: `detail`","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"rohit0718"},"content":"Show details of an existing module in the ModBook. A list of all Lessons and Exams of the specified Module is printed.","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"rohit0718"},"content":"Format: `detail c/CODE`","lastModifiedDate":"2021-09-29"},{"lineNumber":77,"author":{"gitId":"rohit0718"},"content":"* Example: `detail c/CS2103T` : Shows details for the CS2103T module.","lastModifiedDate":"2021-09-29"},{"lineNumber":78,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":79,"author":{"gitId":"rohit0718"},"content":"#### Editing a module: `edit mod`","lastModifiedDate":"2021-09-29"},{"lineNumber":80,"author":{"gitId":"rohit0718"},"content":"Edits an existing module in the ModBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":81,"author":{"gitId":"rohit0718"},"content":"Format: `edit mod INDEX [c/NEW_CODE] [n/NEW_NAME]`","lastModifiedDate":"2021-09-29"},{"lineNumber":82,"author":{"gitId":"rohit0718"},"content":"* Edits the module at the specified `INDEX`. The index refers to the index number shown in the displayed module list. The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"rohit0718"},"content":"* Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"rohit0718"},"content":"  `edit mod 1 c/CS2105 n/Computer Networks` : Edits the name of the CS2105 module to Computer Networks","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"rohit0718"},"content":"#### Delete a module: `delete mod`","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"rohit0718"},"content":"Deletes a module from the ModBook","lastModifiedDate":"2021-09-29"},{"lineNumber":90,"author":{"gitId":"rohit0718"},"content":"Format: `delete mod INDEX`","lastModifiedDate":"2021-09-29"},{"lineNumber":91,"author":{"gitId":"rohit0718"},"content":"* Deletes the person at the specified INDEX.","lastModifiedDate":"2021-09-29"},{"lineNumber":92,"author":{"gitId":"rohit0718"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-09-29"},{"lineNumber":93,"author":{"gitId":"rohit0718"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2021-09-29"},{"lineNumber":94,"author":{"gitId":"rohit0718"},"content":"  Examples: `delete mod 2` : deletes the 2nd module in the ModBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"rohit0718"},"content":"### Lessons","lastModifiedDate":"2021-09-29"},{"lineNumber":97,"author":{"gitId":"rohit0718"},"content":"#### Adding a lesson: `add lesson`","lastModifiedDate":"2021-09-29"},{"lineNumber":98,"author":{"gitId":"rohit0718"},"content":"Adds a lesson to the ModBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":99,"author":{"gitId":"rohit0718"},"content":"Format: `add lesson c/CODE n/NAME d/DAY_OF_WEEK s/START_TIME e/END_TIME [l/LINK] [v/VENUE]`","lastModifiedDate":"2021-09-29"},{"lineNumber":100,"author":{"gitId":"rohit0718"},"content":"* Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":101,"author":{"gitId":"rohit0718"},"content":"  `add lesson c/CS2103T n/Weekly Tutorial d/Monday s/1000 e/1100 l/https://www.latlmes.com/breaking/click-this-link-for-exam-link-1`: Adds a lesson to the CS2103T module.","lastModifiedDate":"2021-09-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"rohit0718"},"content":"#### Listing all lessons : `list lesson`","lastModifiedDate":"2021-09-29"},{"lineNumber":104,"author":{"gitId":"rohit0718"},"content":"Shows a list of all lessons in the ModBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":105,"author":{"gitId":"rohit0718"},"content":"Format: `list lesson`","lastModifiedDate":"2021-09-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"rohit0718"},"content":"#### Editing a lesson: `edit lesson`","lastModifiedDate":"2021-09-29"},{"lineNumber":108,"author":{"gitId":"rohit0718"},"content":"Edits a lesson to the ModBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":109,"author":{"gitId":"rohit0718"},"content":"Format: `edit lesson INDEX c/CODE [n/NEW_NAME] [d/NEW_DAY_OF_WEEK] [s/NEW_START_TIME] [e/NEW_END_TIME] [l/NEW_LINK] [v/NEW_VENUE]`","lastModifiedDate":"2021-09-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"rohit0718"},"content":"* `edit lesson 2 c/CS2103T n/Weekly Tutorial d/Monday s/1000 e/1100 l/https://www.latlmes.com/breaking/click-this-link-for-exam-link-1` : Edits the second lesson of the CS2103T module.","lastModifiedDate":"2021-09-29"},{"lineNumber":113,"author":{"gitId":"rohit0718"},"content":"#### Deleting a lesson: `delete lesson`","lastModifiedDate":"2021-09-29"},{"lineNumber":114,"author":{"gitId":"rohit0718"},"content":"Deletes a lesson from the ModBook","lastModifiedDate":"2021-09-29"},{"lineNumber":115,"author":{"gitId":"rohit0718"},"content":"Format: `delete lesson INDEX c/CODE`","lastModifiedDate":"2021-09-29"},{"lineNumber":116,"author":{"gitId":"rohit0718"},"content":"* Deletes the lesson at the specified INDEX.","lastModifiedDate":"2021-09-29"},{"lineNumber":117,"author":{"gitId":"rohit0718"},"content":"* The index refers to the index number shown in the displayed module detail list.","lastModifiedDate":"2021-09-29"},{"lineNumber":118,"author":{"gitId":"rohit0718"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2021-09-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"rohit0718"},"content":"* `delete lesson 2 c/CS2103T`: deletes the 2nd lesson of the CS2130T module.","lastModifiedDate":"2021-09-29"},{"lineNumber":122,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":123,"author":{"gitId":"rohit0718"},"content":"### Exams","lastModifiedDate":"2021-09-29"},{"lineNumber":124,"author":{"gitId":"rohit0718"},"content":"#### Adding an exam: `add exam`","lastModifiedDate":"2021-09-29"},{"lineNumber":125,"author":{"gitId":"rohit0718"},"content":"Adds an exam to the ModBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":126,"author":{"gitId":"rohit0718"},"content":"Format: `add exam c/CODE n/NAME d/DATE s/START_TIME e/END_TIME [l/LINK] [v/VENUE]`","lastModifiedDate":"2021-09-29"},{"lineNumber":127,"author":{"gitId":"rohit0718"},"content":"* Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":128,"author":{"gitId":"rohit0718"},"content":"  `add exam c/CS2103T n/Final Exam d/31/12/2022 s/2100 e/2200 l/https://www.latlmes.com/breaking/click-this-link-for-exam-link-1`: Adds an exam to the CS2103T module.","lastModifiedDate":"2021-09-29"},{"lineNumber":129,"author":{"gitId":"rohit0718"},"content":"#### Listing all Exams : `list exam`","lastModifiedDate":"2021-09-29"},{"lineNumber":130,"author":{"gitId":"rohit0718"},"content":"Shows a list of all lessons in the ModBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":131,"author":{"gitId":"rohit0718"},"content":"Format: `list exam`","lastModifiedDate":"2021-09-29"},{"lineNumber":132,"author":{"gitId":"rohit0718"},"content":"#### Editing an Exam: `edit exam`","lastModifiedDate":"2021-09-29"},{"lineNumber":133,"author":{"gitId":"rohit0718"},"content":"Edits an exam to the ModBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":134,"author":{"gitId":"rohit0718"},"content":"Format: `edit exam 3 c/CODE n/NEW_NAME d/NEW_DATE s/NEW_START_TIME e/NEW_END_TIME [l/NEW_LINK] [v/NEW_VENUE]`","lastModifiedDate":"2021-09-29"},{"lineNumber":135,"author":{"gitId":"rohit0718"},"content":"* Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":136,"author":{"gitId":"rohit0718"},"content":"  `edit exam 3 c/CS2103T n/Final Exam d/31/12/2022 s/2100 e/2200 l/https://www.latlmes.com/breaking/click-this-link-for-exam-link-1` : Edits the 3rd exam of the CS2103T module.","lastModifiedDate":"2021-09-29"},{"lineNumber":137,"author":{"gitId":"rohit0718"},"content":"#### Deleting an Exam : `delete exam`","lastModifiedDate":"2021-09-29"},{"lineNumber":138,"author":{"gitId":"rohit0718"},"content":"Deletes the specified Exam from the ModBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":139,"author":{"gitId":"rohit0718"},"content":"Format: `delete exam INDEX c/CODE`","lastModifiedDate":"2021-09-29"},{"lineNumber":140,"author":{"gitId":"rohit0718"},"content":"* Deletes the Exam at the specified INDEX.","lastModifiedDate":"2021-09-29"},{"lineNumber":141,"author":{"gitId":"rohit0718"},"content":"* The index refers to the index number shown in the displayed Module details list.","lastModifiedDate":"2021-09-29"},{"lineNumber":142,"author":{"gitId":"rohit0718"},"content":"* The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2021-09-29"},{"lineNumber":143,"author":{"gitId":"rohit0718"},"content":"* Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":144,"author":{"gitId":"rohit0718"},"content":"  `delete exam 3 c/CS2103T` : Deletes the 3rd exam of the CS2103T module.","lastModifiedDate":"2021-09-29"},{"lineNumber":145,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":146,"author":{"gitId":"rohit0718"},"content":"### Miscellaneous","lastModifiedDate":"2021-09-29"},{"lineNumber":147,"author":{"gitId":"rohit0718"},"content":"#### Viewing help : `help`","lastModifiedDate":"2021-09-29"},{"lineNumber":148,"author":{"gitId":"rohit0718"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-09-29"},{"lineNumber":149,"author":{"gitId":"rohit0718"},"content":"Format: `help`","lastModifiedDate":"2021-09-29"},{"lineNumber":150,"author":{"gitId":"rohit0718"},"content":"#### Clearing all entries : `clear`","lastModifiedDate":"2021-09-29"},{"lineNumber":151,"author":{"gitId":"rohit0718"},"content":"Clears all entries from the ModBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"rohit0718"},"content":"#### Exiting the program : `exit`","lastModifiedDate":"2021-09-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"rohit0718"},"content":"#### Saving the data","lastModifiedDate":"2021-09-29"},{"lineNumber":157,"author":{"gitId":"rohit0718"},"content":"ModBook data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-29"},{"lineNumber":158,"author":{"gitId":"rohit0718"},"content":"#### Editing the data file","lastModifiedDate":"2021-09-29"},{"lineNumber":159,"author":{"gitId":"rohit0718"},"content":"ModBook data is saved as a JSON file `[JAR file location]/data/modbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-09-29"},{"lineNumber":160,"author":{"gitId":"rohit0718"},"content":"Caution: If your changes to the data file makes its format invalid, ModBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-09-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"rohit0718"},"content":"**Q**:   How do I transfer my data to another Computer?","lastModifiedDate":"2021-09-29"},{"lineNumber":164,"author":{"gitId":"rohit0718"},"content":"**A**:   Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous ModBook home folder.","lastModifiedDate":"2021-09-29"},{"lineNumber":165,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":166,"author":{"gitId":"rohit0718"},"content":"## Command Summary","lastModifiedDate":"2021-09-29"},{"lineNumber":167,"author":{"gitId":"rohit0718"},"content":"### Command Summary by Action","lastModifiedDate":"2021-09-29"},{"lineNumber":168,"author":{"gitId":"rohit0718"},"content":"| Action | Object | Format, Examples                                                                                                         |","lastModifiedDate":"2021-09-29"},{"lineNumber":169,"author":{"gitId":"rohit0718"},"content":"|--------|--------|--------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2021-09-29"},{"lineNumber":170,"author":{"gitId":"rohit0718"},"content":"| Add    | Module | `add mod c/CODE [n/NAME]`                                                                                                  |","lastModifiedDate":"2021-09-29"},{"lineNumber":171,"author":{"gitId":"rohit0718"},"content":"|        | Lesson | `add lesson c/CODE n/NAME d/DAY_OF_WEEK s/START_TIME e/END_TIME [l/LINK] [v/VENUE]`                                        |","lastModifiedDate":"2021-09-29"},{"lineNumber":172,"author":{"gitId":"rohit0718"},"content":"|        | Exam   | `add exam c/CODE n/NAME d/DATE s/START_TIME e/END_TIME [l/LINK] [v/VENUE]`                                                 |","lastModifiedDate":"2021-09-29"},{"lineNumber":173,"author":{"gitId":"rohit0718"},"content":"| List   | Module | `list mod`                                                                                                                 |","lastModifiedDate":"2021-09-29"},{"lineNumber":174,"author":{"gitId":"rohit0718"},"content":"|        | Lesson | `list lesson`                                                                                                              |","lastModifiedDate":"2021-09-29"},{"lineNumber":175,"author":{"gitId":"rohit0718"},"content":"|        | Exam   | `list exam`                                                                                                                |","lastModifiedDate":"2021-09-29"},{"lineNumber":176,"author":{"gitId":"rohit0718"},"content":"| Detail | Module | `detail c/CODE`                                                                                                            |","lastModifiedDate":"2021-09-29"},{"lineNumber":177,"author":{"gitId":"rohit0718"},"content":"| Delete | Module | `delete mod INDEX`                                                                                                         |","lastModifiedDate":"2021-09-29"},{"lineNumber":178,"author":{"gitId":"rohit0718"},"content":"|        | Lesson | `delete lesson INDEX c/CODE`                                                                                               |","lastModifiedDate":"2021-09-29"},{"lineNumber":179,"author":{"gitId":"rohit0718"},"content":"|        | Exam   | `delete exam INDEX c/CODE`                                                                                                 |","lastModifiedDate":"2021-09-29"},{"lineNumber":180,"author":{"gitId":"rohit0718"},"content":"| Edit   | Module | `edit mod INDEX [c/NEW_CODE] [n/NEW_NAME]`                                                                                 |","lastModifiedDate":"2021-09-29"},{"lineNumber":181,"author":{"gitId":"rohit0718"},"content":"|        | Lesson | `edit lesson INDEX c/CODE [n/NEW_NAME] [d/NEW_DAY_OF_WEEK] [s/NEW_START_TIME] [e/NEW_END_TIME] [l/NEW_LINK] [v/NEW_VENUE]` |","lastModifiedDate":"2021-09-29"},{"lineNumber":182,"author":{"gitId":"rohit0718"},"content":"|        | Exam   | `edit exam INDEX c/CODE [n/NEW_NAME] [d/NEW_DATE] [s/NEW_START_TIME] [e/NEW_END_TIME] [l/NEW_LINK] [v/NEW_VENUE]`          |","lastModifiedDate":"2021-09-29"},{"lineNumber":183,"author":{"gitId":"rohit0718"},"content":"| Help   |        | `help`                                                                                                                     |","lastModifiedDate":"2021-09-29"},{"lineNumber":184,"author":{"gitId":"rohit0718"},"content":"| Clear  |        | `clear`                                                                                                                    |","lastModifiedDate":"2021-09-29"},{"lineNumber":185,"author":{"gitId":"rohit0718"},"content":"| Exit   |        | `exit`                                                                                                                     |","lastModifiedDate":"2021-09-29"},{"lineNumber":186,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":187,"author":{"gitId":"rohit0718"},"content":"### Command Summary by Object","lastModifiedDate":"2021-09-29"},{"lineNumber":188,"author":{"gitId":"rohit0718"},"content":"| Object | Action | Format, Examples                                                                                                         |","lastModifiedDate":"2021-09-29"},{"lineNumber":189,"author":{"gitId":"rohit0718"},"content":"|--------|--------|--------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2021-09-29"},{"lineNumber":190,"author":{"gitId":"rohit0718"},"content":"| Module | Add    | `add mod c/CODE [n/NAME]`                                                                                                  |","lastModifiedDate":"2021-09-29"},{"lineNumber":191,"author":{"gitId":"rohit0718"},"content":"|        | Detail | `detail c/CODE`                                                                                                            |","lastModifiedDate":"2021-09-29"},{"lineNumber":192,"author":{"gitId":"rohit0718"},"content":"|        | List   | `list mod`                                                                                                                 |","lastModifiedDate":"2021-09-29"},{"lineNumber":193,"author":{"gitId":"rohit0718"},"content":"|        | Edit   | `edit mod INDEX [c/NEW_CODE] [n/NEW_NAME]`                                                                                 |","lastModifiedDate":"2021-09-29"},{"lineNumber":194,"author":{"gitId":"rohit0718"},"content":"|        | Delete | `delete mod INDEX`                                                                                                         |","lastModifiedDate":"2021-09-29"},{"lineNumber":195,"author":{"gitId":"rohit0718"},"content":"| Lesson | Add    | `add lesson c/CODE n/NAME d/DAY_OF_WEEK s/START_TIME e/END_TIME [l/LINK] [v/VENUE]`                                        |","lastModifiedDate":"2021-09-29"},{"lineNumber":196,"author":{"gitId":"rohit0718"},"content":"|        | List   | `list lesson`                                                                                                              |","lastModifiedDate":"2021-09-29"},{"lineNumber":197,"author":{"gitId":"rohit0718"},"content":"|        | Edit   | `edit lesson INDEX c/CODE [n/NEW_NAME] [d/NEW_DAY_OF_WEEK] [s/NEW_START_TIME] [e/NEW_END_TIME] [l/NEW_LINK] [v/NEW_VENUE]` |","lastModifiedDate":"2021-09-29"},{"lineNumber":198,"author":{"gitId":"rohit0718"},"content":"|        | Delete | `delete lesson INDEX c/CODE`                                                                                               |","lastModifiedDate":"2021-09-29"},{"lineNumber":199,"author":{"gitId":"rohit0718"},"content":"| Exam   | Add    | `add exam c/CODE n/NAME d/DATE s/START_TIME e/END_TIME [l/LINK] [v/VENUE]`                                                 |","lastModifiedDate":"2021-09-29"},{"lineNumber":200,"author":{"gitId":"rohit0718"},"content":"|        | List   | `list exam`                                                                                                                |","lastModifiedDate":"2021-09-29"},{"lineNumber":201,"author":{"gitId":"rohit0718"},"content":"|        | Edit   | `edit exam INDEX c/CODE [n/NEW_NAME] [d/NEW_DATE] [s/NEW_START_TIME] [e/NEW_END_TIME] [l/NEW_LINK] [v/NEW_VENUE]`          |","lastModifiedDate":"2021-09-29"},{"lineNumber":202,"author":{"gitId":"rohit0718"},"content":"|        | Delete | `delete exam INDEX c/CODE`                                                                                                 |","lastModifiedDate":"2021-09-29"},{"lineNumber":203,"author":{"gitId":"rohit0718"},"content":"| Help   |        | `help`                                                                                                                     |","lastModifiedDate":"2021-09-29"},{"lineNumber":204,"author":{"gitId":"rohit0718"},"content":"| Clear  |        | `clear`                                                                                                                    |","lastModifiedDate":"2021-09-29"},{"lineNumber":205,"author":{"gitId":"rohit0718"},"content":"| Exit   |        | `exit`                                                                                                                     |","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"-":21,"rohit0718":184}},{"path":"src/main/java/seedu/address/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class))","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"                    .addSerializer(Path.class, new ToStringSerializer()));","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"luminousleek":2,"-":142}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"    //ModBook Prefixes","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"    public static final Prefix PREFIX_CODE \u003d new Prefix(\"c/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"    public static final Prefix PREFIX_DAY \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"    public static final Prefix PREFIX_START \u003d new Prefix(\"s/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"    public static final Prefix PREFIX_END \u003d new Prefix(\"e/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"    public static final Prefix PREFIX_LINK \u003d new Prefix(\"l/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"    public static final Prefix PREFIX_VENUE \u003d new Prefix(\"v/\");","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"luminousleek":8,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"itzblim"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"bentanjunrong"},"content":"import seedu.address.model.module.Day;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"itzblim"},"content":"import seedu.address.model.module.Link;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"itzblim"},"content":"import seedu.address.model.module.ModBookDate;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.ModBookTime;","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"import seedu.address.model.module.ModuleCode;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"import seedu.address.model.module.ModuleName;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.Timeslot;","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"itzblim"},"content":"import seedu.address.model.module.Venue;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"itzblim"},"content":"import seedu.address.model.module.exam.Exam;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"itzblim"},"content":"import seedu.address.model.module.exam.ExamName;","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"bentanjunrong"},"content":"import seedu.address.model.module.lesson.Lesson;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"bentanjunrong"},"content":"import seedu.address.model.module.lesson.LessonName;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"bentanjunrong"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":139,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":140,"author":{"gitId":"SHEZADHASSAN22"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":141,"author":{"gitId":"SHEZADHASSAN22"},"content":"     * Parses a {@code String link} into a {@code Link}","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"SHEZADHASSAN22"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-06"},{"lineNumber":143,"author":{"gitId":"SHEZADHASSAN22"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"SHEZADHASSAN22"},"content":"     * @throws ParseException if the given {@code link} is invalid.","lastModifiedDate":"2021-10-06"},{"lineNumber":145,"author":{"gitId":"SHEZADHASSAN22"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"SHEZADHASSAN22"},"content":"    public static Link parseLink(String link) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"SHEZADHASSAN22"},"content":"        requireNonNull(link);","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"SHEZADHASSAN22"},"content":"        String trimmedLink \u003d link.trim();","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"SHEZADHASSAN22"},"content":"        if (!Link.isValidLink(trimmedLink)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"SHEZADHASSAN22"},"content":"            throw new ParseException(Link.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"SHEZADHASSAN22"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":152,"author":{"gitId":"SHEZADHASSAN22"},"content":"        return new Link(trimmedLink);","lastModifiedDate":"2021-10-06"},{"lineNumber":153,"author":{"gitId":"SHEZADHASSAN22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":155,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":156,"author":{"gitId":"luminousleek"},"content":"     * Parses a {@code String time} into a {@code ModBookTime}","lastModifiedDate":"2021-10-04"},{"lineNumber":157,"author":{"gitId":"luminousleek"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-04"},{"lineNumber":158,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":159,"author":{"gitId":"luminousleek"},"content":"     * @throws ParseException if the given {@code time} is invalid.","lastModifiedDate":"2021-10-04"},{"lineNumber":160,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":161,"author":{"gitId":"luminousleek"},"content":"    public static ModBookTime parseTime(String time) throws ParseException {","lastModifiedDate":"2021-10-04"},{"lineNumber":162,"author":{"gitId":"luminousleek"},"content":"        requireNonNull(time);","lastModifiedDate":"2021-10-04"},{"lineNumber":163,"author":{"gitId":"luminousleek"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2021-10-04"},{"lineNumber":164,"author":{"gitId":"luminousleek"},"content":"        if (!ModBookTime.isValidTime(trimmedTime)) {","lastModifiedDate":"2021-10-04"},{"lineNumber":165,"author":{"gitId":"luminousleek"},"content":"            throw new ParseException(ModBookTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-04"},{"lineNumber":166,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":167,"author":{"gitId":"luminousleek"},"content":"        return new ModBookTime(trimmedTime);","lastModifiedDate":"2021-10-04"},{"lineNumber":168,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":169,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":170,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":171,"author":{"gitId":"luminousleek"},"content":"     * Parses a {@code String startTime} and {@code String endTime} into a {@code Timeslot}","lastModifiedDate":"2021-10-04"},{"lineNumber":172,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":173,"author":{"gitId":"luminousleek"},"content":"     * @throws ParseException if the given startTime and endTime are invalid.","lastModifiedDate":"2021-10-04"},{"lineNumber":174,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":175,"author":{"gitId":"luminousleek"},"content":"    public static Timeslot parseTimeslot(String startTime, String endTime) throws ParseException {","lastModifiedDate":"2021-10-04"},{"lineNumber":176,"author":{"gitId":"luminousleek"},"content":"        ModBookTime start \u003d parseTime(startTime);","lastModifiedDate":"2021-10-04"},{"lineNumber":177,"author":{"gitId":"luminousleek"},"content":"        ModBookTime end \u003d parseTime(endTime);","lastModifiedDate":"2021-10-04"},{"lineNumber":178,"author":{"gitId":"luminousleek"},"content":"        if (!Timeslot.isValidTimeslot(start, end)) {","lastModifiedDate":"2021-10-04"},{"lineNumber":179,"author":{"gitId":"luminousleek"},"content":"            throw new ParseException(Timeslot.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-04"},{"lineNumber":180,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":181,"author":{"gitId":"luminousleek"},"content":"        return new Timeslot(start, end);","lastModifiedDate":"2021-10-04"},{"lineNumber":182,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":183,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":184,"author":{"gitId":"itzblim"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":185,"author":{"gitId":"itzblim"},"content":"     * Parses a {@code String date} into a {@code ModBookDate}","lastModifiedDate":"2021-10-06"},{"lineNumber":186,"author":{"gitId":"itzblim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-06"},{"lineNumber":187,"author":{"gitId":"itzblim"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":188,"author":{"gitId":"itzblim"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2021-10-06"},{"lineNumber":189,"author":{"gitId":"itzblim"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":190,"author":{"gitId":"itzblim"},"content":"    public static ModBookDate parseDate(String date) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":191,"author":{"gitId":"itzblim"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-10-06"},{"lineNumber":192,"author":{"gitId":"itzblim"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2021-10-06"},{"lineNumber":193,"author":{"gitId":"itzblim"},"content":"        if (!ModBookDate.isValidDate(trimmedDate)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":194,"author":{"gitId":"itzblim"},"content":"            throw new ParseException(ModBookDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":195,"author":{"gitId":"itzblim"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":196,"author":{"gitId":"itzblim"},"content":"        return new ModBookDate(trimmedDate);","lastModifiedDate":"2021-10-06"},{"lineNumber":197,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":198,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":199,"author":{"gitId":"itzblim"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":200,"author":{"gitId":"itzblim"},"content":"     * Parses a {@code String examName} into a {@code ExamName}.","lastModifiedDate":"2021-10-06"},{"lineNumber":201,"author":{"gitId":"itzblim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-06"},{"lineNumber":202,"author":{"gitId":"itzblim"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":203,"author":{"gitId":"itzblim"},"content":"     * @throws ParseException if the given {@code examName} is invalid.","lastModifiedDate":"2021-10-06"},{"lineNumber":204,"author":{"gitId":"itzblim"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":205,"author":{"gitId":"itzblim"},"content":"    public static ExamName parseExamName(String examName) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":206,"author":{"gitId":"itzblim"},"content":"        requireNonNull(examName);","lastModifiedDate":"2021-10-06"},{"lineNumber":207,"author":{"gitId":"itzblim"},"content":"        String trimmedExamName \u003d examName.trim();","lastModifiedDate":"2021-10-06"},{"lineNumber":208,"author":{"gitId":"itzblim"},"content":"        if (!ExamName.isValidExamName(trimmedExamName)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":209,"author":{"gitId":"itzblim"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":210,"author":{"gitId":"itzblim"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":211,"author":{"gitId":"itzblim"},"content":"        return new ExamName(trimmedExamName);","lastModifiedDate":"2021-10-06"},{"lineNumber":212,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":213,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":214,"author":{"gitId":"itzblim"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":215,"author":{"gitId":"itzblim"},"content":"     * Parses a {@code String venueName} into a {@code Venue}.","lastModifiedDate":"2021-10-06"},{"lineNumber":216,"author":{"gitId":"itzblim"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-06"},{"lineNumber":217,"author":{"gitId":"itzblim"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":218,"author":{"gitId":"itzblim"},"content":"     * @throws ParseException if the given {@code venueName} is invalid.","lastModifiedDate":"2021-10-06"},{"lineNumber":219,"author":{"gitId":"itzblim"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":220,"author":{"gitId":"itzblim"},"content":"    public static Venue parseVenue(String venueName) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":221,"author":{"gitId":"itzblim"},"content":"        requireNonNull(venueName);","lastModifiedDate":"2021-10-06"},{"lineNumber":222,"author":{"gitId":"itzblim"},"content":"        String trimmedVenueName \u003d venueName.trim();","lastModifiedDate":"2021-10-06"},{"lineNumber":223,"author":{"gitId":"luminousleek"},"content":"        if (!Venue.isValidVenue(trimmedVenueName)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":224,"author":{"gitId":"itzblim"},"content":"            throw new ParseException(Venue.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":225,"author":{"gitId":"itzblim"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":226,"author":{"gitId":"itzblim"},"content":"        return new Venue(trimmedVenueName);","lastModifiedDate":"2021-10-06"},{"lineNumber":227,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":228,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":229,"author":{"gitId":"itzblim"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":230,"author":{"gitId":"itzblim"},"content":"     * Parses a {@code String name}, {@code String date}, {@code String startTime}, {@code String endTime},","lastModifiedDate":"2021-10-06"},{"lineNumber":231,"author":{"gitId":"bentanjunrong"},"content":"     * {@code Optional\u003cString\u003e venueName}, {@code Optional\u003cString\u003e linkString} into an {@code Exam}","lastModifiedDate":"2021-10-07"},{"lineNumber":232,"author":{"gitId":"itzblim"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":233,"author":{"gitId":"itzblim"},"content":"     * @throws ParseException if any of the data strings are invalid.","lastModifiedDate":"2021-10-06"},{"lineNumber":234,"author":{"gitId":"itzblim"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":235,"author":{"gitId":"itzblim"},"content":"    public static Exam parseExam(String name, String date, String startTime, String endTime,","lastModifiedDate":"2021-10-06"},{"lineNumber":236,"author":{"gitId":"itzblim"},"content":"                                 Optional\u003cString\u003e venueName, Optional\u003cString\u003e linkString) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":237,"author":{"gitId":"itzblim"},"content":"        ExamName examName \u003d parseExamName(name);","lastModifiedDate":"2021-10-06"},{"lineNumber":238,"author":{"gitId":"itzblim"},"content":"        ModBookDate modBookDate \u003d parseDate(date);","lastModifiedDate":"2021-10-06"},{"lineNumber":239,"author":{"gitId":"itzblim"},"content":"        Timeslot timeslot \u003d parseTimeslot(startTime, endTime);","lastModifiedDate":"2021-10-06"},{"lineNumber":240,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":241,"author":{"gitId":"itzblim"},"content":"        Optional\u003cVenue\u003e venue \u003d venueName.isPresent()","lastModifiedDate":"2021-10-06"},{"lineNumber":242,"author":{"gitId":"itzblim"},"content":"                ? Optional.of(parseVenue(venueName.get()))","lastModifiedDate":"2021-10-06"},{"lineNumber":243,"author":{"gitId":"itzblim"},"content":"                : Optional.empty();","lastModifiedDate":"2021-10-06"},{"lineNumber":244,"author":{"gitId":"itzblim"},"content":"        Optional\u003cLink\u003e link \u003d linkString.isPresent()","lastModifiedDate":"2021-10-06"},{"lineNumber":245,"author":{"gitId":"itzblim"},"content":"                ? Optional.of(parseLink(linkString.get()))","lastModifiedDate":"2021-10-06"},{"lineNumber":246,"author":{"gitId":"itzblim"},"content":"                : Optional.empty();","lastModifiedDate":"2021-10-06"},{"lineNumber":247,"author":{"gitId":"itzblim"},"content":"        return new Exam(examName, modBookDate, timeslot, venue, link);","lastModifiedDate":"2021-10-06"},{"lineNumber":248,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":249,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":250,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":251,"author":{"gitId":"bentanjunrong"},"content":"     * Parses a {@code String lessonName} into a {@code LessonName}.","lastModifiedDate":"2021-10-07"},{"lineNumber":252,"author":{"gitId":"bentanjunrong"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-07"},{"lineNumber":253,"author":{"gitId":"bentanjunrong"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":254,"author":{"gitId":"bentanjunrong"},"content":"     * @throws ParseException if the given {@code lessonName} is invalid.","lastModifiedDate":"2021-10-07"},{"lineNumber":255,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":256,"author":{"gitId":"bentanjunrong"},"content":"    public static LessonName parseLessonName(String lessonName) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":257,"author":{"gitId":"bentanjunrong"},"content":"        requireNonNull(lessonName);","lastModifiedDate":"2021-10-07"},{"lineNumber":258,"author":{"gitId":"bentanjunrong"},"content":"        String trimmedLessonName \u003d lessonName.trim();","lastModifiedDate":"2021-10-07"},{"lineNumber":259,"author":{"gitId":"bentanjunrong"},"content":"        if (!LessonName.isValidLessonName(trimmedLessonName)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":260,"author":{"gitId":"bentanjunrong"},"content":"            throw new ParseException(LessonName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":261,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":262,"author":{"gitId":"bentanjunrong"},"content":"        return new LessonName(trimmedLessonName);","lastModifiedDate":"2021-10-07"},{"lineNumber":263,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":264,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":265,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":266,"author":{"gitId":"bentanjunrong"},"content":"     * Parses a {@code String dayString} into a {@code Day}","lastModifiedDate":"2021-10-07"},{"lineNumber":267,"author":{"gitId":"bentanjunrong"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-07"},{"lineNumber":268,"author":{"gitId":"bentanjunrong"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":269,"author":{"gitId":"bentanjunrong"},"content":"     * @throws ParseException if the given {@code dayString} is invalid.","lastModifiedDate":"2021-10-07"},{"lineNumber":270,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":271,"author":{"gitId":"bentanjunrong"},"content":"    public static Day parseDay(String dayString) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":272,"author":{"gitId":"bentanjunrong"},"content":"        requireNonNull(dayString);","lastModifiedDate":"2021-10-07"},{"lineNumber":273,"author":{"gitId":"bentanjunrong"},"content":"        String trimmedDay \u003d dayString.trim();","lastModifiedDate":"2021-10-07"},{"lineNumber":274,"author":{"gitId":"bentanjunrong"},"content":"        if (!Day.isValidDay(trimmedDay)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":275,"author":{"gitId":"bentanjunrong"},"content":"            throw new ParseException(Day.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":276,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":277,"author":{"gitId":"bentanjunrong"},"content":"        return Day.valueOf(trimmedDay);","lastModifiedDate":"2021-10-07"},{"lineNumber":278,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":279,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":280,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":281,"author":{"gitId":"bentanjunrong"},"content":"     * Parses a {@code String name}, {@code String dayString}, {@code String startTime}, {@code String endTime},","lastModifiedDate":"2021-10-07"},{"lineNumber":282,"author":{"gitId":"bentanjunrong"},"content":"     * {@code Optional\u003cString\u003e venueName}, {@code Optional\u003cString\u003e linkString} into an {@code Lesson}","lastModifiedDate":"2021-10-07"},{"lineNumber":283,"author":{"gitId":"bentanjunrong"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":284,"author":{"gitId":"bentanjunrong"},"content":"     * @throws ParseException if any of the data strings are invalid.","lastModifiedDate":"2021-10-07"},{"lineNumber":285,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":286,"author":{"gitId":"bentanjunrong"},"content":"    public static Lesson parseLesson(String name, String dayString, String startTime, String endTime,","lastModifiedDate":"2021-10-07"},{"lineNumber":287,"author":{"gitId":"bentanjunrong"},"content":"                                     Optional\u003cString\u003e venueName, Optional\u003cString\u003e linkString) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":288,"author":{"gitId":"bentanjunrong"},"content":"        LessonName lessonName \u003d parseLessonName(name);","lastModifiedDate":"2021-10-07"},{"lineNumber":289,"author":{"gitId":"bentanjunrong"},"content":"        Day day \u003d parseDay(dayString.toUpperCase());","lastModifiedDate":"2021-10-08"},{"lineNumber":290,"author":{"gitId":"bentanjunrong"},"content":"        Timeslot timeslot \u003d parseTimeslot(startTime, endTime);","lastModifiedDate":"2021-10-07"},{"lineNumber":291,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":292,"author":{"gitId":"bentanjunrong"},"content":"        Optional\u003cVenue\u003e venue \u003d venueName.isPresent()","lastModifiedDate":"2021-10-07"},{"lineNumber":293,"author":{"gitId":"bentanjunrong"},"content":"                ? Optional.of(parseVenue(venueName.get()))","lastModifiedDate":"2021-10-07"},{"lineNumber":294,"author":{"gitId":"bentanjunrong"},"content":"                : Optional.empty();","lastModifiedDate":"2021-10-07"},{"lineNumber":295,"author":{"gitId":"bentanjunrong"},"content":"        Optional\u003cLink\u003e link \u003d linkString.isPresent()","lastModifiedDate":"2021-10-07"},{"lineNumber":296,"author":{"gitId":"bentanjunrong"},"content":"                ? Optional.of(parseLink(linkString.get()))","lastModifiedDate":"2021-10-07"},{"lineNumber":297,"author":{"gitId":"bentanjunrong"},"content":"                : Optional.empty();","lastModifiedDate":"2021-10-07"},{"lineNumber":298,"author":{"gitId":"bentanjunrong"},"content":"        return new Lesson(lessonName, day, timeslot, venue, link);","lastModifiedDate":"2021-10-07"},{"lineNumber":299,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":300,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":301,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":302,"author":{"gitId":"rohit0718"},"content":"     * Parses a {@code String moduleCode} into a {@code ModuleCode}.","lastModifiedDate":"2021-10-08"},{"lineNumber":303,"author":{"gitId":"rohit0718"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-08"},{"lineNumber":304,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":305,"author":{"gitId":"rohit0718"},"content":"     * @throws ParseException if the given {@code moduleCode} is invalid.","lastModifiedDate":"2021-10-08"},{"lineNumber":306,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":307,"author":{"gitId":"rohit0718"},"content":"    public static ModuleCode parseModuleCode(String moduleCode) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":308,"author":{"gitId":"rohit0718"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2021-10-08"},{"lineNumber":309,"author":{"gitId":"rohit0718"},"content":"        String trimmedModuleCode \u003d moduleCode.trim();","lastModifiedDate":"2021-10-08"},{"lineNumber":310,"author":{"gitId":"rohit0718"},"content":"        if (!ModuleCode.isValidModuleCode(trimmedModuleCode)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":311,"author":{"gitId":"rohit0718"},"content":"            throw new ParseException(ModuleCode.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":312,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":313,"author":{"gitId":"rohit0718"},"content":"        return new ModuleCode(trimmedModuleCode);","lastModifiedDate":"2021-10-08"},{"lineNumber":314,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":315,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":316,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":317,"author":{"gitId":"rohit0718"},"content":"     * Parses a {@code String moduleName} into a {@code ModuleName}.","lastModifiedDate":"2021-10-08"},{"lineNumber":318,"author":{"gitId":"rohit0718"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-08"},{"lineNumber":319,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":320,"author":{"gitId":"rohit0718"},"content":"     * @throws ParseException if the given {@code moduleName} is invalid.","lastModifiedDate":"2021-10-08"},{"lineNumber":321,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":322,"author":{"gitId":"rohit0718"},"content":"    public static ModuleName parseModuleName(String moduleName) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":323,"author":{"gitId":"rohit0718"},"content":"        requireNonNull(moduleName);","lastModifiedDate":"2021-10-08"},{"lineNumber":324,"author":{"gitId":"rohit0718"},"content":"        String trimmedModuleName \u003d moduleName.trim();","lastModifiedDate":"2021-10-08"},{"lineNumber":325,"author":{"gitId":"rohit0718"},"content":"        if (!ModuleName.isValidModuleName(trimmedModuleName)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":326,"author":{"gitId":"rohit0718"},"content":"            throw new ParseException(ModuleName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":327,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":328,"author":{"gitId":"rohit0718"},"content":"        return new ModuleName(trimmedModuleName);","lastModifiedDate":"2021-10-08"},{"lineNumber":329,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":330,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":331,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":332,"author":{"gitId":"rohit0718"},"content":"     * Parses a {@code String code} and a {@code Optional\u003cString\u003e name} into a {@code Module}.","lastModifiedDate":"2021-10-08"},{"lineNumber":333,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":334,"author":{"gitId":"rohit0718"},"content":"     * @throws ParseException if any of the data strings are invalid.","lastModifiedDate":"2021-10-08"},{"lineNumber":335,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":336,"author":{"gitId":"rohit0718"},"content":"    public static Module parseModule(String code, Optional\u003cString\u003e name) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":337,"author":{"gitId":"rohit0718"},"content":"        ModuleCode moduleCode \u003d parseModuleCode(code);","lastModifiedDate":"2021-10-08"},{"lineNumber":338,"author":{"gitId":"rohit0718"},"content":"        Optional\u003cModuleName\u003e moduleName \u003d name.isPresent()","lastModifiedDate":"2021-10-08"},{"lineNumber":339,"author":{"gitId":"rohit0718"},"content":"                ? Optional.of(parseModuleName(name.get()))","lastModifiedDate":"2021-10-08"},{"lineNumber":340,"author":{"gitId":"rohit0718"},"content":"                : Optional.empty();","lastModifiedDate":"2021-10-08"},{"lineNumber":341,"author":{"gitId":"rohit0718"},"content":"        return new Module(moduleCode, moduleName);","lastModifiedDate":"2021-10-08"},{"lineNumber":342,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"luminousleek":32,"SHEZADHASSAN22":15,"itzblim":70,"bentanjunrong":55,"-":124,"rohit0718":47}},{"path":"src/main/java/seedu/address/model/module/Day.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bentanjunrong"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"bentanjunrong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"bentanjunrong"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"bentanjunrong"},"content":"public enum Day {","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"bentanjunrong"},"content":"    MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"bentanjunrong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"bentanjunrong"},"content":"            \"Day should be entered as day of the week e.g. Monday, Tuesday, etc.\";","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"bentanjunrong"},"content":"     * Returns true if a given string is a valid Day.","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"bentanjunrong"},"content":"    public static boolean isValidDay(String dayString) {","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"bentanjunrong"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"bentanjunrong"},"content":"            Day.valueOf(dayString.toUpperCase());","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"bentanjunrong"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"bentanjunrong"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"bentanjunrong"},"content":"            return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"bentanjunrong"},"content":"    public static int getTodayIntValue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"bentanjunrong"},"content":"        return Math.floorMod(LocalDate.now().getDayOfWeek().getValue() - 1, 7);","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"bentanjunrong"},"content":"    public boolean isToday() {","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"bentanjunrong"},"content":"        return this.ordinal() \u003d\u003d getTodayIntValue();","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"bentanjunrong"},"content":"    public static class DayComparator implements Comparator\u003cDay\u003e {","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"bentanjunrong"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"bentanjunrong"},"content":"        public int compare(Day day, Day dayTwo) {","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"bentanjunrong"},"content":"            // get day of week, shift DayOfWeek by 1 so that Monday is 0 and Sunday is 6.","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"bentanjunrong"},"content":"            int currentDay \u003d getTodayIntValue();","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"bentanjunrong"},"content":"            // get ordinal values of Day enums, shift by currentDay","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"bentanjunrong"},"content":"            int dayNum \u003d Math.floorMod(day.ordinal() - currentDay, 7);","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"bentanjunrong"},"content":"            int dayTwoNum \u003d Math.floorMod(dayTwo.ordinal() - currentDay, 7);","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"bentanjunrong"},"content":"            // compare both day values","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"bentanjunrong"},"content":"            return dayNum - dayTwoNum;","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"bentanjunrong"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"bentanjunrong":46}},{"path":"src/main/java/seedu/address/model/module/Link.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SHEZADHASSAN22"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-10-02"},{"lineNumber":2,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":3,"author":{"gitId":"SHEZADHASSAN22"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-02"},{"lineNumber":4,"author":{"gitId":"SHEZADHASSAN22"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-02"},{"lineNumber":5,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":6,"author":{"gitId":"SHEZADHASSAN22"},"content":"/**","lastModifiedDate":"2021-10-02"},{"lineNumber":7,"author":{"gitId":"SHEZADHASSAN22"},"content":" * Represents a link in the ModBook.","lastModifiedDate":"2021-10-02"},{"lineNumber":8,"author":{"gitId":"SHEZADHASSAN22"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLink(String)}","lastModifiedDate":"2021-10-02"},{"lineNumber":9,"author":{"gitId":"SHEZADHASSAN22"},"content":" */","lastModifiedDate":"2021-10-02"},{"lineNumber":10,"author":{"gitId":"SHEZADHASSAN22"},"content":"public class Link {","lastModifiedDate":"2021-10-02"},{"lineNumber":11,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":12,"author":{"gitId":"SHEZADHASSAN22"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Link can take any values, and it should not be blank\";","lastModifiedDate":"2021-10-02"},{"lineNumber":13,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":14,"author":{"gitId":"SHEZADHASSAN22"},"content":"    /*","lastModifiedDate":"2021-10-02"},{"lineNumber":15,"author":{"gitId":"SHEZADHASSAN22"},"content":"     * The first character of the link must not be a whitespace,","lastModifiedDate":"2021-10-02"},{"lineNumber":16,"author":{"gitId":"SHEZADHASSAN22"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-02"},{"lineNumber":17,"author":{"gitId":"SHEZADHASSAN22"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":18,"author":{"gitId":"SHEZADHASSAN22"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-10-02"},{"lineNumber":19,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":20,"author":{"gitId":"SHEZADHASSAN22"},"content":"    public final String link;","lastModifiedDate":"2021-10-02"},{"lineNumber":21,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":22,"author":{"gitId":"SHEZADHASSAN22"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":23,"author":{"gitId":"SHEZADHASSAN22"},"content":"     * Constructs a {@code Link}.","lastModifiedDate":"2021-10-02"},{"lineNumber":24,"author":{"gitId":"SHEZADHASSAN22"},"content":"     *","lastModifiedDate":"2021-10-02"},{"lineNumber":25,"author":{"gitId":"SHEZADHASSAN22"},"content":"     * @param link A link.","lastModifiedDate":"2021-10-02"},{"lineNumber":26,"author":{"gitId":"SHEZADHASSAN22"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":27,"author":{"gitId":"SHEZADHASSAN22"},"content":"    public Link(String link) {","lastModifiedDate":"2021-10-02"},{"lineNumber":28,"author":{"gitId":"SHEZADHASSAN22"},"content":"        requireNonNull(link);","lastModifiedDate":"2021-10-02"},{"lineNumber":29,"author":{"gitId":"SHEZADHASSAN22"},"content":"        checkArgument(isValidLink(link), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-02"},{"lineNumber":30,"author":{"gitId":"SHEZADHASSAN22"},"content":"        this.link \u003d link;","lastModifiedDate":"2021-10-02"},{"lineNumber":31,"author":{"gitId":"SHEZADHASSAN22"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":32,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":33,"author":{"gitId":"SHEZADHASSAN22"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":34,"author":{"gitId":"SHEZADHASSAN22"},"content":"     * Returns true if a given string is a valid link.","lastModifiedDate":"2021-10-02"},{"lineNumber":35,"author":{"gitId":"SHEZADHASSAN22"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":36,"author":{"gitId":"SHEZADHASSAN22"},"content":"    public static boolean isValidLink(String test) {","lastModifiedDate":"2021-10-02"},{"lineNumber":37,"author":{"gitId":"SHEZADHASSAN22"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-02"},{"lineNumber":38,"author":{"gitId":"SHEZADHASSAN22"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":39,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":40,"author":{"gitId":"SHEZADHASSAN22"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":41,"author":{"gitId":"SHEZADHASSAN22"},"content":"    public String toString() {","lastModifiedDate":"2021-10-02"},{"lineNumber":42,"author":{"gitId":"SHEZADHASSAN22"},"content":"        return this.link;","lastModifiedDate":"2021-10-02"},{"lineNumber":43,"author":{"gitId":"SHEZADHASSAN22"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":44,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":45,"author":{"gitId":"SHEZADHASSAN22"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":46,"author":{"gitId":"SHEZADHASSAN22"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-02"},{"lineNumber":47,"author":{"gitId":"SHEZADHASSAN22"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-02"},{"lineNumber":48,"author":{"gitId":"SHEZADHASSAN22"},"content":"                || (other instanceof Link // instanceof handles nulls","lastModifiedDate":"2021-10-02"},{"lineNumber":49,"author":{"gitId":"SHEZADHASSAN22"},"content":"                \u0026\u0026 link.equals(((Link) other).link)); // state check","lastModifiedDate":"2021-10-02"},{"lineNumber":50,"author":{"gitId":"SHEZADHASSAN22"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":51,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":52,"author":{"gitId":"SHEZADHASSAN22"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":53,"author":{"gitId":"SHEZADHASSAN22"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-02"},{"lineNumber":54,"author":{"gitId":"SHEZADHASSAN22"},"content":"        return link.hashCode();","lastModifiedDate":"2021-10-02"},{"lineNumber":55,"author":{"gitId":"SHEZADHASSAN22"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":56,"author":{"gitId":"SHEZADHASSAN22"},"content":"}","lastModifiedDate":"2021-10-02"}],"authorContributionMap":{"SHEZADHASSAN22":56}},{"path":"src/main/java/seedu/address/model/module/ModBookDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"itzblim"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"itzblim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"itzblim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"itzblim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"itzblim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"itzblim"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"itzblim"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"itzblim"},"content":" * Represents a date in the ModBook.","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"itzblim"},"content":" * Guarantees: immutable.","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"itzblim"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"itzblim"},"content":"public class ModBookDate implements Comparable\u003cModBookDate\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"itzblim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"itzblim"},"content":"            \"Dates should be in the format of dd/MM/yyyy\";","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"itzblim"},"content":"    public static final DateTimeFormatter PARSE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"itzblim"},"content":"    public static final DateTimeFormatter PRINT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"itzblim"},"content":"    public final LocalDate date;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"itzblim"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"itzblim"},"content":"     * Constructs a {@code ModBookDate}","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"itzblim"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"itzblim"},"content":"     * @param date the string representing date of the ModBookDate","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"itzblim"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"itzblim"},"content":"    public ModBookDate(String date) {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"itzblim"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"itzblim"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"itzblim"},"content":"        this.date \u003d LocalDate.parse(date, PARSE_FORMATTER);","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"itzblim"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"itzblim"},"content":"     * Returns true if a given string is a valid date","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"itzblim"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"itzblim"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"itzblim"},"content":"        requireNonNull(test);","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"itzblim"},"content":"        try {","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"itzblim"},"content":"            LocalDate.parse(test, PARSE_FORMATTER);","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"itzblim"},"content":"            return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"itzblim"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"itzblim"},"content":"            return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"itzblim"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"itzblim"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"itzblim"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"itzblim"},"content":"        return date.format(PRINT_FORMATTER);","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"itzblim"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"itzblim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"itzblim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"itzblim"},"content":"                || (other instanceof ModBookDate // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"itzblim"},"content":"                \u0026\u0026 date.equals(((ModBookDate) other).date)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"itzblim"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"itzblim"},"content":"     * Compares between two ModBookDate objects.","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"itzblim"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"itzblim"},"content":"     * @param otherDate the ModBookDate to compare with","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"itzblim"},"content":"     * @return a negative integer, zero or a positive integer as this ModBookDate is before, at the same date","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"itzblim"},"content":"     *         or after the given ModBookDate respectively.","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"itzblim"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"itzblim"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"itzblim"},"content":"    public int compareTo(ModBookDate otherDate) {","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"itzblim"},"content":"        return date.compareTo(otherDate.date);","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"itzblim"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"itzblim"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"itzblim"},"content":"        return date.hashCode();","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"itzblim"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"itzblim":73}},{"path":"src/main/java/seedu/address/model/module/ModBookTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":" * Represents a time in the ModBook.","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":" * Guarantees: immutable.","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"public class ModBookTime implements Comparable\u003cModBookTime\u003e {","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"            \"Times should be in the format of hh:mm in 24 hour time\";","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"    public static final DateTimeFormatter PARSE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"    public static final DateTimeFormatter PRINT_FORMATTER \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"    public final LocalTime time;","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"     * Constructs a {@code ModBookTime}","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"     * @param time the string representing time of the ModBookTime","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"    public ModBookTime(String time) {","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"        requireNonNull(time);","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"        checkArgument(isValidTime(time), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"        this.time \u003d LocalTime.parse(time, PARSE_FORMATTER);","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"     * Returns true if a given string is a valid time","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"    public static boolean isValidTime(String test) {","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"        requireNonNull(test);","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"        try {","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"            LocalTime.parse(test, PARSE_FORMATTER);","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"            return true;","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"            return false;","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"bentanjunrong"},"content":"     * Returns true if the ModBookTime is before the current time.","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"bentanjunrong"},"content":"    public boolean beforeNow() {","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"bentanjunrong"},"content":"        return time.compareTo((LocalTime.now())) \u003c 0;","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"    public String toString() {","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"        return time.format(PRINT_FORMATTER);","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"luminousleek"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"luminousleek"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"luminousleek"},"content":"                || (other instanceof ModBookTime // instanceof handles nulls","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"                \u0026\u0026 time.equals(((ModBookTime) other).time)); // state check","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"luminousleek"},"content":"     * Compares between two ModBookTime objects.","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"luminousleek"},"content":"     * @param other the ModBookTime to compare with","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"luminousleek"},"content":"     * @return a negative integer, zero or a positive integer as this ModBookTime is before, at the same time","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"     * or after the given ModBookTime respectively.","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"luminousleek"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"luminousleek"},"content":"    public int compareTo(ModBookTime other) {","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"luminousleek"},"content":"        return time.compareTo(other.time);","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"luminousleek"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"luminousleek"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"luminousleek"},"content":"        return time.hashCode();","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":80,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"luminousleek":73,"bentanjunrong":7}},{"path":"src/main/java/seedu/address/model/module/Module.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"import seedu.address.model.module.exam.Exam;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"import seedu.address.model.module.lesson.Lesson;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":" * Represents a Module in the ModBook.","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":" * Guarantees: immutable.","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"public class Module {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"    private final ModuleCode moduleCode;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"    private final Optional\u003cModuleName\u003e moduleName;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"rohit0718"},"content":"    private final List\u003cLesson\u003e lessons;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"rohit0718"},"content":"    private final List\u003cExam\u003e exams;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"rohit0718"},"content":"     * Constructs a {@code Module}","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"rohit0718"},"content":"     * @param moduleCode Code of module","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"rohit0718"},"content":"     * @param moduleName Optional name of Module","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"rohit0718"},"content":"    public Module(ModuleCode moduleCode, Optional\u003cModuleName\u003e moduleName) {","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"rohit0718"},"content":"        requireAllNonNull(moduleCode, moduleName);","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"rohit0718"},"content":"        this.moduleCode \u003d moduleCode;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"rohit0718"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"rohit0718"},"content":"        this.lessons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"rohit0718"},"content":"        this.exams \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"rohit0718"},"content":"    public ModuleCode getCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"rohit0718"},"content":"        return moduleCode;","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"rohit0718"},"content":"    public Optional\u003cModuleName\u003e getName() {","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"rohit0718"},"content":"        return moduleName;","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"rohit0718"},"content":"    public List\u003cLesson\u003e getLessons() {","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"rohit0718"},"content":"        return lessons;","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"rohit0718"},"content":"    public List\u003cExam\u003e getExams() {","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"rohit0718"},"content":"        return exams;","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"rohit0718"},"content":"     * Returns true if both modules have the same code.","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"rohit0718"},"content":"     * This defines a weaker notion of equality between two modules.","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"rohit0718"},"content":"    public boolean isSameModule(Module otherModule) {","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"rohit0718"},"content":"        return otherModule !\u003d null \u0026\u0026 moduleCode.equals(otherModule.getCode());","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"rohit0718"},"content":"     * Returns true if both modules have the same identity and attributes.","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"rohit0718"},"content":"     * This defines a stronger notion of equality between two modules.","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"rohit0718"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"rohit0718"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"rohit0718"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"rohit0718"},"content":"            return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"rohit0718"},"content":"        if (!(other instanceof Module)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"rohit0718"},"content":"            return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"rohit0718"},"content":"        Module otherModule \u003d (Module) other;","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"rohit0718"},"content":"        return isSameModule(otherModule)","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"rohit0718"},"content":"                \u0026\u0026 moduleName.equals(otherModule.getName())","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"rohit0718"},"content":"                \u0026\u0026 lessons.equals(otherModule.getLessons())","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"rohit0718"},"content":"                \u0026\u0026 exams.equals(otherModule.getExams());","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"rohit0718"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"rohit0718"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"rohit0718"},"content":"        return Objects.hash(moduleCode, moduleName, lessons, exams);","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"rohit0718"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"rohit0718"},"content":"    public String toString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"rohit0718"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"rohit0718"},"content":"        builder.append(getCode());","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"rohit0718"},"content":"        moduleName.ifPresent(name -\u003e builder.append(String.format(\"; Name: %s\", name)));","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"rohit0718"},"content":"        if (!lessons.isEmpty()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"rohit0718"},"content":"            builder.append(\"; Lessons: \");","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"rohit0718"},"content":"            lessons.forEach(lesson -\u003e builder.append(String.format(\"[%s]\", lesson)));","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"rohit0718"},"content":"        if (!exams.isEmpty()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"rohit0718"},"content":"            builder.append(\"; Exams: \");","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"rohit0718"},"content":"            exams.forEach(exam -\u003e builder.append(String.format(\"[%s]\", exam)));","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"rohit0718"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"rohit0718"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"rohit0718":100}},{"path":"src/main/java/seedu/address/model/module/ModuleCode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":" * Represents the code of a Module in the ModBook.","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidModuleCode(String)}","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"public class ModuleCode {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"     * \"Each module of study has a unique module code consisting of a two‐ or three‐letter prefix","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"     * that denotes the discipline, and four digits, the first of which indicates the level of","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"     * the module (e.g., 1000 indicates a Level 1 module and 2000, a Level 2 module).\"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"     * There is also an optional last character representing the course of study.","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"     * Reference: https://www.nus.edu.sg/registrar/academic-information-policies/non-graduating/modular-system","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"    public static final String VALIDATION_REGEX \u003d \"^([a-zA-Z]{2,3}[0-9]{4}[a-zA-Z]?)$\";","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"rohit0718"},"content":"            \"Module Code must have a two or three letter prefix that denotes disciple, four digits \"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"rohit0718"},"content":"                    + \"which represents the level of the module, and an optional last character that \"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"rohit0718"},"content":"                    + \"represents the course of study.\";","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"rohit0718"},"content":"    public final String moduleCode;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"rohit0718"},"content":"     * Constructs a {@code ModuleCode}.","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"rohit0718"},"content":"     * @param moduleCode A valid module code.","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"rohit0718"},"content":"    public ModuleCode(String moduleCode) {","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"rohit0718"},"content":"        requireNonNull(moduleCode);","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"rohit0718"},"content":"        checkArgument(isValidModuleCode(moduleCode), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"rohit0718"},"content":"        this.moduleCode \u003d moduleCode.toUpperCase();","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"rohit0718"},"content":"     * Returns true if a given string is a valid code.","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"rohit0718"},"content":"     * @param test A string to test for validity.","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"rohit0718"},"content":"    public static boolean isValidModuleCode(String test) {","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"rohit0718"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"rohit0718"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"rohit0718"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"rohit0718"},"content":"        return moduleCode;","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"rohit0718"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"rohit0718"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"rohit0718"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"rohit0718"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"rohit0718"},"content":"        if (!(other instanceof ModuleCode)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"rohit0718"},"content":"            return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"rohit0718"},"content":"        return this.moduleCode.equals(((ModuleCode) other).moduleCode);","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"rohit0718"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"rohit0718"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"rohit0718"},"content":"        return moduleCode.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"rohit0718"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"rohit0718":65}},{"path":"src/main/java/seedu/address/model/module/ModuleName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":" * Represents the name of a Module in the ModBook.","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidModuleName(String)}","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"public class ModuleName {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"     * The first character of the module must not be a whitespace.","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\S.*$\";","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"            \"Module name should not be blank\";","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"    public final String moduleName;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"rohit0718"},"content":"     * Constructs an {@code ModuleName}.","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"rohit0718"},"content":"     * @param moduleName A valid module name.","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"rohit0718"},"content":"    public ModuleName(String moduleName) {","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"rohit0718"},"content":"        requireNonNull(moduleName);","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"rohit0718"},"content":"        checkArgument(isValidModuleName(moduleName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"rohit0718"},"content":"        this.moduleName \u003d moduleName;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"rohit0718"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"rohit0718"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"rohit0718"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"rohit0718"},"content":"     * @param test A string to test for validity.","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"rohit0718"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"rohit0718"},"content":"    public static boolean isValidModuleName(String test) {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"rohit0718"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"rohit0718"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"rohit0718"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"rohit0718"},"content":"        return moduleName;","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"rohit0718"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"rohit0718"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"rohit0718"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"rohit0718"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"rohit0718"},"content":"        if (!(other instanceof ModuleName)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"rohit0718"},"content":"            return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"rohit0718"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"rohit0718"},"content":"        return this.moduleName.equals(((ModuleName) other).moduleName);","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"rohit0718"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"rohit0718"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"rohit0718"},"content":"        return moduleName.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"rohit0718"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"rohit0718":59}},{"path":"src/main/java/seedu/address/model/module/Timeslot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":" * Represents a timeslot in the ModBook.","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":" * Guarantees: immutable.","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"public class Timeslot implements Comparable\u003cTimeslot\u003e {","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"            \"Start time of the Timeslot should be before the end time\";","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"    public static final String SEPARATOR \u003d \" - \";","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"    public final ModBookTime startTime;","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"    public final ModBookTime endTime;","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"     * Constructs a {@code Timeslot}","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"     * @param startTime the starting time of the timeslot","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"     * @param endTime   the ending time of the timeslot","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"    public Timeslot(ModBookTime startTime, ModBookTime endTime) {","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"        requireAllNonNull(startTime, endTime);","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"        checkArgument(isValidTimeslot(startTime, endTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"     * Returns true if the given startTime is before the given endTime.","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"    public static boolean isValidTimeslot(ModBookTime startTime, ModBookTime endTime) {","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"        requireAllNonNull(startTime, endTime);","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"        return startTime.compareTo(endTime) \u003c 0;","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"bentanjunrong"},"content":"     * Returns true if the end time of this Timeslot is before the current time, i.e. lesson has finished.","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"bentanjunrong"},"content":"    public boolean hasFinished() {","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"bentanjunrong"},"content":"        return endTime.beforeNow();","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"    public String toString() {","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"        return startTime + SEPARATOR + endTime;","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"                || (other instanceof Timeslot // instanceof handles nulls","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":"                \u0026\u0026 startTime.equals(((Timeslot) other).startTime)","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"                \u0026\u0026 endTime.equals(((Timeslot) other).endTime)); // state check","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"luminousleek"},"content":"     * Compares between two Timeslot objects.","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"     * Will compare based on startTime - i.e. earlier startTime will be ordered first.","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"     * If startTimes are the same, will compare based on endTime.","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"luminousleek"},"content":"     * @param other the Timeslot to compare with","lastModifiedDate":"2021-10-04"},{"lineNumber":65,"author":{"gitId":"luminousleek"},"content":"     * @return a negative integer, zero or a positive integer as this Timeslot is before, at the same starting time","lastModifiedDate":"2021-10-04"},{"lineNumber":66,"author":{"gitId":"luminousleek"},"content":"     * or after the given Timeslot respectively.","lastModifiedDate":"2021-10-04"},{"lineNumber":67,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":68,"author":{"gitId":"luminousleek"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"    public int compareTo(Timeslot other) {","lastModifiedDate":"2021-10-04"},{"lineNumber":70,"author":{"gitId":"luminousleek"},"content":"        int startOrder \u003d startTime.compareTo(other.startTime);","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"luminousleek"},"content":"        if (startOrder \u003d\u003d 0) {","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"luminousleek"},"content":"            return endTime.compareTo(other.endTime);","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"luminousleek"},"content":"        return startOrder;","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"luminousleek"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":78,"author":{"gitId":"luminousleek"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-04"},{"lineNumber":79,"author":{"gitId":"luminousleek"},"content":"        return startTime.hashCode() + endTime.hashCode();","lastModifiedDate":"2021-10-04"},{"lineNumber":80,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":81,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"luminousleek":74,"bentanjunrong":7}},{"path":"src/main/java/seedu/address/model/module/Venue.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"itzblim"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"itzblim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"itzblim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"itzblim"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"itzblim"},"content":" * Represents a Venue in the ModBook.","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"itzblim"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidVenue(String)}","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"itzblim"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"itzblim"},"content":"public class Venue {","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"itzblim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"itzblim"},"content":"            \"Venues should not be blank\";","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"itzblim"},"content":"    /*","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"itzblim"},"content":"     * The first character of the venue must not be a whitespace,","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"itzblim"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"itzblim"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"itzblim"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\S.*$\";","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"itzblim"},"content":"    public final String fullVenue;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"itzblim"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"itzblim"},"content":"     * Constructs a {@code Venue}.","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"itzblim"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"itzblim"},"content":"     * @param venue A valid venue.","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"itzblim"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"itzblim"},"content":"    public Venue(String venue) {","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"itzblim"},"content":"        requireNonNull(venue);","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"itzblim"},"content":"        checkArgument(isValidVenue(venue), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"itzblim"},"content":"        fullVenue \u003d venue;","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"itzblim"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"itzblim"},"content":"     * Returns true if a given string is a valid venue.","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"itzblim"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"itzblim"},"content":"    public static boolean isValidVenue(String test) {","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"itzblim"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"itzblim"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"itzblim"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"itzblim"},"content":"        return fullVenue;","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"itzblim"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"itzblim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"itzblim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"itzblim"},"content":"                || (other instanceof Venue // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"itzblim"},"content":"                \u0026\u0026 fullVenue.equals(((Venue) other).fullVenue)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"itzblim"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"itzblim"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"itzblim"},"content":"        return fullVenue.hashCode();","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"itzblim"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"itzblim":59}},{"path":"src/main/java/seedu/address/model/module/exam/Exam.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"itzblim"},"content":"package seedu.address.model.module.exam;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"itzblim"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"itzblim"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"itzblim"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"itzblim"},"content":"import seedu.address.model.module.Link;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"itzblim"},"content":"import seedu.address.model.module.ModBookDate;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"itzblim"},"content":"import seedu.address.model.module.Timeslot;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"itzblim"},"content":"import seedu.address.model.module.Venue;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"itzblim"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"itzblim"},"content":" * Represents an exam in the ModBook.","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"itzblim"},"content":" * Guarantees: immutable.","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"itzblim"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"itzblim"},"content":"public class Exam implements Comparable\u003cExam\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"itzblim"},"content":"    private final ExamName name;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"itzblim"},"content":"    private final ModBookDate date;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"itzblim"},"content":"    private final Timeslot timeslot;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"itzblim"},"content":"    private final Optional\u003cVenue\u003e venue;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"itzblim"},"content":"    private final Optional\u003cLink\u003e link;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"itzblim"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"itzblim"},"content":"     * Constructs a {@code Exam}","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"itzblim"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"itzblim"},"content":"     * @param name     Name of exam","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"itzblim"},"content":"     * @param date     Date of exam","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"itzblim"},"content":"     * @param timeslot Timeslot of the exam","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"itzblim"},"content":"     * @param venue    Optional venue for the exam","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"itzblim"},"content":"     * @param link     Optional link for the exam","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"itzblim"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"itzblim"},"content":"    public Exam(ExamName name, ModBookDate date, Timeslot timeslot, Optional\u003cVenue\u003e venue, Optional\u003cLink\u003e link) {","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"itzblim"},"content":"        requireAllNonNull(name, date, timeslot, venue, link);","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"itzblim"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"itzblim"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"itzblim"},"content":"        this.timeslot \u003d timeslot;","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"itzblim"},"content":"        this.venue \u003d venue;","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"itzblim"},"content":"        this.link \u003d link;","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"itzblim"},"content":"    public ExamName getName() {","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"itzblim"},"content":"        return name;","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"itzblim"},"content":"    public ModBookDate getDate() {","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"itzblim"},"content":"        return date;","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"itzblim"},"content":"    public Timeslot getTimeslot() {","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"itzblim"},"content":"        return timeslot;","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"itzblim"},"content":"    public Optional\u003cVenue\u003e getVenue() {","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"itzblim"},"content":"        return venue;","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"itzblim"},"content":"    public Optional\u003cLink\u003e getLink() {","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"itzblim"},"content":"        return link;","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"itzblim"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"itzblim"},"content":"     * Returns true if both exams have the same name.","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"itzblim"},"content":"     * This defines a weaker notion of equality between two exams.","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"itzblim"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"itzblim"},"content":"    public boolean isSameExam(Exam otherExam) {","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"itzblim"},"content":"        if (otherExam \u003d\u003d this) {","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"itzblim"},"content":"            return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"itzblim"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"itzblim"},"content":"        return otherExam !\u003d null","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"itzblim"},"content":"                \u0026\u0026 otherExam.getName().equals(getName());","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"itzblim"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"itzblim"},"content":"     * Returns true if both exams have the same identity and data fields.","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"bentanjunrong"},"content":"     * This defines a stronger notion of equality between two exams.","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"itzblim"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"itzblim"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"itzblim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"itzblim"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"itzblim"},"content":"            return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"itzblim"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"itzblim"},"content":"        if (!(other instanceof Exam)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"itzblim"},"content":"            return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"itzblim"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"bentanjunrong"},"content":"        Exam otherExam \u003d (Exam) other;","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"bentanjunrong"},"content":"        return otherExam.getName().equals(getName())","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"bentanjunrong"},"content":"                \u0026\u0026 otherExam.getDate().equals(getDate())","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"bentanjunrong"},"content":"                \u0026\u0026 otherExam.getTimeslot().equals(getTimeslot())","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"bentanjunrong"},"content":"                \u0026\u0026 otherExam.getVenue().equals(getVenue())","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"bentanjunrong"},"content":"                \u0026\u0026 otherExam.getLink().equals(getLink());","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"itzblim"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"itzblim"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"itzblim"},"content":"        return Objects.hash(name, date, timeslot, venue, link);","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"itzblim"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"itzblim"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"itzblim"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"itzblim"},"content":"        builder.append(getName())","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"itzblim"},"content":"                .append(\"; Date: \")","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"itzblim"},"content":"                .append(getDate())","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"itzblim"},"content":"                .append(\"; Timeslot: \")","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"itzblim"},"content":"                .append(getTimeslot());","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"itzblim"},"content":"        if (venue.isPresent()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"itzblim"},"content":"            builder.append(\"; Venue: \")","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"itzblim"},"content":"                    .append(getVenue());","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"itzblim"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"itzblim"},"content":"        if (link.isPresent()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"itzblim"},"content":"            builder.append(\"; Link: \")","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"itzblim"},"content":"                    .append(getLink());","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"itzblim"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"itzblim"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":120,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"itzblim"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"itzblim"},"content":"     * Compares between two Exam objects.","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"itzblim"},"content":"     * Will compare based on date - i.e. earlier date will be ordered first.","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"itzblim"},"content":"     * If dates are the same, will compare based on timeslot.","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"itzblim"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"itzblim"},"content":"     * @param otherExam the Exam to compare with","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"itzblim"},"content":"     * @return a negative integer, zero or a positive integer as this Exam is before, at the same starting time","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"itzblim"},"content":"     * or after the given Exam respectively.","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"itzblim"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"itzblim"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"itzblim"},"content":"    public int compareTo(Exam otherExam) {","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"itzblim"},"content":"        int dateOrder \u003d date.compareTo(otherExam.date);","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"itzblim"},"content":"        if (dateOrder \u003d\u003d 0) {","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"itzblim"},"content":"            return timeslot.compareTo(otherExam.timeslot);","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"itzblim"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":137,"author":{"gitId":"itzblim"},"content":"        return dateOrder;","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"itzblim"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"itzblim":132,"bentanjunrong":7}},{"path":"src/main/java/seedu/address/model/module/exam/ExamName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"itzblim"},"content":"package seedu.address.model.module.exam;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"itzblim"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"itzblim"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"itzblim"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"itzblim"},"content":" * Represents the name of an Exam in the ModBook.","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"itzblim"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidExamName(String)}","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"itzblim"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"itzblim"},"content":"public class ExamName {","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"itzblim"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"itzblim"},"content":"            \"Exam name should not be blank\";","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"itzblim"},"content":"    /*","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"itzblim"},"content":"     * The first character of the exam must not be a whitespace.","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"itzblim"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"itzblim"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\S.*$\";","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"itzblim"},"content":"    public final String fullExamName;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"itzblim"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"itzblim"},"content":"     * Constructs an {@code ExamName}.","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"itzblim"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"itzblim"},"content":"     * @param examName A valid exam name.","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"itzblim"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"itzblim"},"content":"    public ExamName(String examName) {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"itzblim"},"content":"        requireNonNull(examName);","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"itzblim"},"content":"        checkArgument(isValidExamName(examName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"itzblim"},"content":"        fullExamName \u003d examName;","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"itzblim"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"itzblim"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"itzblim"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"itzblim"},"content":"    public static boolean isValidExamName(String test) {","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"itzblim"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"itzblim"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"itzblim"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"itzblim"},"content":"        return fullExamName;","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"itzblim"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"itzblim"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"itzblim"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"itzblim"},"content":"                || (other instanceof ExamName // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"itzblim"},"content":"                \u0026\u0026 fullExamName.equals(((ExamName) other).fullExamName)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"itzblim"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"itzblim"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"itzblim"},"content":"        return fullExamName.hashCode();","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"itzblim"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"itzblim":56}},{"path":"src/main/java/seedu/address/model/module/lesson/Lesson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bentanjunrong"},"content":"package seedu.address.model.module.lesson;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"bentanjunrong"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"bentanjunrong"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"bentanjunrong"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"bentanjunrong"},"content":"import seedu.address.model.module.Day;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"bentanjunrong"},"content":"import seedu.address.model.module.Link;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"bentanjunrong"},"content":"import seedu.address.model.module.Timeslot;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"bentanjunrong"},"content":"import seedu.address.model.module.Venue;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"bentanjunrong"},"content":"public class Lesson implements Comparable\u003cLesson\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"bentanjunrong"},"content":"    private final LessonName name;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"bentanjunrong"},"content":"    private final Day day;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"bentanjunrong"},"content":"    private final Timeslot timeslot;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"bentanjunrong"},"content":"    private final Optional\u003cVenue\u003e venue;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"bentanjunrong"},"content":"    private final Optional\u003cLink\u003e link;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"bentanjunrong"},"content":"     * Constructs a {@code Lesson}","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"bentanjunrong"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"bentanjunrong"},"content":"     * @param name     Name of lesson","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"bentanjunrong"},"content":"     * @param day      Date of lesson","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"bentanjunrong"},"content":"     * @param timeslot Timeslot of the lesson","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"bentanjunrong"},"content":"     * @param venue    Optional venue for the lesson","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"bentanjunrong"},"content":"     * @param link     Optional link for the lesson","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"bentanjunrong"},"content":"    public Lesson(LessonName name, Day day, Timeslot timeslot, Optional\u003cVenue\u003e venue, Optional\u003cLink\u003e link) {","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"bentanjunrong"},"content":"        requireAllNonNull(name, day, timeslot, venue, link);","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"bentanjunrong"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"bentanjunrong"},"content":"        this.day \u003d day;","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"bentanjunrong"},"content":"        this.timeslot \u003d timeslot;","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"bentanjunrong"},"content":"        this.venue \u003d venue;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"bentanjunrong"},"content":"        this.link \u003d link;","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"bentanjunrong"},"content":"    public LessonName getName() {","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"bentanjunrong"},"content":"        return name;","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"bentanjunrong"},"content":"    public Day getDay() {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"bentanjunrong"},"content":"        return day;","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"bentanjunrong"},"content":"    public Timeslot getTimeslot() {","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"bentanjunrong"},"content":"        return timeslot;","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"bentanjunrong"},"content":"    public Optional\u003cVenue\u003e getVenue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"bentanjunrong"},"content":"        return venue;","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"bentanjunrong"},"content":"    public Optional\u003cLink\u003e getLink() {","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"bentanjunrong"},"content":"        return link;","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"bentanjunrong"},"content":"     * Returns true if both Lessons have the same name.","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"bentanjunrong"},"content":"     * This defines a weaker notion of equality between two Lessons.","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"bentanjunrong"},"content":"    public boolean isSameLesson(Lesson otherLesson) {","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"bentanjunrong"},"content":"        if (otherLesson \u003d\u003d this) {","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"bentanjunrong"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"bentanjunrong"},"content":"        return otherLesson !\u003d null","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"bentanjunrong"},"content":"                \u0026\u0026 otherLesson.getName().equals(getName());","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"bentanjunrong"},"content":"     * Returns true if both Lessons have the same identity and data fields.","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"bentanjunrong"},"content":"     * This defines a stronger notion of equality between two Lessons.","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"bentanjunrong"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"bentanjunrong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"bentanjunrong"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"bentanjunrong"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"bentanjunrong"},"content":"        if (!(other instanceof Lesson)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"bentanjunrong"},"content":"            return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"bentanjunrong"},"content":"        Lesson otherLesson \u003d (Lesson) other;","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"bentanjunrong"},"content":"        return otherLesson.getName().equals(getName())","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"bentanjunrong"},"content":"                \u0026\u0026 otherLesson.getDay().equals(getDay())","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"bentanjunrong"},"content":"                \u0026\u0026 otherLesson.getTimeslot().equals(getTimeslot())","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"bentanjunrong"},"content":"                \u0026\u0026 otherLesson.getVenue().equals(getVenue())","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"bentanjunrong"},"content":"                \u0026\u0026 otherLesson.getLink().equals(getLink());","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"bentanjunrong"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"bentanjunrong"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"bentanjunrong"},"content":"        return Objects.hash(name, day, timeslot, venue, link);","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"bentanjunrong"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"bentanjunrong"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"bentanjunrong"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"bentanjunrong"},"content":"        builder.append(getName())","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"bentanjunrong"},"content":"                .append(\"; Day: \")","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"bentanjunrong"},"content":"                .append(getDay())","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"bentanjunrong"},"content":"                .append(\"; Timeslot: \")","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"bentanjunrong"},"content":"                .append(getTimeslot());","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"bentanjunrong"},"content":"        if (venue.isPresent()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"bentanjunrong"},"content":"            builder.append(\"; Venue: \")","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"bentanjunrong"},"content":"                    .append(getVenue());","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"bentanjunrong"},"content":"        if (link.isPresent()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"bentanjunrong"},"content":"            builder.append(\"; Link: \")","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"bentanjunrong"},"content":"                    .append(getLink());","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"bentanjunrong"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":118,"author":{"gitId":"bentanjunrong"},"content":"     * Compares between two Lesson objects.","lastModifiedDate":"2021-10-07"},{"lineNumber":119,"author":{"gitId":"bentanjunrong"},"content":"     * Will compare based on date - i.e. earlier date will be ordered first.","lastModifiedDate":"2021-10-07"},{"lineNumber":120,"author":{"gitId":"bentanjunrong"},"content":"     * If dates are the same, will compare based on timeslot.","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"bentanjunrong"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"bentanjunrong"},"content":"     * @param otherLesson the Lesson to compare with","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"bentanjunrong"},"content":"     * @return a negative integer, zero or a positive integer as this Lesson is before, at the same starting time","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"bentanjunrong"},"content":"     * or after the given Lesson respectively.","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"bentanjunrong"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":127,"author":{"gitId":"bentanjunrong"},"content":"    public int compareTo(Lesson otherLesson) {","lastModifiedDate":"2021-10-07"},{"lineNumber":128,"author":{"gitId":"bentanjunrong"},"content":"        Day.DayComparator dayComp \u003d new Day.DayComparator();","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"bentanjunrong"},"content":"        int dateOrder \u003d dayComp.compare(day, otherLesson.day);","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"bentanjunrong"},"content":"        if (dateOrder \u003d\u003d 0) {","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"bentanjunrong"},"content":"            // Both lessons today","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"bentanjunrong"},"content":"            if (day.isToday()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"bentanjunrong"},"content":"                // Current lesson finished, other lesson hasn\u0027t so this lesson is after other lesson","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"bentanjunrong"},"content":"                if (timeslot.hasFinished() \u0026\u0026 !otherLesson.timeslot.hasFinished()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"bentanjunrong"},"content":"                    return 1;","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"bentanjunrong"},"content":"                }","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"bentanjunrong"},"content":"                // Current lesson hasn\u0027t finished, other lesson has so this lesson is before other lesson","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"bentanjunrong"},"content":"                if (!timeslot.hasFinished() \u0026\u0026 otherLesson.timeslot.hasFinished()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"bentanjunrong"},"content":"                    return -1;","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"bentanjunrong"},"content":"                }","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"bentanjunrong"},"content":"                // Either both lessons have passed or not passed  compare the timeslots","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"bentanjunrong"},"content":"                // optional, but left it here for clarity","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"bentanjunrong"},"content":"                return timeslot.compareTo(otherLesson.timeslot);","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"bentanjunrong"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"bentanjunrong"},"content":"            return timeslot.compareTo(otherLesson.timeslot);","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"bentanjunrong"},"content":"        // this lesson today, other lesson another day","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"bentanjunrong"},"content":"        // don\u0027t have to check if other lesson is not today because above case takes care of that already","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"bentanjunrong"},"content":"        if (day.isToday()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"bentanjunrong"},"content":"            // if this lesson has finished, then it is now ordered after the other lesson","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"bentanjunrong"},"content":"            if (timeslot.hasFinished()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"bentanjunrong"},"content":"                return 1;","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"bentanjunrong"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"bentanjunrong"},"content":"        // other lesson today, this lesson another day","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"bentanjunrong"},"content":"        if (otherLesson.day.isToday()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"bentanjunrong"},"content":"            // if other lesson has finished, then this lesson is now ordered before other lesson","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"bentanjunrong"},"content":"            if (otherLesson.timeslot.hasFinished()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"bentanjunrong"},"content":"                return -1;","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"bentanjunrong"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"bentanjunrong"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"bentanjunrong"},"content":"        return dateOrder;","lastModifiedDate":"2021-10-07"},{"lineNumber":166,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"bentanjunrong"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"bentanjunrong":167}},{"path":"src/main/java/seedu/address/model/module/lesson/LessonName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bentanjunrong"},"content":"package seedu.address.model.module.lesson;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"bentanjunrong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"bentanjunrong"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"bentanjunrong"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"bentanjunrong"},"content":" * Represents the name of a Lesson in the ModBook.","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"bentanjunrong"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidLessonName(String)}","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"bentanjunrong"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"bentanjunrong"},"content":"public class LessonName {","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"bentanjunrong"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"bentanjunrong"},"content":"            \"Lesson name should not be blank\";","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"bentanjunrong"},"content":"    /*","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"bentanjunrong"},"content":"     * The first character of the exam must not be a whitespace.","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"bentanjunrong"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\S.*$\";","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"bentanjunrong"},"content":"    public final String fullLessonName;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"bentanjunrong"},"content":"     * Constructs an {@code ExamName}.","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"bentanjunrong"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"bentanjunrong"},"content":"     * @param lessonName A valid lesson name.","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"bentanjunrong"},"content":"    public LessonName(String lessonName) {","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"bentanjunrong"},"content":"        requireNonNull(lessonName);","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"bentanjunrong"},"content":"        checkArgument(isValidLessonName(lessonName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"bentanjunrong"},"content":"        fullLessonName \u003d lessonName;","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"bentanjunrong"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"bentanjunrong"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"bentanjunrong"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"bentanjunrong"},"content":"    public static boolean isValidLessonName(String test) {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"bentanjunrong"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"bentanjunrong"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"bentanjunrong"},"content":"    public String toString() {","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"bentanjunrong"},"content":"        return fullLessonName;","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"bentanjunrong"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"bentanjunrong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"bentanjunrong"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"bentanjunrong"},"content":"                || (other instanceof LessonName // instanceof handles nulls","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"bentanjunrong"},"content":"                \u0026\u0026 fullLessonName.equals(((LessonName) other).fullLessonName)); // state check","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"bentanjunrong"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"bentanjunrong"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"bentanjunrong"},"content":"        return fullLessonName.hashCode();","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"bentanjunrong"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"bentanjunrong":55}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedExam.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.Link;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.ModBookDate;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.Timeslot;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.Venue;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.exam.Exam;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.exam.ExamName;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":" * Jackson-friendly version of {@link Exam}","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"public class JsonAdaptedExam {","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Exam\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"    private final String name;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"    private final JsonAdaptedModBookDate date;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"    private final JsonAdaptedTimeslot timeslot;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"    private final Optional\u003cString\u003e venue;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"    private final Optional\u003cString\u003e link;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"     * Constructs a {@code JsonAdaptedExam} with the given lesson details.","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"    public JsonAdaptedExam(@JsonProperty(\"name\") String name, @JsonProperty(\"date\") JsonAdaptedModBookDate date,","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"            @JsonProperty(\"timeslot\") JsonAdaptedTimeslot timeslot, @JsonProperty(\"venue\") Optional\u003cString\u003e venue,","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"            @JsonProperty(\"link\") Optional\u003cString\u003e link) {","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"        this.timeslot \u003d timeslot;","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"        this.venue \u003d venue;","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"        this.link \u003d link;","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"     * Constructs a given {@code Exam} into this class for Jackson use.","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"    public JsonAdaptedExam(Exam source) {","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"        name \u003d source.getName().fullExamName;","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"        date \u003d new JsonAdaptedModBookDate(source.getDate());","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"        timeslot \u003d new JsonAdaptedTimeslot(source.getTimeslot());","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"        venue \u003d source.getVenue().map(Venue::toString);","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"        link \u003d source.getLink().map(Link::toString);","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":"     * Converts this Jackson-friendly adapted lesson object into the model\u0027s {@code Exam} object.","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"luminousleek"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted lesson.","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"luminousleek"},"content":"    public Exam toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"luminousleek"},"content":"        Optional\u003cVenue\u003e modelVenue \u003d Optional.empty();","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"        Optional\u003cLink\u003e modelLink \u003d Optional.empty();","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"luminousleek"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"luminousleek"},"content":"                    ExamName.class.getSimpleName()));","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"luminousleek"},"content":"        if (!ExamName.isValidExamName(name)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"luminousleek"},"content":"            throw new IllegalValueException(ExamName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"luminousleek"},"content":"        final ExamName modelName \u003d new ExamName(name);","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"luminousleek"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"luminousleek"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"luminousleek"},"content":"                    ModBookDate.class.getSimpleName()));","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"luminousleek"},"content":"        final ModBookDate modelDate \u003d date.toModelType();","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"luminousleek"},"content":"        if (timeslot \u003d\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"luminousleek"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"luminousleek"},"content":"                    Timeslot.class.getSimpleName()));","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"luminousleek"},"content":"        final Timeslot modelTimeslot \u003d timeslot.toModelType();","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"luminousleek"},"content":"        if (venue !\u003d null \u0026\u0026 venue.isPresent()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"luminousleek"},"content":"            if (!venue.map(Venue::isValidVenue).orElse(false)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"luminousleek"},"content":"                throw new IllegalValueException(Venue.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"luminousleek"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"luminousleek"},"content":"            modelVenue \u003d venue.map(Venue::new);","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"luminousleek"},"content":"        if (link !\u003d null \u0026\u0026 link.isPresent()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"luminousleek"},"content":"            if (!link.map(Link::isValidLink).orElse(false)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"luminousleek"},"content":"                throw new IllegalValueException(Link.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"luminousleek"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"luminousleek"},"content":"            modelLink \u003d link.map(Link::new);","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"luminousleek"},"content":"        return new Exam(modelName, modelDate, modelTimeslot, modelVenue, modelLink);","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"luminousleek":100}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedLesson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.Day;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.Link;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.Timeslot;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.Venue;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.lesson.Lesson;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.lesson.LessonName;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":" * Jackson-friendly version of {@link Lesson}","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"public class JsonAdaptedLesson {","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Lesson\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"    private final String name;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"    private final String day;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"    private final JsonAdaptedTimeslot timeslot;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"    private final Optional\u003cString\u003e venue;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"    private final Optional\u003cString\u003e link;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"     * Constructs a {@code JsonAdaptedLesson} with the given lesson details.","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"    public JsonAdaptedLesson(@JsonProperty(\"name\") String name, @JsonProperty(\"day\") String day,","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"            @JsonProperty(\"timeslot\") JsonAdaptedTimeslot timeslot, @JsonProperty(\"venue\") Optional\u003cString\u003e venue,","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"            @JsonProperty(\"link\") Optional\u003cString\u003e link) {","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"        this.day \u003d day;","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"        this.timeslot \u003d timeslot;","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"        this.venue \u003d venue;","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"        this.link \u003d link;","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"     * Constructs a given {@code Lesson} into this class for Jackson use.","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"    public JsonAdaptedLesson(Lesson source) {","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"        name \u003d source.getName().fullLessonName;","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"        day \u003d source.getDay().toString();","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"        timeslot \u003d new JsonAdaptedTimeslot(source.getTimeslot());","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"        venue \u003d source.getVenue().map(Venue::toString);","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"        link \u003d source.getLink().map(Link::toString);","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":"     * Converts this Jackson-friendly adapted lesson object into the model\u0027s {@code Lesson} object.","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"luminousleek"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted lesson.","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"luminousleek"},"content":"    public Lesson toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"luminousleek"},"content":"        Optional\u003cVenue\u003e modelVenue \u003d Optional.empty();","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"        Optional\u003cLink\u003e modelLink \u003d Optional.empty();","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"luminousleek"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"luminousleek"},"content":"                    LessonName.class.getSimpleName()));","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"luminousleek"},"content":"        if (!LessonName.isValidLessonName(name)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"luminousleek"},"content":"            throw new IllegalValueException(LessonName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"luminousleek"},"content":"        final LessonName modelName \u003d new LessonName(name);","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"luminousleek"},"content":"        if (day \u003d\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"luminousleek"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"luminousleek"},"content":"                    Day.class.getSimpleName()));","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"luminousleek"},"content":"        if (!Day.isValidDay(day)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"luminousleek"},"content":"            throw new IllegalValueException(Day.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"luminousleek"},"content":"        final Day modelDay \u003d Day.valueOf(day.toUpperCase());","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"luminousleek"},"content":"        if (timeslot \u003d\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"luminousleek"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"luminousleek"},"content":"                    Timeslot.class.getSimpleName()));","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"luminousleek"},"content":"        final Timeslot modelTimeslot \u003d timeslot.toModelType();","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"luminousleek"},"content":"        if (venue !\u003d null \u0026\u0026 venue.isPresent()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"luminousleek"},"content":"            if (!venue.map(Venue::isValidVenue).orElse(false)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"luminousleek"},"content":"                throw new IllegalValueException(Venue.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"luminousleek"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"luminousleek"},"content":"            modelVenue \u003d venue.map(Venue::new);","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"luminousleek"},"content":"        if (link !\u003d null \u0026\u0026 link.isPresent()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"luminousleek"},"content":"            if (!link.map(Link::isValidLink).orElse(false)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"luminousleek"},"content":"                throw new IllegalValueException(Link.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"luminousleek"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"luminousleek"},"content":"            modelLink \u003d link.map(Link::new);","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"luminousleek"},"content":"        return new Lesson(modelName, modelDay, modelTimeslot, modelVenue, modelLink);","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"luminousleek":103}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedModBookDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.ModBookDate;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":" * Jackson-friendly version of {@link ModBookDate}.","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"public class JsonAdaptedModBookDate {","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"    private final String date;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"     * Constructs a {@code JsonAdaptedModBookDate} with the given {@code timeString}","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"    public JsonAdaptedModBookDate(String dateString) {","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"        date \u003d dateString;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"     * Converts a given {@code ModBookDate} into this class for Jackson use.","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"    public JsonAdaptedModBookDate(ModBookDate source) {","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"        date \u003d source.date.format(ModBookDate.PARSE_FORMATTER); // in parsing format so that it can be parsed correctly","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"    @JsonValue","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"    public String getTime() {","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"        return date;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code ModBookDate} object.","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted ModBookDate.","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"    public ModBookDate toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"        if (!ModBookDate.isValidDate(date)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"            throw new IllegalValueException(ModBookDate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"        return new ModBookDate(date);","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"luminousleek":47}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedModBookTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.ModBookTime;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":" * Jackson-friendly version of {@link ModBookTime}.","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"public class JsonAdaptedModBookTime {","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"    private final String time;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"     * Constructs a {@code JsonAdaptedModBookTime} with the given {@code timeString}","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"    public JsonAdaptedModBookTime(String timeString) {","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"        time \u003d timeString;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"     * Converts a given {@code ModBookTime} into this class for Jackson use.","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"    public JsonAdaptedModBookTime(ModBookTime source) {","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"        time \u003d source.time.format(ModBookTime.PARSE_FORMATTER); // in parsing format so that it can be parsed correctly","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"    @JsonValue","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"    public String getTime() {","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"        return time;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code ModBookTime} object.","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted ModBookTime.","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"    public ModBookTime toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"        if (!ModBookTime.isValidTime(time)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"            throw new IllegalValueException(ModBookTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"        return new ModBookTime(time);","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"luminousleek":47}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTimeslot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.ModBookTime;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.Timeslot;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":" * Jackson-friendly version of {@link Timeslot}","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"public class JsonAdaptedTimeslot {","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Timeslot\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"    private final JsonAdaptedModBookTime startTime;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"    private final JsonAdaptedModBookTime endTime;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"     * Constructs a {@code JsonAdaptedTimeslot} with the given start and end times.","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"    public JsonAdaptedTimeslot(@JsonProperty(\"startTime\") JsonAdaptedModBookTime startTime,","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"            @JsonProperty(\"endTime\") JsonAdaptedModBookTime endTime) {","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"     * Converts a given {@code Timeslot} into this class for Jackson use.","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"    public JsonAdaptedTimeslot(Timeslot source) {","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"        startTime \u003d new JsonAdaptedModBookTime(source.startTime);","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"        endTime \u003d new JsonAdaptedModBookTime(source.endTime);","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Timeslot} object.","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted Timeslot.","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"    public Timeslot toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"        if (startTime \u003d\u003d null || endTime \u003d\u003d null) {","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"                    ModBookTime.class.getSimpleName()));","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"        ModBookTime start \u003d startTime.toModelType();","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"        ModBookTime end \u003d endTime.toModelType();","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"        if (!Timeslot.isValidTimeslot(start, end)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"            throw new IllegalValueException(Timeslot.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"        return new Timeslot(start, end);","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"luminousleek":56}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"import seedu.address.testutil.builders.PersonBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"luminousleek":1,"-":161}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"import seedu.address.testutil.builders.PersonBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"luminousleek":1,"-":44}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"import seedu.address.testutil.builders.PersonBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"luminousleek":1,"-":193}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"import seedu.address.testutil.builders.PersonBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"luminousleek":1,"-":172}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"import seedu.address.testutil.builders.PersonBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"luminousleek":1,"-":140}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"import seedu.address.testutil.builders.PersonBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"luminousleek":1,"-":100}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"itzblim"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"itzblim"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":19,"author":{"gitId":"bentanjunrong"},"content":"import seedu.address.model.module.Day;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"SHEZADHASSAN22"},"content":"import seedu.address.model.module.Link;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"itzblim"},"content":"import seedu.address.model.module.ModBookDate;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.ModBookTime;","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"rohit0718"},"content":"import seedu.address.model.module.Module;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"rohit0718"},"content":"import seedu.address.model.module.ModuleCode;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"rohit0718"},"content":"import seedu.address.model.module.ModuleName;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.Timeslot;","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"itzblim"},"content":"import seedu.address.model.module.Venue;","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"itzblim"},"content":"import seedu.address.model.module.exam.Exam;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"itzblim"},"content":"import seedu.address.model.module.exam.ExamName;","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"bentanjunrong"},"content":"import seedu.address.model.module.lesson.Lesson;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"bentanjunrong"},"content":"import seedu.address.model.module.lesson.LessonName;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"SHEZADHASSAN22"},"content":"    private static final String INVALID_LINK \u003d \" \";","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"    private static final String INVALID_TIME \u003d \"3:00PM\";","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"itzblim"},"content":"    private static final String INVALID_DATE \u003d \"20/15/2022\";","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"itzblim"},"content":"    private static final String INVALID_VENUE \u003d \" \";","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"itzblim"},"content":"    private static final String INVALID_EXAM_NAME \u003d \" \";","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"bentanjunrong"},"content":"    private static final String INVALID_LESSON_NAME \u003d \" \";","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"rohit0718"},"content":"    private static final String INVALID_MODULE_CODE \u003d \"C2030S\";","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"rohit0718"},"content":"    private static final String INVALID_MODULE_NAME \u003d \" \";","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"SHEZADHASSAN22"},"content":"    private static final String VALID_LINK \u003d \"https://www.google.com/\";","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"luminousleek"},"content":"    private static final String VALID_TIME_1 \u003d \"09:00\";","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"    private static final String VALID_TIME_2 \u003d \"11:00\";","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"    private static final ModBookTime VALID_MBTIME_1 \u003d new ModBookTime(VALID_TIME_1);","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"    private static final ModBookTime VALID_MBTIME_2 \u003d new ModBookTime(VALID_TIME_2);","lastModifiedDate":"2021-10-04"},{"lineNumber":64,"author":{"gitId":"itzblim"},"content":"    private static final String VALID_DATE \u003d \"13/12/2021\";","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"itzblim"},"content":"    private static final String VALID_VENUE \u003d \"University Sports Centre\";","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"itzblim"},"content":"    private static final String VALID_EXAM_NAME \u003d \"Midterms\";","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"bentanjunrong"},"content":"    private static final String VALID_LESSON_NAME \u003d \"Lecture\";","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"rohit0718"},"content":"    private static final String VALID_MODULE_CODE \u003d \"CS2103T\";","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"rohit0718"},"content":"    private static final String VALID_MODULE_NAME \u003d \"Software Engineering\";","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":226,"author":{"gitId":"itzblim"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003c\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2021-10-06"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":230,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":231,"author":{"gitId":"SHEZADHASSAN22"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":232,"author":{"gitId":"SHEZADHASSAN22"},"content":"    public void parseLink_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":233,"author":{"gitId":"SHEZADHASSAN22"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLink(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":234,"author":{"gitId":"SHEZADHASSAN22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":235,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":236,"author":{"gitId":"SHEZADHASSAN22"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":237,"author":{"gitId":"SHEZADHASSAN22"},"content":"    public void parseLink_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":238,"author":{"gitId":"SHEZADHASSAN22"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLink(INVALID_LINK));","lastModifiedDate":"2021-10-06"},{"lineNumber":239,"author":{"gitId":"SHEZADHASSAN22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":240,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":241,"author":{"gitId":"SHEZADHASSAN22"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":242,"author":{"gitId":"SHEZADHASSAN22"},"content":"    public void parseLink_validValueWithoutWhitespace_returnsLink() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":243,"author":{"gitId":"SHEZADHASSAN22"},"content":"        Link expectedLink \u003d new Link(VALID_LINK);","lastModifiedDate":"2021-10-06"},{"lineNumber":244,"author":{"gitId":"SHEZADHASSAN22"},"content":"        assertEquals(expectedLink, ParserUtil.parseLink(VALID_LINK));","lastModifiedDate":"2021-10-06"},{"lineNumber":245,"author":{"gitId":"SHEZADHASSAN22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":246,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":247,"author":{"gitId":"SHEZADHASSAN22"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":248,"author":{"gitId":"SHEZADHASSAN22"},"content":"    public void parseLink_validValueWithWhitespace_returnsLink() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":249,"author":{"gitId":"SHEZADHASSAN22"},"content":"        String linkWithWhiteSpace \u003d WHITESPACE + VALID_LINK + WHITESPACE;","lastModifiedDate":"2021-10-06"},{"lineNumber":250,"author":{"gitId":"SHEZADHASSAN22"},"content":"        Link expectedLink \u003d new Link(VALID_LINK);","lastModifiedDate":"2021-10-06"},{"lineNumber":251,"author":{"gitId":"SHEZADHASSAN22"},"content":"        assertEquals(expectedLink, ParserUtil.parseLink(linkWithWhiteSpace));","lastModifiedDate":"2021-10-06"},{"lineNumber":252,"author":{"gitId":"SHEZADHASSAN22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":253,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":254,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":255,"author":{"gitId":"luminousleek"},"content":"    public void parseTime_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":256,"author":{"gitId":"luminousleek"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTime(null));","lastModifiedDate":"2021-10-04"},{"lineNumber":257,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":258,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":259,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":260,"author":{"gitId":"luminousleek"},"content":"    public void parseTime_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":261,"author":{"gitId":"luminousleek"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTime(INVALID_TIME));","lastModifiedDate":"2021-10-04"},{"lineNumber":262,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":263,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":264,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":265,"author":{"gitId":"luminousleek"},"content":"    public void parseTime_validValueWithoutWhitespace_returnsTime() throws Exception {","lastModifiedDate":"2021-10-04"},{"lineNumber":266,"author":{"gitId":"luminousleek"},"content":"        ModBookTime expectedTime \u003d new ModBookTime(VALID_TIME_1);","lastModifiedDate":"2021-10-04"},{"lineNumber":267,"author":{"gitId":"luminousleek"},"content":"        assertEquals(expectedTime, ParserUtil.parseTime(VALID_TIME_1));","lastModifiedDate":"2021-10-04"},{"lineNumber":268,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":269,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":270,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":271,"author":{"gitId":"luminousleek"},"content":"    public void parseTime_validValueWithWhitespace_returnsTrimmedTime() throws Exception {","lastModifiedDate":"2021-10-04"},{"lineNumber":272,"author":{"gitId":"luminousleek"},"content":"        String timeWithWhitespace \u003d WHITESPACE + VALID_TIME_1 + WHITESPACE;","lastModifiedDate":"2021-10-04"},{"lineNumber":273,"author":{"gitId":"luminousleek"},"content":"        ModBookTime expectedTime \u003d new ModBookTime(VALID_TIME_1);","lastModifiedDate":"2021-10-04"},{"lineNumber":274,"author":{"gitId":"luminousleek"},"content":"        assertEquals(expectedTime, ParserUtil.parseTime(timeWithWhitespace));","lastModifiedDate":"2021-10-04"},{"lineNumber":275,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":276,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":277,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":278,"author":{"gitId":"luminousleek"},"content":"    public void parseTimeslot_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":279,"author":{"gitId":"luminousleek"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTimeslot(VALID_TIME_1, null));","lastModifiedDate":"2021-10-04"},{"lineNumber":280,"author":{"gitId":"luminousleek"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTimeslot(null, VALID_TIME_2));","lastModifiedDate":"2021-10-04"},{"lineNumber":281,"author":{"gitId":"luminousleek"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTimeslot(null, null));","lastModifiedDate":"2021-10-04"},{"lineNumber":282,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":283,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":284,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":285,"author":{"gitId":"luminousleek"},"content":"    public void parseTimeSlot_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":286,"author":{"gitId":"luminousleek"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTimeslot(VALID_TIME_1, VALID_TIME_1));","lastModifiedDate":"2021-10-04"},{"lineNumber":287,"author":{"gitId":"luminousleek"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTimeslot(VALID_TIME_2, VALID_TIME_1));","lastModifiedDate":"2021-10-04"},{"lineNumber":288,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":289,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":290,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":291,"author":{"gitId":"luminousleek"},"content":"    public void parseTimeslot_validValueWithoutWhitespace_returnsTimeslot() throws Exception {","lastModifiedDate":"2021-10-04"},{"lineNumber":292,"author":{"gitId":"luminousleek"},"content":"        Timeslot expectedTimeslot \u003d new Timeslot(VALID_MBTIME_1, VALID_MBTIME_2);","lastModifiedDate":"2021-10-04"},{"lineNumber":293,"author":{"gitId":"luminousleek"},"content":"        assertEquals(expectedTimeslot, ParserUtil.parseTimeslot(VALID_TIME_1, VALID_TIME_2));","lastModifiedDate":"2021-10-04"},{"lineNumber":294,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":295,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":296,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":297,"author":{"gitId":"luminousleek"},"content":"    public void parseTimeslot_validValueWithWhitespace_returnsTrimmedTimeslot() throws Exception {","lastModifiedDate":"2021-10-04"},{"lineNumber":298,"author":{"gitId":"luminousleek"},"content":"        String timeWithWhitespaceOne \u003d WHITESPACE + VALID_TIME_1 + WHITESPACE;","lastModifiedDate":"2021-10-04"},{"lineNumber":299,"author":{"gitId":"luminousleek"},"content":"        String timeWithWhitespaceTwo \u003d WHITESPACE + VALID_TIME_2 + WHITESPACE;","lastModifiedDate":"2021-10-04"},{"lineNumber":300,"author":{"gitId":"luminousleek"},"content":"        Timeslot expectedTimeslot \u003d new Timeslot(VALID_MBTIME_1, VALID_MBTIME_2);","lastModifiedDate":"2021-10-04"},{"lineNumber":301,"author":{"gitId":"luminousleek"},"content":"        assertEquals(expectedTimeslot, ParserUtil.parseTimeslot(timeWithWhitespaceOne, timeWithWhitespaceTwo));","lastModifiedDate":"2021-10-04"},{"lineNumber":302,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":303,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":304,"author":{"gitId":"itzblim"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":305,"author":{"gitId":"itzblim"},"content":"    public void parseDate_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":306,"author":{"gitId":"itzblim"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDate(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":307,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":308,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":309,"author":{"gitId":"itzblim"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":310,"author":{"gitId":"itzblim"},"content":"    public void parseDate_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":311,"author":{"gitId":"itzblim"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE));","lastModifiedDate":"2021-10-06"},{"lineNumber":312,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":313,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":314,"author":{"gitId":"itzblim"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":315,"author":{"gitId":"itzblim"},"content":"    public void parseDate_validValueWithoutWhitespace_returnsDate() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":316,"author":{"gitId":"itzblim"},"content":"        ModBookDate expectedDate \u003d new ModBookDate(VALID_DATE);","lastModifiedDate":"2021-10-06"},{"lineNumber":317,"author":{"gitId":"itzblim"},"content":"        assertEquals(expectedDate, ParserUtil.parseDate(VALID_DATE));","lastModifiedDate":"2021-10-06"},{"lineNumber":318,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":319,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":320,"author":{"gitId":"itzblim"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":321,"author":{"gitId":"itzblim"},"content":"    public void parseDate_validValueWithWhitespace_returnsTrimmedDate() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":322,"author":{"gitId":"itzblim"},"content":"        String dateWithWhitespace \u003d WHITESPACE + VALID_DATE + WHITESPACE;","lastModifiedDate":"2021-10-06"},{"lineNumber":323,"author":{"gitId":"itzblim"},"content":"        ModBookDate expectedDate \u003d new ModBookDate(VALID_DATE);","lastModifiedDate":"2021-10-06"},{"lineNumber":324,"author":{"gitId":"itzblim"},"content":"        assertEquals(expectedDate, ParserUtil.parseDate(dateWithWhitespace));","lastModifiedDate":"2021-10-06"},{"lineNumber":325,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":326,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":327,"author":{"gitId":"itzblim"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":328,"author":{"gitId":"itzblim"},"content":"    public void parseVenue_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":329,"author":{"gitId":"itzblim"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseVenue(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":330,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":331,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":332,"author":{"gitId":"itzblim"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":333,"author":{"gitId":"itzblim"},"content":"    public void parseVenue_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":334,"author":{"gitId":"itzblim"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseVenue(INVALID_VENUE));","lastModifiedDate":"2021-10-06"},{"lineNumber":335,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":336,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":337,"author":{"gitId":"itzblim"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":338,"author":{"gitId":"itzblim"},"content":"    public void parseVenue_validValueWithoutWhitespace_returnsVenue() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":339,"author":{"gitId":"itzblim"},"content":"        Venue expectedVenue \u003d new Venue(VALID_VENUE);","lastModifiedDate":"2021-10-06"},{"lineNumber":340,"author":{"gitId":"itzblim"},"content":"        assertEquals(expectedVenue, ParserUtil.parseVenue(VALID_VENUE));","lastModifiedDate":"2021-10-06"},{"lineNumber":341,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":342,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":343,"author":{"gitId":"itzblim"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":344,"author":{"gitId":"itzblim"},"content":"    public void parseVenue_validValueWithWhitespace_returnsVenue() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":345,"author":{"gitId":"itzblim"},"content":"        String venueWithWhiteSpace \u003d WHITESPACE + VALID_VENUE + WHITESPACE;","lastModifiedDate":"2021-10-06"},{"lineNumber":346,"author":{"gitId":"itzblim"},"content":"        Venue expectedVenue \u003d new Venue(VALID_VENUE);","lastModifiedDate":"2021-10-06"},{"lineNumber":347,"author":{"gitId":"itzblim"},"content":"        assertEquals(expectedVenue, ParserUtil.parseVenue(venueWithWhiteSpace));","lastModifiedDate":"2021-10-06"},{"lineNumber":348,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":349,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":350,"author":{"gitId":"itzblim"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":351,"author":{"gitId":"itzblim"},"content":"    public void parseExamName_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":352,"author":{"gitId":"itzblim"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseExamName(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":353,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":354,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":355,"author":{"gitId":"itzblim"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":356,"author":{"gitId":"itzblim"},"content":"    public void parseExamName_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":357,"author":{"gitId":"itzblim"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseExamName(INVALID_EXAM_NAME));","lastModifiedDate":"2021-10-06"},{"lineNumber":358,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":359,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":360,"author":{"gitId":"itzblim"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":361,"author":{"gitId":"itzblim"},"content":"    public void parseExamName_validValueWithoutWhitespace_returnsExamName() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":362,"author":{"gitId":"itzblim"},"content":"        ExamName expectedExamName \u003d new ExamName(VALID_EXAM_NAME);","lastModifiedDate":"2021-10-06"},{"lineNumber":363,"author":{"gitId":"itzblim"},"content":"        assertEquals(expectedExamName, ParserUtil.parseExamName(VALID_EXAM_NAME));","lastModifiedDate":"2021-10-06"},{"lineNumber":364,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":365,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":366,"author":{"gitId":"itzblim"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":367,"author":{"gitId":"itzblim"},"content":"    public void parseExamName_validValueWithWhitespace_returnsExamName() throws Exception {","lastModifiedDate":"2021-10-06"},{"lineNumber":368,"author":{"gitId":"itzblim"},"content":"        String examNameWithWhiteSpace \u003d WHITESPACE + VALID_EXAM_NAME + WHITESPACE;","lastModifiedDate":"2021-10-06"},{"lineNumber":369,"author":{"gitId":"itzblim"},"content":"        ExamName expectedExamName \u003d new ExamName(VALID_EXAM_NAME);","lastModifiedDate":"2021-10-06"},{"lineNumber":370,"author":{"gitId":"itzblim"},"content":"        assertEquals(expectedExamName, ParserUtil.parseExamName(examNameWithWhiteSpace));","lastModifiedDate":"2021-10-06"},{"lineNumber":371,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":372,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":373,"author":{"gitId":"itzblim"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":374,"author":{"gitId":"itzblim"},"content":"    public void parseExam_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":375,"author":{"gitId":"itzblim"},"content":"        Assertions.assertThrows(NullPointerException.class, () -\u003e new Exam(","lastModifiedDate":"2021-10-06"},{"lineNumber":376,"author":{"gitId":"itzblim"},"content":"                new ExamName(VALID_EXAM_NAME), new ModBookDate(VALID_DATE), null, null, null));","lastModifiedDate":"2021-10-06"},{"lineNumber":377,"author":{"gitId":"itzblim"},"content":"        Assertions.assertThrows(NullPointerException.class, () -\u003e new Exam(","lastModifiedDate":"2021-10-06"},{"lineNumber":378,"author":{"gitId":"itzblim"},"content":"                new ExamName(VALID_EXAM_NAME), null, null,","lastModifiedDate":"2021-10-06"},{"lineNumber":379,"author":{"gitId":"itzblim"},"content":"                Optional.of(new Venue(VALID_VENUE)), Optional.of(new Link(VALID_LINK))));","lastModifiedDate":"2021-10-06"},{"lineNumber":380,"author":{"gitId":"itzblim"},"content":"        Assertions.assertThrows(NullPointerException.class, () -\u003e new Exam(","lastModifiedDate":"2021-10-06"},{"lineNumber":381,"author":{"gitId":"itzblim"},"content":"                null, null, null, null, null));","lastModifiedDate":"2021-10-06"},{"lineNumber":382,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":383,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":384,"author":{"gitId":"bentanjunrong"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":385,"author":{"gitId":"bentanjunrong"},"content":"    public void parseLessonName_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":386,"author":{"gitId":"bentanjunrong"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseLessonName(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":387,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":388,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":389,"author":{"gitId":"bentanjunrong"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":390,"author":{"gitId":"bentanjunrong"},"content":"    public void parseLessonName_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":391,"author":{"gitId":"bentanjunrong"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseLessonName(INVALID_LESSON_NAME));","lastModifiedDate":"2021-10-08"},{"lineNumber":392,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":393,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":394,"author":{"gitId":"bentanjunrong"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":395,"author":{"gitId":"bentanjunrong"},"content":"    public void parseLessonName_validValueWithoutWhitespace_returnsLessonName() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":396,"author":{"gitId":"bentanjunrong"},"content":"        LessonName expectedLessonName \u003d new LessonName(VALID_LESSON_NAME);","lastModifiedDate":"2021-10-08"},{"lineNumber":397,"author":{"gitId":"bentanjunrong"},"content":"        assertEquals(expectedLessonName, ParserUtil.parseLessonName(VALID_LESSON_NAME));","lastModifiedDate":"2021-10-08"},{"lineNumber":398,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":399,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":400,"author":{"gitId":"bentanjunrong"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":401,"author":{"gitId":"bentanjunrong"},"content":"    public void parseLessonName_validValueWithWhitespace_returnsLessonName() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":402,"author":{"gitId":"bentanjunrong"},"content":"        String lessonNameWithWhiteSpace \u003d WHITESPACE + VALID_LESSON_NAME + WHITESPACE;","lastModifiedDate":"2021-10-08"},{"lineNumber":403,"author":{"gitId":"bentanjunrong"},"content":"        LessonName expectedLessonName \u003d new LessonName(VALID_LESSON_NAME);","lastModifiedDate":"2021-10-08"},{"lineNumber":404,"author":{"gitId":"bentanjunrong"},"content":"        assertEquals(expectedLessonName, ParserUtil.parseLessonName(lessonNameWithWhiteSpace));","lastModifiedDate":"2021-10-08"},{"lineNumber":405,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":406,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":407,"author":{"gitId":"bentanjunrong"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":408,"author":{"gitId":"bentanjunrong"},"content":"    public void parseLesson_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":409,"author":{"gitId":"bentanjunrong"},"content":"        Assertions.assertThrows(NullPointerException.class, () -\u003e new Lesson(","lastModifiedDate":"2021-10-08"},{"lineNumber":410,"author":{"gitId":"bentanjunrong"},"content":"                new LessonName(VALID_LESSON_NAME), Day.MONDAY, null, null, null));","lastModifiedDate":"2021-10-08"},{"lineNumber":411,"author":{"gitId":"bentanjunrong"},"content":"        Assertions.assertThrows(NullPointerException.class, () -\u003e new Lesson(","lastModifiedDate":"2021-10-08"},{"lineNumber":412,"author":{"gitId":"bentanjunrong"},"content":"                new LessonName(VALID_LESSON_NAME), null, null,","lastModifiedDate":"2021-10-08"},{"lineNumber":413,"author":{"gitId":"bentanjunrong"},"content":"                Optional.of(new Venue(VALID_VENUE)), Optional.of(new Link(VALID_LINK))));","lastModifiedDate":"2021-10-08"},{"lineNumber":414,"author":{"gitId":"bentanjunrong"},"content":"        Assertions.assertThrows(NullPointerException.class, () -\u003e new Lesson(","lastModifiedDate":"2021-10-08"},{"lineNumber":415,"author":{"gitId":"bentanjunrong"},"content":"                null, null, null, null, null));","lastModifiedDate":"2021-10-08"},{"lineNumber":416,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":417,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":418,"author":{"gitId":"bentanjunrong"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":419,"author":{"gitId":"bentanjunrong"},"content":"    public void parseLesson_validValues_returnsLesson() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":420,"author":{"gitId":"bentanjunrong"},"content":"        LessonName lessonName \u003d new LessonName(\"Lecture\");","lastModifiedDate":"2021-10-08"},{"lineNumber":421,"author":{"gitId":"bentanjunrong"},"content":"        Day day \u003d Day.MONDAY;","lastModifiedDate":"2021-10-08"},{"lineNumber":422,"author":{"gitId":"bentanjunrong"},"content":"        Timeslot timeslot \u003d new Timeslot(VALID_MBTIME_1, VALID_MBTIME_2);","lastModifiedDate":"2021-10-08"},{"lineNumber":423,"author":{"gitId":"bentanjunrong"},"content":"        Lesson expectedLesson \u003d new Lesson(lessonName, day, timeslot, Optional.of(new Venue(VALID_VENUE)),","lastModifiedDate":"2021-10-08"},{"lineNumber":424,"author":{"gitId":"bentanjunrong"},"content":"                Optional.of(new Link(VALID_LINK)));","lastModifiedDate":"2021-10-08"},{"lineNumber":425,"author":{"gitId":"bentanjunrong"},"content":"        assertEquals(expectedLesson, ParserUtil.parseLesson(","lastModifiedDate":"2021-10-08"},{"lineNumber":426,"author":{"gitId":"bentanjunrong"},"content":"                \"Lecture\", \"Monday\", \"09:00\", \"11:00\",","lastModifiedDate":"2021-10-08"},{"lineNumber":427,"author":{"gitId":"bentanjunrong"},"content":"                Optional.of(VALID_VENUE), Optional.of(VALID_LINK)));","lastModifiedDate":"2021-10-08"},{"lineNumber":428,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":429,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":430,"author":{"gitId":"rohit0718"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":431,"author":{"gitId":"rohit0718"},"content":"    public void parseModuleCode_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":432,"author":{"gitId":"rohit0718"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseModuleCode(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":433,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":434,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":435,"author":{"gitId":"rohit0718"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":436,"author":{"gitId":"rohit0718"},"content":"    public void parseModuleCode_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":437,"author":{"gitId":"rohit0718"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseModuleCode(INVALID_MODULE_CODE));","lastModifiedDate":"2021-10-08"},{"lineNumber":438,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":439,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":440,"author":{"gitId":"rohit0718"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":441,"author":{"gitId":"rohit0718"},"content":"    public void parseModuleCode_validValueWithoutWhitespace_returnsModuleCode() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":442,"author":{"gitId":"rohit0718"},"content":"        ModuleCode expectedModuleCode \u003d new ModuleCode(VALID_MODULE_CODE);","lastModifiedDate":"2021-10-08"},{"lineNumber":443,"author":{"gitId":"rohit0718"},"content":"        assertEquals(expectedModuleCode, ParserUtil.parseModuleCode(VALID_MODULE_CODE));","lastModifiedDate":"2021-10-08"},{"lineNumber":444,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":445,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":446,"author":{"gitId":"rohit0718"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":447,"author":{"gitId":"rohit0718"},"content":"    public void parseModuleCode_validValueWithWhitespace_returnsTrimmedModuleCode() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":448,"author":{"gitId":"rohit0718"},"content":"        String moduleCodeWithWhitespace \u003d WHITESPACE + VALID_MODULE_CODE + WHITESPACE;","lastModifiedDate":"2021-10-08"},{"lineNumber":449,"author":{"gitId":"rohit0718"},"content":"        ModuleCode expectedModuleCode \u003d new ModuleCode(VALID_MODULE_CODE);","lastModifiedDate":"2021-10-08"},{"lineNumber":450,"author":{"gitId":"rohit0718"},"content":"        assertEquals(expectedModuleCode, ParserUtil.parseModuleCode(moduleCodeWithWhitespace));","lastModifiedDate":"2021-10-08"},{"lineNumber":451,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":452,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":453,"author":{"gitId":"rohit0718"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":454,"author":{"gitId":"rohit0718"},"content":"    public void parseModuleName_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":455,"author":{"gitId":"rohit0718"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseModuleName(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":456,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":457,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":458,"author":{"gitId":"rohit0718"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":459,"author":{"gitId":"rohit0718"},"content":"    public void parseModuleName_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":460,"author":{"gitId":"rohit0718"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseModuleName(INVALID_MODULE_NAME));","lastModifiedDate":"2021-10-08"},{"lineNumber":461,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":462,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":463,"author":{"gitId":"rohit0718"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":464,"author":{"gitId":"rohit0718"},"content":"    public void parseModuleName_validValueWithoutWhitespace_returnsModuleName() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":465,"author":{"gitId":"rohit0718"},"content":"        ModuleName expectedModuleName \u003d new ModuleName(VALID_MODULE_NAME);","lastModifiedDate":"2021-10-08"},{"lineNumber":466,"author":{"gitId":"rohit0718"},"content":"        assertEquals(expectedModuleName, ParserUtil.parseModuleName(VALID_MODULE_NAME));","lastModifiedDate":"2021-10-08"},{"lineNumber":467,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":468,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":469,"author":{"gitId":"rohit0718"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":470,"author":{"gitId":"rohit0718"},"content":"    public void parseModuleName_validValueWithWhitespace_returnsTrimmedModuleName() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":471,"author":{"gitId":"rohit0718"},"content":"        String moduleNameWithWhitespace \u003d WHITESPACE + VALID_MODULE_NAME + WHITESPACE;","lastModifiedDate":"2021-10-08"},{"lineNumber":472,"author":{"gitId":"rohit0718"},"content":"        ModuleName expectedModuleName \u003d new ModuleName(VALID_MODULE_NAME);","lastModifiedDate":"2021-10-08"},{"lineNumber":473,"author":{"gitId":"rohit0718"},"content":"        assertEquals(expectedModuleName, ParserUtil.parseModuleName(moduleNameWithWhitespace));","lastModifiedDate":"2021-10-08"},{"lineNumber":474,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":475,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":476,"author":{"gitId":"rohit0718"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":477,"author":{"gitId":"rohit0718"},"content":"    public void parseModule_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":478,"author":{"gitId":"rohit0718"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseModule(null, null));","lastModifiedDate":"2021-10-08"},{"lineNumber":479,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":480,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":481,"author":{"gitId":"rohit0718"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":482,"author":{"gitId":"rohit0718"},"content":"    public void parseModule_validValues_returnsModule() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":483,"author":{"gitId":"rohit0718"},"content":"        ModuleCode moduleCode \u003d new ModuleCode(VALID_MODULE_CODE);","lastModifiedDate":"2021-10-08"},{"lineNumber":484,"author":{"gitId":"rohit0718"},"content":"        ModuleName moduleName \u003d new ModuleName(VALID_MODULE_NAME);","lastModifiedDate":"2021-10-08"},{"lineNumber":485,"author":{"gitId":"rohit0718"},"content":"        Module expectedModule \u003d new Module(moduleCode, Optional.of(moduleName));","lastModifiedDate":"2021-10-08"},{"lineNumber":486,"author":{"gitId":"rohit0718"},"content":"        assertEquals(expectedModule, ParserUtil.parseModule(VALID_MODULE_CODE, Optional.of(VALID_MODULE_NAME)));","lastModifiedDate":"2021-10-08"},{"lineNumber":487,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":488,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"luminousleek":57,"SHEZADHASSAN22":26,"itzblim":93,"bentanjunrong":51,"-":195,"rohit0718":66}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"import seedu.address.testutil.builders.PersonBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"luminousleek":1,"-":101}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"import seedu.address.testutil.builders.AddressBookBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"luminousleek":1,"-":131}},{"path":"src/test/java/seedu/address/model/module/LinkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SHEZADHASSAN22"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"SHEZADHASSAN22"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"SHEZADHASSAN22"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"SHEZADHASSAN22"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"SHEZADHASSAN22"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"SHEZADHASSAN22"},"content":"public class LinkTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"SHEZADHASSAN22"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"SHEZADHASSAN22"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"SHEZADHASSAN22"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Link(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"SHEZADHASSAN22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"SHEZADHASSAN22"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"SHEZADHASSAN22"},"content":"    public void constructor_invalidLink_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"SHEZADHASSAN22"},"content":"        String invalidLink \u003d \" \";","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"SHEZADHASSAN22"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Link(invalidLink));","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"SHEZADHASSAN22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"SHEZADHASSAN22"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"SHEZADHASSAN22"},"content":"    public void isValidLink() {","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"SHEZADHASSAN22"},"content":"        // null Link","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"SHEZADHASSAN22"},"content":"        assertThrows(NullPointerException.class, () -\u003e Link.isValidLink(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"SHEZADHASSAN22"},"content":"        // invalid Link","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"SHEZADHASSAN22"},"content":"        assertFalse(Link.isValidLink(\"\")); // empty string","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"SHEZADHASSAN22"},"content":"        assertFalse(Link.isValidLink(\" \")); // spaces only","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"SHEZADHASSAN22"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"SHEZADHASSAN22"},"content":"        // valid Link","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"SHEZADHASSAN22"},"content":"        assertTrue(Link.isValidLink(\"https://www.youtube.com/watch?v\u003ddE1P4zDhhqw\u0026t\u003d1s\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"SHEZADHASSAN22"},"content":"        assertTrue(Link.isValidLink(\"-\")); // one character","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"SHEZADHASSAN22"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"SHEZADHASSAN22"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"SHEZADHASSAN22":34}},{"path":"src/test/java/seedu/address/model/module/ModBookDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itzblim"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"itzblim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"itzblim"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"itzblim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"itzblim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"itzblim"},"content":"public class ModBookDateTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"itzblim"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"itzblim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"itzblim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ModBookDate(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"itzblim"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"itzblim"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"itzblim"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"itzblim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ModBookDate(invalidDate));","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"itzblim"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"itzblim"},"content":"    void isValidDate() {","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"itzblim"},"content":"        // null date","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"itzblim"},"content":"        assertThrows(NullPointerException.class, () -\u003e ModBookDate.isValidDate(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"itzblim"},"content":"        // blank date","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"itzblim"},"content":"        assertFalse(ModBookDate.isValidDate(\"\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"itzblim"},"content":"        assertFalse(ModBookDate.isValidDate(\" \"));","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"itzblim"},"content":"        // invalid date formats","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"itzblim"},"content":"        assertFalse(ModBookDate.isValidDate(\"19-02-2012\")); // use of hyphens","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"itzblim"},"content":"        assertFalse(ModBookDate.isValidDate(\"19 Sep 2021\")); // use of month abbreviations","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"itzblim"},"content":"        assertFalse(ModBookDate.isValidDate(\"September 2021\")); // no specification of date within month","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"itzblim"},"content":"        assertFalse(ModBookDate.isValidDate(\"32/07/2021\")); // non-existent date","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"itzblim"},"content":"        assertFalse(ModBookDate.isValidDate(\"2021/07/2012\")); // wrong order","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"itzblim"},"content":"        assertFalse(ModBookDate.isValidDate(\"19th Sep\")); // no year","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"itzblim"},"content":"        assertFalse(ModBookDate.isValidDate(\"12/13/2021\")); // Month out of range","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"itzblim"},"content":"        assertFalse(ModBookDate.isValidDate(\"6pm 12/12/2021\")); // including time of day","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"itzblim"},"content":"        // valid dates","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"itzblim"},"content":"        assertTrue(ModBookDate.isValidDate(\"09/09/2021\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"itzblim"},"content":"        assertTrue(ModBookDate.isValidDate(\"22/12/2022\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"itzblim"},"content":"        assertTrue(ModBookDate.isValidDate(\"29/05/2024\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"itzblim"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"itzblim":45}},{"path":"src/test/java/seedu/address/model/module/ModBookTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"class ModBookTimeTest {","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ModBookTime(null));","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"    public void constructor_invalidTime_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"        String invalidTime \u003d \"\";","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ModBookTime(invalidTime));","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"    void isValidTime() {","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"        // null time","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"        assertThrows(NullPointerException.class, () -\u003e ModBookTime.isValidTime(null));","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"        // blank time","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"        assertFalse(ModBookTime.isValidTime(\"\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"        assertFalse(ModBookTime.isValidTime(\" \"));","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"        // invalid time formats","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"        assertFalse(ModBookTime.isValidTime(\"4:00pm\")); // use of AM/PM","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"        assertFalse(ModBookTime.isValidTime(\"4pm\")); // no minutes, use of AM/PM","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"        assertFalse(ModBookTime.isValidTime(\"4:00\")); // hours using 1 digit and not 2","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"        assertFalse(ModBookTime.isValidTime(\"16\")); // no minutes","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"        assertFalse(ModBookTime.isValidTime(\"25:00\")); // hours out of range","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"        assertFalse(ModBookTime.isValidTime(\"14:98\")); // minutes out of range","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"        assertFalse(ModBookTime.isValidTime(\"16:00:01\")); // including seconds value","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"        assertFalse(ModBookTime.isValidTime(\"16:00:01.1234\")); // including seconds and decimal value","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"        // valid times","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"        assertTrue(ModBookTime.isValidTime(\"16:00\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"        assertTrue(ModBookTime.isValidTime(\"08:00\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"        assertTrue(ModBookTime.isValidTime(\"23:59\"));","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"luminousleek":46}},{"path":"src/test/java/seedu/address/model/module/ModuleCodeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"public class ModuleCodeTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ModuleCode(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"    public void constructor_invalidModuleCode_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"        String invalidCode \u003d \"\";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ModuleCode(invalidCode));","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"rohit0718"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"rohit0718"},"content":"    public void isValidModuleCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"rohit0718"},"content":"        // null module code","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"rohit0718"},"content":"        assertThrows(NullPointerException.class, () -\u003e ModuleCode.isValidModuleCode(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"rohit0718"},"content":"        // invalid module code","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"rohit0718"},"content":"        assertFalse(ModuleCode.isValidModuleCode(\"\")); // empty string","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"rohit0718"},"content":"        assertFalse(ModuleCode.isValidModuleCode(\" \")); // spaces only","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"rohit0718"},"content":"        assertFalse(ModuleCode.isValidModuleCode(\"C2040S\")); // single letter prefix","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"rohit0718"},"content":"        assertFalse(ModuleCode.isValidModuleCode(\"CSCS2040S\")); // four letter prefix","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"rohit0718"},"content":"        assertFalse(ModuleCode.isValidModuleCode(\"CS204S\")); // three numbers only","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"rohit0718"},"content":"        assertFalse(ModuleCode.isValidModuleCode(\"CS20S\")); // two numbers only","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"rohit0718"},"content":"        assertFalse(ModuleCode.isValidModuleCode(\"CS2S\")); // one numbers only","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"rohit0718"},"content":"        assertFalse(ModuleCode.isValidModuleCode(\"CS\")); // no numbers","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"rohit0718"},"content":"        assertFalse(ModuleCode.isValidModuleCode(\"CS2040SS\")); // two letter suffix","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"rohit0718"},"content":"        // valid module code","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"rohit0718"},"content":"        assertTrue(ModuleCode.isValidModuleCode(\"cs2040s\")); // lowercase alphabets only","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"rohit0718"},"content":"        assertTrue(ModuleCode.isValidModuleCode(\"CS2040S\")); // capital alphabets only","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"rohit0718"},"content":"        assertTrue(ModuleCode.isValidModuleCode(\"cS2040s\")); // mix of lowercase and capital alphabets","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"rohit0718"},"content":"        assertTrue(ModuleCode.isValidModuleCode(\"CS2103\")); // two letter with no ending letter","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"rohit0718"},"content":"        assertTrue(ModuleCode.isValidModuleCode(\"CS2103T\")); // two letter with ending letter","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"rohit0718"},"content":"        assertTrue(ModuleCode.isValidModuleCode(\"DAO1000\")); // three letter with no ending letter","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"rohit0718"},"content":"        assertTrue(ModuleCode.isValidModuleCode(\"DAO1000S\")); // three letter with ending letter","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"rohit0718"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"rohit0718":46}},{"path":"src/test/java/seedu/address/model/module/ModuleNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"public class ModuleNameTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ModuleName(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"    public void constructor_invalidModuleName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ModuleName(invalidName));","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"rohit0718"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"rohit0718"},"content":"    public void isValidModuleName() {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"rohit0718"},"content":"        // null module name","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"rohit0718"},"content":"        assertThrows(NullPointerException.class, () -\u003e ModuleName.isValidModuleName(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"rohit0718"},"content":"        // invalid module name","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"rohit0718"},"content":"        assertFalse(ModuleName.isValidModuleName(\"\")); // empty string","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"rohit0718"},"content":"        assertFalse(ModuleName.isValidModuleName(\" \")); // spaces only","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"rohit0718"},"content":"        // valid module name","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"rohit0718"},"content":"        assertTrue(ModuleName.isValidModuleName(\"software engineering\")); // lowercase alphabets only","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"rohit0718"},"content":"        assertTrue(ModuleName.isValidModuleName(\"machine learning 2\")); // alphanumeric characters","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"rohit0718"},"content":"        assertTrue(ModuleName.isValidModuleName(\"Machine Learning II\")); // with capital letters","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"rohit0718"},"content":"        assertTrue(ModuleName.isValidModuleName(\"Software Engineering on Modern Application Platforms\")); // long names","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"rohit0718"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"rohit0718":36}},{"path":"src/test/java/seedu/address/model/module/ModuleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rohit0718"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"rohit0718"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"rohit0718"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"rohit0718"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"rohit0718"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"rohit0718"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"rohit0718"},"content":"public class ModuleTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"rohit0718"},"content":"    private static final ModuleCode MODULE_CODE \u003d new ModuleCode(\"CS2103T\");","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"rohit0718"},"content":"    private static final Optional\u003cModuleName\u003e MODULE_NAME \u003d Optional.of(new ModuleName(\"Software Engineering\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"rohit0718"},"content":"    private static final Module MODULE \u003d new Module(MODULE_CODE, MODULE_NAME);","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"rohit0718"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"rohit0718"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"rohit0718"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Module(null, null));","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"rohit0718"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Module(MODULE_CODE, null));","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"rohit0718"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Module(null, MODULE_NAME));","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"rohit0718"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"rohit0718"},"content":"    void isSameModule() {","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"rohit0718"},"content":"        // Same object","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"rohit0718"},"content":"        assertTrue(MODULE.isSameModule(MODULE));","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"rohit0718"},"content":"        // Different object, same code","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"rohit0718"},"content":"        assertTrue(MODULE.isSameModule(new Module(MODULE_CODE, MODULE_NAME)));","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"rohit0718"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"rohit0718"},"content":"        // Different code","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"rohit0718"},"content":"        assertFalse(MODULE.isSameModule(new Module(new ModuleCode(\"CS2103\"), MODULE_NAME)));","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"rohit0718"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"rohit0718"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"rohit0718":34}},{"path":"src/test/java/seedu/address/model/module/TimeslotTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"import seedu.address.testutil.TestUtil;","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"class TimeslotTest {","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"    private static final ModBookTime START_TIME \u003d new ModBookTime(\"09:00\");","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"    private static final ModBookTime END_TIME \u003d new ModBookTime(\"11:00\");","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Timeslot(START_TIME, null));","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Timeslot(null, END_TIME));","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Timeslot(null, null));","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"    public void constructor_invalidModBookTime_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Timeslot(END_TIME, START_TIME));","lastModifiedDate":"2021-10-04"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Timeslot(START_TIME, START_TIME));","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"    void isValidTimeslot() {","lastModifiedDate":"2021-10-04"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"        ModBookTime startTimeOneMinuteLater \u003d new ModBookTime(\"09:01\");","lastModifiedDate":"2021-10-04"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"        // null ModBookTime","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"        assertThrows(NullPointerException.class, () -\u003e Timeslot.isValidTimeslot(START_TIME, null));","lastModifiedDate":"2021-10-04"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"        assertThrows(NullPointerException.class, () -\u003e Timeslot.isValidTimeslot(null, END_TIME));","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"        assertThrows(NullPointerException.class, () -\u003e Timeslot.isValidTimeslot(null, null));","lastModifiedDate":"2021-10-04"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"        // invalid ModBookTime","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"        assertFalse(Timeslot.isValidTimeslot(START_TIME, START_TIME)); // same start and end time","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"        assertFalse(Timeslot.isValidTimeslot(END_TIME, START_TIME)); // end time before start time","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"        // valid ModBookTime","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"        assertTrue(Timeslot.isValidTimeslot(START_TIME, END_TIME));","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"        assertTrue(Timeslot.isValidTimeslot(START_TIME, startTimeOneMinuteLater));","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-04"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"    void compareTo() {","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"        ModBookTime startTimeTwo \u003d new ModBookTime(\"09:30\");","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"        ModBookTime endTimeTwo \u003d new ModBookTime(\"11:30\");","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"        // different startTime, same endTime","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"        assertTrue(TestUtil.isBefore(new Timeslot(START_TIME, END_TIME), new Timeslot(startTimeTwo, END_TIME)));","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"        assertFalse(TestUtil.isBefore(new Timeslot(startTimeTwo, endTimeTwo), new Timeslot(START_TIME, endTimeTwo)));","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"        // same startTime, different endTime","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"luminousleek"},"content":"        assertTrue(TestUtil.isBefore(new Timeslot(START_TIME, END_TIME), new Timeslot(START_TIME, endTimeTwo)));","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"        assertFalse(TestUtil.isBefore(new Timeslot(startTimeTwo, endTimeTwo), new Timeslot(startTimeTwo, END_TIME)));","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"luminousleek"},"content":"        // same start and end time","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"        assertFalse(TestUtil.isBefore(new Timeslot(START_TIME, END_TIME), new Timeslot(START_TIME, END_TIME)));","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-10-04"}],"authorContributionMap":{"luminousleek":63}},{"path":"src/test/java/seedu/address/model/module/VenueTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itzblim"},"content":"package seedu.address.model.module;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"itzblim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"itzblim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"itzblim"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"itzblim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"itzblim"},"content":"public class VenueTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"itzblim"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"itzblim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"itzblim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Venue(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"itzblim"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"itzblim"},"content":"    public void constructor_invalidVenue_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"itzblim"},"content":"        String invalidVenue \u003d \"\";","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"itzblim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Venue(invalidVenue));","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"itzblim"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"itzblim"},"content":"    public void isValidVenue() {","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"itzblim"},"content":"        // null venue","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"itzblim"},"content":"        assertThrows(NullPointerException.class, () -\u003e Venue.isValidVenue(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"itzblim"},"content":"        // invalid venue","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"itzblim"},"content":"        assertFalse(Venue.isValidVenue(\"\")); // empty string","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"itzblim"},"content":"        assertFalse(Venue.isValidVenue(\" \")); // spaces only","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"itzblim"},"content":"        // valid venue","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"itzblim"},"content":"        assertTrue(Venue.isValidVenue(\"peter jack hall\")); // lowercase alphabets only","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"itzblim"},"content":"        assertTrue(Venue.isValidVenue(\"298103\")); // numbers only","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"itzblim"},"content":"        assertTrue(Venue.isValidVenue(\"mph hall 2\")); // alphanumeric characters","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"itzblim"},"content":"        assertTrue(Venue.isValidVenue(\"University Sports Centre\")); // with capital letters","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"itzblim"},"content":"        assertTrue(Venue.isValidVenue(\"National University of Singapore, School of Computing\")); // long names","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"itzblim"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"itzblim":38}},{"path":"src/test/java/seedu/address/model/module/exam/ExamNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itzblim"},"content":"package seedu.address.model.module.exam;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"itzblim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"itzblim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"itzblim"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"itzblim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"itzblim"},"content":"public class ExamNameTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"itzblim"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"itzblim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"itzblim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ExamName(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"itzblim"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"itzblim"},"content":"    public void constructor_invalidExamName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"itzblim"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"itzblim"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ExamName(invalidName));","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"itzblim"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"itzblim"},"content":"    public void isValidExamName() {","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"itzblim"},"content":"        // null exam name","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"itzblim"},"content":"        assertThrows(NullPointerException.class, () -\u003e ExamName.isValidExamName(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"itzblim"},"content":"        // invalid exam name","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"itzblim"},"content":"        assertFalse(ExamName.isValidExamName(\"\")); // empty string","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"itzblim"},"content":"        assertFalse(ExamName.isValidExamName(\" \")); // spaces only","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"itzblim"},"content":"        // valid exam name","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"itzblim"},"content":"        assertTrue(ExamName.isValidExamName(\"finals\")); // lowercase alphabets only","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"itzblim"},"content":"        assertTrue(ExamName.isValidExamName(\"reading assessment 2\")); // alphanumeric characters","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"itzblim"},"content":"        assertTrue(ExamName.isValidExamName(\"Mastery Check 1\")); // with capital letters","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"itzblim"},"content":"        assertTrue(ExamName.isValidExamName(\"Practical Examination 1 for Circuits and Systems\")); // long names","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"itzblim"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"itzblim":36}},{"path":"src/test/java/seedu/address/model/module/exam/ExamTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"itzblim"},"content":"package seedu.address.model.module.exam;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"itzblim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"itzblim"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"itzblim"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"itzblim"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"itzblim"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"itzblim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"itzblim"},"content":"import seedu.address.model.module.Link;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"itzblim"},"content":"import seedu.address.model.module.ModBookDate;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"itzblim"},"content":"import seedu.address.model.module.ModBookTime;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"itzblim"},"content":"import seedu.address.model.module.Timeslot;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"itzblim"},"content":"import seedu.address.model.module.Venue;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"itzblim"},"content":"public class ExamTest {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"itzblim"},"content":"    private static final ExamName EXAM_NAME \u003d new ExamName(\"Midterms\");","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"itzblim"},"content":"    private static final ModBookDate DATE \u003d new ModBookDate(\"11/12/2021\");","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"itzblim"},"content":"    private static final ModBookTime START_TIME \u003d new ModBookTime(\"09:00\");","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"itzblim"},"content":"    private static final ModBookTime END_TIME \u003d new ModBookTime(\"11:00\");","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"itzblim"},"content":"    private static final Timeslot TIMESLOT \u003d new Timeslot(START_TIME, END_TIME);","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"itzblim"},"content":"    private static final Optional\u003cVenue\u003e VENUE \u003d Optional.of(new Venue(\"University Sports Centre\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"itzblim"},"content":"    private static final Optional\u003cLink\u003e LINK \u003d Optional.of(new Link(\"http://nus-sg.zoom.us/248501794\"));","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"itzblim"},"content":"    private static final Exam EXAM \u003d new Exam(EXAM_NAME, DATE, TIMESLOT, VENUE, LINK);","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"itzblim"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"itzblim"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"itzblim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Exam(","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"itzblim"},"content":"                EXAM_NAME, DATE, null, null, null));","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"itzblim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Exam(","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"itzblim"},"content":"                EXAM_NAME, null, TIMESLOT, VENUE, LINK));","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"itzblim"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Exam(","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"itzblim"},"content":"                null, null, null, null, null));","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"itzblim"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"itzblim"},"content":"    void isSameExam() {","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"itzblim"},"content":"        // Same object","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"itzblim"},"content":"        assertTrue(EXAM.isSameExam(EXAM));","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"itzblim"},"content":"        // Different object, same name","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"itzblim"},"content":"        assertTrue(EXAM.isSameExam(new Exam(EXAM_NAME, DATE, TIMESLOT, VENUE, LINK)));","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"itzblim"},"content":"        // Different name","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"itzblim"},"content":"        assertFalse(EXAM.isSameExam(new Exam(new ExamName(\"Finals\"), DATE, TIMESLOT, VENUE, LINK)));","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"itzblim"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"itzblim"},"content":"    void compareTo() {","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"itzblim"},"content":"        ModBookDate dateTwo \u003d new ModBookDate(\"11/11/2021\");","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"itzblim"},"content":"        ModBookTime startTimeTwo \u003d new ModBookTime(\"09:30\");","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"itzblim"},"content":"        ModBookTime endTimeTwo \u003d new ModBookTime(\"11:30\");","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"itzblim"},"content":"        Timeslot timeslotTwo \u003d new Timeslot(startTimeTwo, endTimeTwo);","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"itzblim"},"content":"        // different date, same time","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"itzblim"},"content":"        assertTrue(EXAM.compareTo(new Exam(EXAM_NAME, dateTwo, TIMESLOT, VENUE, LINK)) \u003e 0);","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"itzblim"},"content":"        // same date, different time","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"itzblim"},"content":"        assertTrue(EXAM.compareTo(new Exam(EXAM_NAME, DATE, timeslotTwo, VENUE, LINK)) \u003c 0);","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"itzblim"},"content":"        // different date, different time","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"itzblim"},"content":"        assertTrue(EXAM.compareTo(new Exam(EXAM_NAME, dateTwo, timeslotTwo, VENUE, LINK)) \u003e 0);","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"itzblim"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"itzblim"},"content":"        // same date, same time","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"itzblim"},"content":"        assertEquals(EXAM.compareTo(new Exam(EXAM_NAME, DATE, TIMESLOT, VENUE, LINK)), 0);","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"itzblim"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"itzblim"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"itzblim":69}},{"path":"src/test/java/seedu/address/model/module/lesson/LessonNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bentanjunrong"},"content":"package seedu.address.model.module.lesson;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"bentanjunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"bentanjunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"bentanjunrong"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"bentanjunrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"bentanjunrong"},"content":"public class LessonNameTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"bentanjunrong"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"bentanjunrong"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"bentanjunrong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new LessonName(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"bentanjunrong"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"bentanjunrong"},"content":"    public void constructor_invalidLessonName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"bentanjunrong"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"bentanjunrong"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new LessonName(invalidName));","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"bentanjunrong"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"bentanjunrong"},"content":"    public void isValidLessonName() {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"bentanjunrong"},"content":"        // null Lesson name","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"bentanjunrong"},"content":"        assertThrows(NullPointerException.class, () -\u003e LessonName.isValidLessonName(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"bentanjunrong"},"content":"        // invalid Lesson name","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"bentanjunrong"},"content":"        assertFalse(LessonName.isValidLessonName(\"\")); // empty string","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"bentanjunrong"},"content":"        assertFalse(LessonName.isValidLessonName(\" \")); // spaces only","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"bentanjunrong"},"content":"        // valid Lesson name","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"bentanjunrong"},"content":"        assertTrue(LessonName.isValidLessonName(\"tutorial\")); // lowercase alphabets only","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"bentanjunrong"},"content":"        assertTrue(LessonName.isValidLessonName(\"lecture 2\")); // alphanumeric characters","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"bentanjunrong"},"content":"        assertTrue(LessonName.isValidLessonName(\"Recitation 9\")); // with capital letters","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"bentanjunrong"},"content":"        assertTrue(LessonName.isValidLessonName(","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"bentanjunrong"},"content":"                \"Exclusive consultation only for the brightest minds in SOC\")); // long names","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"bentanjunrong"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"bentanjunrong":37}},{"path":"src/test/java/seedu/address/model/module/lesson/LessonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bentanjunrong"},"content":"package seedu.address.model.module.lesson;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"bentanjunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"bentanjunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"bentanjunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"bentanjunrong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"bentanjunrong"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"bentanjunrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"bentanjunrong"},"content":"import seedu.address.model.module.Day;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"bentanjunrong"},"content":"import seedu.address.model.module.Link;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"bentanjunrong"},"content":"import seedu.address.model.module.ModBookTime;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"bentanjunrong"},"content":"import seedu.address.model.module.Timeslot;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"bentanjunrong"},"content":"import seedu.address.model.module.Venue;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"bentanjunrong"},"content":"public class LessonTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"bentanjunrong"},"content":"    private static final LessonName LESSON_NAME \u003d new LessonName(\"Lecture\");","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"bentanjunrong"},"content":"    private static final Day DAY \u003d Day.TUESDAY;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"bentanjunrong"},"content":"    private static final ModBookTime START_TIME \u003d new ModBookTime(\"09:00\");","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"bentanjunrong"},"content":"    private static final ModBookTime END_TIME \u003d new ModBookTime(\"11:00\");","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"bentanjunrong"},"content":"    private static final Timeslot TIMESLOT \u003d new Timeslot(START_TIME, END_TIME);","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"bentanjunrong"},"content":"    private static final Optional\u003cVenue\u003e VENUE \u003d Optional.of(new Venue(\"COM1-B102\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"bentanjunrong"},"content":"    private static final Optional\u003cLink\u003e LINK \u003d Optional.of(new Link(\"http://nus-sg.zoom.us/123456789\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"bentanjunrong"},"content":"    private static final Lesson LESSON \u003d new Lesson(LESSON_NAME, DAY, TIMESLOT, VENUE, LINK);","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"bentanjunrong"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"bentanjunrong"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"bentanjunrong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Lesson(","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"bentanjunrong"},"content":"                LESSON_NAME, null, null, null, null));","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"bentanjunrong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Lesson(","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"bentanjunrong"},"content":"                LESSON_NAME, DAY, null, null, null));","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"bentanjunrong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Lesson(","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"bentanjunrong"},"content":"                LESSON_NAME, null, TIMESLOT, VENUE, LINK));","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"bentanjunrong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Lesson(","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"bentanjunrong"},"content":"                null, null, TIMESLOT, VENUE, LINK));","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"bentanjunrong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Lesson(","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"bentanjunrong"},"content":"                null, null, null, null, null));","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"bentanjunrong"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"bentanjunrong"},"content":"    void isSameLesson() {","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"bentanjunrong"},"content":"        // Same object","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"bentanjunrong"},"content":"        assertTrue(LESSON.isSameLesson(LESSON));","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"bentanjunrong"},"content":"        // Different object, same name","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"bentanjunrong"},"content":"        assertTrue(LESSON.isSameLesson(new Lesson(LESSON_NAME, DAY, TIMESLOT, VENUE, LINK)));","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"bentanjunrong"},"content":"        // Different name","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"bentanjunrong"},"content":"        assertFalse(LESSON.isSameLesson(new Lesson(new LessonName(\"Finals\"), DAY, TIMESLOT, VENUE, LINK)));","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"bentanjunrong"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"bentanjunrong"},"content":"    void compareTo() {","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"bentanjunrong"},"content":"        Day dayTwo \u003d Day.SATURDAY;","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"bentanjunrong"},"content":"        ModBookTime startTimeTwo \u003d new ModBookTime(\"09:30\");","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"bentanjunrong"},"content":"        ModBookTime endTimeTwo \u003d new ModBookTime(\"11:30\");","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"bentanjunrong"},"content":"        Timeslot timeslotTwo \u003d new Timeslot(startTimeTwo, endTimeTwo);","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"bentanjunrong"},"content":"        // different date, same time","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"bentanjunrong"},"content":"        assertTrue(LESSON.compareTo(new Lesson(LESSON_NAME, dayTwo, TIMESLOT, VENUE, LINK)) \u003e 0);","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"bentanjunrong"},"content":"        // same date, different time","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"bentanjunrong"},"content":"        assertTrue(LESSON.compareTo(new Lesson(LESSON_NAME, DAY, timeslotTwo, VENUE, LINK)) \u003c 0);","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"bentanjunrong"},"content":"        // different date, different time","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"bentanjunrong"},"content":"        assertTrue(LESSON.compareTo(new Lesson(LESSON_NAME, dayTwo, timeslotTwo, VENUE, LINK)) \u003e 0);","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"bentanjunrong"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"bentanjunrong"},"content":"        // same date, same time","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"bentanjunrong"},"content":"        assertEquals(LESSON.compareTo(new Lesson(LESSON_NAME, DAY, TIMESLOT, VENUE, LINK)), 0);","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"bentanjunrong"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"bentanjunrong"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"bentanjunrong":73}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"import seedu.address.testutil.builders.PersonBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"luminousleek":1,"-":74}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"import seedu.address.testutil.builders.PersonBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"luminousleek":1,"-":90}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"import seedu.address.testutil.builders.PersonBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"luminousleek":1,"-":169}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedExamTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import static seedu.address.storage.JsonAdaptedExam.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"import static seedu.address.testutil.TypicalExams.CS2103T_FINALS;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.Link;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.ModBookDate;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.Timeslot;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.Venue;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.exam.Exam;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.exam.ExamName;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"class JsonAdaptedExamTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"    private static final String INVALID_NAME \u003d \" \";","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"    private static final Optional\u003cString\u003e INVALID_VENUE \u003d Optional.of(\"  \");","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"    private static final Optional\u003cString\u003e INVALID_LINK \u003d Optional.of(\"    \");","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"    private static final String VALID_NAME \u003d CS2103T_FINALS.getName().toString();","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"    private static final JsonAdaptedModBookDate VALID_DATE \u003d new JsonAdaptedModBookDate(CS2103T_FINALS.getDate());","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"    private static final JsonAdaptedTimeslot VALID_TIMESLOT \u003d new JsonAdaptedTimeslot(CS2103T_FINALS.getTimeslot());","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"    private static final Optional\u003cString\u003e VALID_VENUE \u003d Optional.of(\"MPSH 1\");","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"    private static final Optional\u003cString\u003e VALID_LINK \u003d CS2103T_FINALS.getLink().map(Link::toString);","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"    private static final Optional\u003cString\u003e EMPTY_VENUE \u003d Optional.empty();","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"    private static final Optional\u003cString\u003e EMPTY_LINK \u003d Optional.empty();","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_validExamDetails_returnsExam() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"        JsonAdaptedExam exam \u003d new JsonAdaptedExam(CS2103T_FINALS);","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"        assertEquals(CS2103T_FINALS, exam.toModelType());","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"        JsonAdaptedExam exam \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"                new JsonAdaptedExam(INVALID_NAME, VALID_DATE, VALID_TIMESLOT, VALID_VENUE, VALID_LINK);","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"        String expectedMessage \u003d ExamName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, exam::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"        JsonAdaptedExam exam \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"                new JsonAdaptedExam(null, VALID_DATE, VALID_TIMESLOT, VALID_VENUE, VALID_LINK);","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ExamName.class.getSimpleName());","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, exam::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_nullDate_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"        JsonAdaptedExam exam \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"luminousleek"},"content":"                new JsonAdaptedExam(VALID_NAME, null, VALID_TIMESLOT, VALID_VENUE, VALID_LINK);","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"luminousleek"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ModBookDate.class.getSimpleName());","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, exam::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_nullTimeslot_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"luminousleek"},"content":"        JsonAdaptedExam exam \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"luminousleek"},"content":"                new JsonAdaptedExam(VALID_NAME, VALID_DATE, null, VALID_VENUE, VALID_LINK);","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"luminousleek"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Timeslot.class.getSimpleName());","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, exam::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_invalidVenue_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"luminousleek"},"content":"        JsonAdaptedExam exam \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"luminousleek"},"content":"                new JsonAdaptedExam(VALID_NAME, VALID_DATE, VALID_TIMESLOT, INVALID_VENUE, VALID_LINK);","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"luminousleek"},"content":"        String expectedMessage \u003d Venue.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"luminousleek"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, exam::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_nullVenue_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"luminousleek"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"luminousleek"},"content":"            JsonAdaptedExam exam \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"luminousleek"},"content":"                    new JsonAdaptedExam(VALID_NAME, VALID_DATE, VALID_TIMESLOT, null, VALID_LINK);","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"luminousleek"},"content":"            Exam readExam \u003d exam.toModelType();","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"luminousleek"},"content":"            assertEquals(Optional.empty(), readExam.getVenue());","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"luminousleek"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"luminousleek"},"content":"            Assertions.fail();","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_emptyVenue_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"luminousleek"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"luminousleek"},"content":"            JsonAdaptedExam exam \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"luminousleek"},"content":"                    new JsonAdaptedExam(VALID_NAME, VALID_DATE, VALID_TIMESLOT, EMPTY_VENUE, VALID_LINK);","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"luminousleek"},"content":"            Exam readExam \u003d exam.toModelType();","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"luminousleek"},"content":"            assertEquals(Optional.empty(), readExam.getVenue());","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"luminousleek"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"luminousleek"},"content":"            Assertions.fail();","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_invalidLink_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"luminousleek"},"content":"        JsonAdaptedExam exam \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"luminousleek"},"content":"                new JsonAdaptedExam(VALID_NAME, VALID_DATE, VALID_TIMESLOT, VALID_VENUE, INVALID_LINK);","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"luminousleek"},"content":"        String expectedMessage \u003d Link.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"luminousleek"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, exam::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_nullLink_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"luminousleek"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"luminousleek"},"content":"            JsonAdaptedExam exam \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"luminousleek"},"content":"                    new JsonAdaptedExam(VALID_NAME, VALID_DATE, VALID_TIMESLOT, VALID_VENUE, null);","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"luminousleek"},"content":"            Exam readExam \u003d exam.toModelType();","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"luminousleek"},"content":"            assertEquals(Optional.empty(), readExam.getLink());","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"luminousleek"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"luminousleek"},"content":"            Assertions.fail();","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_emptyLink_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"luminousleek"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"luminousleek"},"content":"            JsonAdaptedExam exam \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"luminousleek"},"content":"                    new JsonAdaptedExam(VALID_NAME, VALID_DATE, VALID_TIMESLOT, VALID_VENUE, EMPTY_LINK);","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"luminousleek"},"content":"            Exam readExam \u003d exam.toModelType();","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"luminousleek"},"content":"            assertEquals(Optional.empty(), readExam.getLink());","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"luminousleek"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"luminousleek"},"content":"            Assertions.fail();","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"luminousleek":135}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedLessonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import static seedu.address.storage.JsonAdaptedLesson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"import static seedu.address.testutil.TypicalLessons.CS2103T_LECTURE;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.Day;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.Link;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.Timeslot;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.Venue;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.lesson.Lesson;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.lesson.LessonName;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"class JsonAdaptedLessonTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"    private static final String INVALID_NAME \u003d \" \";","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"    private static final String INVALID_DAY \u003d \"today\";","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"    private static final Optional\u003cString\u003e INVALID_VENUE \u003d Optional.of(\"  \");","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"    private static final Optional\u003cString\u003e INVALID_LINK \u003d Optional.of(\"    \");","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"    private static final String VALID_NAME \u003d CS2103T_LECTURE.getName().toString();","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"    private static final String VALID_DAY \u003d CS2103T_LECTURE.getDay().toString();","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"    private static final JsonAdaptedTimeslot VALID_TIMESLOT \u003d new JsonAdaptedTimeslot(CS2103T_LECTURE.getTimeslot());","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"    private static final Optional\u003cString\u003e VALID_VENUE \u003d Optional.of(\"LT15\");","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"    private static final Optional\u003cString\u003e VALID_LINK \u003d CS2103T_LECTURE.getLink().map(Link::toString);","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"    private static final Optional\u003cString\u003e EMPTY_VENUE \u003d Optional.empty();","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"    private static final Optional\u003cString\u003e EMPTY_LINK \u003d Optional.empty();","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_validLessonDetails_returnsLesson() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"        JsonAdaptedLesson lesson \u003d new JsonAdaptedLesson(CS2103T_LECTURE);","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"        assertEquals(CS2103T_LECTURE, lesson.toModelType());","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"        JsonAdaptedLesson lesson \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"                new JsonAdaptedLesson(INVALID_NAME, VALID_DAY, VALID_TIMESLOT, VALID_VENUE, VALID_LINK);","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"        String expectedMessage \u003d LessonName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, lesson::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"        JsonAdaptedLesson lesson \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"                new JsonAdaptedLesson(null, VALID_DAY, VALID_TIMESLOT, VALID_VENUE, VALID_LINK);","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, LessonName.class.getSimpleName());","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, lesson::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_invalidDay_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"luminousleek"},"content":"        JsonAdaptedLesson lesson \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"luminousleek"},"content":"                new JsonAdaptedLesson(VALID_NAME, INVALID_DAY, VALID_TIMESLOT, VALID_VENUE, VALID_LINK);","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"        String expectedMessage \u003d Day.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, lesson::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_nullDay_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"luminousleek"},"content":"        JsonAdaptedLesson lesson \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"luminousleek"},"content":"                new JsonAdaptedLesson(VALID_NAME, null, VALID_TIMESLOT, VALID_VENUE, VALID_LINK);","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Day.class.getSimpleName());","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"luminousleek"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, lesson::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_nullTimeslot_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"luminousleek"},"content":"        JsonAdaptedLesson lesson \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"luminousleek"},"content":"                new JsonAdaptedLesson(VALID_NAME, VALID_DAY, null, VALID_VENUE, VALID_LINK);","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"luminousleek"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Timeslot.class.getSimpleName());","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"luminousleek"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, lesson::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_invalidVenue_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"luminousleek"},"content":"        JsonAdaptedLesson lesson \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"luminousleek"},"content":"                new JsonAdaptedLesson(VALID_NAME, VALID_DAY, VALID_TIMESLOT, INVALID_VENUE, VALID_LINK);","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"luminousleek"},"content":"        String expectedMessage \u003d Venue.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"luminousleek"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, lesson::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_nullVenue_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"luminousleek"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"luminousleek"},"content":"            JsonAdaptedLesson lesson \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"luminousleek"},"content":"                    new JsonAdaptedLesson(VALID_NAME, VALID_DAY, VALID_TIMESLOT, null, VALID_LINK);","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"luminousleek"},"content":"            Lesson readLesson \u003d lesson.toModelType();","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"luminousleek"},"content":"            assertEquals(Optional.empty(), readLesson.getVenue());","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"luminousleek"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"luminousleek"},"content":"            Assertions.fail();","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_emptyVenue_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"luminousleek"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"luminousleek"},"content":"            JsonAdaptedLesson lesson \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"luminousleek"},"content":"                    new JsonAdaptedLesson(VALID_NAME, VALID_DAY, VALID_TIMESLOT, EMPTY_VENUE, VALID_LINK);","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"luminousleek"},"content":"            Lesson readLesson \u003d lesson.toModelType();","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"luminousleek"},"content":"            assertEquals(Optional.empty(), readLesson.getVenue());","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"luminousleek"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"luminousleek"},"content":"            Assertions.fail();","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_invalidLink_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"luminousleek"},"content":"        JsonAdaptedLesson lesson \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"luminousleek"},"content":"                new JsonAdaptedLesson(VALID_NAME, VALID_DAY, VALID_TIMESLOT, VALID_VENUE, INVALID_LINK);","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"luminousleek"},"content":"        String expectedMessage \u003d Link.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"luminousleek"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, lesson::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_nullLink_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"luminousleek"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"luminousleek"},"content":"            JsonAdaptedLesson lesson \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"luminousleek"},"content":"                    new JsonAdaptedLesson(VALID_NAME, VALID_DAY, VALID_TIMESLOT, VALID_VENUE, null);","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"luminousleek"},"content":"            Lesson readLesson \u003d lesson.toModelType();","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"luminousleek"},"content":"            assertEquals(Optional.empty(), readLesson.getLink());","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"luminousleek"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"luminousleek"},"content":"            Assertions.fail();","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_emptyLink_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"luminousleek"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"luminousleek"},"content":"            JsonAdaptedLesson lesson \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"luminousleek"},"content":"                    new JsonAdaptedLesson(VALID_NAME, VALID_DAY, VALID_TIMESLOT, VALID_VENUE, EMPTY_LINK);","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"luminousleek"},"content":"            Lesson readLesson \u003d lesson.toModelType();","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"luminousleek"},"content":"            assertEquals(Optional.empty(), readLesson.getLink());","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"luminousleek"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"luminousleek"},"content":"            Assertions.fail();","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"luminousleek"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"luminousleek":145}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedModBookDateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.ModBookDate;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"public class JsonAdaptedModBookDateTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"    private static final String INVALID_DATE \u003d \"12112021\";","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"    private static final ModBookDate VALID_MODBOOKDATE \u003d new ModBookDate(\"09/09/2021\");","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_validDate_returnsModBookDate() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"        JsonAdaptedModBookDate date \u003d new JsonAdaptedModBookDate(VALID_MODBOOKDATE);","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"        assertEquals(VALID_MODBOOKDATE, date.toModelType());","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_invalidDate_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"        JsonAdaptedModBookDate date \u003d new JsonAdaptedModBookDate(INVALID_DATE);","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"        String expectedMessage \u003d ModBookDate.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, date::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"luminousleek":27}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedModBookTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.ModBookTime;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"class JsonAdaptedModBookTimeTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"    private static final String INVALID_TIME \u003d \"1200\";","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"    private static final ModBookTime VALID_MODBOOKTIME \u003d new ModBookTime(\"12:00\");","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_validTime_returnsModBookTime() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"        JsonAdaptedModBookTime time \u003d new JsonAdaptedModBookTime(VALID_MODBOOKTIME);","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"        assertEquals(VALID_MODBOOKTIME, time.toModelType());","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_invalidTime_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"        JsonAdaptedModBookTime time \u003d new JsonAdaptedModBookTime(INVALID_TIME);","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"        String expectedMessage \u003d ModBookTime.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, time::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"luminousleek":27}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTimeslotTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import static seedu.address.storage.JsonAdaptedTimeslot.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.ModBookTime;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.Timeslot;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"import seedu.address.testutil.builders.TimeslotBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"class JsonAdaptedTimeslotTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"    private static final JsonAdaptedModBookTime START_TIME \u003d new JsonAdaptedModBookTime(\"10:00\");","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"    private static final JsonAdaptedModBookTime END_TIME \u003d new JsonAdaptedModBookTime(\"11:30\");","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"    private static final Timeslot VALID_TIMESLOT \u003d new TimeslotBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_validTime_returnsTimeslot() throws Exception {","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"        JsonAdaptedTimeslot timeslot \u003d new JsonAdaptedTimeslot(VALID_TIMESLOT);","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"        assertEquals(VALID_TIMESLOT, timeslot.toModelType());","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_invalidStartEndTime_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"        JsonAdaptedTimeslot timeslot \u003d new JsonAdaptedTimeslot(END_TIME, START_TIME);","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"        String expectedMessage \u003d Timeslot.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, timeslot::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_nullStartTime_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"        JsonAdaptedTimeslot timeslot \u003d new JsonAdaptedTimeslot(null, END_TIME);","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ModBookTime.class.getSimpleName());","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, timeslot::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"    public void toModelType_nullEndTime_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"        JsonAdaptedTimeslot timeslot \u003d new JsonAdaptedTimeslot(START_TIME, null);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ModBookTime.class.getSimpleName());","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, timeslot::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"luminousleek":45}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"luminousleek"},"content":"     * Returns true if the first {@code Comparable} given is before the second {@code Comparable} given","lastModifiedDate":"2021-10-04"},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"     * Used for testing {@code compareTo()}","lastModifiedDate":"2021-10-04"},{"lineNumber":59,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":60,"author":{"gitId":"luminousleek"},"content":"    public static \u003cT\u003e boolean isBefore(Comparable\u003cT\u003e before, T after) {","lastModifiedDate":"2021-10-04"},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"        return before.compareTo(after) \u003c 0;","lastModifiedDate":"2021-10-04"},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"luminousleek":8,"-":55}},{"path":"src/test/java/seedu/address/testutil/TypicalExams.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.exam.Exam;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"import seedu.address.testutil.builders.ExamBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"import seedu.address.testutil.builders.TimeslotBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":" * A utility class containing a list of {@code Exam} objects to be used in tests.","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"public class TypicalExams {","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"    public static final Exam DEFAULT_EXAM \u003d new ExamBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"    public static final Exam PHYSICAL_FINALS \u003d new ExamBuilder().withName(\"Finals\").withDate(\"24/11/2021\")","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"            .withTimeslot(new TimeslotBuilder().withStartTime(\"15:00\").withEndTime(\"17:00\").build())","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"            .withVenue(\"MPSH 1\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"    public static final Exam PHYSICAL_MIDTERMS \u003d new ExamBuilder().withName(\"Midterms\").withDate(\"04/10/2021\")","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"            .withTimeslot(new TimeslotBuilder().withStartTime(\"16:00\").withEndTime(\"17:30\").build())","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"            .withVenue(\"MPSH 2\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"    public static final Exam ONLINE_FINALS \u003d new ExamBuilder().withName(\"Finals\").withDate(\"25/11/2021\")","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"            .withTimeslot(new TimeslotBuilder().withStartTime(\"15:00\").withEndTime(\"17:00\").build())","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"            .withLink(\"finals.com\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"    public static final Exam ONLINE_MIDTERMS \u003d new ExamBuilder().withName(\"Midterms\").withDate(\"05/10/2021\")","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"            .withTimeslot(new TimeslotBuilder().withStartTime(\"16:00\").withEndTime(\"17:30\").build())","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"            .withLink(\"midterms.com\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"    // CS2103T Exams for real-life examples","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"    public static final Exam CS2103T_PRACTICAL \u003d new ExamBuilder().withName(\"CS2103T Practical\").withDate(\"12/11/2021\")","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"            .withTimeslot(new TimeslotBuilder().withStartTime(\"16:00\").withEndTime(\"18:00\").build())","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"            .withLink(\"practical.com\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"    public static final Exam CS2103T_FINALS \u003d new ExamBuilder().withName(\"CS2103T Finals\").withDate(\"23/11/2021\")","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"            .withTimeslot(new TimeslotBuilder().withStartTime(\"17:00\").withEndTime(\"19:00\").build())","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"            .withLink(\"final.com\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"    public static List\u003cExam\u003e getTypicalExams() {","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(CS2103T_FINALS, CS2103T_PRACTICAL));","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"luminousleek":41}},{"path":"src/test/java/seedu/address/testutil/TypicalLessons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.lesson.Lesson;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"import seedu.address.testutil.builders.LessonBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"import seedu.address.testutil.builders.TimeslotBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":" * A utility class containing a list of {@code Lesson} objects to be used in tests.","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"public class TypicalLessons {","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"    public static final Lesson DEFAULT_LESSON \u003d new LessonBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"    public static final Lesson PHYSICAL_LECTURE \u003d new LessonBuilder().withDefaultVenue().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"    public static final Lesson ONLINE_LECTURE \u003d new LessonBuilder().withLink(\"lecture.com\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"    public static final Lesson PHYSICAL_TUTORIAL \u003d new LessonBuilder().withName(\"Tutorial\")","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"            .withDay(\"TUESDAY\").withTimeslot(new TimeslotBuilder().withStartTime(\"14:00\").withEndTime(\"15:00\").build())","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"            .withVenue(\"COM1-0120\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"    public static final Lesson ONLINE_TUTORIAL \u003d new LessonBuilder().withName(\"Tutorial\")","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"            .withDay(\"TUESDAY\").withTimeslot(new TimeslotBuilder().withStartTime(\"14:00\").withEndTime(\"15:00\").build())","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"            .withLink(\"tutorial.com\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"    // CS2103T lessons for some real life lessons","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"    public static final Lesson CS2103T_LECTURE \u003d new LessonBuilder().withName(\"CS2103T Lecture\")","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"            .withDay(\"FRIDAY\").withTimeslot(new TimeslotBuilder().withStartTime(\"16:00\").withEndTime(\"18:00\").build())","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"            .withLink(\"profDamith.com\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"    public static final Lesson CS2103T_TUTORIAL \u003d new LessonBuilder().withName(\"CS2103T Tutorial\")","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"            .withDay(\"THURSDAY\").withTimeslot(new TimeslotBuilder().withStartTime(\"13:00\").withEndTime(\"14:00\").build())","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"            .withLink(\"danny.com\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"    public static final Lesson CS2101_MON \u003d new LessonBuilder().withName(\"CS2101 Monday\")","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"            .withDay(\"MONDAY\").withTimeslot(new TimeslotBuilder().withStartTime(\"08:00\").withEndTime(\"10:00\").build())","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"            .withLink(\"msSunita.com\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"    public static final Lesson CS2101_THURS \u003d new LessonBuilder().withName(\"CS2101 Thursday\")","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"            .withDay(\"THURSDAY\").withTimeslot(new TimeslotBuilder().withStartTime(\"08:00\").withEndTime(\"10:00\").build())","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"            .withLink(\"msSunita.com\").build();","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"    private TypicalLessons() {} // prevents instantiation","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"    public static List\u003cLesson\u003e getTypicalLessons() {","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(CS2101_MON, CS2101_THURS, CS2103T_LECTURE, CS2103T_TUTORIAL));","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"luminousleek":45}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"import seedu.address.testutil.builders.PersonBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"luminousleek":1,"-":76}},{"path":"src/test/java/seedu/address/testutil/builders/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package seedu.address.testutil.builders;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"luminousleek":1,"-":33}},{"path":"src/test/java/seedu/address/testutil/builders/ExamBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package seedu.address.testutil.builders;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.Link;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.ModBookDate;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.Timeslot;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.Venue;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.exam.Exam;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.exam.ExamName;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":" * A utility class to help with building Exam objects.","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"public class ExamBuilder {","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"    public static final String DEFAULT_NAME \u003d \"Finals\";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"    public static final String DEFAULT_DATE \u003d \"09/12/2021\";","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"    public static final Timeslot DEFAULT_TIMESLOT \u003d new TimeslotBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"    public static final Optional\u003cString\u003e DEFAULT_VENUE \u003d Optional.of(\"LT17\");","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"    public static final Optional\u003cString\u003e DEFAULT_LINK \u003d Optional.of(\"google.com\");","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"    private ExamName name;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"    private ModBookDate date;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"    private Timeslot timeslot;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"    private Optional\u003cVenue\u003e venue;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"    private Optional\u003cLink\u003e link;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"     * Creates an {@code ExamBuilder} with the default details.","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"     * Note that the default ExamBuilder will not have a Venue nor a Link.","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"    public ExamBuilder() {","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"        name \u003d new ExamName(DEFAULT_NAME);","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"        date \u003d new ModBookDate(DEFAULT_DATE);","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"        timeslot \u003d DEFAULT_TIMESLOT;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"        venue \u003d Optional.empty();","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"        link \u003d Optional.empty();","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"     * Initialises the ExamBuilder with the data of {@code examToCopy}.","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"    public ExamBuilder(Exam examToCopy) {","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"        name \u003d examToCopy.getName();","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"        date \u003d examToCopy.getDate();","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"        timeslot \u003d examToCopy.getTimeslot();","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"        venue \u003d examToCopy.getVenue();","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"        link \u003d examToCopy.getLink();","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"     * Adds the default {@code Venue} to the {@code Exam} that we are building","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":"    public ExamBuilder withDefaultVenue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"        this.venue \u003d DEFAULT_VENUE.map(Venue::new);","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"luminousleek"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"     * Adds the default {@code Link} to the {@code Exam} that we are building","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"    public ExamBuilder withDefaultLink() {","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"luminousleek"},"content":"        this.link \u003d DEFAULT_LINK.map(Link::new);","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"luminousleek"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"     * Sets the {@code ExamName} to the {@code Exam} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"luminousleek"},"content":"    public ExamBuilder withName(String name) {","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"luminousleek"},"content":"        this.name \u003d new ExamName(name);","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"luminousleek"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"luminousleek"},"content":"     * Sets the {@code ModBookDate} of the {@code Exam} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"luminousleek"},"content":"    public ExamBuilder withDate(String date) {","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"luminousleek"},"content":"        this.date \u003d new ModBookDate(date);","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"luminousleek"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"luminousleek"},"content":"     * Sets the {@code Timeslot} of the {@code Exam} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"luminousleek"},"content":"    public ExamBuilder withTimeslot(Timeslot timeslot) {","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"luminousleek"},"content":"        this.timeslot \u003d timeslot;","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"luminousleek"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"luminousleek"},"content":"     * Sets the {@code Venue} of the {@code Exam} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"luminousleek"},"content":"    public ExamBuilder withVenue(String venue) {","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"luminousleek"},"content":"        this.venue \u003d Optional.of(new Venue(venue));","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"luminousleek"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"luminousleek"},"content":"     * Sets the {@code Link} of the {@code Exam} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"luminousleek"},"content":"    public ExamBuilder withLink(String link) {","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"luminousleek"},"content":"        this.link \u003d Optional.of(new Link(link));","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"luminousleek"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"luminousleek"},"content":"    public Exam build() {","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"luminousleek"},"content":"        return new Exam(name, date, timeslot, venue, link);","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"luminousleek":111}},{"path":"src/test/java/seedu/address/testutil/builders/LessonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package seedu.address.testutil.builders;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.Day;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.Link;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.Timeslot;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.Venue;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.lesson.Lesson;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.lesson.LessonName;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":" * A utility class to help with building Lesson objects.","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"public class LessonBuilder {","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"    public static final String DEFAULT_NAME \u003d \"Lecture\";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"    public static final String DEFAULT_DAY \u003d \"MONDAY\";","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"    public static final Timeslot DEFAULT_TIMESLOT \u003d new TimeslotBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"    public static final Optional\u003cString\u003e DEFAULT_VENUE \u003d Optional.of(\"LT17\");","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"    public static final Optional\u003cString\u003e DEFAULT_LINK \u003d Optional.of(\"google.com\");","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"    private LessonName name;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"    private Day day;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"    private Timeslot timeslot;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"    private Optional\u003cVenue\u003e venue;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"    private Optional\u003cLink\u003e link;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"     * Creates a {@code LessonBuilder} with the default details.","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"     * Note that the default LessonBuilder will not have a Venue nor a Link.","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"    public LessonBuilder() {","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"        name \u003d new LessonName(DEFAULT_NAME);","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"        day \u003d Day.valueOf(DEFAULT_DAY);","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"        timeslot \u003d DEFAULT_TIMESLOT;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"        venue \u003d Optional.empty();","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"        link \u003d Optional.empty();","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"     * Initialises the LessonBuilder with the data of {@code lessonToCopy}.","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"    public LessonBuilder(Lesson lessonToCopy) {","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"        name \u003d lessonToCopy.getName();","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"        day \u003d lessonToCopy.getDay();","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"        timeslot \u003d lessonToCopy.getTimeslot();","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"        venue \u003d lessonToCopy.getVenue();","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"        link \u003d lessonToCopy.getLink();","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"luminousleek"},"content":"     * Adds the default {@code Venue} to the {@code Lesson} that we are building","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"luminousleek"},"content":"    public LessonBuilder withDefaultVenue() {","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"luminousleek"},"content":"        this.venue \u003d DEFAULT_VENUE.map(Venue::new);","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"luminousleek"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"luminousleek"},"content":"     * Adds the default {@code Link} to the {@code Lesson} that we are building","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"luminousleek"},"content":"    public LessonBuilder withDefaultLink() {","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"luminousleek"},"content":"        this.link \u003d DEFAULT_LINK.map(Link::new);","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"luminousleek"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"luminousleek"},"content":"     * Sets the {@code LessonName} of the {@code Lesson} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"luminousleek"},"content":"    public LessonBuilder withName(String name) {","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"luminousleek"},"content":"        this.name \u003d new LessonName(name);","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"luminousleek"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"luminousleek"},"content":"     * Sets the {@code Day} of the {@code Lesson} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"luminousleek"},"content":"    public LessonBuilder withDay(String day) {","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"luminousleek"},"content":"        this.day \u003d Day.valueOf(day.toUpperCase());","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"luminousleek"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"luminousleek"},"content":"     * Sets the {@code Timeslot} of the {@code Lesson} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"luminousleek"},"content":"    public LessonBuilder withTimeslot(Timeslot timeslot) {","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"luminousleek"},"content":"        this.timeslot \u003d timeslot;","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"luminousleek"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"luminousleek"},"content":"     * Sets the {@code Venue} of the {@code Lesson} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"luminousleek"},"content":"    public LessonBuilder withVenue(String venue) {","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"luminousleek"},"content":"        this.venue \u003d Optional.of(new Venue(venue));","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"luminousleek"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"luminousleek"},"content":"     * Sets the {@code Link} of the {@code Lesson} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"luminousleek"},"content":"    public LessonBuilder withLink(String link) {","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"luminousleek"},"content":"        this.link \u003d Optional.of(new Link(link));","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"luminousleek"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"luminousleek"},"content":"    public Lesson build() {","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"luminousleek"},"content":"        return new Lesson(name, day, timeslot, venue, link);","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"luminousleek":111}},{"path":"src/test/java/seedu/address/testutil/builders/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package seedu.address.testutil.builders;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new Person(name, phone, email, address, tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"luminousleek":1,"-":95}},{"path":"src/test/java/seedu/address/testutil/builders/TimeslotBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"luminousleek"},"content":"package seedu.address.testutil.builders;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.ModBookTime;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"luminousleek"},"content":"import seedu.address.model.module.Timeslot;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"luminousleek"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"luminousleek"},"content":" * A utility class to help with building Timeslot objects.","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"luminousleek"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"luminousleek"},"content":"public class TimeslotBuilder {","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"luminousleek"},"content":"    public static final String DEFAULT_START_TIME \u003d \"09:00\";","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"luminousleek"},"content":"    public static final String DEFAULT_END_TIME \u003d \"11:00\";","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"luminousleek"},"content":"    private ModBookTime startTime;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"luminousleek"},"content":"    private ModBookTime endTime;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"luminousleek"},"content":"     * Creates a {@code TimeslotBuilder} with the default details.","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"luminousleek"},"content":"    public TimeslotBuilder() {","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"luminousleek"},"content":"        startTime \u003d new ModBookTime(DEFAULT_START_TIME);","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"luminousleek"},"content":"        endTime \u003d new ModBookTime(DEFAULT_END_TIME);","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"luminousleek"},"content":"     * Initialises the TimeslotBuilder with the data of {@code timeslotToCopy}.","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"luminousleek"},"content":"    public TimeslotBuilder(Timeslot timeslotToCopy) {","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"luminousleek"},"content":"        startTime \u003d timeslotToCopy.startTime;","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"luminousleek"},"content":"        endTime \u003d timeslotToCopy.endTime;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"luminousleek"},"content":"     * Sets the start time of the {@code Timeslot} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"luminousleek"},"content":"    public TimeslotBuilder withStartTime(String startTime) {","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"luminousleek"},"content":"        this.startTime \u003d new ModBookTime(startTime);","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"luminousleek"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"luminousleek"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"luminousleek"},"content":"     * Sets the end time of the {@code Timeslot} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"luminousleek"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"luminousleek"},"content":"    public TimeslotBuilder withEndTime(String endTime) {","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"luminousleek"},"content":"        this.endTime \u003d new ModBookTime(endTime);","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"luminousleek"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"luminousleek"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"luminousleek"},"content":"    public Timeslot build() {","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"luminousleek"},"content":"        return new Timeslot(startTime, endTime);","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"luminousleek"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"luminousleek"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"luminousleek":52}}]
